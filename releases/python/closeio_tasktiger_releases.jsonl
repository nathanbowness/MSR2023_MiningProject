{"url": "https://api.github.com/repos/closeio/tasktiger/releases/83405195", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/83405195/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/83405195/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.16.1", "id": 83405195, "author": {"login": "drewler", "id": 1395606, "node_id": "MDQ6VXNlcjEzOTU2MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1395606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewler", "html_url": "https://github.com/drewler", "followers_url": "https://api.github.com/users/drewler/followers", "following_url": "https://api.github.com/users/drewler/following{/other_user}", "gists_url": "https://api.github.com/users/drewler/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewler/subscriptions", "organizations_url": "https://api.github.com/users/drewler/orgs", "repos_url": "https://api.github.com/users/drewler/repos", "events_url": "https://api.github.com/users/drewler/events{/privacy}", "received_events_url": "https://api.github.com/users/drewler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAh7tls4E-KmL", "tag_name": "v0.16.1", "target_commitish": "master", "name": "v0.16.1", "draft": false, "prerelease": false, "created_at": "2022-11-17T14:41:49Z", "published_at": "2022-11-17T14:47:06Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.16.1", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.16.1", "body": "### Other changes\r\n\r\n* Add function name to tasktiger done log messages ([203](https://github.com/closeio/tasktiger/pull/203))\r\n* Add task args / kwargs to the task_error log statement ([215](https://github.com/closeio/tasktiger/pull/215))\r\n* Fix `hard_timeout` in parent process when stored on task function ([235](https://github.com/closeio/tasktiger/pull/235))"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/83403682", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/83403682/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/83403682/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.16", "id": 83403682, "author": {"login": "drewler", "id": 1395606, "node_id": "MDQ6VXNlcjEzOTU2MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1395606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewler", "html_url": "https://github.com/drewler", "followers_url": "https://api.github.com/users/drewler/followers", "following_url": "https://api.github.com/users/drewler/following{/other_user}", "gists_url": "https://api.github.com/users/drewler/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewler/subscriptions", "organizations_url": "https://api.github.com/users/drewler/orgs", "repos_url": "https://api.github.com/users/drewler/repos", "events_url": "https://api.github.com/users/drewler/events{/privacy}", "received_events_url": "https://api.github.com/users/drewler/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAh7tls4E-KOi", "tag_name": "v0.16", "target_commitish": "master", "name": "v0.16", "draft": false, "prerelease": false, "created_at": "2021-12-02T17:40:09Z", "published_at": "2022-11-17T14:36:04Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.16", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.16", "body": "### Other changes\r\n\r\n* Handle hard timeout in parent process ([f3b3e24](https://github.com/closeio/tasktiger/commit/f3b3e24485497a2b87281a1b809966bcb525c5fc))\r\n* Add queue name to logs ([a090d00](https://github.com/closeio/tasktiger/commit/a090d00bca496082f149f2187b026ff96a0d4fac))"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/41755669", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/41755669/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/41755669/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.15", "id": 41755669, "author": {"login": "froxCZ", "id": 3979716, "node_id": "MDQ6VXNlcjM5Nzk3MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3979716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froxCZ", "html_url": "https://github.com/froxCZ", "followers_url": "https://api.github.com/users/froxCZ/followers", "following_url": "https://api.github.com/users/froxCZ/following{/other_user}", "gists_url": "https://api.github.com/users/froxCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/froxCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froxCZ/subscriptions", "organizations_url": "https://api.github.com/users/froxCZ/orgs", "repos_url": "https://api.github.com/users/froxCZ/repos", "events_url": "https://api.github.com/users/froxCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/froxCZ/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxNzU1NjY5", "tag_name": "v0.15", "target_commitish": "master", "name": "v0.15", "draft": false, "prerelease": false, "created_at": "2021-04-21T06:07:06Z", "published_at": "2021-04-21T06:15:46Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.15", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.15", "body": "### Other changes\r\n\r\n* Populate `Task.ts` field in `Task.from_id` function ([019bf18](https://github.com/closeio/tasktiger/commit/019bf189c9622b299691dbe3b71cefa0bf2ee8dc))\r\n* Add `TaskTiger.would_process_configured_queue()` function  ([217152d](https://github.com/closeio/tasktiger/commit/217152d16ff21a87b70643a0a2571efc91c0aeb9))"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/41526295", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/41526295/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/41526295/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.14", "id": 41526295, "author": {"login": "froxCZ", "id": 3979716, "node_id": "MDQ6VXNlcjM5Nzk3MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3979716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froxCZ", "html_url": "https://github.com/froxCZ", "followers_url": "https://api.github.com/users/froxCZ/followers", "following_url": "https://api.github.com/users/froxCZ/following{/other_user}", "gists_url": "https://api.github.com/users/froxCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/froxCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froxCZ/subscriptions", "organizations_url": "https://api.github.com/users/froxCZ/orgs", "repos_url": "https://api.github.com/users/froxCZ/repos", "events_url": "https://api.github.com/users/froxCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/froxCZ/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxNTI2Mjk1", "tag_name": "v0.14", "target_commitish": "master", "name": "v0.14", "draft": false, "prerelease": false, "created_at": "2021-04-16T07:22:46Z", "published_at": "2021-04-16T07:46:37Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.14", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.14", "body": "### Other changes\r\n\r\n* Add `Task.time_last_queued` property getter ([6d2285d](https://github.com/closeio/tasktiger/commit/6d2285da5bd5f82455765e6b132594d4ceab2d82))"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/40658537", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/40658537/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/40658537/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.13", "id": 40658537, "author": {"login": "jpmelos", "id": 407407, "node_id": "MDQ6VXNlcjQwNzQwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/407407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpmelos", "html_url": "https://github.com/jpmelos", "followers_url": "https://api.github.com/users/jpmelos/followers", "following_url": "https://api.github.com/users/jpmelos/following{/other_user}", "gists_url": "https://api.github.com/users/jpmelos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpmelos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpmelos/subscriptions", "organizations_url": "https://api.github.com/users/jpmelos/orgs", "repos_url": "https://api.github.com/users/jpmelos/repos", "events_url": "https://api.github.com/users/jpmelos/events{/privacy}", "received_events_url": "https://api.github.com/users/jpmelos/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwNjU4NTM3", "tag_name": "v0.13", "target_commitish": "master", "name": "v0.13", "draft": false, "prerelease": false, "created_at": "2021-03-29T20:43:57Z", "published_at": "2021-03-29T20:44:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.13", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.13", "body": "### Breaking changes\r\n\r\n#### Changing the locking mechanism\r\n\r\nThis new version of TaskTiger uses a new locking mechanism: the `Lock` provided by redis-py. It is incompatible with the old locking mechanism we were using, and several core functions in TaskTiger depends on locking to work correctly, so this warrants a careful migration process.\r\n\r\nYou can perform this migration in two ways: via a live migration, or via a downtime migration. After the migration, there's an optional cleanup step.\r\n\r\n##### The live migration\r\n\r\n1. Update your environment to TaskTiger 0.12 as usual.\r\n1. Deploy TaskTiger as it is in the commit SHA `cf600449d594ac22e6d8393dc1009a84b52be0c1`. In `pip` parlance, it would be:\r\n\r\n       -e git+ssh://git@github.com/closeio/tasktiger.git@cf600449d594ac22e6d8393dc1009a84b52be0c1#egg=tasktiger\r\n\r\n1. Wait at least 2-3 minutes with it running in production in all your TaskTiger workers. This is to give time for the old locks to expire, and after that the new locks will be fully in effect.\r\n1. Deploy TaskTiger 0.13. Your system is migrated.\r\n\r\n##### The downtime migration\r\n\r\n1. Update your environment to TaskTiger 0.12 as usual.\r\n1. Scale your TaskTiger workers down to zero.\r\n1. Deploy TaskTiger 0.13. Your system is migrated.\r\n\r\n##### The cleanup step\r\n\r\nRun the script in `scripts/redis_scan.py` to delete the old lock keys from your Redis instance:\r\n\r\n    ./scripts/redis_scan.py --host HOST --port PORT --db DB --print --match \"t:lock:*\" --ttl 300\r\n\r\nThe flags:\r\n\r\n- `--host`: The Redis host. Required.\r\n- `--port`: The port the Redis instance is listening on. Defaults to `6379`.\r\n- `--db`: The Redis database. Defaults to `0`.\r\n- `--print`: If you want the script to print which keys it is modifying, use this.\r\n- `--match`: What pattern to look for. If you didn't change the default prefix TaskTiger uses for keys, this will be `t:lock:*`, otherwise it will be `PREFIX:lock:*`. By default, scans all keys.\r\n- `--ttl`: A TTL to set. A TTL of 300 will give you time to undo if you want to halt the migration for whatever reason. (Just call this command again with `--ttl -1`.) By default, does not change keys' TTLs.\r\n\r\nPlus, there is:\r\n\r\n- `--file`: A log file that will receive the changes made. Defaults to `redis-stats.log` in the current working directory.\r\n- `--delay`: How long, in seconds, to wait between `SCAN` iterations. Defaults to `0.1`."}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/40432670", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/40432670/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/40432670/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.12", "id": 40432670, "author": {"login": "jpmelos", "id": 407407, "node_id": "MDQ6VXNlcjQwNzQwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/407407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpmelos", "html_url": "https://github.com/jpmelos", "followers_url": "https://api.github.com/users/jpmelos/followers", "following_url": "https://api.github.com/users/jpmelos/following{/other_user}", "gists_url": "https://api.github.com/users/jpmelos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpmelos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpmelos/subscriptions", "organizations_url": "https://api.github.com/users/jpmelos/orgs", "repos_url": "https://api.github.com/users/jpmelos/repos", "events_url": "https://api.github.com/users/jpmelos/events{/privacy}", "received_events_url": "https://api.github.com/users/jpmelos/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwNDMyNjcw", "tag_name": "v0.12", "target_commitish": "master", "name": "v0.12", "draft": false, "prerelease": false, "created_at": "2021-03-25T17:32:44Z", "published_at": "2021-03-25T17:55:55Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.12", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.12", "body": "### Breaking changes\r\n\r\n* Drop support for redis-py 2 ([#183](https://github.com/closeio/tasktiger/pull/183))\r\n\r\n### Other changes\r\n\r\n* Make the `TaskTiger` instance available for the task via global state ([#170](https://github.com/closeio/tasktiger/pull/170))\r\n* Support for custom task runners ([#175](https://github.com/closeio/tasktiger/pull/175))\r\n* Add ability to configure a poll- vs push-method for task runners to discover new tasks ([#176](https://github.com/closeio/tasktiger/pull/176))\r\n* `unique_key` specifies the list of kwargs to use to construct the unique key ([#180](https://github.com/closeio/tasktiger/pull/180))\r\n\r\n### Bugfixes\r\n\r\n* Ensure task exists in the given queue when retrieving it ([#184](https://github.com/closeio/tasktiger/pull/184))\r\n* Clear retried executions from successful periodic tasks ([#188](https://github.com/closeio/tasktiger/pull/188))"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/20979815", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/20979815/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/20979815/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.10.1", "id": 20979815, "author": {"login": "AlecRosenbaum", "id": 1953412, "node_id": "MDQ6VXNlcjE5NTM0MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1953412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecRosenbaum", "html_url": "https://github.com/AlecRosenbaum", "followers_url": "https://api.github.com/users/AlecRosenbaum/followers", "following_url": "https://api.github.com/users/AlecRosenbaum/following{/other_user}", "gists_url": "https://api.github.com/users/AlecRosenbaum/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecRosenbaum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecRosenbaum/subscriptions", "organizations_url": "https://api.github.com/users/AlecRosenbaum/orgs", "repos_url": "https://api.github.com/users/AlecRosenbaum/repos", "events_url": "https://api.github.com/users/AlecRosenbaum/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecRosenbaum/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwOTc5ODE1", "tag_name": "v0.10.1", "target_commitish": "master", "name": "v0.10.1", "draft": false, "prerelease": false, "created_at": "2019-10-29T19:25:45Z", "published_at": "2019-10-29T19:27:08Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.10.1", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.10.1", "body": "# Major Changes:\r\n\r\n* __Breaking Change:__ Unique tasks ids have changed slightly. See more details below.\r\n* `TaskTiger.purge_errored_tasks` has been added\r\n* __Breaking Change:__ Internal refactoring moved a lot of code out of `__init__.py`. This should be transparent unless calling code uses internal variables/constants. If this affects you, it should be obvious as only imports should break. The fix is just to change the import path.\r\n\r\n## Breaking Change: Unique Task Ids Changed\r\n\r\nThis breaking change only affects __periodic__ tasks, and __scheduled unique__ tasks. See https://github.com/closeio/tasktiger/issues/146 for details.\r\n\r\nUnique tasks rely on their ID to enforce uniqueness. The id is a hash of `function_name`, `args`, and `kwargs`. There were some cases where creating unique scheduled tasks manually using `Task` objects or manually `.delay()`-ing a periodic task would inconsistently use `None` for `args`/`kwargs` instead of `[]` and `{}`. With this release, `args` and `kwargs` will always be normalized to `[]`/`{}` no matter how the `Task` was created. __Existing scheduled unique tasks will have to be migrated to use a consistent id format.__\r\n\r\n<details><summary>Here's a script that migrates task ids:</summary>\r\n<p>\r\n\r\n```python\r\n#!/usr/bin/python\r\n# -*- coding: utf-8 -*-\r\n\r\n\"\"\"Re-schedule tasks that have malformed ids\r\n\r\nBe sure to ``pip install click tasktiger limitlion tqdm`` as well.\r\n\r\nRecommended steps:\r\n    * stop tasktiger workers\r\n    * upgrade tasktiger version\r\n    * run this script (without --apply) and check the logs to make sure it's\r\n      doing what you'd expect\r\n    * run this script (with --apply), which corrects all unique scheduled task\r\n      ids\r\n    * start tasktiger workers\r\n\"\"\"\r\n\r\nfrom __future__ import absolute_import, print_function, unicode_literals\r\n\r\nimport datetime\r\nimport json\r\n\r\nimport click\r\nimport limitlion\r\nimport tqdm\r\nfrom redis import Redis\r\nfrom tasktiger import Task, TaskTiger\r\nfrom tasktiger._internal import SCHEDULED, gen_unique_id, queue_matches\r\n\r\n# Connect to Redis (defaults to localhost)\r\nredis_connection = Redis(decode_responses=True)\r\n\r\n# Initialize tasktiger\r\ntiger = TaskTiger(redis_connection)\r\n\r\n# Initialize limitlion (optional, see throttling comment below)\r\nlimitlion.throttle_configure(redis_connection)\r\n\r\n\r\nclass JSONLineLog(object):\r\n    \"\"\"Safe and convenient json logger\r\n\r\n    Usage::\r\n\r\n        with JSONLineLog(\"my_file.json\") as logger:\r\n            logger.write({'key': 'this is serialized as json'})\r\n    \"\"\"\r\n\r\n    def __init__(self, filename):\r\n        self.filename = filename\r\n\r\n    def __enter__(self):\r\n        self.file = open(self.filename, 'a')\r\n        self.file.__enter__()\r\n        return self\r\n\r\n    def write(self, log_entry):\r\n        print(json.dumps(log_entry), file=self.file)\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        self.file.__exit__(exc_type, exc_val, exc_tb)\r\n\r\n\r\n@click.command()\r\n@click.option(\r\n    \"--apply\",\r\n    is_flag=True,\r\n    help=\"Actually make these changes. This is not a drill!\",\r\n    default=False,\r\n)\r\n@click.option(\"--limit\", help=\"Limit to processing N tasks\", default=None)\r\n@click.option(\r\n    \"--only-queues\",\r\n    help=\"Only process these queues (comma delimited)\",\r\n    default=None,\r\n)\r\n@click.option(\r\n    \"--exclude-queues\",\r\n    help=\"Exclude these queues from processing (comma delimited)\",\r\n    default=None,\r\n)\r\ndef main(apply=False, limit=None, only_queues=None, exclude_queues=None):\r\n    # warn if not applying change\r\n    if not apply:\r\n        print('*** NO CHANGES WILL BE MADE')\r\n        print('To apply this migration run with --apply.')\r\n    else:\r\n        print('*** CHANGES WILL BE APPLIED')\r\n    print()\r\n\r\n    # If we're actually running this on a production redis instance, we\r\n    # probably don't want to iterate overall the keys as fast as we can.\r\n    # limitlion is a simple token-bucket throttle that gets the job done.\r\n    # This step is optional but recommended. If you don't want to use\r\n    # limitlion, maybe do something simple like ``lambda: time.sleep(.1)``\r\n    throttle = limitlion.throttle_wait('migrations', rps=10)\r\n\r\n    # actually do the migration\r\n    with JSONLineLog(\"task_id_migration.json\") as migration_log:\r\n        print(\"Writing log to {}\".format(migration_log.filename))\r\n\r\n        if limit:\r\n            limit = int(limit)\r\n        if only_queues:\r\n            only_queues = only_queues.split(\",\")\r\n        if exclude_queues:\r\n            exclude_queues = exclude_queues.split(\",\")\r\n\r\n        def unique_scheduled_tasks():\r\n            \"\"\"Yields all unique scheduled tasks\"\"\"\r\n            queues_with_scheduled_tasks = tiger.connection.smembers(\r\n                tiger._key(SCHEDULED)\r\n            )\r\n            for queue in queues_with_scheduled_tasks:\r\n                if not queue_matches(\r\n                    queue,\r\n                    only_queues=only_queues,\r\n                    exclude_queues=exclude_queues,\r\n                ):\r\n                    continue\r\n\r\n                skip = 0\r\n                total_tasks = None\r\n                task_limit = 5000\r\n                while total_tasks is None or skip < total_tasks:\r\n                    throttle()\r\n                    total_tasks, tasks = Task.tasks_from_queue(\r\n                        tiger, queue, SCHEDULED, skip=skip, limit=task_limit\r\n                    )\r\n                    for task in tasks:\r\n                        if task.unique:\r\n                            yield task\r\n                    skip += task_limit\r\n\r\n        # note that tqdm is completely optional here, but shows a nice progress\r\n        # bar.\r\n        total_with_wrong_id = 0\r\n        total_processed = 0\r\n        for idx, task in enumerate(tqdm.tqdm(unique_scheduled_tasks())):\r\n            # generate the new correct id\r\n            correct_id = gen_unique_id(\r\n                task.serialized_func, task.args, task.kwargs\r\n            )\r\n            if task.id != correct_id:\r\n                total_with_wrong_id += 1\r\n                when = datetime.datetime.fromtimestamp(\r\n                    tiger.connection.zscore(\r\n                        tiger._key(SCHEDULED, task.queue), task.id\r\n                    )\r\n                )\r\n                migration_log.write(\r\n                    {\r\n                        \"incorrect_task_id\": task.id,\r\n                        \"correct_task_id\": correct_id,\r\n                        \"serialized_func\": task.serialized_func,\r\n                        \"queue\": task.queue,\r\n                        \"ts\": datetime.datetime.utcnow(),\r\n                        \"apply\": apply,\r\n                        \"scheduled_at\": when,\r\n                    }\r\n                )\r\n                # Reschedule the task with the correct id. There's a 10 second\r\n                # buffer here in case any tasktigers are still running so we're\r\n                # not racing with them.\r\n                if apply and (\r\n                    when - datetime.datetime.utcnow()\r\n                ) > datetime.timedelta(seconds=10):\r\n                    new_task = task.clone()\r\n                    new_task._data[\"id\"] = correct_id\r\n                    new_task.delay(when=when)\r\n                    task.cancel()\r\n                    throttle()\r\n\r\n            total_processed = idx + 1\r\n            if limit and total_processed >= limit:\r\n                break\r\n\r\n        print(\r\n            'Processed {} tasks, found {} with incorrect ids'.format(\r\n                total_processed, total_with_wrong_id\r\n            )\r\n        )\r\n\r\n    print(\"Done\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n# Minor Changes\r\n* The codebase is now formatted with `black`\r\n* Some additional testing infrastructure has been added to make local development/testing easier"}
{"url": "https://api.github.com/repos/closeio/tasktiger/releases/18871528", "assets_url": "https://api.github.com/repos/closeio/tasktiger/releases/18871528/assets", "upload_url": "https://uploads.github.com/repos/closeio/tasktiger/releases/18871528/assets{?name,label}", "html_url": "https://github.com/closeio/tasktiger/releases/tag/v0.9.5", "id": 18871528, "author": {"login": "jkemp101", "id": 3944676, "node_id": "MDQ6VXNlcjM5NDQ2NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3944676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkemp101", "html_url": "https://github.com/jkemp101", "followers_url": "https://api.github.com/users/jkemp101/followers", "following_url": "https://api.github.com/users/jkemp101/following{/other_user}", "gists_url": "https://api.github.com/users/jkemp101/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkemp101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkemp101/subscriptions", "organizations_url": "https://api.github.com/users/jkemp101/orgs", "repos_url": "https://api.github.com/users/jkemp101/repos", "events_url": "https://api.github.com/users/jkemp101/events{/privacy}", "received_events_url": "https://api.github.com/users/jkemp101/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE4ODcxNTI4", "tag_name": "v0.9.5", "target_commitish": "master", "name": "v0.9.5", "draft": false, "prerelease": false, "created_at": "2019-07-30T11:07:26Z", "published_at": "2019-07-30T11:20:32Z", "assets": [], "tarball_url": "https://api.github.com/repos/closeio/tasktiger/tarball/v0.9.5", "zipball_url": "https://api.github.com/repos/closeio/tasktiger/zipball/v0.9.5", "body": "Major changes:\r\n\r\n* Support setting max queue size with `max_queue_size` parameter and raise `QueueFullException` when it is reached.\r\n* Refactor single worker queues to use new Semaphore lock that allows setting the maximum number of workers that should process a particular queue.\r\n* Added `CHILD_CONTEXT_MANAGERS` configuration setting that allows specifying context managers that will be invoked before/after the forked child process runs.\r\n* Added `--no-store-tracebacks` option to not include tracebacks in execution histories. This can be used to reduce Redis storage requirements.\r\n"}

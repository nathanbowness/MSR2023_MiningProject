{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/55305676", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/55305676/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/55305676/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/5.1.0", "id": 55305676, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAHsPoM4DS-XM", "tag_name": "5.1.0", "target_commitish": "master", "name": "VIC 5.1.0", "draft": false, "prerelease": false, "created_at": "2021-12-14T19:29:44Z", "published_at": "2021-12-14T19:34:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/5.1.0", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/5.1.0", "body": "VIC 5.1.0: [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5781377.svg)](https://doi.org/10.5281/zenodo.5781377)\r\n\r\n## VIC 5.1.0 (December 14, 2021)\r\n\r\nThis is a maintanence release that includes numerous bug fixes and a few model enhancements. All code changes were included in the two release candidates (5.1.0.rc1 and 5.1.0.rc2). See the notes below from the two release candidates for more details.\r\n\r\n#### Announcements\r\n\r\n1. VIC is now shared under the MIT license ([GH#917](https://github.com/UW-Hydro/VIC/pull/917)).\r\n2. Travis-CI was disabled folling the platform's migration to travis-ci.com. See [GH#919](https://github.com/UW-Hydro/VIC/issues/919) for more details ([GH918](https://github.com/UW-Hydro/VIC/pull/918)).\r\n\r\n## VIC 5.1.0 rc2 (September 28, 2020)\r\n\r\n#### Bug Fixes:\r\n\r\n1. Fixed datetime handling bug in unit test module ([GH#796](https://github.com/UW-Hydro/VIC/pull/796))\r\n\r\n2. Removed descriptions of forcing disaggregation options from documentation of classic driver global parameter file ([GH#831](https://github.com/UW-Hydro/VIC/pull/831))\r\n\r\n3. Removed descriptions of forcing disaggregation options from documentation of image driver global parameter file ([GH#833](https://github.com/UW-Hydro/VIC/pull/833))\r\n\r\n4. Fixed segmentation fault in lake model caused by incorrect passing of pointer argument to `vic_run()`. ([GH#826]((https://github.com/UW-Hydro/VIC/pull/826))\r\n\r\n5. Relaxed some of the validation of lake parameters, to allow them to be null in cells containing no lakes. ([GH#826]((https://github.com/UW-Hydro/VIC/pull/826))\r\n\r\n6. Fixed passing of lake data structures to `generate_default_lake_state()`. ([GH#826]((https://github.com/UW-Hydro/VIC/pull/826))\r\n\r\n7. Separated the dimensions of arrays related to lake basin shape and of arrays related to the number of lake simulation layers. ([GH#826]((https://github.com/UW-Hydro/VIC/pull/826))\r\n\r\n8. Added global parameter option to set the maximum number of (dynamic) lake simulation layers. ([GH#826]((https://github.com/UW-Hydro/VIC/pull/826))\r\n\r\n9. Fixed bug causing ET to be 0 in pure bare soil tiles. ([GH#823]((https://github.com/UW-Hydro/VIC/pull/823))\r\n\r\n------------------------------\r\n\r\n## VIC 5.1.0 rc1\r\n\r\n<!-- TODO -->\r\n<!-- [![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.61422.svg)](http://dx.doi.org/10.5281/zenodo.61422) -->\r\n\r\n**Release date: (April 27, 2018)**\r\n\r\nSource code is available here: [![VIC.5.1.0](https://img.shields.io/badge/VIC-5.1.0-blue.svg)](https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.1.0)\r\n\r\nThis is a minor update from VIC 5.0.1. The VIC 5.1.0 includes new features, such as a new streamflow routing extension and extended parallelization using OpenMP. The release also includes a number of bug fixes for the CESM driver. See the VIC Github page for more details on the changes included in this release.\r\n\r\n#### Model enhancement:\r\n\r\n1. Improved calculation of drainage between soil layers ([GH#656](https://github.com/UW-Hydro/VIC/pull/656))\r\n\r\n   Drainage from upper layer to adjacent lower layer is calculated according to Brook & Corey curve (where drainage rate is a function of upper-layer soil moisture). In previous versions, a simple numerical solution is applied which uses the timestep-beginning upper-layer soil moisture to calculate drainage rate, and assume this constant rate over the entire timestep. This can cause unreasonably large drainage if the curve has a steep shape and when soil moisture is high. Now, the current version uses exact integral (instead of numerical solution) for layer drainage calculation.\r\n\r\n2. Fixes for the CESM driver\r\n\r\n   1. [GH#642](https://github.com/UW-Hydro/VIC/pull/642)\r\n\r\n    - Using correct fill value datatypes in MPI Gather steps\r\n    - Updated state file name time step to be period-ending rather than period-beginning\r\n    - Set the state file name to the RASM case ID\r\n    - Removed decimal point for missing values for unsigned integers\r\n    - Create dummy forcings when initializing the model (so that there is forcing data for the first time step)\r\n    - Changed pressure units from kPa to Pa\r\n    - Fixed bug that prevented using the correct local domain grid cells in `cesm_put_data.c`\r\n    - Changed reference temperature units from Celsius to Kelvin in `cesm_put_data.c`\r\n\r\n   1. [GH#695](https://github.com/UW-Hydro/VIC/pull/695)\r\n\r\n    - Fix sign for latent heat fluxes passed from VIC to the coupler\r\n    - Fix sign for longwave radiation passed from VIC to the coupler\r\n\r\n   1. [GH#696](https://github.com/UW-Hydro/VIC/pull/696)\r\n\r\n    - Changes names of CESM driver functions `trim` and `advance_time` to `trimstr` and `advance_vic_time`, respectively, to avoid conflicts with WRF functions with the same names when compiling RFR case.\r\n\r\n   1. [GH#702](https://github.com/UW-Hydro/VIC/pull/702)\r\n\r\n    - Fixes Julian day for the first timestep in the dmy struct for the CESM driver.\r\n\r\n   1. [GH#710](https://github.com/UW-Hydro/VIC/pull/710)\r\n\r\n    - Refactor the cesm_put_data.c routine in the CESM driver to use values from out_data directly, rather than computing them separately in cesm_put_data.c.\r\n\r\n   1. [GH#716](https://github.com/UW-Hydro/VIC/pull/716)\r\n\r\n    - Fixes initialization of coupler fields and calculates temperature and upwelling longwave to pass to WRF during initialization.\r\n\r\n   1. [GH#718](https://github.com/UW-Hydro/VIC/pull/718)\r\n\r\n    - Updates the cesm_put_data.c routine in the CESM driver to pass gridcell-averaged albedo to the coupler.\r\n\r\n   1. [GH#726](https://github.com/UW-Hydro/VIC/pull/726)\r\n\r\n    - Updates the cesm_put_data.c routine in the CESM driver to include the correct units for evap passed to the coupler.\r\n\r\n   1. [GH#732](https://github.com/UW-Hydro/VIC/pull/732)\r\n\r\n     - Updates the cesm_put_data.c routine in the CESM driver to include the correct units for sensible heat flux and updates the rofliq calculation to be correct (previously only OUT_BASEFLOW was being divided by global_param.dt).\r\n\r\n   1. [GH#734](https://github.com/UW-Hydro/VIC/pull/734)\r\n\r\n     - Updates the cesm_put_data.c routine in the CESM driver to include the correct signs for turbulent heat fluxes and evaporation. Previously we had switched the signs to agree with the image driver and they should instead be in accordance with the sign conventions for coupled models, which differ from those of land surface models. Also, eliminate populating the `l2x_Sl_ram1` field with aero_resist to agree with the VIC 4 implementation in RASM.\r\n\r\n   1. [GH#739](https://github.com/UW-Hydro/VIC/pull/739)\r\n\r\n    - Updates the cesm_put_data.c routine in the CESM driver to include the correct signs for the wind stresses and fixes a bug in calculating friction velocity (previously it was missing a square root).\r\n\r\n   1. [GH#744](https://github.com/UW-Hydro/VIC/pull/744)\r\n\r\n    - Updates the cesm_interface_c.c routine to include missing timers and the VIC RUN timer in the CESM driver.\r\n\r\n   1. [GH#746](https://github.com/UW-Hydro/VIC/pull/746)\r\n\r\n    - Updates the cesm_interface_c.c routine in the CESM driver to populate the nrecs, endyear, endmonth and endday fields in the global_param struct to make them available to vic_finalize for timing tables (specifically the secs/day columns).  \r\n\r\n   1. [GH#800](https://github.com/UW-Hydro/VIC/pull/800)\r\n\r\n    - Updates the default namelist settings for the CESM driver to include output filenames consistent with the RASM naming conventions, default thermal nodes to 10, `FULL_ENERGY` to `TRUE`, and sets defaults for daily and monthly mean output.\r\n\r\n   1. [GH#866](https://github.com/UW-Hydro/VIC/pull/866) \r\n\r\n    - Updates the default output variables for the CESM driver. Also updates the VIC5 parameter file location to be the RASM inputdata directory and updates the name of the VIC5 parameter file to the new VIC5 parameters.\r\n\r\n   1. [GH#869](https://github.com/UW-Hydro/VIC/pull/869)\r\n    - Adds support to the CESM driver for 25km resolution RASM runs.\r\n\r\n   1. [GH#871](https://github.com/UW-Hydro/VIC/pull/871) \r\n    - Adds initial state files to default 50km and 25km builds so that these are used by other groups running RASM rather than VIC5 starting up from a clean start. \r\n\r\n   1. [GH#880](https://github.com/UW-Hydro/VIC/pull/880)\r\n    --Adds option STATENAME_CESM to the option_struct so that statefiles in the CESM driver can be in accordance with RASM naming conventions for model components. \r\n\r\n3. Speed up NetCDF operations in the image/CESM drivers ([GH#684](https://github.com/UW-Hydro/VIC/pull/684))\r\n\r\n    These changes speed up image driver initialization, forcing reads, and history writes by only opening and closing each input netCDF file once.\r\n\r\n4. Added two new timers to measure time in I/O operations ([GH#703](https://github.com/UW-Hydro/VIC/pull/703))\r\n\r\n    These two timers count the CPU and WALL time spent in ``vic_force`` and ``vic_write``. The accumulated time from these timers is printed out at the end of each simulation in the timing table. See also [GH#442](https://github.com/UW-Hydro/VIC/pull/442).\r\n\r\n5. Added gridcell-averaged albedo (STATE_AVG_ALBEDO) as a state file variable ([GH#712](https://github.com/UW-Hydro/VIC/pull/712))\r\n\r\n    This is for use in the CESM driver for VIC to pass to WRF, but has been implemented in the core structure of VIC (in vic_run) for consistency with the classic and image drivers. Running VIC from a cold start now also includes calculation of gridcell-averaged albedo.\r\n\r\n6. Cleanup of the initialization sections of the ``image`` and ``cesm`` drivers ([GH#701](https://github.com/UW-Hydro/VIC/pull/701))\r\n\r\n    Codified behavior in the initialization of the ``image`` and `cesm` drivers that requires the parameter variables `AreaFract`, `Pfactor`, `zone_fract`, and `Cv` must sum exactly to 1.0. If using the `SNOW_BAND` option, the area weighted `elevation` must match the mean grid cell elevation (`elev`). VIC will print *warnings* if any of these criteria are violated.  \r\n\r\n7. Added thread parallelization using OPENMP ([GH#712](https://github.com/UW-Hydro/VIC/pull/712))\r\n\r\n    The VIC image and CESM drivers now may be optionally compiled with OPENMP to enable shared memory thread parallelization. This option should improve the parallel scaling of these drivers by reducing the number of MPI messages and increasing message size.\r\n\r\n8. Added streamflow routing extensions ROUT_STUB and ROUT_RVIC for the VIC image driver ([GH#231](https://github.com/UW-Hydro/VIC/pull/231))\r\n\r\n    The VIC image driver can be optionally compiled with ROUT_RVIC to enable routing in image mode (ROUT_STUB is the default extension which means no routing). With ROUT_RVIC enabled, the output variable ``OUT_DISCHARGE`` is available, and there will also be an extra state variable ``STATE_ROUT_RING`` stored in the state file.\r\n\r\n9. Moved MAX_ITER_GRND_CANOPY, which controls the maximum number of ground-canopy iterations in CLOSE_ENERGY mode for vegetation types with an overstory, to the parameters struct ([GH#771](https://github.com/UW-Hydro/VIC/pull/771))\r\n\r\n    Previously this was set in the surface_fluxes.c numerics routine for ground-canopy iterations, which meant that that routine had to be altered to change the maximum number of iterations. It has now been moved to the parameters struct so that it can be overriden in the constants file.\r\n\r\n10. Updated new snow density function by adding a cap to new snow density that is set in the parameters struct by the parameter SNOW_NEW_SNOW_DENS_MAX ([GH#776](https://github.com/UW-Hydro/VIC/pull/776))\r\n\r\n    Previously the change in cold content of the snowpack term (deltaCC in the snow_data_struct) would get unreasonably large if the Hedstrom and Pomeroy 1998 equation used to calculate snow density, which depends only on air temperature, was calculated with air temperatures above about 2 deg C. We use this term to calculate the ground flux from the snowpack and snow depth, which resulted in extremely small snow depths and unreasonably large ground fluxes from the snowpack (and thus changes in snowpack cold content). Now there is a cap on new snow density with the new parameter SNOW_NEW_SNOW_DENS_MAX as well as a snow depth below which we disregard the ground flux from the snowpack (1.e-8).\r\n\r\n11. Added new option BULK_DENSITY_COMB that enables soil bulk density (mineral and organic) to be read from the parameters file ([GH#817](https://github.com/UW-Hydro/VIC/pull/817))\r\n\r\n    The option BULK_DENSITY_COMB enables soil bulk density (mineral and organic) to be read in as a parameter when the option is set to true in the global parameter file. Default is false.\r\n\r\n12. Turns on `ORGANIC_FRACT` option that previously existed in VIC 4 and enables the `BULK_DENSITY_COMB` option to be used in conjunction with it ([GH#837](https://github.com/UW-Hydro/VIC/pull/837))\r\n\r\n    The option `ORGANIC_FRACT`, if set to True, means that the organic fraction of the soil, soil density of the organic matter, and bulk density of the organic matter (if `BULK_DENSITY_COMB` is set to false) will be read in from the parameter file. If `BULK_DENSITY_COMB` is set to True, the bulk density of the organic matter will not be read in separately. Default is false. \r\n\r\n13. Added new option `MAX_SNOW_ALBEDO` that enables new snow albedo to be read in from the parameters file ([GH#835](https://github.com/UW-Hydro/VIC/pull/835))\r\n\r\n    The option `MAX_SNOW_ALBEDO`, if set to true in the global parameter file, means that new snow albedo will be read in from the parameter file and used in the snow routines for all vegetation types except for bare soil. \r\n\r\n10. Miscellaneous clean-up:\r\n\r\n    [GH#723](https://github.com/UW-Hydro/VIC/pull/723)\r\n\r\n     - Added support for veg_hist forcings (non-climatological) in image mode\r\n     - Fixed erroneous allocation of extra veg tile in image mode\r\n     - Simplified looping over veg tiles and bands in vic_run() and prepare_full_energy()\r\n     - Replaced lengthy data structures with local pointers in vic_run()\r\n     - Simplified out_prec, out_rain, and Melt arrays\r\n     - Updated names of variables and options for LAI and FCANOPY in documentation to match their new names in the code\r\n     - Removed constants MAX_VEG and MAX_BANDS from code; all arrays that were declared with those lengths were replaced with dynamic allocations.  This allowed for specification of veg libraries containing more classes without recompiling the code, and more efficient memory usage.\r\n\r\n    [GH#766](https://github.com/UW-Hydro/VIC/pull/766)\r\n\r\n     - Improved logic in computing soil evaporation (esoil), primarily in func_surf_energy_bal(), by creating explicit terms for transpiration (transp) and esoil in the layer data structure.\r\n\r\n#### Bug Fixes:\r\n\r\n1. NetCDF forcing files are now closed at the last timestep in stead of after the last timestep. ([GH#774](https://github.com/UW-Hydro/VIC/pull/774))\r\n\r\n2. Renamed \"fcov\" to \"fcan\" in image driver to better match variable code name ([GH#673](https://github.com/UW-Hydro/VIC/pull/673))\r\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/31903267", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/31903267/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/31903267/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.1.0.rc2", "id": 31903267, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxOTAzMjY3", "tag_name": "VIC.5.1.0.rc2", "target_commitish": "master", "name": "VIC.5.1.0.rc2", "draft": false, "prerelease": true, "created_at": "2020-09-28T19:43:40Z", "published_at": "2020-09-28T19:44:21Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.1.0.rc2", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.1.0.rc2", "body": ""}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/10759553", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/10759553/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/10759553/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.1.0.rc1", "id": 10759553, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwNzU5NTUz", "tag_name": "VIC.5.1.0.rc1", "target_commitish": "master", "name": "VIC 5.1.0.rc1", "draft": false, "prerelease": true, "created_at": "2018-04-27T18:09:46Z", "published_at": "2018-04-27T18:10:35Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.1.0.rc1", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.1.0.rc1", "body": ""}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/5332391", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/5332391/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/5332391/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.0.1", "id": 5332391, "author": {"login": "yixinmao", "id": 5818020, "node_id": "MDQ6VXNlcjU4MTgwMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5818020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yixinmao", "html_url": "https://github.com/yixinmao", "followers_url": "https://api.github.com/users/yixinmao/followers", "following_url": "https://api.github.com/users/yixinmao/following{/other_user}", "gists_url": "https://api.github.com/users/yixinmao/gists{/gist_id}", "starred_url": "https://api.github.com/users/yixinmao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yixinmao/subscriptions", "organizations_url": "https://api.github.com/users/yixinmao/orgs", "repos_url": "https://api.github.com/users/yixinmao/repos", "events_url": "https://api.github.com/users/yixinmao/events{/privacy}", "received_events_url": "https://api.github.com/users/yixinmao/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTUzMzIzOTE=", "tag_name": "VIC.5.0.1", "target_commitish": "master", "name": "VIC 5.0.1", "draft": false, "prerelease": false, "created_at": "2017-02-01T20:01:47Z", "published_at": "2017-02-01T20:39:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.0.1", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.0.1", "body": "VIC 5.0.1: [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.267178.svg)](https://doi.org/10.5281/zenodo.267178)\r\n\r\n**Release date: (February 1, 2017)**\r\n**This release contains a number of bug fixes.**\r\n\r\n#### Bug Fixes:\r\n1. Fixed image driver history file name timestamp ([GH#635](https://github.com/UW-Hydro/VIC/pull/635))\r\n   \r\n   After the fix, the timestamp appeared in the image driver output history filename is the beginning time of the time period in the file.\r\n2. Fixed forceskip rounding bug ([GH#639](https://github.com/UW-Hydro/VIC/pull/639))\r\n   \r\n   After the fix, the `forceskip` variable in the global parameter structure (i.e., the number of timesteps to skip in the forcing data for the simulatin period) is rounded correctly (before the fix, rounding error might cause 1-timestep offset in the simulation results).\r\n3. Fixed a problem with image restarts when using multiple processors ([GH#638](https://github.com/UW-Hydro/VIC/pull/638))\r\n   \r\n   After the fix, only the master node is assigned the task of validating state file dimensions and coordinate variables. Multiprocessing was also added to the VIC testing framework.\r\n4. Ensured that the mask variable in the input domain file must be integer type; otherwise an error is raised. ([GH#645](https://github.com/UW-Hydro/VIC/pull/645))\r\n5. Fixed a bug related to `make_lastday` function ([GH#647](https://github.com/UW-Hydro/VIC/pull/647))\r\n   \r\n   Before the fix, the input arguments to function `make_lastday` are sometimes in a wrong order. The bug caused error when trying to write state file on a leap day.\r\n6. Fixed a bug related to writing two-dimensional lat/lon variables to a state file ([GH#652](https://github.com/UW-Hydro/VIC/pull/652))\r\n   \r\n   Before the bug fix, two-dimensional lat/lon variables were not populated correctly and were written as fill values to a state file. Now two-dimensional lat/lon variables are correctly populated and written. \r\n7. Fixed a bug related to `dz_node` and `node_depth` variables in image driver output state file ([GH#657](https://github.com/UW-Hydro/VIC/pull/657))\r\n   \r\n   Before the fix, `dz_node` and `node_depth` in image driver output state file were not spatially distributed, which was wrong. Now these two variables are spatially distributed in the output state file.\r\n8. Fixed a bug related to `run_cell` and `mask` variables in image driver inputs ([GH#662](https://github.com/UW-Hydro/VIC/pull/662))\r\n   \r\n   Before the fix, active cell was controlled by `mask` variable in the domain file in image driver, and `run_cell` variable in the parameter file was not actually used. Now `run_cell` variable in the parameter file controls active cells (`run_cell` must be within the mask defined by the domain file).\r\n9. Fixed a time precision bug for long simulations ([GH#668](https://github.com/UW-Hydro/VIC/pull/668))\r\n   \r\n   Before the fix, the timestamps of long VIC runs were incorrect in some cases due to precision issue in timestamp generation. This resulted in incorrect output timestamps after running for a long period of time, or output termination. Please refer to [GH#668](https://github.com/UW-Hydro/VIC/pull/668) for details on this bug fix.\r\n10. Fixed a bug related to forcing and simulation start time ([GH#671](https://github.com/UW-Hydro/VIC/pull/671))\r\n    \r\n    Before the fix, there would be an error if the simulation start time is later than the forcing start time that year AND the simulation spans multiple years. Fixed this bug.\r\n", "reactions": {"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/5332391/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/4042488", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/4042488/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/4042488/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.0.0", "id": 4042488, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwNDI0ODg=", "tag_name": "VIC.5.0.0", "target_commitish": "master", "name": "VIC.5.0.0", "draft": false, "prerelease": false, "created_at": "2016-09-02T20:56:06Z", "published_at": "2016-09-02T21:02:18Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.0.0", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.0.0", "body": "## VIC 5.0.0 [![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.61422.svg)](http://dx.doi.org/10.5281/zenodo.61422)\n\n**Release date: (September 2, 2016)**\n\nSource code is available here: [![VIC.5.0.0](https://img.shields.io/badge/VIC-5.0.0-blue.svg)](https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.0.0)\n\nThis is a major update from VIC 4. The VIC 5.0.0 release aims to have nearly identical physics as VIC 4.2 while providing a clean, refactored code base supporting multiple drivers. There are a number of new features, bug fixes, and backward incompatible changes. See the VIC Github page for more details on the changes included in this release.\n\n#### New Features:\n1. \"vic_run\" ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   Although the physics and model behavior of VIC 5.0.0 should be nearly identical to VIC 4.2, the source code has undergone a major cleanup and reorganization. We have separated the physical core (\"vic_run\") from the driver source code. This work has improved the extensibility and readability of the model.\n2. Classic Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Classic Driver provides similar functionality as VIC 4, including ASCII and binary I/O, and a time-before-space evaluation loop order. The Classic Driver is maintained for two main reasons:\n   1. to provide some level of backward compatibility for existing VIC users that wish to continue using VIC using a traditional approach, and,\n   2. to allow VIC to be run at individual grid cells, without requiring the infrastructure needed by the Image Driver. Documentation for the Classic Driver can be found [here](http://vic.readthedocs.io).\n3. Image Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Image Driver adds a number of features to the user interface of the VIC model. Most notably, it uses a space-before-time evaluation loop order, netCDF I/O, and parallelization using MPI.  Image Driver specific documentation can be found [here](http://vic.readthedocs.io).\n4. Constants File ([GH#192](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   Earlier versions of VIC included many hard-coded parameters and constants.  We have consolidated these constants into a single structure and developed an input file that allows users to modify parameters at run-time.  See [here](http://vic.readthedocs.io) for more information.\n5. Logging ([GH#173](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   A set of logging Macros have been added to all drivers and `vic_run`. The logging level can be set in the driver `Makefile` via the `LOG_LVL` variable. The logging Macros provide the filename and line number in the source code to aid in debugging.  Additionally, when compiler support is available, a traceback is printed when VIC exits during runtime. When the `LOG_DIR` variable is provided in the global parameter file, VIC will write its log(s) to log files instead of printing to stdout.\n6. Sub-hourly Timestep ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Previous versions of VIC were limited to a minimum timestep of one hour. The units of the VIC timestep have been changed from hours to seconds and the minimum timestep is now one second. If you intend on running VIC at a timestep of less than one hour, we suggest extensive testing.\n7. Calendar Support ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Earlier versions of VIC used the standard Gregorian calendar.  Because many modern climate models use non-standard calendars, we have implemented all [CF compliant calendars](http://www.cgd.ucar.edu/cms/eaton/netcdf/CF-20010629.htm#cal). The standard Gregorian calendar remains the VIC default. See the documentation for individual drivers for how to set the calendar option (e.g. [classic](http://vic.readthedocs.io).\n8. Sample Datasets ([GH#387](https://github.com/UW-Hydro/VIC/pull/387))\n   \n   The [VIC_sample_data](https://github.com/UW-hydro/VIC_sample_data) repository contains the necessary input datasets (forcings and parameters) to run short simulations of the VIC model for both the classic and image driver.\n9. Tests Datasets ([GH#79](https://github.com/UW-Hydro/VIC/issues/79))\n   \n   See https://github.com/UW-Hydro/VIC/issues/79 for more information. A temporary location of the test data is here: ftp://ftp.hydro.washington.edu/pub/gergel/VIC5_test_data/\n10. Testing and Continuous Integration ([GH#190](https://github.com/UW-Hydro/VIC/pull/190))\n    \n    A comprehensive testing platform has been implemented and is available for public use along with the VIC model. A small subset of the test platform is run on [Travis-CI](https://travis-ci.org/UW-Hydro/VIC), which facilitates continuous integration of the VIC test platform. More information on the test platform is [here](http://vic.readthedocs.io).\n11. Run-time profiling and timing ([GH#442](https://github.com/UW-Hydro/VIC/pull/442))\n    \n    A timing module has been added to VIC in order to assess the computational cost and throughput of the VIC model. New output variables (`OUT_TIME_VICRUN_WALL` and `OUT_TIME_VICRUN_CPU`) document the time spent in `vic_run` for each variable. Additionally, a timing table is printed to `LOG_DEST` at the end of each simulation.\n\n#### Backwards Incompatible Changes:\n1.  Classic Driver I/O Formatting ([GH#18](https://github.com/UW-Hydro/VIC/issues/18), [GH#204](https://github.com/UW-Hydro/VIC/issues/204), [GH#227](https://github.com/UW-Hydro/VIC/pull/227))\n   \n   The format of ASCII forcing and output files has changed in VIC 5. These changes were motivated by the desire to improve simulation metadata tracking and reproducibility of VIC simulations.\n   - Output files now include a header with simulation metadata and variable names. The `PRT_HEADER` option has been deprecated.\n2.  Classic Driver Global Parameter Options\n   \n   A number of global parameter options have changed for the Classic Driver, relative to VIC 4.\n   - `TIME_STEP` (int, units: hours) has been changed to `MODEL_STEPS_PER_DAY` (int)\n   - `SNOW_STEP` (int, units: hours) has been changed to `SNOW_STEPS_PER_DAY` (int)\n   - `OUT_DT` (int, units: hours) has been changed to `OUTPUT_STEPS_PER_DAY` (int)\n   - `FORCE_DT` (int, units: hours) has been changed to `FORCE_STEPS_PER_DAY` (int)\n   - `BINARY_STATE_FILE` (TRUE or FALSE) has been changed to `STATE_FORMAT` (BINARY or ASCII)\n   - `BINARY_OUTPUT` (TRUE or FALSE) has been changed to `OUT_FORMAT` (BINARY or ASCII)\n3.  State files now include seconds ([GH#464](https://github.com/UW-Hydro/VIC/pull/464))\n   - There is a new global parameter option, `STATESEC`.  This specifies the time step at the end of which state will be saved, in units of seconds.  In other words, if you have an hourly time step (3600 sec) and you want to save state at the end of the final time step of the day (which is 86400 seconds long), subtract 3600 from 86400 to get a STATESEC of 82800.  This corresponds to the first second of the final time step.  State will be saved at the end of that time step.  \n   - When the state save date is appended to state filenames, STATESEC will be included so that the date will have the format YYYYMMDD_SSSSS.\n4.  Classic Driver Output Variables ([GH#352](https://github.com/UW-Hydro/VIC/pull/352))\n   \n   Computation of potential evapotranspiration (PET) has been simplified, reducing the number of output variables from 6 to 1.  The following output variables have been removed:\n   - `OUT_PET_SATSOIL` (potential evapotranspiration from saturated bare soil)\n   - `OUT_PET_H2OSURF` (potential evapotranspiration from open water)\n   - `OUT_PET_SHORT` (potential evapotranspiration (transpiration only) from short reference crop (grass))\n   - `OUT_PET_TALL` (potential evapotranspiration (transpiration only) from tall reference crop (alfalfa))\n   - `OUT_PET_NATVEG` (potential evapotranspiration (transpiration only) from current vegetation and current canopy resistance)\n   - `OUT_PET_VEGNOCR` (potential evapotranspiration (transpiration only) from current vegetation and 0 canopy resistance)\n   \n   These have been replaced by:\n   - `OUT_PET` (potential evapotranspiration, which = area-weighted sum of potential transpiration and potential soil evaporation; potential transpiration is computed using the Penman-Monteith equation with architectural resistance and LAI of the current veg cover)\n\n#### Deprecated Features:\n1.  Removed unused global parameter option `MEASURE_H` ([GH#284](https://github.com/UW-Hydro/VIC/pull/284))\n2.  Removed MTCLIM ([GH#288](https://github.com/UW-Hydro/VIC/pull/288))\n   \n   Previous versions of VIC used MTCLIM to generate missing forcing variables required to run VIC. This led to confusion by many users and considerably more complex code in the Classic Driver. VIC forcings are now required to be provided at the same time frequency as the model will be run at (`SNOW_STEPS_PER_DAY`).\n   \n   As part of this change, the following options have been removed from the Classic Driver:\n   - `LW_TYPE`\n   - `LW_CLOUD`\n   - `MTCLIM_SWE_CORR`\n   - `VP_INTERP`\n   - `VP_ITER`\n   - `OUTPUT_FORCE`\n   \n   As part of this change, the following output variables have been removed from the Classic Driver:\n   - `OUT_COSZEN`\n   - `OUT_TSKC`\n   \n   In the future, we would like to provide a stand-alone version of MTCLIM that produces subdaily meteorological forcings. We are looking for community support for this feature ([GH#17](https://github.com/UW-Hydro/VIC/issues/17))\n3. Removed `LONGWAVE` and `SHORTWAVE` forcing types ([GH#379](https://github.com/UW-Hydro/VIC/pull/379)).\n   \n   Previous versions of VIC allowed users to specify either `LONGWAVE` or `LWDOWN` to denote the incoming longwave radiation flux and `SHORTWAVE` or `SWDOWN` to denote the incoming shortwave radiation flux. We have removed these duplicate options, standardizing on the more descriptive `LWDOWN` and `SWDOWN`.\n   \n   Similarly, output variables `OUT_NET_LONG` and `OUT_NET_SHORT` have been replaced with `OUT_LWNET` and `OUT_SWNET`, respectively.\n4.  Changed the name of the variable `VEGCOVER` to `FCANOPY`, since this more accurately captures the meaning of the term (i.e., the fractional area of the plant canopy within the veg tile). Similarly changed `OUT_VEGCOVER` to `OUT_FCANOPY`.\n   \n   Similarly, changed the names of the following global parameter file options:\n   - `VEGLIB_VEGCOVER` --> `VEGLIB_FCAN`\n   - `VEGPARAM_VEGCOVER` --> `VEGPARAM_FCAN`\n   - `VEGCOVER_SRC` --> `FCAN_SRC`\n\n#### Bug Fixes:\n1. Miscellaneous fixes to lake module ([GH#425](https://github.com/UW-Hydro/VIC/pull/425))\n   \n   Several lake processes (aerodynamic resistance, albedo, latent/sensible heat fluxes, net radiation, etc) were reported incorrectly or not at all in output files. This has been fixed. In addition, in the absence of an initial state file, lake temperatures were initialized to unrealistic temperatures (the air temperature of the first simulation time step). To fix this, we now initialize the lake temperature to annual average soil temperature.\n2. Fix for computation of soil layer temperatures when soil thermal nodes do not reach the bottom of the soil column. ([GH#467](https://github.com/UW-Hydro/VIC/pull/467))\n   \n   Previously, if the soil thermal damping depth was shallower than the bottom of the deepest soil layer, and `FROZEN_SOIL==TRUE`, VIC would abort when estimating layer ice contents because it could not estimate a layer temperature if the thermal nodes did not completely span the layer.  Now, a layer temperature is estimated even when thermal nodes do not completely span the layer, and the error no longer occurs.\n3. Fix related to exact restart ([GH#481](https://github.com/UW-Hydro/VIC/pull/481), [GH#507](https://github.com/UW-Hydro/VIC/pull/507), [GH#509](https://github.com/UW-Hydro/VIC/pull/509))\n   \n   Previously, VIC did not produce the same results (fluxes and states) if a simulation was separated into multiple shorter-period runs by saving the state variables and restarting. This was due to:\n   1. The MTCLIM algorithm resulted in slightly different sub-daily meteorological variable values for different lengths of forcings (MTCLIM is deprecated in the current version)\n   2. A few bugs resulting in inexact restart. The following bugs have been fixed:\n      - The prognostic state variable `energy.Tfoliage` (foliage temperature) is now saved to the state file\n      - Two flux variables `energy.LongUnderOut` and `energy.snow_flux` are now saved to the state file.\n        \n        !!!Note\n                This is a temporary solution to ensure exact restart. A better way of handling these two flux variables needs to be done in the future (see [GH#479](https://github.com/UW-Hydro/VIC/issues/479))\n4. Fix for binary state file I/O ([GH#487](https://github.com/UW-Hydro/VIC/pull/487))\n   \n   Fixed a bug so that the binary format state file I/O works correctly.\n5. Fix for a physical constant (water heat capacity) ([GH#574](https://github.com/UW-Hydro/VIC/pull/574))\n   \n   Fixed a bug where volumetric heat capacity of water should be used in `func_canopy_energy_bal` (previously specific heat capacity was used).\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3918221", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3918221/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/3918221/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.0.0.rc2", "id": 3918221, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM5MTgyMjE=", "tag_name": "VIC.5.0.0.rc2", "target_commitish": "master", "name": "VIC.5.0.0.rc2", "draft": false, "prerelease": true, "created_at": "2016-08-18T15:45:06Z", "published_at": "2016-08-18T15:47:06Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.0.0.rc2", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.0.0.rc2", "body": "This is the second release candidate of VIC 5.0.0.\n\n## Major new features in the VIC 5 series, compared to VIC 4\n1. \"vic_run\" ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   Although the physics and model behavior of VIC 5.0.0 should be nearly identical to VIC 4.2, the source code has undergone a major cleanup and reorganization. We have separated the physical core (\"vic_run\") from the driver source code. This work has improved the extensibility and readability of the model.\n2. Classic Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Classic Driver provides similar functionality as VIC 4, including ASCII and binary I/O, and a time-before-space evaluation loop order. The Classic Driver is maintained for two main reasons:\n   1. to provide some level of backward compatibility for existing VIC users that wish to continue using VIC using a traditional approach, and,\n   2. to allow VIC to be run at individual grid cells, without requiring the infrastructure needed by the Image Driver. Documentation for the Classic Driver can be found [here](../Documentation/Drivers/Classic/ClassicDriver/).\n3. Image Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Image Driver adds a number of features to the user interface of the VIC model. Most notably, it uses a space-before-time evaluation loop order, netCDF I/O, and parallelization using MPI.  Image Driver specific documentation can be found [here](../Documentation/Drivers/Image/ImageDriver/).\n4. Constants File ([GH#192](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   Earlier versions of VIC included many hard-coded parameters and constants.  We have consolidated these constants into a single structure and developed an input file that allows users to modify parameters at run-time.  See [here](../Documentation/Constants/) for more information.\n5. Logging ([GH#173](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   A set of logging Macros have been added to all drivers and `vic_run`. The logging level can be set in the driver `Makefile` via the `LOG_LVL` variable. The logging Macros provide the filename and line number in the source code to aid in debugging.  Additionally, when compiler support is available, a traceback is printed when VIC exits during runtime. When the `LOG_DIR` variable is provided in the global parameter file, VIC will write its log(s) to log files instead of printing to stdout.\n6. Sub-hourly Timestep ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Previous versions of VIC were limited to a minimum timestep of one hour. The units of the VIC timestep have been changed from hours to seconds and the minimum timestep is now one second. If you intend on running VIC at a timestep less that one hour, we suggest significant testing.\n7. Calendar Support ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Earlier versions of VIC used the standard Gregorian calendar.  Because many modern climate models use non-standard calendars, we have implemented all [CF compliant calendars](http://www.cgd.ucar.edu/cms/eaton/netcdf/CF-20010629.htm#cal). The standard Gregorian calendar remains the VIC default. See the documentation for individual drivers for how to set the calendar option (e.g. [classic](../Documentation/Drivers/Classic/GlobalParam/#main-simulation-parameters)).\n8. Sample Datasets ([GH#387](https://github.com/UW-Hydro/VIC/pull/387))\n   \n   The [VIC_sample_data](https://github.com/UW-hydro/VIC_sample_data) repository contains the necessary input datasets (forcings and parameters) to run short simulations of the VIC model for both the classic and image driver.\n9. Tests Datasets ([GH#79](https://github.com/UW-Hydro/VIC/issues/79))\n   \n   See https://github.com/UW-Hydro/VIC/issues/79 for more information. A temporary location of the test data is here: ftp://ftp.hydro.washington.edu/pub/gergel/VIC5_test_data/\n10. Testing and Continuous Integration ([GH#190](https://github.com/UW-Hydro/VIC/pull/190))\n    \n    A comprehensive testing platform has been implemented and is available for public use along with the VIC model. A small subset of the test platform is run on [Travis-CI](https://travis-ci.org/UW-Hydro/VIC), which facilitates continuous integration of the VIC test platform. More information on the test platform is [here](Testing.md)\n11. Run-time profiling and timing ([GH#442](https://github.com/UW-Hydro/VIC/pull/442))\n    \n    A timing module has been added to VIC in order to assess the computational cost and throughput of the VIC model. New output variables (`OUT_TIME_VICRUN_WALL` and `OUT_TIME_VICRUN_CPU`) document the time spent in `vic_run` for each variable. Additionally, a timing table is printed to `LOG_DEST` at the end of each simulation.\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3546153", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3546153/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/3546153/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.5.0.0.rc1", "id": 3546153, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM1NDYxNTM=", "tag_name": "VIC.5.0.0.rc1", "target_commitish": "master", "name": "VIC.5.0.0.rc1", "draft": false, "prerelease": true, "created_at": "2016-06-29T04:22:17Z", "published_at": "2016-06-29T04:29:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.5.0.0.rc1", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.5.0.0.rc1", "body": "This is the first release candidate of VIC 5.0.0.\n\n## Major new features in the VIC 5 series, compared to VIC 4\n1. \"vic_run\" ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   Although the physics and model behavior of VIC 5.0.0 should be nearly identical to VIC 4.2, the source code has undergone a major cleanup and reorganization. We have separated the physical core (\"vic_run\") from the driver source code. This work has improved the extensibility and readability of the model.\n2. Classic Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Classic Driver provides similar functionality as VIC 4, including ASCII and binary I/O, and a time-before-space evaluation loop order. The Classic Driver is maintained for two main reasons:\n   1. to provide some level of backward compatibility for existing VIC users that wish to continue using VIC using a traditional approach, and,\n   2. to allow VIC to be run at individual grid cells, without requiring the infrastructure needed by the Image Driver. Documentation for the Classic Driver can be found [here](../Documentation/Drivers/Classic/ClassicDriver/).\n3. Image Driver ([GH#7](https://github.com/UW-Hydro/VIC/issues/7))\n   \n   The Image Driver adds a number of features to the user interface of the VIC model. Most notably, it uses a space-before-time evaluation loop order, netCDF I/O, and parallelization using MPI.  Image Driver specific documentation can be found [here](../Documentation/Drivers/Image/ImageDriver/).\n4. Constants File ([GH#192](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   Earlier versions of VIC included many hard-coded parameters and constants.  We have consolidated these constants into a single structure and developed an input file that allows users to modify parameters at run-time.  See [here](../Documentation/Constants/) for more information.\n5. Logging ([GH#173](https://github.com/UW-Hydro/VIC/pull/173))\n   \n   A set of logging Macros have been added to all drivers and `vic_run`. The logging level can be set in the driver `Makefile` via the `LOG_LVL` variable. The logging Macros provide the filename and line number in the source code to aid in debugging.  Additionally, when compiler support is available, a traceback is printed when VIC exits during runtime. When the `LOG_DIR` variable is provided in the global parameter file, VIC will write its log(s) to log files instead of printing to stdout.\n6. Sub-hourly Timestep ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Previous versions of VIC were limited to a minimum timestep of one hour. The units of the VIC timestep have been changed from hours to seconds and the minimum timestep is now one second. If you intend on running VIC at a timestep less that one hour, we suggest significant testing.\n7. Calendar Support ([GH#188](https://github.com/UW-Hydro/VIC/pull/188))\n   \n   Earlier versions of VIC used the standard Gregorian calendar.  Because many modern climate models use non-standard calendars, we have implemented all [CF compliant calendars](http://www.cgd.ucar.edu/cms/eaton/netcdf/CF-20010629.htm#cal). The standard Gregorian calendar remains the VIC default. See the documentation for individual drivers for how to set the calendar option (e.g. [classic](../Documentation/Drivers/Classic/GlobalParam/#main-simulation-parameters)).\n8. Sample Datasets ([GH#387](https://github.com/UW-Hydro/VIC/pull/387))\n   \n   The [VIC_sample_data](https://github.com/UW-hydro/VIC_sample_data) repository contains the necessary input datasets (forcings and parameters) to run short simulations of the VIC model for both the classic and image driver.\n9. Tests Datasets ([GH#79](https://github.com/UW-Hydro/VIC/issues/79))\n   \n   **TODO:** See https://github.com/UW-Hydro/VIC/issues/79 for more information.\n10. Testing and Continuous Integration ([GH#190](https://github.com/UW-Hydro/VIC/pull/190))\n    \n    A comprehensive testing platform has been implemented and is available for public use along with the VIC model. A small subset of the test platform is run on [Travis-CI](https://travis-ci.org/UW-Hydro/VIC), which facilitates continuous integration of the VIC test platform. More information on the test platform is [here](Testing.md)\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3484951", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/3484951/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/3484951/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.2.d", "id": 3484951, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0ODQ5NTE=", "tag_name": "VIC.4.2.d", "target_commitish": "master", "name": "VIC 4.2.d", "draft": false, "prerelease": false, "created_at": "2016-06-20T22:11:33Z", "published_at": "2016-06-20T21:49:36Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.2.d", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.2.d", "body": "VIC 4.2.d (20 June 2016)\n\nThis release contains a number of bug fixes.\n\n### Bug Fixes\n- Fixed uninitialized `dmy_struct` when `OUTPUT_FORCE==TRUE` and `BINARY_OUTPUT==TRUE` (#393)\n- Fixed uninitialized vegetation parameters when `VEGPARAM_LAI==FALSE` (#455)\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/2278179", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/2278179/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/2278179/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.2.c", "id": 2278179, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyNzgxNzk=", "tag_name": "VIC.4.2.c", "target_commitish": "master", "name": "VIC 4.2.c", "draft": false, "prerelease": false, "created_at": "2015-12-12T22:02:53Z", "published_at": "2015-12-12T22:06:31Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.2.c", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.2.c", "body": "VIC 4.2.c (12 December 2015)\n\nThis release contains a number of bug fixes.\n\n### Bug Fixes\n- Fixed water balance errors in lake model (#308, #316)\n- Fixed OUTPUT_FORCE behavior related to veg_hist features (#305, #307)\n- Updated bare soil evaporation behavior related to veg_hist update from 4.2 (#306, #315)\n", "reactions": {"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/2278179/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/876134", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/876134/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/876134/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.2.b", "id": 876134, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg3NjEzNA==", "tag_name": "VIC.4.2.b", "target_commitish": "master", "name": "Release of VIC.4.2.b", "draft": false, "prerelease": false, "created_at": "2015-01-22T20:46:52Z", "published_at": "2015-01-22T20:48:39Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.2.b", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.2.b", "body": "---\n\n## ****\\* Description of changes between VIC 4.2.a and VIC 4.2.b *****\n\n## Bug Fixes:\n\nFixed memory error in initialize atmos when OUTPUT_FORCE = TRUE.\n\n```\nFiles Affected:\n\ninitialize_atmos.\nMakefile\n\nDescription:\n\nPreviously, access to unitialized elements of the veg_con and veg_hist\nstructure was attempted when OUTPUT_FORCE = TRUE, causing a memory error\nand the model to crash.  This fix sets these elements inside a\n`if (!options.OUTPUT_FORCE)` block allowing the OUTPUT_FORCE option to\nwork as expected.\n```\n", "reactions": {"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/876134/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/802121", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/802121/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/802121/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.2.a", "id": 802121, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTgwMjEyMQ==", "tag_name": "VIC.4.2.a", "target_commitish": "master", "name": "Release of VIC.4.2.a", "draft": false, "prerelease": false, "created_at": "2014-12-22T05:50:16Z", "published_at": "2015-01-22T18:28:18Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.2.a", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.2.a", "body": "---\n\n##   Description of changes between VIC 4.2 and VIC 4.2.a\n\n## Bug Fixes:\n\nFixed unitialized bare soil albedo.\n\n```\nFiles Affected:\n\nfull_energy.c\n\nDescription:\n\nPreviously, bare_albedo was unset for the bare soil case (`iveg!=Nveg`).\nThis fix sets the bare_albedo to the global variable value of\n`BARE_SOIL_ALBEDO`.\n```\n\nCleanup of frozen soil option constraints.\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\nget_global_param.c\n\nDescription:\n\nRemoved hardcoded, behind the scenes checks for the `EXP_TRANS` and\n`NO_FLUX` global parameter values for case of `QUICK_SOLVE=TRUE` in\n`calc_surf_energy_bal`.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/717208", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/717208/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/717208/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.2", "id": 717208, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTcxNzIwOA==", "tag_name": "VIC.4.2", "target_commitish": "master", "name": "Release of VIC.4.2", "draft": false, "prerelease": false, "created_at": "2014-11-19T15:40:27Z", "published_at": "2015-01-22T18:28:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.2", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.2", "body": "---\n\n## Description of changes between VIC 4.1.2 and VIC 4.2\n\n## New Features:\n\nAdded partial vegetation cover (within each tile).\n\n```\nFiles Affected:\n\nalloc_veg_hist.c\ncalc_veg_params.c\ndisplay_current_settings.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_force_type.c\nget_global_param.c\nglobal.h\ninitialize_atmos.c\ninitialize_global.c\ninitialize_veg.c\noutput_list_utils.c\nput_data.c\nread_atmos_data.c\nread_forcing_data.c\nread_veglib.c\nread_vegparam.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded a time-varying (non-climatological) partial vegcover fraction\nwithin vegetated tiles.  Previously, vegetation was assumed to\ncover 100% of the land surface in a vegetated tile (i.e., \"big\nleaf\" scheme).  This assumption is not valid in general, and in\nparticular becomes very inaccurate in arid environments (e.g., open\nshrublands), or as LAI decreases to near 0.  In such cases,\nevaporation from bare soil between the plants becomes a major (or\ndominant) component of total evapotranspiration.\n\nThis partial veg cover fraction (\"vegcover\") is treated the same way\nas LAI and albedo: new options (VEGCOVER_SRC and VEGPARAM_VEGCOVER)\ntell VIC whether the veg param file contains 12 climatological\nvegcover values and whether to use those or the ones in the veg\nlibrary.  A new forcing variable (\"VEGCOVER\") can be included in\nforcing files along with LAI and albedo, and must be specified in the\nglobal parameter file in the same way.  There is an additional option\ncontrolling whether VEGCOVER values appear in the veg library file:\nVEGLIB_VEGCOVER.  FALSE by default, if TRUE it tells VIC to expect 12\nmonthly VEGCOVER values in each veg class, after the 12 LAI and before\nthe 12 albedo values.\n\nInternally, VIC uses the partial vegcover fraction to divide each veg\ntile into the area covered by plants and the area in between the\nplants.  LAI and canopy moisture and snow storage are rescaled by\n1/vegcover to get plant-specific values before canopy evap,\ntranspiration, and canopy snow dynamics are computed (vegcover is not\nallowed to go below the value MIN_VEGCOVER in vicNl_def.h).  Bare soil\nevap is computed for the bare soil component of the tile.  Total\nevapotranspiration is computed as the area-weighted sum of canopy evap\nand transpiration from the vegetated fraction and bare soil evap from\nthe bare soil fraction.  Finally, LAI and canopy moisture storage are\nrescaled back to the tile-area-average values before output.\n```\n\nAdded non-climatological time-varying veg parameters.\n\n```\nFiles Affected:\n\nalloc_veg_hist.c (new)\ncalc_surf_energy_bal.c\ncanopy_evap.c\ndisplay_current_settings.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_force_type.c\nget_global_param.c\ninitialize_atmos.c\ninitialize_global.c\ninitialize_veg.c\nMakefile\noutput_list_utils.c\npenman.c\nput_data.c\nread_atmos_data.c\nread_forcing_data.c\nread_veglib.c\nread_vegparam.c\nsnow_intercept.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded ability to read timeseries of LAI and albedo as forcing\nvariables.  In addition, climatological albedo values can now be\ngiven in the veg parameter file in a similar manner to LAI.\n\nThese changes involved adding a new veg_hist data structure to\ncontain the timeseries of LAI, Wdmax, and albedo, as well as\nadding LAI, Wdmax, and albedo variables to the veg_var structure\nto store the current values of these variables.\n\nTo allow for climatological albedo values to be specified in the\nveg parameter file (similar to LAI), a new option has been introduced:\nALB_SRC.  The constants LAI_FROM_VEGPARAM and LAI_FROM_VEGLIB have\nchanged name to FROM_VEGPARAM and FROM_VEGLIB so that they can be\nused to specify the source of either variable.\n\nVIC now handles LAI and albedo as follows:\n1. If specified as a variable in one of the forcing files, the\nvalues from the forcing file will be used in the simulation instead\nof the values in the veg parameter or veg library files.\n2. If not specified as a variable in one of the forcing files,\nvalues will be taken from the veg parameter file if a) they are listed\nthere and b) LAI_SRC (for LAI) and/or ALB_SRC(for albedo) are set to\nFROM_VEGPARAM.\n3. If not supplied as a forcing and [EITHER not listed in the veg\nparameter file OR listed there but LAI_SRC or ALB_SRC is set to\nFROM_VEGLIB], values will be taken from the veg library.\n```\n\nNew forcing variables for carbon cycle.\n\n```\nFiles Affected:\n\nalloc_atmos.c\ncompute_coszen.c (new)\nget_force_type.c\ninitialize_atmos.c\nMakefile\nmtclim_constants_vic.h\nmtclim_vic.c\nmtclim_wrapper.c\noutput_list_utils.c\nput_data.c\nvicNl_def.h\nvicNl.h\nwrite_forcing_file.c\n\nDescription:\n\nAdded the following new input forcing variables (used for simulations\nof carbon cycle processes):\n  CATM: Atmospheric CO2 mixing ratio [ppm]\n  FDIR: Fraction of incoming shortwave that is direct [fraction]\n  PAR:  Photosynthetically active radiation [W/m2]\n\nThese variables are optional; if not supplied as forcings, VIC will use\ndefault values for them, as follows:\n  CATM: Value of CatmCurrent defined in vicNl_def.h\n  FDIR: Value computed by MTCLIM module\n  PAR:  SHORTWAVE*SW2PAR, with SW2PAR defined in vicNl_def.h\n\nSimilarly, added the following new output variables:\n  OUT_CATM:   (equals CATM)\n  OUT_COSZEN: Cosine of the solar zenith angle, computed by MTCLIM module\n  OUT_FDIR:   (equals FDIR)\n  OUT_PAR:    (equals PAR)\n```\n\nAdded simulation of photosynthesis.\n\n```\nFiles Affected:\n\ncalc_Nscale_factors.c (new)\ncalc_surf_energy_bal.c\ncanopy_assimilation.c (new)\ncanopy_evap.c\ndisplay_current_settings.c\nfaparl.c (new)\nfree_dist_prcp.c\nfree_vegcon.c\nfull_energy.c\nfunc_canopy_energy_bal.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_global.c\ninitialize_veg.c\nMakefile\nmake_veg_var.c\noutput_list_utils.c\npenman.c\nphotosynth.c (new)\nput_data.c\nread_soilparam.c\nread_veglib.c\nread_vegparam.c\nsnow_intercept.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded simulation of photosynthesis.  The photosynthesis formulation was\ntaken from the BETHY model (Knorr, 2000), which in turn used the Farquhar\nmodel for C3 plants and the Collatz model for C4 plants.  In addition,\ninhibition of photosynthesis under saturated conditions (as described\nby Frolking et al, 2002) is allowed for.\n\nThis feature requires several new veg parameters to be in the veg\nlibrary file:\n  Ctype:          Photosynthetic pathway; can be C3 or C4\n  MaxCarboxRate:  Maximum carboxlyation rate at 25 deg C (mol(CO2)/m2s)\n  MaxETransport:  Maximum electron transport rate at 25 deg C (mol(CO2)/m2s) (C3 plants)\n  CO2Specificity: CO2 specificity at 25 deg C (mol(CO2)/m2s) (C4 plants)\n  LightUseEff:    Light-use efficiency (mol(CO2)/mol(photons))\n  NscaleFlag:     TRUE = nitrogen-scaling factors are applicable to this veg class\n  Wnpp_inhib:     Moisture level (fraction of maximum moisture) above which photosynthesis experiencing saturation inhibition, i.e. too wet for optimal photosynthesis; only applies to top soil layer\n  NPPfactor_sat:  Photosynthesis multiplier (fraction of maximum) when top soil layer is saturated\n\nThere are several new output variables associated with this feature:\n  OUT_GPP:  Gross primary productivity [g C/m2d]\n  OUT_RAUT: Autotrophic respiration [g C/m2d]\n  OUT_NPP:  Net primary productivity [g C/m2d]\n  OUT_APAR: Absorbed PAR [W/m2]\n\nBy default, this feature is turned off.  To turn this feature on, set\nCARBON to TRUE in the global parameter file.\n\nWhen this feature is turned on, you can choose to compute stomatal\nresistance via the Jarvis formulation (the formulation used by all\nprevious versions of VIC) or as a function of photosynthetic demand.\nThis is determined by the setting of RC_MODE in the global parameter\nfile.  A value of RC_JARVIS (which is the default) selects the Jarvis\nformulation.  A value of RC_PHOTO selects the photosynthetic demand\nformulation.\n```\n\nAdded simulation of soil carbon storage and fluxes.\n\n```\nFiles Affected:\n\ncompute_soil_resp.c (new)\nfull_energy.c\ninitialize_lake.c\ninitialize_soil.c\ninitialize_veg.c\nLAKE.h\nlakes.eb.c\nMakefile\noutput_list_utils.c\nput_data.c\nread_initial_model_state.c\nsoil_carbon_balance.c (new)\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\nwrite_model_state.c\n\nDescription:\n\nAdded simulation of soil carbon storage and fluxes.  This formulation was\ntaken mostly from the LPJ model (Sitch, 2003), which in turn used a\nLloyd-Taylor model for the dependence of soil respiration on soil\ntemperature.  The dependence of soil respiration on soil moisture was\nbased on the formulation of Yi et al (2012) but modified to allow a small\nrespiration rate under saturated conditions.\n\nAt this point, we do not simulate the storage of carbon in living biomass.\nTherefore, the flux of carbon into the soil (litterfall) is set equal to\nthe total NPP of the previous calendar year, spread evenly over the current\nyear.  As in the LPJ model, soil carbon is stored in 3 pools: litter (fast),\nintermediate, and slow; with associated turnover times of 2.86 y, 33.3 y, and\n1,000 y, respectively.  Litterfall enters the litter pool.  Carbon exits the\nlitter pool through respiration (RhLitter).  A fraction (fAir) of this\nrespired carbon is in the form of CO2 and is vented directly to the atmosphere\n(RhLitter2Atm).  The remainder is sent to the intermediate and slow pools\nin the proportions fInter and (1-fInter), respectively.  These pools also\nrespire carbon, which is assumed to be in the form of CO2 and vented directly\nto the atmosphere.\n\nThere are several new output variables associated with this feature:\n  OUT_RHET: Total heterotrophic respiration vented to the atmosphere\n            (= RhLitter2Atm+RhInter+RhSlow)  [g C/m2d]\n  OUT_NEE:  Net Ecosystem Exchange (= NPP-RHET) [g C/m2d]\n  OUT_LITTERFALL: Flux of carbon from living biomass into litter pool [g C/m2d]\n  OUT_CLITTER: Carbon density in the litter pool [g C/m2]\n  OUT_CINTER: Carbon density in the intermediate pool [g C/m2]\n  OUT_CSLOW: Carbon density in the slow pool [g C/m2]\n\nThis feature is part of the carbon cycle, controlled by the setting of the\nCARBON option in the global parameter file.\n```\n\nAdded soil moisture content for half-space below bottom soil layer\n\n```\nFiles Affected:\n\nsoil_conduction.c\nvicNl_def.h\n\nDescription:\n\nVIC's soil thermal profile can extend well below its soil hydrologic\nlayers.  Previously, the moisture content of these soil thermal nodes\nwas set to that of the bottom soil layer.  Now, the moisture content can\nbe set to a user-specified value, SLAB_MOIST_FRACT, defined in\nvicNl_def.h.\n```\n\nRemoved the DIST_PRCP option.\n\n```\nFiles Affected:\n\narno_evap.c\ncalc_rainonly.c\ncalc_snow_coverage.c\ncalc_surf_energy_bal.c\ncanopy_evap.c\ndisplay_current_settings.c\ndist_prec.c (removed)\nfree_all_vars.c (renamed from free_dist_prcp.c)\nfrozen_soil.c\nfull_energy.c\nfunc_canopy_energy_bal.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_global.c\ninitialize_model_state.c\ninitialize_new_storm.c (removed)\nLAKE.h\nlakes.eb.c\nmake_all_vars.c (renamed from make_dist_prcp.c)\nMakefile\nprepare_full_energy.c\nput_data.c\nread_initial_model_state.c\nread_soilparam.c\nredistribute_during_storm.c (removed)\nrunoff.c\nsnow_intercept.c\nsoil_conduction.c\nsnow_intercept.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl.c\nvicNl_def.h\nvicNl.h\nwrite_forcing_file.c\nwrite_model_state.c\n\nDescription:\n\nRemoved the DIST_PRCP option and all functions and variables associated\nwith it.  Removed the \"dist\" array dimension from the cell and veg_var\ndata structures.  Renamed the \"dist_prcp\" data structure to\n\"all_vars\".\n```\n\n## Bug Fixes:\n\nFixed division by 0 and nans in output when there is no liquid water available\nto satisfy evaporative demand\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nPreviously, runoff() scaled estimated evaporation for each frost subarea\nby that subarea's portion of available liquid moisture, via summing\navailable liquid moisture over all subareas and computing the ratio of\neach subarea's moisture to the sum.  There was no check on whether the\nsum > 0, resulting in the possibility of division by 0 when no liquid\nmoisture is available.  This has been fixed (a check was added).  In\naddition, the apportionment of evaporation to subareas originally\nincluded a check on whether all of the evaporative demand was met,\nwith a warning statement if not.  This check and warning have been\nremoved, since the evaporation values are subsequently modified to\nreflect what actually evaporated (i.e. it's ok for the initial\nestimate to exceed available moisture without affecting the water\nbalance).\n```\n\nFixed negative liquid soil moisture for bare soil conditions\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nPreviously, runoff() only checked whether total (liquid+ice) soil\nmoisture was > residual moisture, but not whether liquid soil moisture\nwas positive.  In some cases, in the bare soil tile, liquid soil\nmoisture could occasionally go negative.  This has been fixed by adding\na check on liquid soil moisture to runoff().\n```\n\nFixed incorrect handling of case of a mix of cells with and without lakes.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\nread_lakeparam.c\n\nDescription:\n\nVIC was neither reading the lake parameter file correctly nor\ninitializing the lake data structures correctly for the case of a\nmix of cells with and without lakes within a single lake parameter\nfile.  This has been fixed.\n```\n\nFixed use of tmp_moist array without initialization.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\n\nDescription:\n\nFixed use of tmp_moist array without initialization.\n```\n\nFix for crash when FROZEN_SOIL, EXP_TRANS and IMPLICIT all == TRUE\n\n```\nFiles Affected:\n\nfrozen_soil.c\nfunc_surf_energy_bal.c\nvicNl.h\n\nDescription:\n\nExtended the \"cold nose\" hack to the \"warm nose\" condition, and also\nextended to cover the IMPLICIT scheme.\n\nThis will be superceded by a more bug-free soil temperature scheme\nin the next major release of the model.\n```\n\nFixed incorrect assignment of input forcing variables that are moisture fluxes (all forms of precipitation and channel inflow) when ALMA_INPUT is TRUE.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nWhen ALMA_INPUT was TRUE, VIC was not rescaling moisture fluxes such\nas precipitation to an hourly time step correctly in initialize_atmos.\nThis led to incorrect assignment of these fluxes to the atmos array.\nThis has been fixed.\n```\n\nFixed selection of starting point in forcing file when starting in the middle of a day\n\n```\nFiles Affected:\n\nmake_dmy.c\n\nDescription:\n\nFor the case of STARTHOUR not equal to 0, VIC was not finding the\ncorrect starting record in the forcing file, due to its missing a\ncheck on the hour of the forcing record.  This has been fixed.\n```\n\nFixed incorrect handling of case of a mix of cells with and without lakes.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\nread_lakeparam.c\n\nDescription:\n\nVIC was neither reading the lake parameter file correctly nor\ninitializing the lake data structures correctly for the case of a\nmix of cells with and without lakes within a single lake parameter\nfile.  This has been fixed.\n```\n\nFixed use of tmp_moist array without initialization.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\n\nDescription:\n\nFixed use of tmp_moist array without initialization.\n```\n\nFixed use of uninitialized soil moisture values on first time step.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\n\nDescription:\n\nThe tmp_moist array, used in initialize_model_state() as an input to\ncompute_runoff_and_asat(), was initialized within an if statement that\ncaused it to be sent to compute_runoff_and_asat() without initialization\nin some cases.  This has been fixed by moving the initialization of\ntmp_moist outside the if statement.\n```\n\nFixed errors in forcing disaggregation under certain input cases.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nmtclim_vic.c\nmtclim_wrapper.c\n\nDescription:\n\nFixed bugs in the following cases:\n1. User supplied daily incoming shortwave (not sub-daily)\n2. User supplied daily specific or relative humidity without supplying\n   average daily pressure or temperature, respectively (with which to\n   convert these to daily vapor pressure).\n```\n\nFixed bug in root zone calculation.\n\n```\nFiles Affected:\n\ncalc_root_fraction.c\n\nDescription:\n\nFixed infinite loop that was occurring when the total  of root zone\ndepths exceeded the total soil depth and one of the root zone boundaries\ncoincided with a soil layer boundary.\n```\n\nFixed error in passing SensibleHeat to func_atmos_energy_bal.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\n\nDescription:\n\nReplaced (*SensibleHeat) with SensibleHeat in argument lists\nof root_brent, error_print_atmos_energy_bal and\nsolve_atmos_energy_bal.\n```\n\nFixed use of uninitialized variable in cold nose fix for frozen soil\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nFixed use of uninitialized variable in cold nose fix for\nfrozen soil.  Code was attempting to check all nodes for a\ncold nose, but this check requires accessing the value of the\nnext node, which is undefined when we check the bottom node.\nNow the code does not check the bottom node (which is unlikely\nto experience a cold nose anyway).\n```\n\nFixed bug in converting from ALMA_INPUT moisture flux units\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFixed bug in converting from ALMA_INPUT moisture flux units\nto traditional units (was multiplying by number of seconds in\nmodel step when should have been multiplying by number of seconds\nin forcing step).\n```\n\nFixed incorrect reporting of canopy energy balance terms.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\ncalc_water_energy_balance_errors.c\nput_data.c\nsurface_fluxes.c\nvicNl.h\n\nDescription:\n\nVIC was not summing under- and over-story energy fluxes correctly for the\ncase of a forest canopy with snow.  This only affected the reporting of\nenergy balance terms in VIC's output; internal calculations were fine.\n\nIn addition, a bug (sign error in flux summation) in VIC's calculation of\nthe surface energy balance (for output only) was fixed.  This reduces the\nvast majority of the energy balance errors reported during the course of\na typical energy balance simulation.\n```\n\nFixed incorrect summing of rain and snow components of precipitation over grid\ncell\n\n```\nFiles Affected:\n\nfull_energy.c\n\nDescription:\n\nThe amounts of rainfall and snowfall over the lake (or inundated wetland)\nwere being omitted from the grid cell totals.  This has been fixed.\n```\n\nVapor pressure incorrect if user supplies (QAIR or REL_HUMID) + PRESSURE as\ninput forcings instead of vapor pressure.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFor the cases of the combination of (QAIR or REL_HUMID) plus PRESSURE\nsupplied as input forcings instead of VP, the logic distinguishing\nbetween daily and sub-daily supplied PRESSURE was flawed, resulting\nin incorrect values in both cases.  This has been fixed.\n```\n\nIncorrect handling of user-supplied tskc (cloud fraction) for LW_CLOUD==LW_CLOUD_DEARDORFF\n\n```\nFiles Affected:\n\ncalc_longwave.c\nmtclim_vic.c\n\nDescription:\n\nPrevious versions of VIC (before 4.1.2) used a full-sky longwave\nformulation taken from two formulas in the Bras hydrology text.  For\nthe new Deardorff full-sky longwave formulation, the dependence on\ncloud fraction is different from the old Bras formulation.   In \n4.1.2 (and 4.1.2.a-b), the new Deardorff formulation did not account\nfor the possibility of user-supplied cloud fraction; if the user\nsupplied cloud fraction as an input forcing, the resulting longwave\nwas wrong.  This has been fixed.\n```\n\nChanged default settings of MTCLIM_SWE_CORR and LW_TYPE to reflect best\ngeneral settings\n\n```\nFiles Affected:\n\ninitialize_global.c\nglobal.param.sample\n\nDescription:\n\nIn light of the findings of Bohn et al. (2012), we have changed the\ndefault setting of MTCLIM_SWE_CORR to FALSE and of LW_TYPE to\nLW_PRATA.  These settings give forcing estimates that are less biased\nin general.\n```\n\nVapor pressure set to 0 if user supplies (QAIR or REL_HUMID) + PRESSURE as\ninput forcings instead of vapor pressure.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFor the cases of the combination of (QAIR or REL_HUMID) plus PRESSURE\nsupplied as input forcings instead of VP, VIC was supposed to compute\nVP from (QAIR or REL_HUMID) and PRESSURE, then transfer the computed\nVP to the atmos data structure.  This transfer was being skipped, and\nvapor pressure was consequently set to 0 during the simulation.  This\nhas been fixed.\n```\n\nComputed longwave sometimes is extremely large at high latitudes.\n\n```\nFiles Affected:\n\nmtclim_vic.c\n\nDescription:\n\nPreviously (VIC 4.1.2, 4.1.2.a, and 4.1.2.b only), when SHORTWAVE and\nVP were supplied to VIC as input forcings (and LONGWAVE was NOT\nsupplied as a forcing), the incoming longwave radiation computed by\nVIC would in rare cases become extremely large.  This happens only at\nhigh latitudes in winter when the theoretical clear-sky potential\nsolar radiation is very small.  If the supplied VP was large enough,\nit could cause the internal variable t_tmax (clear-sky transmittance)\nto go negative.  This in turn would cause the internal variable\nt_fmax (cloud transmittance) to go negative as well.  This, finally,\nwould cause computed LONGWAVE values to become extremely large, if\nthe LW_CLOUD method was set to DEARDORFF.  This has been fixed.\n```\n\nVIC was unnecessarily requiring WIND to be supplied as an input forcing.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nvicNl_def.h\n\nDescription:\n\nVIC was requiring WIND (or the zonal and meridional components of\nwind, WIND_E and WIND_N) to be supplied as an input forcing.  Now VIC\nallows WIND to be omitted.  If WIND is not supplied as an input\nforcing, VIC will supply a default wind speed, defined in vicNl_def.h\nas DEFAULT_WIND_SPEED and currently set to 3.0 m/s.\n```\n\nCloud fraction tskc was not accounting for the case in which observed incoming\nshortwave is supplied as a forcing.\n\n```\nFiles Affected:\n\nmtclim_vic.c\n\nDescription:\n\nIn the absence of observations, VIC's estimate of cloud fraction, tskc,\nis a function of some intermediate quantities that are computed within\nthe MTCLIM algorithm (in mtclim_vic.c).  These intermediate terms\ncan be computed from either observed daily shortwave radiation (if\navailable) or simulated daily shortwave radiation.  The computation\nof tskc was previously taking place in a part of the code where\nonly the simulated daily shortwave radiation was available.  Thus,\ntskc would not reflect the actual amount of incident shortwave, even\nif observed incident shortwave was supplied as a forcing.\n\nThis has been fixed.  The tskc computation has been moved to another\nlocation in the code where the observed daily shortwave can be\naccessed (if supplied by the user as a forcing).\n```\n\nIncorrect timing of disaggregated radiation and air temperature when daily\nforcings are supplied and off_gmt is 0.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nVIC was double-shifting the timeseries of subdaily radiation and\ntemperature in cases in which VIC was *not* given sub-daily incoming\nshortwave as an input forcing *and* soil parameter \"off_gmt\" was not\nset to the local time zone offset (i.e. not set to longitude*24/360).\nThis caused incorrect timing of the diurnal cycle of radiation and\nair temperature.\n\nThis has been fixed.\n```\n\nDisaggregated radiation is constant throughout the day when daily incoming\nshortwave radiation is supplied as an input forcing.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nmtclim_constants_vic.h\nmtclim_vic.c\nmtclim_wrapper.c\n\nDescription:\n\nWhen VIC was supplied with *daily* incoming shortwave as an input\nforcing variable, VIC would fail to disaggregate this correctly to\nsub-daily time steps; it would simply repeat the daily average for\nevery sub-daily time step.  This has been fixed.  Now VIC will\ncompute a diurnal cycle whose daily average matches the supplied daily\naverage.\n```\n\n## Miscellaneous:\n\nBetter out-of-box behavior for soil temperature scheme\n\n```\nFiles Affected:\n\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\ninitialize_model_state.c\n\nDescription:\n\nAdded constraints to help ensure efficient, physically reasonable\nsimulation of the soil temperature profile:\n\n1. Set default values of IMPLICIT and EXP_TRANS to TRUE.\n\n2. Made \"cold\" (no-spinup) initial soil temperatures more consistent\nwith air temperature and bottom boundary temperature.\n\n3. Added validation of option.Nnodes for EXP_TRANS=TRUE to guarantee\nthat, for the given soil temperature bottom boundary depth \"dp\" (also\nknown as the damping depth), there are at least 3 nodes within the top\n50 cm of the soil column.  This is to constrain errors to a reasonable\nsize.  To satisfy this condition, the following relationship must hold:\n    Nnodes >= 5*ln(dp+1)+1\n\nSome examples:\ndp(m)   minimum Nnodes\n  4        9\n  7       12\n 10       14\n 25       18\n 50       21\n\nVIC will exit with an error message to this effect if Nnodes is too\nsmall for the given value of dp.\n```\n\nCleanup of compile-time options\n\n```\nFiles Affected:\n\narno_evap.c\ncalc_atmos_energy_bal.c\ncalc_forcing_stats.c (removed)\ncalc_longwave.c\ncalc_surf_energy_bal.c\ncanopy_evap.c\ncheck_files.c\nclose_files.c\ndisplay_current_settings.c\nfrozen_soil.c\nfull_energy.c\nfunc_canopy_energy_bal.c\nfunc_surf_energy_bal.c\nget_global_param.c\nice_melt.c\ninitialize_atmos.c\ninitialize_global.c\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_new_storm.c\ninitialize_soil.c\nLAKE.h\nlakes.eb.c\nMakefile\noutput_list_utils.c\nprepare_full_energy.c\nput_data.c\nread_lakeparam.c\nread_initial_model_state.c\nread_soilparam_arc.c\nread_soilparam.c\nread_vegparam.c\nredistribute_during_storm.c\nrunoff.c\nsnow_intercept.c\nsoil_conduction.c\nsoil_thermal_eqn.c\nSnowPackEnergyBalance.c\nsolve_snow.c\nsurface_fluxes.c\nuser_def.h (removed)\nvicNl_def.h\nvicNl.c\nvicNl.h\nwrite_data.c\nwrite_forcing_file.c\nwrite_header.c\nwrite_layer.c\nwrite_model_state.c\n\nDescription:\n\nCleanup of user_def.h, either by removing options/settings or moving\nthem to vicNl_def.h (becoming run-time options if appropriate).\nuser_def.h has been removed.\n\nThe following options were removed:\n\n* NO_REWIND.  All parameter files must contain the same grid cells in\n  the same order.\n* QUICK_FS.\n* EXCESS_ICE.\n* OUTPUT_FORCE_STATS.\n* LWAVE_COR.  If the user wishes to correct any of the forcing\n  variables, the user can do this externally to VIC.\n\nThe following options were moved from compile-time to run-time (in the\noptions_struct in vicNl_def.h):\n\n* LOW_RES_MOIST (renamed to LOG_MATRIC)\n* OUTPUT_FORCE\n* CLOSE_ENERGY\n* SPATIAL_SNOW\n* SPATIAL_FROST\n\nThe following terms were moved to vicNl_def.h without modification:\n\n* VERBOSE (still a compile-time option)\n* Max array dimensions such as MAX_VEG, MAX_LAYERS, etc.\n* Constants such as MAXIT_FE and LAI_WATER_FACTOR\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/348487", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/348487/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/348487/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.m", "id": 348487, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0ODQ4Nw==", "tag_name": "VIC.4.1.2.m", "target_commitish": "master", "name": "Release of VIC.4.1.2.m", "draft": false, "prerelease": false, "created_at": "2014-05-30T15:51:46Z", "published_at": "2014-05-30T15:52:53Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.m", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.m", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.l to VIC 4.1.2.m *****\n\n## Bug Fixes:\n\nFixed negative liquid soil moisture for bare soil conditions\n\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nPreviously, runoff() only checked whether total (liquid+ice) soil\nmoisture was > residual moisture, but not whether liquid soil moisture\nwas positive. In some cases, in the bare soil tile, liquid soil moisture\ncould occasionally go negative. This has been fixed by adding a check on\nliquid soil moisture to runoff().\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/255274", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/255274/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/255274/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.l", "id": 255274, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NTI3NA==", "tag_name": "VIC.4.1.2.l", "target_commitish": "master", "name": "Release of VIC.4.1.2.l", "draft": false, "prerelease": false, "created_at": "2014-04-09T23:14:45Z", "published_at": "2014-04-03T15:56:57Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.l", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.l", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.k to VIC 4.1.2.l *****\n\n## Bug Fixes:\n\nFixed memory leak in vicNl()\n\nFiles Affected:\n\nvicNl.c\n\nDescription:\n\nSeveral soil_con arrays, allocated in read_soilparam(), were not being\nfreed in vicNl() due to the \"free\" statements being inside the wrong\nOUTPUT_FORCE \"if\" block. This has been fixed.\n\nUninitialized variables in write_forcing_file().\n\nFiles Affected:\n\nwrite_forcing_file.c\n\nDescription:\n\nPlaceholder variables (dummy_*) in write_forcing_file() were not\ninitialized, resulting in warnings during compilation. These are now\ninitialized. This should not affect any model results, since these\nvariables were never used.\n\nCompilation errors when EXCESS_ICE = TRUE\n\nFiles Affected:\n\nfull_energy.c\ninitialize_model_state.c\nlakes.eb.c\n\nDescription:\n\nMiscellaneous typos in the EXCESS_ICE code prevented compilation\nwhen EXCESS_ICE = TRUE in user_def.h. These have been fixed.\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/179479", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/179479/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/179479/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.k", "id": 179479, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3OTQ3OQ==", "tag_name": "VIC.4.1.2.k", "target_commitish": "master", "name": "Release of VIC.4.1.2.k", "draft": false, "prerelease": false, "created_at": "2014-04-09T23:18:31Z", "published_at": "2014-02-10T06:46:57Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.k", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.k", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.j to VIC 4.1.2.k *****\n\n## Bug Fixes:\n\nFix for crash when FROZEN_SOIL, EXP_TRANS and IMPLICIT all == TRUE\n\nFiles Affected:\n\nfrozen_soil.c\nfunc_surf_energy_bal.c\nvicNl.h\n\nDescription:\n\nExtended the \"cold nose\" hack to the \"warm nose\" condition, and also\nextended to cover the IMPLICIT scheme.\n\nThis will be superceded by a more bug-free soil temperature scheme\nin the next major release of the model.\n\nBetter out-of-box behavior for soil temperature scheme\n\nFiles Affected:\n\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\ninitialize_model_state.c\n\nDescription:\n\nAdded constraints to help ensure efficient, physically reasonable\nsimulation of the soil temperature profile:\n1. Set default values of IMPLICIT and EXP_TRANS to TRUE.\n2. Made \"cold\" (no-spinup) initial soil temperatures more consistent\n   with air temperature and bottom boundary temperature.\n3. Added validation of option.Nnodes for EXP_TRANS=TRUE to guarantee\n   that, for the given soil temperature bottom boundary depth \"dp\" (also\n   known as the damping depth), there are at least 3 nodes within the top\n   50 cm of the soil column. This is to constrain errors to a reasonable\n   size. To satisfy this condition, the following relationship must hold:\n   Nnodes >= 5*ln(dp+1)+1\n\nSome examples:\ndp(m) minimum Nnodes\n4 9\n7 12\n10 14\n25 18\n50 21\n\nVIC will exit with an error message to this effect if Nnodes is too\nsmall for the given value of dp.\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/174215", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/174215/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/174215/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.j", "id": 174215, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NDIxNQ==", "tag_name": "VIC.4.1.2.j", "target_commitish": "master", "name": "Release of VIC.4.1.2.j", "draft": false, "prerelease": false, "created_at": "2014-02-05T15:50:42Z", "published_at": "2014-02-05T15:46:41Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.j", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.j", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.i to VIC 4.1.2.j *****\n\n## Bug Fixes:\n\nFixed incorrect assignment of input forcing variables that are moisture fluxes (all forms of precipitation and channel inflow) when ALMA_INPUT is TRUE.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nWhen ALMA_INPUT was TRUE, VIC was not rescaling moisture fluxes such\nas precipitation to an hourly time step correctly in initialize_atmos.\nThis led to incorrect assignment of these fluxes to the atmos array.\nThis has been fixed.\n```\n\nFixed selection of starting point in forcing file when starting in the middle of a day\n\n```\nFiles Affected:\n\nmake_dmy.c\n\nDescription:\n\nFor the case of STARTHOUR not equal to 0, VIC was not finding the\ncorrect starting record in the forcing file, due to its missing a\ncheck on the hour of the forcing record.  This has been fixed.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/53197", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/53197/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/53197/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.i", "id": 53197, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTUzMTk3", "tag_name": "VIC.4.1.2.i", "target_commitish": "master", "name": "Release of VIC.4.1.2.i", "draft": false, "prerelease": false, "created_at": "2013-09-26T20:50:57Z", "published_at": "2013-09-26T20:56:35Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.i", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.i", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.h to VIC 4.1.2.i *****\n\n## Bug Fixes:\n\nFixed incorrect handling of case of a mix of cells with and without lakes.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\nread_lakeparam.c\n\nDescription:\n\nVIC was neither reading the lake parameter file correctly nor\ninitializing the lake data structures correctly for the case of a\nmix of cells with and without lakes within a single lake parameter\nfile. This has been fixed.\n```\n\nFixed use of tmp_moist array without initialization.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\n\nDescription:\n\nFixed use of tmp_moist array without initialization.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29834", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29834/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29834/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.h", "id": 29834, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODM0", "tag_name": "VIC.4.1.2.h", "target_commitish": "master", "name": "Release of VIC 4.1.2.h", "draft": false, "prerelease": false, "created_at": "2013-07-30T22:05:15Z", "published_at": "2013-08-20T19:52:29Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.h", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.h", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.g to VIC 4.1.2.h *****\n\n## Bug Fixes:\n\nFixed use of uninitialized soil moisture values on first time step.\n\n```\nFiles Affected:\n\ninitialize_model_state.c\n\nDescription:\n\nThe tmp_moist array, used in initialize_model_state() as an input to\ncompute_runoff_and_asat(), was initialized within an if statement that\ncaused it to be sent to compute_runoff_and_asat() without initialization\nin some cases.  This has been fixed by moving the initialization of\ntmp_moist outside the if statement.\n```\n\nFixed errors in forcing disaggregation under certain input cases.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nmtclim_vic.c\nmtclim_wrapper.c\n\nDescription:\n\nFixed bugs in the following cases:\n1. User supplied daily incoming shortwave (not sub-daily)\n2. User supplied daily specific or relative humidity without supplying\n   average daily pressure or temperature, respectively (with which to\n   convert these to daily vapor pressure).\n```\n\nFixed bug in root zone calculation.\n\n```\nFiles Affected:\n\ncalc_root_fraction.c\n\nDescription:\n\nFixed infinite loop that was occurring when the total  of root zone\ndepths exceeded the total soil depth and one of the root zone boundaries\ncoincided with a soil layer boundary.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29831", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29831/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29831/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.g", "id": 29831, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODMx", "tag_name": "VIC.4.1.2.g", "target_commitish": "master", "name": "Release of VIC 4.1.2.g", "draft": false, "prerelease": false, "created_at": "2013-02-07T04:27:23Z", "published_at": "2013-08-20T19:51:05Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.g", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.g", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.f to VIC 4.1.2.g *****\n\n## Bug Fixes:\n\nFixed error in passing SensibleHeat to func_atmos_energy_bal.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\n\nDescription:\n\nReplaced (*SensibleHeat) with SensibleHeat in argument lists\nof root_brent, error_print_atmos_energy_bal and\nsolve_atmos_energy_bal.\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.2.e to VIC 4.1.2.f *****\n\n## Bug Fixes:\n\nFixed use of uninitialized variable in cold nose fix for frozen soil\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nFixed use of uninitialized variable in cold nose fix for\nfrozen soil.  Code was attempting to check all nodes for a\ncold nose, but this check requires accessing the value of the\nnext node, which is undefined when we check the bottom node.\nNow the code does not check the bottom node (which is unlikely\nto experience a cold nose anyway).\n```\n\nFixed bug in converting from ALMA_INPUT moisture flux units\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFixed bug in converting from ALMA_INPUT moisture flux units\nto traditional units (was multiplying by number of seconds in\nmodel step when should have been multiplying by number of seconds\nin forcing step).\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29830", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29830/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29830/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.d", "id": 29830, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODMw", "tag_name": "VIC.4.1.2.d", "target_commitish": "master", "name": "Release of VIC 4.1.2.d", "draft": false, "prerelease": false, "created_at": "2012-08-29T00:21:00Z", "published_at": "2013-08-20T19:50:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.d", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.d", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2.c to VIC 4.1.2.d *****\n\n## Bug Fixes:\n\nFixed incorrect summing of rain and snow components of precipitation over grid\ncell\n\n```\nFiles Affected:\n\nfull_energy.c\n\nDescription:\n\nThe amounts of rainfall and snowfall over the lake (or inundated wetland)\nwere being omitted from the grid cell totals.  This has been fixed.\n```\n\nVapor pressure incorrect if user supplies (QAIR or REL_HUMID) + PRESSURE as\ninput forcings instead of vapor pressure.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFor the cases of the combination of (QAIR or REL_HUMID) plus PRESSURE\nsupplied as input forcings instead of VP, the logic distinguishing\nbetween daily and sub-daily supplied PRESSURE was flawed, resulting\nin incorrect values in both cases.  This has been fixed.\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.2.b to VIC 4.1.2.c *****\n\n## Bug Fixes:\n\nIncorrect handling of user-supplied tskc (cloud fraction) for LW_CLOUD==LW_CLOUD_DEARDORFF\n\n```\nFiles Affected:\n\ncalc_longwave.c\nmtclim_vic.c\n\nDescription:\n\nPrevious versions of VIC (before 4.1.2) used a full-sky longwave\nformulation taken from two formulas in the Bras hydrology text.  For\nthe new Deardorff full-sky longwave formulation, the dependence on\ncloud fraction is different from the old Bras formulation.   In \n4.1.2 (and 4.1.2.a-b), the new Deardorff formulation did not account\nfor the possibility of user-supplied cloud fraction; if the user\nsupplied cloud fraction as an input forcing, the resulting longwave\nwas wrong.  This has been fixed.\n```\n\nChanged default settings of MTCLIM_SWE_CORR and LW_TYPE to reflect best\ngeneral settings\n\n```\nFiles Affected:\n\ninitialize_global.c\nglobal.param.sample\n\nDescription:\n\nIn light of the findings of Bohn et al. (2012), we have changed the\ndefault setting of MTCLIM_SWE_CORR to FALSE and of LW_TYPE to\nLW_PRATA.  These settings give forcing estimates that are less biased\nin general.\n```\n\nVapor pressure set to 0 if user supplies (QAIR or REL_HUMID) + PRESSURE as\ninput forcings instead of vapor pressure.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nFor the cases of the combination of (QAIR or REL_HUMID) plus PRESSURE\nsupplied as input forcings instead of VP, VIC was supposed to compute\nVP from (QAIR or REL_HUMID) and PRESSURE, then transfer the computed\nVP to the atmos data structure.  This transfer was being skipped, and\nvapor pressure was consequently set to 0 during the simulation.  This\nhas been fixed.\n```\n\nComputed longwave sometimes is extremely large at high latitudes.\n\n```\nFiles Affected:\n\nmtclim_vic.c\n\nDescription:\n\nPreviously (VIC 4.1.2, 4.1.2.a, and 4.1.2.b only), when SHORTWAVE and\nVP were supplied to VIC as input forcings (and LONGWAVE was NOT\nsupplied as a forcing), the incoming longwave radiation computed by\nVIC would in rare cases become extremely large.  This happens only at\nhigh latitudes in winter when the theoretical clear-sky potential\nsolar radiation is very small.  If the supplied VP was large enough,\nit could cause the internal variable t_tmax (clear-sky transmittance)\nto go negative.  This in turn would cause the internal variable\nt_fmax (cloud transmittance) to go negative as well.  This, finally,\nwould cause computed LONGWAVE values to become extremely large, if\nthe LW_CLOUD method was set to DEARDORFF.  This has been fixed.\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.2.a to VIC 4.1.2.b *****\n\n## Bug Fixes:\n\nVIC was unnecessarily requiring WIND to be supplied as an input forcing.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nvicNl_def.h\n\nDescription:\n\nVIC was requiring WIND (or the zonal and meridional components of\nwind, WIND_E and WIND_N) to be supplied as an input forcing.  Now VIC\nallows WIND to be omitted.  If WIND is not supplied as an input\nforcing, VIC will supply a default wind speed, defined in vicNl_def.h\nas DEFAULT_WIND_SPEED and currently set to 3.0 m/s.\n```\n\nCloud fraction tskc was not accounting for the case in which observed incoming\nshortwave is supplied as a forcing.\n\n```\nFiles Affected:\n\nmtclim_vic.c\n\nDescription:\n\nIn the absence of observations, VIC's estimate of cloud fraction, tskc,\nis a function of some intermediate quantities that are computed within\nthe MTCLIM algorithm (in mtclim_vic.c).  These intermediate terms\ncan be computed from either observed daily shortwave radiation (if\navailable) or simulated daily shortwave radiation.  The computation\nof tskc was previously taking place in a part of the code where\nonly the simulated daily shortwave radiation was available.  Thus,\ntskc would not reflect the actual amount of incident shortwave, even\nif observed incident shortwave was supplied as a forcing.\n\nThis has been fixed.  The tskc computation has been moved to another\nlocation in the code where the observed daily shortwave can be\naccessed (if supplied by the user as a forcing).\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29827", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29827/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29827/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.2.a", "id": 29827, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODI3", "tag_name": "VIC.4.1.2.a", "target_commitish": "master", "name": "Release of VIC 4.1.2", "draft": false, "prerelease": false, "created_at": "2012-02-16T22:59:32Z", "published_at": "2013-08-20T19:45:45Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.2.a", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.2.a", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.2 to VIC 4.1.2.a *****\n\n## Bug Fixes:\n\nIncorrect timing of disaggregated radiation and air temperature when daily\nforcings are supplied and off_gmt is 0.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\n\nDescription:\n\nVIC was double-shifting the timeseries of subdaily radiation and\ntemperature in cases in which VIC was *not* given sub-daily incoming\nshortwave as an input forcing *and* soil parameter \"off_gmt\" was not\nset to the local time zone offset (i.e. not set to longitude*24/360).\nThis caused incorrect timing of the diurnal cycle of radiation and\nair temperature.\n\nThis has been fixed.\n```\n\nDisaggregated radiation is constant throughout the day when daily incoming\nshortwave radiation is supplied as an input forcing.\n\n```\nFiles Affected:\n\ninitialize_atmos.c\nmtclim_constants_vic.h\nmtclim_vic.c\nmtclim_wrapper.c\n\nDescription:\n\nWhen VIC was supplied with *daily* incoming shortwave as an input\nforcing variable, VIC would fail to disaggregate this correctly to\nsub-daily time steps; it would simply repeat the daily average for\nevery sub-daily time step.  This has been fixed.  Now VIC will\ncompute a diurnal cycle whose daily average matches the supplied daily\naverage.\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.1 to VIC 4.1.2 *****\n\n## New Features:\n\nCleaned up the sample global parameter file\n\n```\nFiles Affected:\n\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\n\nDescription:\n\nThe large number of options available in VIC 4.1.2 has begun\nto clutter the global parameter file, making it difficult for\nusers to determine which options need to be set.\n\nNow the sample global parameter file groups the various options\ninto several categories, making a clear distinction between\nthose options that need to be changed by the user for each\nsimulation, and those that rarely need to be changed.  Those\noptions that rarely need to be changed are commented out, and VIC\nnow sets those options to the most commonly-used default values.\n```\n\nRemoval of obsolete model options\n\n```\n    Files Affected:\n\n    arno_evap.c\n    canopy_evap.c\n    close_files.c\n    cmd_proc.c\n    compute_zwt.c\n    display_current_settings.c\n    dist_prec.c\n    frozen_soil.c\n    full_energy.c\n    func_canopy_energy_bal.c\n    func_surf_energy_bal.c\n    get_global_param.c\n    global.h\n    global.param.sample\n    initialize_global.c\n    initialize_lake.c\n    initialize_model_state.c\n    initialize_snow.c\n    Makefile\n    open_debug.c (removed)\n    put_data.c\n    read_lakeparam.c\n    read_soilparam_arc.c\n    read_soilparam.c\n    read_veglib.c\n    read_vegparam.c\n    runoff.c\n    store_moisture_for_debug.c (removed)\n    surface_fluxes.c\n    user_def.h\n    vicerror.c\n    vicNl.c\n    vicNl_def.h\n    vicNl.h\n    write_atmosdata.c (removed)\n    write_data.c\n    write_debug.c (removed)\n\n    Description:\n\nWe have removed some of the available model simulation options, due\nto their being unrealistic or rarely used.  These include:\n\n  GF_FULL value of GRND_FLUX_TYPE option.  This setting double-counted\n    the effect of canopy attenuation of radiation.\n  AR_COMBO value of AERO_RESIST_CANSNOW option.  This setting double-\n    counted the effects of canopy snow on aerodynamic resistance.\n  LINK_DEBUG option.  This user_def.h option would print out values of\n    various water balance terms for debugging purposes, but was rarely\n    used and difficult to maintain.\n```\n\nOverhaul of meteorological forcing processing\n\n```\n    Files Affected:\n\n    alloc_atmos.c\n    CalcBlowingSnow.c\ncalc_air_temperature.c\ncalc_longwave.c\ndisplay_current_settings.c\n    get_force_type.c\n    get_global_param.c\n    global.param.sample\n    initialize_atmos.c\n    initialize_global.c\n    Makefile\n    mtclim_constants_vic.h (was mtclim42_vic.h)\n    mtclim_parameters_vic.h (new file)\n    mtclim_wrapper.c (was mtclim42_wrapper.c)\n    mtclim_vic.c (was mtclim42_vic.c)\n    output_list_utils.c\n    put_data.c\n    read_atmos_data.c\n    read_soilparam.c\n    vicNl_def.h\n    vicNl.h\n    write_forcing_file.c\n\n    Description:\n\nNumerous bug fixes and improvements to VIC's meteorological forcing\nprocessing.\n\nBug fixes:\n\nTwo main bugs fixed, both primarily affecting high-latitude grid\ncells:\n\n1. On days having only 1 hour of darkness, the diurnal cycle\n   of temperature was incorrect, skipping that day's minimum\n   temperature and smoothly transitioning to the next day's\n   maximum.\n\n2. The seasonal evolution of the diurnal cycle of solar radiation\n   was always 366 days long, so that the number of daylight hours got\n   increasingly out of phase with the time of year (by one day per\n   non-leap year) as the simulation progressed.  After 20-30 years,\n   the diurnal cycle was substantially different from what it should\n   be.  Above 60 N, the number of days having no sunlight was\n   substantially longer than it should be.\n\nAlso fixed inconsistencies in the timing of meteorological variables\nwhen sub-daily met variables were supplied by the user.  Now, we have\nadopted the following convention:\n      daily supplied forcings are assumed to start/end at midnight in\n    local time; for these forcings, off_gmt in the soil parameter file\n    is ignored\n  sub-daily supplied forcings are assumed to occur relative to the time\n    zone indicated by off_gmt in the soil parameter file\n\nNew features:\n\n    Updated VIC's internal version of the MTCLIM forcing disaggregation\n    functions from version 4.2 (Thornton and Running, 1999) to include\nelements of version 4.3 (Thornton et al 2000).  \n\n    This update includes 6 main changes to the forcing estimation scheme:\n\n    1. Optional correction of downward shortwave for the effect of snow.\n   In the presence of snow, incoming shortwave radiation has been\n   observed to be higher than MTCLIM 4.2's estimates, due to\n   scattering of light from the snow back into the atmosphere (and\n   ultimately back to the ground again).  This correction is optional\n   and is controlled by the new global parameter option MTCLIM_SWE_CORR.\n   If this is set to TRUE, the correction is performed when snow is\n   present on the ground (estimated by a simple degree-day model in\n   the forcing pre-processor).  If FALSE, the correction is not\n   performed (and shortwave is estimated as in previous versions of\n   VIC).  The default value of MTCLIM_SWE_CORR is TRUE.\n\n    2. Optional changes in the iteration between shortwave and VP\n   estimates.  The algorithm for estimating shortwave requires\n   observed VP as an input; the algorithm for estimating VP requires\n   observed shortwave as an input.  Therefore, when neither quantity is\n   observed, MTCLIM 4.2 (and previous versions of VIC) used the\n   Tdew = Tmin approximation to supply the shortwave estimate with\n   an estimate of daily vapor pressure.  Then the resulting shortwave\n   estimate was used to compute a more accurate estimate of Tdew and\n   vapor pressure.  MTCLIM 4.3 imposes an annual aridity criterion for\n   performing this final step; for humid environments (annual PET <\n   2.5 * annual precip) the scheme simply assumes daily Tdew = daily\n   Tmin.  We have found that this behavior introduces a strong\n   positive bias into vapor pressure, and have chosen to make it\n   optional.  Therefore, we have introduced the new global\n   parameter option VP_ITER to control the shortwave-vp iteration.  It\n   can take on the following values:\n\n     VP_ITER_NEVER = never perform the final update of Tdew and VP\n     VP_ITER_ALWAYS = always perform the final update of Tdew and VP\n     VP_ITER_ANNUAL = use the annual aridity criterion (annual PET <\n                          2.5 * annual precip) do decide whether to perform\n                      the final update\n     VP_ITER_CONVERGE = continue iterating between shortwave and vp\n                        until the two values stabilize (this tends\n                        to give almost identical results to\n                        VP_ITER_ALWAYS)\n\n   The default value of VP_ITER is VP_ITER_ALWAYS.\n\n3. To make the sub-daily values of VP more accurate, we have introduced\n   another global parameter option: VP_INTERP.  If set to TRUE, VIC will\n   assign the daily VP value computed by the MTCLIM functions to the\n   time of sunrise on that day, and interpolate linearly between sunrise\n   vapor pressure values of adjacent days.  If set to FALSE, VIC will\n   hold vapor pressure constant over the entire day as in previous\n   versions.  The default value of VP_INTERP is TRUE.\n\n4. Alternative clear-sky longwave algorithms.  We have introduced a\n   new global parameter option: LW_TYPE.  This option determines which\n   algorithm is used to compute clear-sky longwave radiation.\n   Choices are:\n\n     LW_TVA = algorithm of Tennessee Valley Authority (TVA, 1972)\n    (This is what all previous versions of VIC have used.  Our tests\n    indicate that this algorithm is still the best when observed\n    cloud fractions are unavailable and are estimated by MTCLIM,\n    which is the current situation for VIC.)\n     LW_ANDERSON = algorithm of Anderson (1964)\n     LW_BRUTSAERT = algorithm of Brutseart (1975)\n     LW_SATTERLUND = algorithm of Satterlund (1979)\n     LW_IDSO = algorithm of Idso (1981)\n     LW_PRATA = algorithm of Prata (1996) (Our tests indicate that\n    this algorithm is best when observed cloud fractions are\n    supplied as a forcing.)\n\n   Default is set to LW_TVA.\n\n5. Alternative cloud longwave emission algorithms.  We have introduced\n   a new global parameter option: LW_CLOUD.  This option\n   determines which algorithm is used to simulate the effect of\n   cloudiness on incoming longwave radiation.  Choices are:\n\n     LW_CLOUD_BRAS = algorithm composed of equations 2.29 and 2.43\n    from the Bras textbook (Bras, R. L., \"Hydrology, an\n    introduction to hydrologic science\", Addison-Wesley, Reading,\n    Massachusetts, 1990).  This was the algorithm used in all\n    previous releases of VIC. (Our tests indicate that this\n    algorithm introduces substantial temperature-dependent biases\n    in longwave estimates outside of the temperate zone)\n     LW_CLOUD_DEARDORFF = algorithm used in Deardorff (1978) in which\n    cloud_fraction is assumed equal to\n        (1 - actual_shortwave/theoretical_clear_sky_shortwave)\n    and total sky emissivity is represented as the weighted average:\n        cloud_fraction * cloud_emissivity\n        + (1-cloud_fraction) * clear_sky_emissivity\n    (Our tests indicate that this algorithm is superior)\n\n   Default is set to LW_CLOUD_DEARDORFF.\n\n6. Optional threshold for daily precipitation to cause dimming of\n   incoming shortwave radiation.  Previously, any precipitation would\n   cause estimated daily incoming shortwave radiation to dim by 25%.\n   Because the smoothing/resampling methods used in creating gridded\n   forcings can artificially \"bleed\" trace amounts of precipitation\n   into neighboring grid cells, we introduced this threshold to\n   counteract any resulting low biases in shortwave.  This is\n   controlled by the global parameter file option SW_PREC_THRESH,\n   which is the minimum amount of daily precipitation (in mm) that\n   must be exceeded for shortwave to dim.  The default value is set to\n   0.1 mm.\n```\n\nAdded the ability to simulate organic soil.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nfrozen_soil.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\ninitialize_model_state.c\nlakes.eb.c\nprepare_full_energy.c\nread_soilparam_arc.c\nread_soilparam.c\nrunoff.c\nsoil_conduction.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded logic to handle organic soil properties.  Added a new global\nparameter file option, ORGANIC_FRACT. If ORGANIC_FRACT is TRUE, VIC\nassumes that there are 3*Nlayer extra columns in the soil parameter\nfile, containing for each layer the organic fraction and bulk and soil\ndensities of the organic matter.  If ORGANIC_FRACT is FALSE or is\nomitted, VIC assumes that the soil param file does not contain these\nextra columns, and assumes that the soil contains 0 organic matter (as\nin previous versions of VIC).\n\nThe organic fraction in the soil parameter file is the fraction of\nsoil (by volume) that is organic matter.  If this fraction is > 0,\nthen the quartz content and the original bulk and soil densities are\nassumed to apply only to the mineral portion of the soil.  Internally,\nVIC will compute the aggregate bulk and soil densities of the combined\nmineral and organic portions of the soil and compute an aggregate soil\nporosity.\n\nVIC now uses equations taken from Farouki 1986 to compute the thermal\nconductivity and heat capacity of the soil containing organic matter.\nAs organic fraction approaches 0, the soil properties approach those\nof the mineral portion of the soil.\n```\n\nExtended computation of soil temperatures and ground heat flux to all modes of\noperation.\n\n```\nFiles Affected:\n\ncalc_soil_thermal_eqn.c\ncalc_surf_energy_bal.c\ndisplay_current_settings.c\nfrozen_soil.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_global.c\ninitialize_model_state.c\nsoil_conduction.c\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nExtended computation of soil temperatures and ground heat flux to all\nmodes of model operation.  Previously these quantities were only\ncomputed when FROZEN_SOIL was TRUE.\n\nNow soil temperatures, ice content, and ground heat flux are computed\nas follows:\n\n1. If FROZEN_SOIL is TRUE, there is no change to previous model\n    behavior.  By default, soil temperature profile is computed via\n    the finite element method of Cherkauer and Lettenmaier (1999),\n    taking account of the phase change of ice.  (To use the Liang\n    et al (1999) approximation, set QUICK_FLUX to TRUE; however\n    this is not recommended because it doesn't handle the phase\n    change of ice.)  If FULL_ENERGY is also TRUE, the surface\n    temperature is computed via iteration over the surface energy\n    balance; if FULL_ENERGY is FALSE, the surface temperature is\n    set to air temperature.  Soil layer average temperatures and\n    ice contents are computed and available for output.\n\n2. If FROZEN_SOIL is FALSE, the ice phase change is not accounted for\n    and soil layer ice contents are all set to 0.  Unlike previous\n    versions, the soil layer temperatures and ice contents (=0)\n    are now available for output.  The default method of computing\n    soil temperature profile depends on the setting of the\n    QUICK_FLUX option:\n    a. QUICK_FLUX FALSE: use approximation of Liang et al (1999).\n       This is the default method, if QUICK_FLUX is not specified\n       in the global param file.\n    b. QUICK_FLUX TRUE: use finite element method of Cherkauer et\n       al. (1999).\n\nNow that soil temperatures, ice contents, and ground heat fluxes are\nalways computed, the GRND_FLUX option has been removed.\n```\n\nAdded computation of water table position.\n\n```\nFiles Affected:\n\ncompute_zwt.c (new)\ninitialize_lake.c\ninitialize_soil.c\nlakes.eb.c\nMakefile\noutput_list_utils.c\nput_data.c\nread_soilparam.c\nread_soilparam_arc.c\nrunoff.c\nuser_def.h\nvicNl_def.h\nvicNl.c\nvicNl.h\n\nDescription:\n\nAdded computation of the water table position, \"zwt\".  Units are [cm]\nand the position is negative below the soil surface.  To monitor\nthe water table position, we have added the following output variables:\n\n  OUT_ZWT  - water table position [cm] computed by requiring that all\n         layers below it are saturated, i.e. the water table will\n         appear only in the lowest unsaturated layer.\n  OUT_ZWT_LUMPED - water table position [cm] computed by combining all soil\n         layers into a single layer and assuming the soil below\n         is completely saturated.\n\nThe water table's position within a soil layer is computed from soil\nwater retention curves following Letts et al. (2000):\n\n  w(z) = { ((zwt-z)/bubble)**(-1/b), z <  zwt-bubble\n         { 1.0,                      z >= zwt-bubble\nwhere\n  z      = depth below surface [cm]\n  w(z)   = relative moisture at depth z given by\n           (moist(z) - resid_moist) / (max_moist - resid_moist)\n  zwt    = depth of water table below surface [cm]\n  bubble = bubbling pressure [cm]\n  b      = 0.5*(expt-3)\nNote that zwt-bubble = depth of the free water surface, i.e.\nposition below which soil is completely saturated.\n\nThis assumes water in unsaturated zone above water table\nis always in equilibrium between gravitational and matric\ntension (e.g., Frolking et al, 2002).\n\nSo, to find the soil moisture value in a layer corresponding\nto a given water table depth zwt, we integrate w(z) over the\nwhole layer:\n\nw_avg = average w over whole layer = (integral of w*dz) / layer depth\n\nThen,\n  layer moisture = w_avg * (max_moist - resid_moist) + resid_moist\n\nInstead of the zwt defined above, we actually report free\nwater surface elevation zwt* = -(zwt-bubble).  I.e. zwt* < 0\nbelow the soil surface, and marks the point of saturation\nrather than pressure = 1 atm.\n\nTo store the (zwt,moisture) pairs in this relationship for each layer,\ntwo new variables have been added to the soil_con_struct:\n  zwtvmoist_zwt[MAX_LAYER][MAX_ZWTVMOIST]\n  zwtvmoist_moist[MAX_LAYER][MAX_ZWTVMOIST]\nThese are computed in read_soilparam().  Then, in compute_zwt() VIC\ninterpolates between these points to estimate the water table depth\nin each layer given the layer's current soil moisture.\n```\n\nAdded channel inflow from upstream into the lake to the list of forcing\nvariables.  Added lake water balance terms to input/output variables.\n\n```\nFiles Affected:\n\nalloc_atmos.c\nfull_energy.c\nget_force_type.c\ninitialize_atmos.c\ninitialize_lake.c\ninitialize_model_state.c\nLAKE.h\nlakes.eb.c\noutput_list_utils.c\noutput.PILPS-2E.ALMA.template\noutput.TRADITIONAL.410.template\nset_output_defaults.c\nput_data.c\nread_lakeparam.c\nvicNl.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded forcing variable CHANNEL_IN to allow channel flow from\nupstream grid cells to be an input into the lake.  This variable\nis ignored if LAKES is set to FALSE or the lake/wetland tile has 0\narea.  CHANNEL_IN must be in units of cubic meters [m3] per forcing\ntime step (or cubic meters per second [m3/s] if ALMA_INPUT is TRUE).\n\nSeveral output variables have been added to aid in tracking the\nlake water budget.  The complete set of lake water budget variables\nis (in mm over grid cell area):\n\n  OUT_LAKE_BF_IN    baseflow into lake from catchment\n  OUT_LAKE_BF_OUT   baseflow out of lake\n  OUT_LAKE_CHAN_IN  channel inflow into lake\n  OUT_LAKE_CHAN_OUT channel outflow from lake\n  OUT_LAKE_DSTOR    change in lake moisture storage (liquid plus\n                ice cover)\n  OUT_LAKE_DSWE     change in snowpack on top of lake ice\n  OUT_LAKE_EVAP     (was OUT_EVAP_LAKE)\n  OUT_PREC      (already existed)\n  OUT_LAKE_RCHRG    recharge from lake to wetland\n  OUT_LAKE_RO_IN    runoff into lake from catchment\n  OUT_LAKE_VAPFLX   sublimation from lake snow\nThese same variables exist in units of volume (m**3):\n  OUT_LAKE_BF_IN_V  baseflow into lake from catchment\n  OUT_LAKE_BF_OUT_V baseflow out of lake\n  OUT_LAKE_CHAN_IN_V    channel inflow into lake\n  OUT_LAKE_CHAN_OUT_V   channel outflow from lake\n  OUT_LAKE_DSTOR_V  change in lake moisture storage (liquid plus\n                ice cover)\n  OUT_LAKE_DSWE_V   change in snowpack on top of lake ice\n  OUT_LAKE_EVAP_V   evap from lake\n  OUT_LAKE_PREC_V   (note the \"LAKE\" in the name)\n  OUT_LAKE_RCHRG_V  recharge from lake to wetland\n  OUT_LAKE_RO_IN_V  runoff into lake from catchment\n  OUT_LAKE_VAPFLX_V sublimation from lake snow\n\nThis change also involved changing how lake fluxes are represented\ninternally in VIC.  They are now represented as volumes (m3) per step.\nThis allows better handling of cases in which the lake shrinks to 0\narea.\n```\n\nAdded the output variable OUT_LAKE_AREA_FRAC, the lake surface area as a\nfraction of the grid cell area.\n\n```\nFiles Affected:\n\noutput_list_utils.c\nput_data.c\nvicNl_def.h\n\nDescription:\n\nAdded the output variable OUT_LAKE_AREA_FRAC, which tracks the lake\nsurface area as a fraction of the grid cell area.  This allows quick\ncomparison of VIC outputs with lake area observations (e.g. from\nremote sensing).\n```\n\nAdded validation of b_infilt\n\n```\nFiles Affected:\n\nread_soilparam.c\n\nDescription:\n\nVIC now checks to make sure b_infilt > 0.  If the value is <= 0,\nVIC exits with an error message.\n```\n\nRemoved MIN_LIQ option.\n\n```\nFiles Affected:\n\narno_evap.c\nfrozen_soil.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_soil.c\nlakes.eb.c\nrunoff.c\nsoil_conduction.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nThis option was intended to allow a dynamic (temperature-dependent)\nlower bound on liquid soil moisture, based on the principle that, even\nat very low temperatures, some moisture remains unfrozen.  However,\nit ended up being unnecessary and its implementation introduced\nundesirable complexity into the code.  In addition, it contained a bug\nthat allowed soil moisture to fall below residual moisture level.\nTherefore this feature has been removed.\n```\n\n## Bug Fixes:\n\nUsers can inadvertently choose an unstable soil temperature scheme\n\n```\nFiles Affected:\n\nget_global_param.c\ninitialize_global.c\ninitialize_model_state.c\nnewt_raph_func_fast.c\n\nDescription:\n\nPreviously VIC's default soil temperature scheme when\nFROZEN_SOIL=TRUE was an explicit scheme whose stability\nwas not guaranteed.  VIC has had an optional implicit\nscheme but this was not turned on unless the user chose\nit.  This led to users inadvertently running VIC with\nan unstable temperature scheme under certain combinations\nof model time step and thermal node spacing.\n\nThis has been fixed.  Now the implicit scheme is turned\non by default (IMPLICIT=TRUE by default when FROZEN_SOIL\nis TRUE).  The implicit scheme is stable for all combinations\nof model time step and thermal node spacing.  Because this\ncan slow down VIC simulations in some cases, this option\ncan still be overridden by setting IMPLICIT to FALSE in the\nglobal parameter file.  However, if the user does this,\nVIC now checks to see if the simulation's model time step\nand thermal node spacing are in the stable region; if not,\nVIC aborts with an error message.\n```\n\nClarified description and variable names in SPATIAL_SNOW option\n\n```\nFiles Affected:\n\ncalc_snow_coverage.c\ncalc_surf_energy_bal.c\nice_melt.c\ninitialize_lake.c\ninitialize_snow.c\nread_soilparam_arc.c\nread_soilparam.c\nsolve_snow.c\nvicNl_def.h\nwrite_snow_data.c\n\nDescription:\n\nThe parameter for the snow pack depth distribution was previously\nnamed \"depth_full_snow_cover\".  However, this parameter's function\nwas actually to represent the slope of the snow pack depth\ndistribution.  If we define \"depth_thresh\" to be the minimum snow\npack depth below which the coverage < 1, then\n  depth_full_snow_cover MUST = 2*depth_thresh\nThis was very misleading and caused users some confusion.  Therefore\nwe have changed the name of the parameter to \"max_snow_distrib_slope\".\nIn addition, other associated variables in the snow_data structure\nhave been renamed accordingly (max_swq became max_snow_depth and\nswq_slope became snow_distrib_slope).\n```\n\nFixed incorrect diurnal radiation cycle at high latitudes\n\n```\nFiles Affected:\n\nSee \"Overhaul of meteorological forcing processing\" under\nnew features\n\nDescription:\n\nSee \"Overhaul of meteorological forcing processing\" under\nnew features.  Two main bugs fixed, both primarily affecting\nhigh-latitude grid cells:\n  1. On days having only 1 hour of darkness, the diurnal cycle\n     of temperature was incorrect, skipping that day's minimum\n     temperature and smoothly transitioning to the next day's\n     maximum.\n  2. The seasonal evolution of the diurnal cycle of solar radiation\n     was always 366 days long, so that the number of daylight hours got\n     increasingly out of phase with the time of year (by one day per\n     non-leap year) as the simulation progressed.  After 20-30 years,\n     the diurnal cycle was substantially different from what it should\n     be.  Above 60 N, the number of days having no sunlight was\n     substantially longer than it should be.\n```\n\nFixed incorrect computation of snow cover fraction over lake/wetland\n\n```\nFiles Affected:\n\nlakes.eb.c\n\nDescription:\n\nPreviously VIC didn't compute snow cover fraction correctly\nover the lake/wetland tile.  This has been fixed.\n```\n\nFixed VIC's inability to handle the case where some cells have lakes and\nothers don't.\n\n```\nFiles Affected:\n\nfull_energy.c\nread_initial_model_state.c\nread_lakeparam.c\nvicNl_def.h\nwrite_model_state.c\n\nDescription:\n\nVIC 4.1.1 and previous versions of 4.1.2 were unable to handle the\ncase in which some cells contain lakes and others don't.  If\noptions.LAKES was TRUE, all cells were required to have a valid\nvalue of lake_idx to indicate which veg tile contained a lake,\neven if no lakes existed in the cell.\n\nThis has been fixed.  Now, users can specify a cell that has no\nlakes by setting lake_idx to -1 in the lake parameter file.  In\nthis case, VIC will ignore all other lake parameters for the cell\nand set the cell's lake area permanently to 0.\n```\n\nFixed bugs in declarations of frost_fract for SPATIAL_FROST TRUE\n\n```\nFiles Affected:\n\nlakes.eb.c\nput_data.c\nvicNl.h\n\nDescription:\n\nDeclarations for frost_fract were wrong or missing.  This has\nbeen fixed.        \n```\n\nFixed various lake water balance errors.\n\n```\nFiles Affected:\n\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_soil.c\nLAKE.h\nlakes.eb.c\nrunoff.c\nvicNl.h\n\nDescription:\n\nNow calls to get_depth() are all consistent, using *liquid* water\nvolume instead of total volume (thus ldepth is always the liquid water\ndepth).  Lake ice area is not allowed to increase if ice area > liquid\narea.  Ice cover is now treated like a \"skin\" on top of the liquid\n(regardless of its thickness).  Ice is assumed to be completely buoyant,\ni.e. none of the ice is below the water line.  If ice completely covers\nthe lake and the liquid part of the lake shrinks, the ice is assumed to\nbend like a blanket, so that the outer edges now rest on land but the\ncenter rests on top of the liquid.  The lake \"area\" is still considered\nto be the ice cover in this case.  Baseflow out of the lake is only\nallowed in the area of the lake containing liquid.  The edges of the ice\nsheet are assumed to be vertical, i.e. the surface area of the top of the\nice sheet is equal to the surface area of the bottom of the ice sheet.\nThis fixes water balance errors arising from inconsistent estimates of\nlake ice area.  Also fixed bugs in computation of lake->recharge.                \n```\n\nFixed incorrect snow albedo decay for southern hemisphere.\n\n```\nFiles Affected:\n\nLAKE.h\nlakes.eb.c\nsolve_snow.c\n\nDescription:\n\nPreviously the computation of the USACE snow albedo decay would\nonly switch from accumulation to melt curves for dates between\nMarch 1 and October 1.  These dates are only appropriate for the\nnorthern hemisphere.  This has been fixed so that the reverse\ncondition must be met in the southern hemisphere.\n```\n\nSaturated area fraction incorrect for SPATIAL_FROST = TRUE.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nPreviously the computation of cell.Asat occurred in the wrong\nplace in runoff.c so that it was only correct for SPATIAL_FROST\n= FALSE.  This has been fixed.\n```\n\nState file handles are never closed.\n\n```\nFiles Affected:\n\nvicNl.c\n\nDescription:\n\nPreviously VIC was not closing the intial and final state files.\nThis has been fixed.\n```\n\nVIC aborts with soil temperature node moisture > max moisture.\n\n```\nFiles Affected:\n\nsoil_conduction.c\n\nDescription:\n\nPreviously VIC would abort the simulation if soil temperature node\nmoisture ever became greater than the maximum allowable moisture.\nThis behavior has been replaced with a resetting of node moisture to\nthe maximum.  This is not intended to be a permanent fix; it simply\nallows simulations to continue with minimal errors.  A more robust\nfix is planned.\n```\n\nInitial lake depth < mindepth is reset to mindepth.\n\n```\nFiles Affected:\n\nread_lakeparam.c\n\nDescription:\n\nThe validation of initial lake depth was incorrectly resetting depth\nto mindepth if initial depth < mindepth.  This has been fixed.\n```\n\nSoil moisture falls below residual moisture level in some cases.\n\n```\nFiles Affected:\n\n(see \"Removed MIN_LIQ option\" under \"New Features\")\n\nDescription:\n\nThe MIN_LIQ option contained a bug that allowed soil moisture to fall\nbelow residual moisture level in some cases.  This feature has been\nremoved (see \"Removed MIN_LIQ option\" under \"New Features\").\n```\n\nIncorrect calculation of grnd_flux, deltaH, and fusion for EXP_TRANS=TRUE.\n\n```\nFiles Affected:\n\narno_evap.c\ncalc_surf_energy_bal.c\nfrozen_soil.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_model_state.c\nmodify_Ksat.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl.h\n\nDescription:\n\nIn 4.1.1, the calculation of grnd_flux, deltaH, and fusion involved\nthe assumption that soil thermal nodes 1 and 2 were at depths of\n1*soil_con->depth[0] and 2*soil_con->depth[0], respectively.  This is\nnot true for exponential node spacing (EXP_TRANS=TRUE) or any other\nnode spacing scheme in general.  This has been fixed to allow\naribitrary node spacing.\n\nThe temperature profile given by the exponential node spacing is now\ninterpolated to find the temperatures at the same depths as for the\nlinear node spacing, i.e.  the boundary between the first and second\nsoil hydrologic layers.  This makes the computation of grnd_flux,\ndeltaH, and fusion consistent across all modes of operation (linear\nand exponential node spacing AND the QUICK_FLUX approximation), since\nnow they all apply to the same control volume (first soil layer).\n```\n\nSimulation log messages appear out of order.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nput_data.c\n\nDescription:\n\nIn 4.1.1, some messages sent to the screen would appear out of order\nwhen saved to a log file.  This has been fixed by redirecting messages\nfrom stdout to stderr.\n```\n\nFixed typo in setting of fallback T value for the soil T profile.\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nIn 4.1.1, the fallback temperature was erroneously set to \"oldT\",\nwhich is the T value of the previous iteration, but not the value\nfrom the beginning of the time step (except on the first iteration).\nNow, \"oldT\" has been replaced by \"T0\".\n```\n\nFixed typo in initialization of fallback counts for the soil T profile.\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nIn 4.1.1, only the fallback counts for nodes 1 to Nnodes-2 were\ninitialized (to 0).  Now initialization is done for nodes 0 to\nNnodes-1.\n```\n\nFixed various water balance errors in the lake model and added logic to handle\nthe case when lake area goes to 0.\n\n```\nFiles Affected:\n\nfull_energy.c\nlakes.eb.c\nput_data.c\nvicNl_def.h\n\nDescription:\n\nIn 4.1.1, the lake model would generate small water balance errors\nwhen lake area would change, particularly in the presence of lake ice.\nIn addition, lake water balance terms would become NaN when lake\nfraction went to 0.  These errors have been fixed.\n```\n\nReplaced \"assert\" statements with \"if\" statements.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\ncalc_surf_energy_bal.c\nice_melt.c\nsnow_intercept.c\nsnow_melt.c\nwater_energy_balance.c\nwater_under_ice.c\n\nDescription:\n\nPrevious versions of these files contain \"assert\" statements, which\ncause the model to abort if the assertions are not true.  These have\nbeen replaced by \"if\" statements, so that the offending conditions can\nbe remedied and the simulation can continue.\n```\n\nRemoved save_data structure initialization from initialize_model_state().\n\n```\nFiles Affected:\n\ninitialize_model_state.c\nput_data.c\nvicNl.c\nvicNl.h\n\nDescription:\n\nFor each time step, the initial values of the major moisture storage\nterms are stored in the save_data structure, so that the difference\nbetween final and initial states can be computed and written to\noutput.  In earlier versions, these variables needed to be initialized\nin initialize_model_state() so that they contained valid values before\nthe first call to put_data().  This is no longer necessary, as the\nmodel now initializes all output variables with an initial call to\nput_data() before the simulation begins.  Thus, the initialization\nhas been removed from initialize_model_state().\n```\n\nFixed typo in condition for reading Wdew values.\n\n```\nFiles Affected:\n\nread_initial_model_state.c\n\nDescription:\n\nIn 4.1.1, Wdew values were expected for even the bare soil veg tile,\ndespite the fact that these values are not saved for bare soil in the\nfunction write_model_state().  This has been fixed; Wdew is no longer\nexpected for the bare soil tile.\n```\n\nFixed bug in runoff computation when soil column is completely saturated.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nrunoff() first computes total runoff for the timestep, and then computes\nhourly vertical water movement through the soil column.  During the\nhourly computations, if the entire soil column becomes saturated, some\ndownward-moving water may be \"regurgitated\" back up to the surface,\nwhere it is added to the total runoff for the time step.\n\nIn 4.1.1, the hourly infiltration into the soil column is computed\nusing runoff[frost_area].  However, in the case of complete saturation,\nthe regurgitated excess water is added to runoff[frost_area] within\nthe hourly loop, so that the next hour's infiltration is computed\nusing a larger value of runoff[frost_area].  This leads to water\nbalance errors.  This has been fixed in 4.1.2.  Now, hourly\ninfiltration is only computed relative to the original estimate of\nrunoff[frost_area], before any regurgitated excess water is added to\nit.\n```\n\nFixed typo in writing of number of lake active nodes to ASCII-format state file.\n\n```\nFiles Affected:\n\nwrite_model_state.c\n\nDescription:\n\nFixed a typo in the writing of the number of lake active nodes to the\nstatefile, for ASCII format.  The error involved omitting a space that\nwould separate the active node number from the temperature of the\ndeepest soil thermal node, preventing the state file from being read\ncorrectly in subsequent VIC runs.\n```\n\nAdded TFALLBACK logic to soil thermal profile solution for case in which max\niterations are exceeded.\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nIn 4.1.1, errors due to exceeding the maximum number of iterations in\nthe soil temperature profile computation in calc_soil_thermal_fluxes()\nwere not handled by the TFALLBACK option.  Logic to handle this case\nhas now been added.\n```\n\nFixed bugs in initialization of various TFallback counts and flags.\n\n```\nFiles Affected:\n\ninitialize_snow.c\nfrozen_soil.c\n\nDescription:\n\nIn 4.1.1, the number of Tfallbacks reported to the screen sometimes\ncame out negative; this has been fixed for fallbacks in snow surface\ntemperature and soil temperature profile.\n```\n\nMisc fixes to handling of aerodynamic resistance.\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\nsurface_fluxes.c\n\nDescription:\n\nReplaced ra_under with Ra_used[0] in func_surf_energy_bal.c - this\nshould not change behavior; it simply cleans up the code a tad.\n\nAdded logic to surface_fluxes.c to handle cases when aero_cond and\naero_resist are 0 or very large.\n```\n\nAdded hack to prevent runaway cold nose in soil temperature profile.  This is\nonly enabled when options.TFALLBACK = TRUE.\n\n```\nFiles Affected:\n\nfrozen_soil.c\n\nDescription:\n\nIn 4.1.1, the soil temprature computation could sometimes encounter a\nrunaway \"cold nose\", in which one node was colder than its neighbors\nand continued to grow colder than its neighbors over time, due to\ninstabilities in the soil heat equation (in the presence of ice in the\nsoil).  A rigorous numerical solution to this problem has not yet been\nimplemented, but this hack causes the offending node to be reset to\nthe average of its neighbors' temperatures as soon as the runaway\nbehavior is detected.  We hope to implement a more rigorous solution\nto this problem in future releases.\n```\n\nSimplified arguments lists of various functions.\n\n```\nFiles Affected:\n\narno_evap.c\nfunc_surf_energy_bal.c\ninitialize_atmos.c\nsnow_intercept.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl.c\nvicNl.h\n\nDescription:\n\nReplaced individual forcing and date/time variables in argument\nlists of solve_snow() and snow_intercept() with the dmy and atmos\ndata structures.  Removed several unused variables from the arg list\nof arno_evap().  Replaced individual soil_con variables in arg list\nof initialize_atmos() with the soil_con structure.\n```\n\nReplaced GLOBAL_LAI option with 2 options: VEGPARAM_LAI and LAI_SRC.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\nread_veglib.c\nread_vegparam.c\nvicNl_def.h\n\nDescription:\n\nIn previous versions, the GLOBAL_LAI option caused some confusion.\nGLOBAL_LAI=TRUE indicated that LAI values should be read from the veg\nparameter file (usually because they vary globally), and FALSE\nindicated that LAI values should be read from the veg library (meaning\nthey were constant across the globe).  But the natural interpretation\nof \"GLOBAL_LAI=TRUE\" is that LAI values are globally constant.  In\naddition, the presence of LAI values in the veg param file was\ndictated by the setting of GLOBAL_LAI.  If the user wanted to have VIC\nread LAI values from the veg library, GLOBAL_LAI would need to be\nFALSE, and the veg param file would need to have its LAI values\nremoved.  This linkage of veg param file format and where VIC was\nlooking for LAI values seemed unnecesary.\n\nThere are now 2 options controlling these 2 separate aspects of LAI.\nVEGPARAM_LAI controls the *format* of the veg param file.  Independent\nof this, LAI_SRC controls *where* VIC looks for LAI values.  This way,\n1) the user can switch between the two sources of LAI values without\nhaving to change the veg param file, and 2) the meanings of these\noptions are more clear than the old GLOBAL_LAI option.\n\nThe old GLOBAL_LAI setting has been maintained for backwards-\ncompatibility, i.e. if VIC encounters GLOBAL_LAI in the global\nparam file, it will set VEGPARAM_LAI and LAI_SRC appropriately.\n```\n\nChanged default number of soil layers from 2 to 3 (the most common\nconfiguration).\n\n```\nFiles Affected:\n\ninitialize_global.c\n\nDescription:\n\nThe default number of soil layers has been changed from 2 to 3 (the\nmost common configuration).  This will only affect users who have\nomitted this setting from their global parameter files.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29822", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29822/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29822/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.1", "id": 29822, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODIy", "tag_name": "VIC.4.1.1", "target_commitish": "master", "name": "Release of VIC 4.1.1", "draft": false, "prerelease": false, "created_at": "2009-10-20T18:42:07Z", "published_at": "2013-08-20T19:40:15Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.1", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.1", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.0 beta r5 to VIC 4.1.1 *****\n\n## New Features:\n\nModified reporting of aerodynamic resistance in output files.\n\n```\nFiles Affected:\n\nfull_energy.c\nfunc_canopy_energy_bal.c\nfunc_surf_energy_bal.c\noutput_list_utils.c\nput_data.c\nsurface_fluxes.c\nvicNl_def.h\nwetland_energy.c\n\nDescription:\n\nReplaced the existing variables aero_resist_used and Ra_used with\narrays of two elements each; [0] corresponds to surface values\n(bare soil or non-overstory veg; with snow or snow-free) and [1]\ncorresponds to overstory or non-overstory veg.  For non-overstory\nveg, elements [0] and [1] are the same.\n\nAdded the following output variables to store the average aerodynamic\nconductance and resistance of the grid cell corresponding to elements\n[0] and [1], respectively: OUT_AERO_COND1, OUT_AERO_COND2,\nOUT_AERO_RESIST1, and OUT_AERO_RESIST2.  Changed the computation\nof OUT_AERO_COND and OUT_AERO_RESIST to be \"scene\" values, i.e.\nveg tiles containing overstory contribute their overstory (element\n[1]) values, and non-overstory veg tiles contribute their surface\n(element [0]) values.  Earlier versions of VIC simply output the\nvalues of AERO_COND and AERO_RESIST computed latest during the time\nstep (whether from surface or overstory).\n```\n\nAdded AERO_RESIST_CANSNOW option.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nfunc_canopy_energy_bal.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\nvicNl_def.h\n\nDescription:\n\nThis option allows the user to control how aerodynamic resistances\nin the overstory are corrected for the presence of snow in the canopy.\n\nPossible values are:\n  AR_406: Multiply aerodynamic resistance by 10 for latent heat\n      calculation but NOT for sensible heat, and do NOT apply\n      stability correction, as in VIC 4.0.6 and earlier.\n      Additionally, use surface aero_resist for ET when no\n      no snow in canopy.\n  AR_406_LS: Multiply aerodynamic resistance by 10 for both latent\n      and sensible calculations, but do NOT apply stability\n      correction.  Additionally, use surface aero_resist for\n      ET when no no snow in canopy.\n  AR_406_FULL: Multiply aerodynamic resistance by 10 for both latent\n      and sensible calculations, but do NOT apply stability\n      correction.  Always use canopy aero_resist for ET.\n  AR_410: Apply stability correction but do not multiply by 10, as in\n      VIC 4.1.0.  Always use canopy aero_resist for ET.\n  AR_COMBO: Apply stability correction and multiply resulting resistance\n      by 10.  Always use canopy aero_resist for ET.\n\nVIC 4.1.0 differed from VIC 4.0.6 (and earlier) in the computation\nof aerodynamic resistances in snow-filled canopy.  This new option\nallows backwards-compatibility with both of these model versions, as\nwell as the new \"AR_406_LS\", \"406_FULL\" and \"AR_COMBO\" options, for\ncomparison.  The default is set to AR_410.\n```\n\nReinstated the COMPUTE_TREELINE option, with option to supply the average July\nair temperature.\n\n```\nFiles Affected:\n\ncompute_treeline.c\ndisplay_current_settings.c\nget_global_param.c\nglobal.param.sample\ninitialize_atmos.c\ninitialize_global.c\nread_snowband.c\nread_soilparam_arc.c\nread_soilparam.c\nread_vegparam.c\nuser_def.h\nvicNl.c\nvicNl.h\nvicNl_def.h\n\nDescription:\n\nCOMPUTE_TREELINE:\n\nThis option revives the treeline elevation computation that is a\ncurrent feature of VIC 4.0.x.  If set to TRUE this flag will\nforce the VIC model to compute the elevation of the tree line,\nbased on elevation at which the average annual July air temperature\nis at or below 10C.  All snowbands above this evelation are then\nassumed to be above the treeline, and vegetation types with\noverstory are removed from the snow band average variables.  If no\nnon-overstory vegetation types exist in an above-treeline band,\nthe band will be treated as if it consists of a default vegetation\ntype, specified by the user.\n\nTo use this option, insert the following line into the global\nparameter file:\n  COMPUTE_TREELINE  n\nwhere n is the id number of the desired default vegetation type to use\nwhen no non-overstory vegetation types exist in the band.  To specify\nbare soil, set n to a negative number.\n\nTo deactivate treeline calculation, change the line in the global\nparameter file to\n  COMPUTE_TREELINE FALSE\nor remove the line from the global control file.\n\nWARNING #1: Since the model does not store default root zone\ndistributions, the default vegetation type will use the\nvalues from the last defined vegetation type for the current\ngrid cell (i.e. veg type N-1, prior to the addition of the\nnew vegetation type).\n\nWARNING #2: If you are using GLOBAL_LAI, than the LAI and\ndew storage terms for the default vegetation type will be set\nto the values used by the last occurrence of the default\nvegetation type.\n\nJULY_TAVG_SUPPLIED:\n\nThe default behavior of VIC is to compute the average July temperature\nfrom the meteorological input forcings, over the time span of the\nsimulation.  One drawback to this behavior is that, for short\nsimulations over different periods of time, the average July\ntemperature can vary enough to change which elevation bands are\nconsidered to be above the treeline.\n\nTherefore, if desired, the user can specify the average July\ntemperature for each grid cell by taking the following 2 steps:\n  1. Add each grid cell's average July air temperature to the soil\n     parameter file, as the final field on each line.\n  2. Set JULY_AVGT_SUPPLIED = TRUE in the global parameter file\n\nThe JULY_AVG_SUPPLIED option is ignored if COMPUTE_TREELINE is FALSE.\n```\n\nAdded OUT_VPD output variable.\n\n```\nFiles Affected:\n\noutput_list_utils.c\nput_data.c\nvicNl_def.h\nwrite_forcing_file.c\n\nDescription:\n\nAdded the output variable OUT_VPD to track vapor pressure deficit.\n```\n\nAdded OUT_ASAT output variable.\n\n```\nFiles Affected:\n\nfull_energy.c\noutput_list_utils.c\nput_data.c\nrunoff.c\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\nwetland_energy.c\n\nDescription:\n\nAdded the output variable OUT_ASAT to track saturated area.\n```\n\nNew MIN_LIQ option, with fixes to min_liq formulation.\n\n```\nFiles Affected:\n\narno_evap.c\ndisplay_current_settings.c\nfrozen_soil.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\ninitialize_model_state.c\ninitialize_soil.c\nlakes.eb.c\nrunoff.c\nsoil_conduction.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nMade use of min_liq (instead of residual moisture) optional, via\noptions.MIN_LIQ.  If MIN_LIQ is FALSE (or omitted) in global\nparameter file, all equations that depend on liquid soil moisture\nuse residual moisture as their absolute minimum liquid water\ncontent.  If MIN_LIQ is TRUE, all of these equations use min_liq\nas their absolute minimum liquid water content.  Min_liq is\ncomputed in soil_conduction.c as residual moisture multiplied\nby the max_unfrozen_water content at the current temperature.\n\nMade min_liq formulation more consistent across the model code.\nAdded min_liq to the layer_struct so that this temperature-dependent\nquantity can be computed once per time step and communicated to all\nfunctions that look at soil moisture.           TJB\n```\n\nNew PLAPSE option, which lapses air pressure (and density) by grid cell average elevation.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nglobal.param.sample\ninitialize_atmos.c\ninitialize_global.c\nvicNl_def.h\n\nDescription:\n\nPreviously, when air pressure was not supplied in the input forcings,\nVIC would set it equal to a constant 95.5 kPa.  Now, if options.PLAPSE\nis TRUE, and if air pressure is not supplied, VIC computes it by\nlapsing sea level pressure by grid cell average elevation.  Air\ndensity is handled the same way.            TJB\n```\n\nNew GRND_FLUX_TYPE option, with fixes to deltaH and fusion equations.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nfunc_surf_energy_bal.c\nget_global_param.c\nglobal.param.sample\ninitialize_global.c\nsurface_fluxes.c\nvicNl_def.h\n\nDescription:\n\nCorrected deltaH and fusion terms of surface energy balance, by taking\nsurf_atten into account, as in Liang et al 1999.  Added GRND_FLUX_TYPE\noption, to allow backwards compatibility with versions 4.0.6 and\n4.1.0.\n\nPossible values are:\n  GF_406: use (flawed) formulas for ground flux, deltaH, and fusion\n          from VIC 4.0.6 and earlier\n  GF_410: use formulas from VIC 4.1.0 (ground flux is correct,\n          but deltaH and fusion ignore surf_atten)\n  GF_FULL: use correct ground flux formula from VIC 4.1.0 and\n          also take surf_atten into account in deltaH and fusion\nGF_FULL is the default value.\n```\n\nAdded validation of Campbell's expt and bubble pressure.\n\n```\nFiles Affected:\n\nread_soilparam.c\n\nDescription:\n\nPreviously, VIC did not check to see if \"nodata\" values such as -9999\nwere supplied in the soil parameter file for the Campbell's expt and\nbubble pressure parameters.  These values would produce \"nan\" in\ncomputations of soil hydraulic conductivity and soil ice content.  This\nis especially insidious in the case of bubble pressure, as it is not\nneeded for the water balance mode, and therefore users often set it to\n\"nodata\" values for water balance mode runs.  Subsequently using such a\nsoil parameter file for a full-energy balance or frozen soil simulation\nwould cause the model to crash without the cause being clear.  Now, the\nvalidation in read_soilparam() prevents this case.\n\nNote: read_soilparam_arc() computes these quantities internally and\nalready validates their values.\n```\n\nAdded TFALLBACK option, to continue with previous temperature when energy\nbalance iteration fails to converge.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\ncalc_surf_energy_bal.c\ndist_prec.c\ndisplay_current_settings.c\nfrozen_soil.c\nfunc_surf_energy_bal.c\nget_global_param.c\nglobal.param.sample\nice_melt.c\ninitialize_global.c\ninitialize_lake.c\ninitialize_model_state.c\nlakes.eb.c\noutput_list_utils.c\nput_data.c\nroot_brent.c\nsnow_intercept.c\nsnow_melt.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nAdded options.TFALLBACK, which can take the following values:\n  TRUE: If energy balance solution fails to converge, use previous\n        T value and continue\n  FALSE: If energy balance solution fails to converge, report an\n         error\nDefault = TRUE.\n\nCurrently, the following temperature variables are affected by the\nTFALLBACK option:\n    snow.surf_temp  : snow pack surface temperature\n    energy.T[]      : soil T profile nodes\n    energy.Tsurf    : surface temperature\n    energy.Tcanopy  : temperature of canopy air\n    energy.Tfoliage : temperature of canopy snow\n\n    For each grid cell, for each of the above variables, VIC will count\nthe number of instances when the previous step's T was used.  These\ntotals will be reported at the end of the grid cell's simulation.\n\nIn addition, VIC tracks occurrences of T fallbacks through time via\n\"flag\" variables.  For each T variable, there is a corresponding T\nfallback flag, which is set to 1 if, in a given time step, the\nprevious step's T was used in that time step, and 0 otherwise.  This\nholds for each veg tile / elevation band combination in the grid cell.\n\nThese time series of occurrences of T fallbacks can be reported in\noutput files via the following 4 new output variables:\n  OUT_SOILT_FLAG = array of flags, one for each soil T node\n  OUT_SURFT_FLAG = flag for Tsurf\n  OUT_SNOWT_FLAG = flag for snow.surf_temp\n  OUT_TCAN_FLAG = flag for Tcanopy\n  OUT_TFOL_FLAG = flag for Tfoliage\nEach of these contain the AVERAGE over the entire grid cell and over\nthe output time interval (if aggregating temporally) of the flag\nvalues.  Thus, these are NOT integers but fractions ranging from 0 to\n1.\n\nAdditionally modified root_brent to continue attempting to bracket\nroot if one bound encounters undefined values/ERROR code from target\nfunction.\n```\n\nAdded computation of 6 types of potential evaporation.\n\n```\nFiles Affected:\n\narno_evap.c\nCalcAerodynamic.c\ncanopy_evap.c\ncompute_pot_evap.c (new)\nfull_energy.c\nglobal.h\ninitialize_lake.c\ninitialize_model_state.c\nlakes.eb.c\nMakefile\noutput_list_utils.c\npenman.c\nput_data.c\nread_soilparam_arc.c\nread_soilparam.c\nread_veglib.c\nread_vegparam.c\nsurface_fluxes.c\nvicNl.c\nvicNl_def.h\nvicNl.h\nwetland_energy.c\n\nDescription:\n\nAdded computation of potential evaporation for 6 different reference\nland cover types, along with new output variables for reporting them:\n  OUT_PET_SATSOIL = pot evap from saturated soil\n  OUT_PET_H2OSURF = pot evap from open water surface\n  OUT_PET_SHORT   = pot evap from short reference crop (clipped grass)\n  OUT_PET_TALL    = pot evap from tall reference crop (alfalfa)\n  OUT_PET_NATVEG  = pot evap from current vegetation with canopy\n            resistance computed in the usual manner except\n            for the absence of water limitation\n  OUT_PET_VEGNOCR = pot evap from current vegetation with canopy\n            resistance set to 0\n\nFour \"default\" veg library classes were created (defined in global.h)\nso that veg characteristics for these landcover types (such as\nroughness length, etc) are present regardless of the contents of the\nexternally-supplied vegetation library.  As a result, bare soil no\nlonger is treated as an exception within the code, but as a legitimate\nclass having its own area fraction Cv, etc.  This simplifies some of\nthe loops in the code.\n\nIn order to compute potential evaporation for these different cases,\nseveral different aerodynamic resistances also needed to be computed.\nRather than store all of these in the cell_data structure, the\n\"aero_resist\" array of the cell_data structure was removed and\nthe previously-named \"aero_resist_used\" array was renamed to\n\"aero_resist\".  Now, the pre-stability-correction values of\naero_resist are stored in a temporary internal array and not reported.\n\nFinally, computation of canopy resistance was moved out of penman()\nand into a separate function calc_rc() within the same file.\n```\n\nSimplified argument lists of runoff() and surface_fluxes().\n\n```\nFiles Affected:\n\nfull_energy.c\nrunoff.c\nsurface_fluxes.c\nvicNl.h\nwetland_energy.c\n\nDescription:\n\nSimplified the argument lists of runoff() and surface_fluxes() by\nreplacing explicit references to individual cell_data variables by\na single reference to the cell_data structure.\n```\n\nWetland portion of lake/wetland tile is now simulated in full_energy().\n\n```\nFiles Affected:\n\nfree_dist_prcp.c\nfrozen_soil.c\nfull_energy.c\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_soil.c\nLAKE.h\nlakes.eb.c\nmake_dist_prcp.c\nMakefile\nput_data.c\nread_initial_model_state.c\nread_lakeparam.c\nread_soilparam.c\nread_soilparam_arc.c\nread_vegparam.c\nsoil_conduction.c\nvicNl.c\nvicNl_def.h\nvicNl.h\nwetland_energy.c (removed)\nwrite_model_state.c\n\nDescription:\n\nIn previous versions of 4.1.x, the wetland portion of the lake/wetland\ntile was stored in the (N+1)st vegetation tile, and processed in the\n```\n\n`   function wetland_energy(), which was an almost exact duplicate of\n    full_energy().  This created several difficulties, including a) potential\n    conflicts with the COMPUTE_TREELINE option, b) conflicts with the new\n    implementation of bare soil and potential evap, c) hard-coding of\n    wetland vegetation to be equal to the grid cell's first listed cover\n    type, and d) general complexities in maintaining the code/adding new\n    features.\n\n```\nNow, the wetland portion of the lake/wetland tile must be listed in\nthe vegetation parameter file in the same was as all other veg cover\ntypes.  Similarly, the wetland portion of the lake/wetland tile is\nprocessed in full_energy() in the exact same way as all other tiles.\nWetland_energy() has been removed.  Lakemain() has also been removed,\nas the calls to lake-specific functions are now executed directly from\nfull_energy().  To make all of this happen, the index of the veg tile\ncontaining the lake/wetland must be indicated in the lake parameter\nfile (thus, the lake parameter file must contain an additional\nvalue for each grid cell).\n\nUsers may now specify any type of desired vegetation to fill the\nwetland portion of the lake/wetland tile, simply by listing the\ndesired veg cover in the veg param file and placing the index of this\ntile in the lake parameter file.  The user is also free now to create\na new wetland vegetation class in the vegetation library.\n```\n\nState files now contain data for 0-area bands.\n\n```\nFiles Affected:\n\nread_initial_model_state.c\nwrite_model_state.c\n\nDescription:\n\nIn order to ensure that the value of Nbands saved in the state file\naccurately accounted for the number of bands whose states are stored\nin the state file, changed VIC to read/write data for all bands,\nwhether or not their area is 0.\n```\n\n## Bug Fixes:\n\nFixed conflict between PRT_SNOW_BAND option and flexible output configuration.\n\n```\nFiles Affected:\n\nglobal.param.sample\nparse_output_info.c\nput_data.c\nvicNl_def.h\n\nDescription:\n\nThe PRT_SNOW_BAND option exists for backwards-compatibility with older\nversions of VIC.  If the user is using the default output cofiguration,\nand PRT_SNOW_BAND is set to TRUE, it creates \"snowband\" output files.\nHowever, this was not made clear in the documentation; it is possible\nto specify output files containing the snow-band-specific values of\nvariables without setting PRT_SNOW_BAND to TRUE.  However, put_data()\ncontained logic that only allowed it to record snow-band-specific\nquantities if PRT_SNOW_BAND is TRUE, even if the user had specified\nsnow-band-specific output variables in the output files.\n\nTherefore, the logic checking the value of PRT_SNOW_BAND was removed\nfrom put_data().  Additionally, if the user has specified N_OUTFILES\nin the global parameter file, PRT_SNOW_BAND will now be set to FALSE\nby parse_output_info(), just to make sure that PRT_SNOW_BAND only\napplies to the default output case.  Documentation in\nglobal.param.sample and vicNl_def.h has been updated to reflect this\nbehavior.                       TJB\n```\n\nFixed problems in soil temperature solution due to use of dz_node.\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\nfrozen_soil.c\nfunc_surf_energy_bal.c\ninitialize_model_state.c\nlakes.eb.c\nsoil_conduction.c\nvicNl.h\nwetland_energy.c\n\nDescription:\n\nThe addition of the EXCESS_ICE option introduced a new variable,\nZsum_node, to the soil thermal solution code.  This conflicted with\nthe existing variable dz_sum.  Therefore, dz_sum has been replaced\nby Zsum_node in several functions.          KAC via TJB\n```\n\nFixed problem of errors from put_data() not being caught.\n\n```\nFiles Affected:\n\ndist_prec.c\n\nDescription:\n\nModified routine to store put_data() error in ErrorFlag2 and\nreturn a single ERROR value if an error occurs.     KAC via TJB\n```\n\nFixed uninitialized value errors in parse_output_info.c.\n\n```\nFiles Affected:\n\nparse_output_info.c\n\nDescription:\n\nAdded default values for format, typestr, and multstr, so that they\ncan be omitted from global param file.          TJB\n```\n\nFixed inability to read tabs in soil/veg parameter files.\n\n```\nFiles Affected:\n\nread_soilparam.c\nread_vegparam.c\n\nDescription:\n\nAt some point in earlier versions, the functions that read soil/veg\nparameter files were modified to use the \"strtok\" function, and as a\nresult, VIC lost the ability to understand tabs as field separators\nin these files.  This ability has now been restored.    TJB\n```\n\nFixed bugs in snow bands implementation.\n\n```\nFiles Affected:\n\noutput_list_utils.c\nread_snowband.c\nread_vegparam.c\nvicNl.c\nvicNl.h\nvicNl_def.h\n\nDescription:\n\nSome snowband-specific output variables had an incorrect number of\nelements allocated in output_list_utils.c.  This has been fixed.  In\naddition, added BandElev[] array to soil_con_struct.  Also added logic\nto ensure that grid-cell-average elevation (from soil parameter file)\nmatches the average of the band elevations.  Also added allocation of\nextra veg tile for the case of a band being above the treeline in the\nCOMPUTE_TREELINE case.                  TJB\n```\n\nRemoved special logic for longwave in water balance mode\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\nintialize_atmos.c\ninitialize_model_state.c\n\nDescription:\n\nIn the 4.0.x branch of VIC, net longwave radiation was stored in the\natmos.longwave variable for the case of water balance mode.  This\nrequired that special logic be inserted into various parts of the\ncode wherever the longwave variable was used.  In 4.1.x, new features\nwere added and several different types of longwave flux were added.\nNone of these new fluxes took the water-balance case into account, and\nas a result, the water balance case was handled incorrectly.  Now the\nspecial handling of the water balance case has been removed; atmos.longwave\nalways contains incoming longwave.  This also simplifies the code.\nTJB\n```\n\nVIC now can understand indented comment lines in the global parameter file\n\n```\nFiles Affected:\n\nget_global_param.c\n\nDescription:\n\nPreviously, VIC only understood a line to be a comment if it began\nwith a '#' character at the very beginning of the line, i.e. no\nleading white space such as spaces or tabs.  Now, any line whose first\nnon-whitespace character is '#' is considered to be a comment.\n```\n\nMiscellaneous fixes to snow albedo aging scheme\n\n```\nFiles Affected:\n\ninitialize_snow.c\nSnowPackEnergyBalance.c\nsnow_melt.c\nsolve_snow.c\n\nDescription:\n\nPreviously, VIC's last_snow counter, which keeps track of the number\nof time steps since the last fresh snowfall, and which is used to\ncompute the snow albedo, was not reset to 0 at the proper times.  This\nhas been fixed, along with its initialization.\n```\n\nFixed errors in summing output variables\n\n```\nFiles Affected:\n\ndist_prec.c\nfull_energy.c\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_snow.c\nLAKE.h\nlakes.eb.c\nput_data.c\nread_initial_model_state.c\nread_snowband.c\nread_soilparam_arc.c\nread_soilparam.c\nvicNl.c\nvicNl_def.h\nvicNl.h\nwrite_model_state.c\n\nDescription:\n\nPreviously, many lake water and energy budget terms were lumped into\nthe wetland soil, snow, and energy structures.  This often led to\nwater/energy balance errors both internally and in summing these terms\nfor output.  To solve this problem, new cell, snow, and energy\nstructures were added to the lake_var structure.  These structures\nallow all lake water and energy budget terms to be tracked\nindependently of the wetland.\n\nIn addition, previously, the initial computation of water/energy\nstorages for use in the water/energy balance checks was done in\nvicNl().  This logic was not in sync with the computations in put_data().\nTherefore the logic was replaced with an initial call to put_data()\n(using rec= -Nrecs).  Within put_data(), two new functions were\ncreated to help ensure that summing was consistent among upland veg\ntiles, wetland, and lake: collect_wb_terms() and collect_eb_terms().  \n\nFinally, another source of errors arose from the allocation and\ninitialization of snowband parameters in read_snowband().  These\nterms were only initialized in read_snowband(), but were in some cases\nused in put_data() for the non-snowband case.  Therefore, we have\nmoved the allocation/initialization of these terms to read_soilparam()\nand read_soilparam_arc().  These parameters are further modified in\nread_snowband(), as necessary.\n```\n\nAdded error messages for case when LAI==0 and overstory==1.\n\n```\nFiles Affected:\n\nread_veglib.c\nread_vegparam.c\n\nDescription:\n\nAdded error messages for case when LAI==0 and overstory==1.  Without\nthis check, a user could specify LAI of 0 for an overstory type (e.g.\na deciduous tree).  Unforutunately, the model code assumes that the\noverstory itself always contains some minimum LAI (perhaps assuming\nthat the LAI contains stem area as well?), and in some cases divides\nby the LAI.  If LAI ever is 0 for an overstory type, this will lead\nto nan values in evap, soil moisture, canopy storage, etc.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29825", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29825/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29825/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.1.0", "id": 29825, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODI1", "tag_name": "VIC.4.1.0", "target_commitish": "master", "name": "Release of VIC 4.1.0", "draft": false, "prerelease": false, "created_at": "2006-09-26T19:49:26Z", "published_at": "2013-08-20T19:43:17Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.1.0", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.1.0", "body": "---\n\n## ****\\* Description of changes from VIC 4.1.0 beta r4 to VIC 4.1.0 beta r5 *****\n\n## New Features:\n\nUpdated lake model.\n\n```\nFiles Affected:\n\nfull_energy.c\nget_dist.c (new)\nice_melt.c\ninitialize_lake.c\nlakes.eb.c\nLAKE.h\nMakefile\noutput_list_utils.c\nput_data.c\nread_initial_model_state.c\nread_lakeparam.c\nread_soilparam_arc.c\nread_soilparam.c\nvicNl_def.h\nvicNl.c\nvicNl.h\nwater_energy_balance.c\nwater_under_ice.c\nwetland_energy.c\nwrite_model_state.c\n\nDescription:\n\nMerged Laura Bowling's latest lake model code into UW version.\nChanges include:\n  * Fixed lake snow physics to be consistent with land snow pack\n  * Lake ice formation now takes into account availability of liquid water\n  * Lake ice now explicitly tracked in water balance\n  * Drainage now depends only on liquid water content, not total water+ice\n  * Drainage now modeled as flow over broad-crested wier\n  * New lake parameter file format - see read_lakeparam.c for details\n  * Fixes for crashes in extreme cases; fixes for water balance errors\n  * New output variable OUT_SOIL_TNODE_WL, the soil thermal node\n    temperatures in the wetland tile\n                                    LCB via TJB\n```\n\nNew optional snow density computation.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nget_global_param.c\ninitialize_global.c\nsnow.h\nsnow_utility.c\nsolve_snow.c\nuser_def.h\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nIn addition to the previous algorithm (as a function of day of year,\nbased on a plot of seasonal variation of typical snow densities found\nin Bras, figure 6.10, p 258), added a new algorithm that computes the\nsnow density based on swe and snow metamorphism.  The new algorithm is\ntaken from SNTHERM89, adjusted for an essentially single-layer model.\nIntroduced a new global parameter file option, SNOW_DENSITY, to choose\nwhich of these density algorithms will be used.  If SNOW_DENSITY is set\nto DENS_BRAS, the original algorithm is used.  If SNOW_DENSITY is set\nto DENS_SNTHRM, the new algorithm is used.  The default value (i.e. if\nSNOW_DENSITY is omitted) is DENS_BRAS.  Also moved snow-related\nconstants from user_def.h to snow.h, for consistency.           KMA via TJB\n```\n\nNew optional snow albedo algorithm.\n\n```\nFiles Affected:\n\ndisplay_current_settings.c\nget_global_param.c\ninitialize_global.c\nLAKE.h\nlakes.eb.c\nsnow_utility.c\nsolve_snow.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nIn addition to the previous algorithm (based on US Army Corps of\nEngineers empirical snow albedo decay curves), added a new algorithm\nbased on Sun et al., 1999.  Introduced a new global parameter file\noption, SNOW_ALBEDO, to choose which of these density algorithms will\nbe used.  If SNOW_ALBEDO is set to USACE, the original algorithm is\nused.  If SNOW_ALBEDO is set to SUN1999, the new algorithm is used.\nThe default value (i.e. if SNOW_ALBEDO is omitted) is DENS_BRAS.    KAC via TJB\n```\n\n## Bug Fixes:\n\nAllow lakes to be empty or very shallow.\n\n```\nFiles Affected:\n\ninitialize_lake.c\ninitialize_model_state.c\nLAKE.h\nlakes.eb.c\nread_lakeparam.c\nwetland_energy.c\n\nDescription:\n\nPreviously, lakes could not be initialized to be empty or with volume\nbelow the minimum volume of 1 lake node.  This modification removes\nthat constraint.  In addition, the lake-specific get_* functions were\nmodified to return ErrorFlag values instead of aborting on error,\nmaking them more consistent with the CONTINUEONERROR option.        KAC via TJB\n```\n\nMiscellaneous fixes to lake model\n\n```\nFiles Affected:\n\nlakes.eb.c\nread_lakeparam.c\nwetland_energy.c\n\nDescription:\n\nFixes for swe accounting errors and incorrect parsing of lake\nparameter file.                             LCB via TJB\n```\n\nLake snow and ice fixes\n\n```\nFiles Affected:\n\nLAKE.h\nlakes.eb.c\nvicNl_def.h\n\nDescription:\n\nModified to set lake ice fraction to 0 if new lake fraction is 0.\nPreviously lake ice was always adjusted by dividing old by new fractions,\nwhich causes nans when the new fraction is 0.  Modified redistribution of\nsnow variables between wetland and lake ice.  Surface water is now stored\nas a lake variable and used to reestablish surf_water at the start of a\nnew time step.                              KAC via TJB\n```\n\nBetter validation of global parameter file options\n\n```\nFiles Affected:\nget_global_param.c\nmake_in_and_outfiles.c\nparse_output_info.c\nread_soilparam_arc.c\nread_vegparam.c\n\nDescription:\nNow, all options in the global parameter file involving input and\noutput files are checked to ensure that the filenames have been\nspecified.  In addition, SOIL_DIR and RESULT_DIR no longer require\na trailing \"/\"; a \"/\" is automatically appended when constructing\nthe soil parameter filename or results filename.  Also, makes sure\nthat N_OUTFILES matches number of output files actually defined in\nthe global param file.                          TJB\n```\n\nIncorrect soil ice fractions for the case when FROZEN_SOIL = TRUE and\noptions.SNOW_BAND > 1.\n\n```\nFiles Affected:\n\nfull_energy.c\nprepare_full_energy.c\nsurface_fluxes.c\n\nDescription:\n\nChanged initial total and frozen moistures from scalars (moist and\nice0) to arrays (moist0 and ice0).  Previously, when\noptions.SNOW_BAND > 1, the values of moist and ice0 computed for\nearlier bands were always overwritten by the values of moist and\nice0 computed for the final band (even if the final band had 0\narea).                                  JS and KAC via TJB\n```\n\nBad results when SNOW_STEP = 24 hours\n\n```\nFiles Affected:\n\nget_global_param.c\ninitialize_atmos.c\n\nDescription:\n\nFixed the criterion for deciding whether to store NET longwave or\nINCOMING longwave in atmos[rec].longwave[NR].  Previously, VIC\nstored NET lw if SNOW_STEP != global.dt, under the assumption that\nthis condition was equivalent to running in 24 h water balance mode.\nHowever, this caused problems for users who unwittingly ran 24 h\nwater balance mode with SNOW_STEP = 24.  The new criterion is that\nboth FULL_ENERGY and FROZEN_SOIL must be FALSE.             TJB\n```\n\nIncorrect setting for NOFLUX option in calc_surf_energy_bal()\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\n\nDescription:\n\nModified code to reset NOFLUX boundary to global option\nvalue before computing final soil column temperatures.\nPreviously NOFLUX was set to FALSE for initial QUICK_SOLVE\nestimates, but never reset to reflect actual bottom\nboundary conditions for final pass through solver.          KAC\n```\n\nRemoved -g from normal compiling options.\n\n```\nFiles Affected:\n\nMakefile\n\nDescription:\n\nAt some point, \"-g\" was added to the normal compiling options.\nThis has been removed.  To use the -g option, users should uncomment\nthe \"debug\" section of the makefile.                    TJB\n```\n\nChanged \"vicInterp\" to \"vicDisagg\".\n\n```\nFiles Affected:\n\nMakefile\n\nDescription:\n\nChanged the name of the makefile option to compile vic with the\nOUTPUT_FORCE option set to TRUE.  The term \"disaggregate\" is more\ncorrect than the term \"interpolate\", so \"vicDisagg\" seems more\nappropriate.  The usage of this option is as follows:\n\nAt command prompt, type\n    make disagg\n\nThis will create the executable vicDisagg, which is simply vicNl\ncompiled with OUTPUT_FORCE set to TRUE in user_def.h.           TJB\n```\n\nAdded end-of-file check to read_lakeparam.c\n\n```\nFiles Affected:\n\nread_lakeparam.c\n\nDescription:\n\nAdded check on !feof(lakeparam) to loop over lake param file, to\navoid infinite loop when current grid cell has no lakes and is not\nmentioned in the lake param file.                   TJB\n```\n\nCompilation problems for QUICK_FS user_def.h option\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_model_state.c\nread_lakeparam.c\nwater_energy_balance.c\nwetland_energy.c\n\nDescription:\n\nPrevious updates for the EXCESS_ICE option had inadvertently introduced\nbugs into the logic for the QUICK_FS option.  These included removal of\nthe logic that modifies calls to distribute_node_moisture_properties()\nand estimate_layer_ice_content().                   TJB\n```\n\nOUT_SUB_BLOWING, OUT_SUB_SURFACE, and OUT_SUB_SNOW missing from default snow_*\noutput files.\n\n```\nFiles Affected:\n\nset_output_defaults.c\n\nDescription:\n\nAdded OUT_SUB_BLOWING, OUT_SUB_SURFACE, and OUT_SUB_SNOW to default\nsnow output file for case of options.BLOWING == TRUE.  This makes it\nalmost the same as previous versions of 4.1.0, (r3 and earlier) with\nthe exception that previous versions of 4.1.0 multiplied these terms\nby 100 when saving to the snow file.                    TJB\n```\n\nError in computation of initial water storage for DIST_PRCP = TRUE\n\n```\nFiles Affected:\n\nvicNl.c\n\nDescription:\n\nAdded dist_prcp fraction (mu) to the computation of initial water\nstorage terms.  Otherwise, when DIST_PRCP = TRUE, the water storage\nterms for wet and dry fractions were added together with no weighting,\nresulting in twice the storage as actually present.         TJB\n```\n\nFixed various issues with uninitialized variables, un-freed arrays, NaN's, etc.\n\n```\nFiles Affected:\n\ndist_prec.c\nput_data.c\nread_vegparam.c\nrunoff.c\nsurface_fluxes.c\nvicNl.h\n\nDescription:\n\nput_data() was attempting to return an ErrorFlag but it was defined\nas type int.  Therefore, changed the type of put_data() and changed\nthe call to put_data() in dist_prec.c.  read_vegparam() allocated\nbut never freed a temporary array vegarr[].  This was fixed.\nIn runoff(), top_moist could sometimes exceed top_max_moist due\nto rounding errors, leading to NaN's in i_0 and A_0.  surface_fluxes()\nwas sending incorrectly-indexed displacement and roughness values to\nCalcBlowingSnow().  These have all been fixed.      LCB via TJB\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.0 beta r3 to VIC 4.1.0 beta r4 *****\n\n## New Features:\n\nFlexible output configuration & aggregation of output variables\n\n```\n    Files Affected:\n\n    Makefile\nalloc_atmos.c\ncalc_water_energy_balance_errors.c (new)\nclose_files.c\nconv_force_vic2alma.c (removed)\nconv_results_vic2alma.c (removed)\ndisplay_current_settings.c\ndist_prec.c\nfull_energy.c\nget_global_param.c\nglobal.h\nglobal.param.sample\nIceEnergyBalance.c\ninitialize_atmos.c\ninitialize_global.c\ninitialize_model_state.c\nmake_in_and_outfiles.c\noutput.LDAS_OUTPUT.template (new)\noutput.OPTIMIZE.template (new)\noutput.OUTPUT_FORCE.ALMA.template (new)\noutput.OUTPUT_FORCE.template (new)\noutput.PILPS-2E.ALMA.template (new)\noutput.TRADITIONAL.410.template (new)\noutput.TRADITIONAL.template (new)\noutput_list_utils.c (new)\nparse_output_info.c (new)\nput_data.c\nread_atmos_data.c\nset_output_defaults.c (new)\nSnowPackEnergyBalance.c\n    solve_snow.c\nsurface_fluxes.c\nuser_def.h\nvicNl.c\nvicNl.h\nvicNl_def.h\nvicerror.c\nwater_energy_balance.c\nwetland_energy.c\nwrite_data.c\nwrite_forcing_file.c\n\n    Description:\n\n    In earlier versions of VIC, the set of output files and their contents\n    were hard-coded.  A few settings in user_def.h (OPTIMIZE and\nLDAS_OUTPUT) allowed the user to change the contents of the output\nfiles, but this has not been enough to accomodate the various needs of\nusers.  Users inevitably have had to modify write_data.c to produce the\ntype of output they want, and when VIC is updated, they must merge their\nchanges into the new version of the code.\n\n    VIC 4.1.0 now allows the user to specify exactly which output files to\n    create and which variables to store in each file.  This way, users can\n    save space by only writing those variables that are useful, and will\nbe less likely to need to maintain a private version of the code to do\nthis.\n\nIn addition, VIC 4.1.0 can now aggregate the output variables to a\nuser-defined output interval, via the OUT_STEP setting in the global\nparameter file.  Currently, the largest output interval allowed is 24\nhours, so this option is only useful for simulations running at sub-\ndaily time steps.\n\n\n    Main points:\n\n    1. Output file names and contents can be specified in the global param\n       file (see below).\n\n    2. If you do not specify file names and contents in the global param\n       file, VIC will produce the same set of output files that it has\n       produced in earlier versions, namely \"fluxes\" and \"snow\" files,\n   plus \"fdepth\" files if FROZEN_SOIL is TRUE and \"snowband\" files if\n       PRT_SNOW_BAND is TRUE.  These files will have the same contents and\n       format as in earlier versions.\n\n    3. The OPTIMIZE and LDAS_OUTPUT options have been removed.  These\n       output configurations can be selected with the proper set of\n       instructions in the global param file.  (see the output.*.template\n       files included in this distribution for more information.)\n\n    4. If you do specify the file names and contents in the global param\n   file, PRT_SNOW_BAND will have no effect.\n\n    To specify file names and contents in the global param file, one\n    should use the following format:\n\n      (typical global param file contents here...)\n\n      # Output File Contents\n      N_OUTFILES    <n_outfiles>\n\n      OUTFILE       <prefix>        <nvars>\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n\n      OUTFILE       <prefix>        <nvars>\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n      OUTVAR        <varname>       [<format>       <type>  <multiplier>]\n\n    where\n            <n_outfiles> = number of output files\n            <prefix>     = name of the output file, NOT including latitude\n                           and longitude\n            <nvars>      = number of variables in the output file\n            <varname>    = name of the variable (this must be one of the\n                           output variable names listed in vicNl_def.h.)\n\n            <format>, <type>, and <multiplier> are optional.  For a given\n            variable, you can specify either NONE of these, or ALL of\n            these.  If these are omitted, the default values will be used.\n\n            <format>     = (for ascii output files) fprintf format string,\n                           e.g.\n                             %.4f = floating point with 4 decimal places\n                             %.7e = scientific notation w/ 7 decimal\n                             %places\n                             *    = use the default format for this\n                             *    variable\n            <type>       = (for binary output files) data type code.\n                           Must be one of:\n                             OUT_TYPE_DOUBLE = double-precision floating\n                       point\n                             OUT_TYPE_FLOAT  = single-precision floating\n                       point\n                             OUT_TYPE_INT    = integer\n                             OUT_TYPE_USINT  = unsigned short integer\n                             OUT_TYPE_SINT   = short integer\n                             OUT_TYPE_CHAR   = char\n                             *               = use the default type\n            <multiplier> = (for binary output files) factor to multiply\n                           the data by before writing, to increase\n                           precision.\n                             *    = use the default multiplier for this\n                             *    variable\n\n    Here's an example.  To specify 2 output files, named \"wbal\" and\n    \"ebal\", and containing water balance and energy balance terms,\n    respectively, you could do something like this:\n\n      N_OUTFILES    2\n\n      OUTFILE       wbal    6\n      OUTVAR        OUT_PREC\n      OUTVAR        OUT_EVAP\n      OUTVAR        OUT_RUNOFF\n      OUTVAR        OUT_BASEFLOW\n      OUTVAR        OUT_SWE\n      OUTVAR        OUT_SOIL_MOIST\n\n      OUTFILE       ebal    7\n      OUTVAR        OUT_NET_SHORT\n      OUTVAR        OUT_NET_LONG\n      OUTVAR        OUT_LATENT\n      OUTVAR        OUT_SENSIBLE\n      OUTVAR        OUT_GRND_FLUX\n      OUTVAR        OUT_SNOW_FLUX\n      OUTVAR        OUT_ALBEDO\n\n    Since no format, type, or multiplier were specified for any variables,\nVIC will use the default format, type, and multiplier for the variables.\n\n    If you wanted scientific notation with 10 significant digits for\nALBEDO, you could do the following:\n\n      OUTVAR        OUT_ALBEDO              %.9e    *       *\n\n    Note that even if you only want to specify the format, you must supply\na value in the type and multiplier columns as well.  This can be \"*\" to\nindicate the default value.  Similarly, if you only want to specify the\ntype (e.g.  as a double), you would need to do something like:\n\n      OUTVAR        OUT_ALBEDO              *       OUT_TYPE_DOUBLE *\n\n\n    Date variables:\n\n    For typical output files, the date is always written at the beginning\nof each record.  This will consist of the following columns:\n      year month day hour\n    For daily output timestep, \"hour\" is not written.\n\n    If BINARY_OUTPUT is TRUE, these will all be written as type int\n(OUT_TYPE_INT).\n\n    If OUTPUT_FORCE is TRUE, the date will NOT be written.\n\n\n    Multiple-valued variables:\n\n    Since variables like SOIL_MOIST have 1 value per soil layer, these\nvariables will be written to multiple columns in the output file, one\ncolumn per soil layer.  Other multiple-valued variables are treated\nsimilarly.\n\n\n    Snow band output:\n\n    To specify writing the values of variables in each snow band,  append\n    \"_BAND\" to the variable name (this only works for some variables - see\n    the list in vicNl_def.h).  If you specify these variables, the value\nof the variable in each band will be written, one band per column.  For\n    example, for a cell having 2 snow bands:\n\n      OUTVAR        OUT_SWE_BAND\n      OUTVAR        OUT_ALBEDO_BAND\n\n    will result in an output file containing:\n\n      year month day (hour) swe[0] swe[1] albedo[0] albedo[1]\n\n                                    TJB\n```\n\nCleanup of structures holding filenames and file pointers\n\n```\nFiles Affected:\n\ncheck_files.c\ncheck_state_file.c\nclose_files.c\ndisplay_current_settings.c\ndist_prec.c\nget_global_param.c\ninitialize_model_state.c\nmake_in_and_outfiles.c\nopen_state_file.c\nread_initial_model_state.c\nvicerror.c\nvicNl.c\nvicNl_def.h\nvicNl.h\nwrite_model_state.c\n\nDescription:\n\n1. Merged infiles and outfiles structs into filep_struct.\n2. Merged builtnames into filenames struct.\n3. Renamed infiles.statefile to filep.init_state\n4. Moved global.statename to filenames.statefile.\n5. Added f_path_pfx[] to the filenames_struct, to store\n   the path and prefix of forcing files.  Now, forcing[]\n   only stores the full forcing file names.\n                                    TJB\n```\n\nSoil thermal node temperature is now an output variable\n\n```\nFiles Affected:\n\noutput_list_utils.c\nput_data.c\nvicNl_def.h\n\nDescription:\n\nSoil thermal node temperature can now be selected for output, via the\nkey \"OUT_SOIL_TNODE\".  If selected, the temperatures at all valid soil\nthermal nodes will be output.                       TJB\n```\n\nRemoved LAKE_MODEL compile-time option\n\n```\nFiles Affected:\n\ncheck_files.c\ndisplay_current_settings.c\ndist_prec.c\nfull_energy.c\nget_global_param.c\nIceEnergyBalance.c\nice_melt.c\ninitialize_lake.c\ninitialize_model_state.c\ninitialize_soil.c\nLAKE.h\nlakes.eb.c\nmake_dist_prcp.c\nput_data.c\nread_initial_model_state.c\nread_lakeparam.c\nuser_def.h\nvicNl.c\nvicNl_def.h\nvicNl.h\nwater_energy_balance.c\nwater_under_ice.c\nwetland_energy.c\nwrite_model_state.c\n\nDescription:\n\nFrom a functional standpoint, the LAKE_MODEL compile-time option was\nredundant with the options.LAKE switch.  Meanwhile, the difference in\nthe size of the executable between when the LAKE_MODEL switch was on\nor off was deemed insignificant.  Therefore, this switch was removed\nin the interest of making the code easier to maintain and reducing\nuser confusion.  Now, to turn off lake functionality, simply set LAKE\nto FALSE in the global parameter file (or omit the \"LAKE\" line\ncompletely).                                TJB\n```\n\nMore complete set of supported input variables\n\n```\n    Files Affected:\n\n    display_current_settings.c\n    get_force_type.c\n    get_force_type_pilps.c (removed)\n    get_global_param.c\n    initialize_atmos.c\n    initialize_atmos_pilps.c (removed)\n    initialize_global.c\n    vicNl_def.h\n\n    Description:\n\n    Added REL_HUMID (relative humidity, as a fraction) to the list of\n    supported met input variables.  Added the ALMA_INPUT option, which\n    causes temperatures to be interpreted as Kelvin, pressures as kPa,\n    and moisture fluxes as rates (mm/s) instead of accumulated fluxes\n    (mm/timestep).  This allowed us to remove TAIR and PSURF from the\n    list of supported met input variables, since AIR_TEMP and PRESSURE\n    provide this ability when ALMA_INPUT is TRUE.  This also makes\n    input variable specification more consistent with output variable\n    specification.\n\n    Since now the forcing files from PILPS can be read via the\n    appropriate specification of input variables and ALMA_INPUT option\n    in the global parameter file, the file initialize_atmos_pilps.c\n    has been removed.                           TJB\n```\n\nOptional headers for output and input files\n\n```\n    Files Affected:\n\n    display_current_settings.c\n    get_global_param.c\n    global.param.sample\n    initialize_global.c\n    Makefile\n    read_atmos_data.c\n    vicNl.c\n    vicNl_def.h\n    vicNl.h\n    write_header.c (new)\n\n    Description:\n\n    Added the PRT_HEADER option to the global parameter file.  If\n    this is set to TRUE, VIC will insert a short header into its\n    output files, describing the time step, start date/time,\n    variables and units included in the file.\n\n    For ascii files, the output header has the following format:\n\n            # NRECS: (nrecs)\n            # DT: (dt)\n            # STARTDATE: yyyy-mm-dd hh:00:00\n            # ALMA_OUTPUT: (0 or 1)\n            # NVARS: (Nvars)\n            # VARNAME    VARNAME   VARNAME   ...\n\n    where\n       nrecs       = Number of records in the file\n       dt          = Time step length in hours\n       start date  = Date and time of first record of file\n       ALMA_OUTPUT = Indicates units of the variables; 0 = standard VIC\n                     units; 1 = ALMA units\n       Nvars       = Number of variables in the file, including date\n                     fields\n\n    For binary files, the output header has the following format:\n\n        // Data        Stored As           Comment\n        //\n        // Identifier  (unsigned short)*4  0xFFFF, repeated 4 times\n        // Nbytes      (unsigned short)*1  Number of bytes in the header,\n        //                                 INCLUDING THE IDENTIFIER\n        //\n        // Part 1: Global Attributes\n        // Nbytes1     (unsigned short)*1  Number of bytes in part 1\n        // nrecs       (int)*1             Number of records in the file\n        // dt          (int)*1             Time step length in hours\n        // startyear   (int)*1             Year of first record\n        // startmonth  (int)*1             Month of first record\n        // startday    (int)*1             Day of first record\n        // starthour   (int)*1             Hour of first record\n        // ALMA_OUTPUT (char)*1            0 = standard VIC units; 1 = ALMA units\n        // Nvars       (char)*1            Number of variables in the file,\n        // including date fields\n        //\n        // Part 2: Variables\n        // Nbytes2     (unsigned short)*1  Number of bytes in part 2\n        // For each variable, the following fields: { len varname type mult }\n        //   len       (char)*1            Number of characters in varname\n        //   varname   (char)*len          Variable name\n        //   type      (char)*1            Code identifying variable type\n        //   mult      (float)*1           Multiplier for variable\n\n\n    To accomodate input forcing files that might have been produced via\n    VIC's OUTPUT_FORCE option, and therefore could contain a header,\n    read_atmos_data.c has been modified to detect and skip headers that\n    follow the formats outlined above.                  TJB\n```\n\nVariable TYPE specifications for binary-format output files in the global parameter\nfile must match the strings listed in vicNl_def.h.\n\n```\nFiles Affected:\n\nparse_output_info.c\n\nDescription:\n\nWhen listing output variables in the global parameter file, if the\noutput file format is binary, the variable data TYPE must match the string\nfrom vicNl_def.h exactly, e.g. \"OUT_TYPE_INT\" rather than just \"INT\".   TJB\n```\n\nAdded global option CONTINUEONERROR allowing simulation to continue on cell error.\n\n```\nFiles Affected:\n\narno_evap.c\nCalcAerodynamic.c\ncalc_atmos_energy_bal.c\nCalcBlowingSnow.c\ncalc_rainonly.c\ncalc_surf_energy_bal.c\ndisplay_current_settings.c\ndist_prec.c\nfrozen_soil.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_global_param.c\nice_melt.c\ninitialize_new_storm.c\nlakes.eb.c\nredistribute_during_storm.c\nroot_brent.c\nrunoff.c\nsnow_intercept.c\nsnow_melt.c\nsoil_conduction.c\nsolve_snow.c\nsurface_fluxes.c\nvicNl.c\nwater_energy_balance.c\nwater_under_ice.c\nwetland_energy.c\nglobal.param.sample\nLAKE.h\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nIf the global option CONTINUEONERROR is set to TRUE then the\nsimulation continues to run even if a cell fails and produces\npartial output. Default is is for CONTINUEONERROR to be FALSE,\nas in previous versions of model. The return value of some modules\nwas changed from void to an int numeric return value. The ERROR\nvalue is defined in vicNl_def.h.                    KAC via GCT\n```\n\nExponential grid transformation option for soil thermal nodes in finite\ndifference heat equation\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\ndisplay_current_settings.c\nfrozen_soil.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_global.c\ninitialize_model_state.c\nsoil_conduction.c\nsoil_thermal_eqn.c\nvicNl_def.h\n\nDescription:\n\nNew option is now EXP_TRANS to have an exponential distribution\nof the thermal node depths in the vertical dimension.  This allows for\ncloser thermal nodes near the surface of soil where the variance is\ngreatest.  The transformation allows for the solution to be solved in\nlinear-space, wherein the nodes are distributed linearly with depth,\nbut the physical system exists in exponential space.  This change also\ninvolves a rearranging of the terms in the finite-difference equaton\n(equation 8 of Cherkauer et al. 1999).  Therefore the constants (A-E)\nare calculated in a new way.  These constants are equal to the constants\nin each of the terms in equation 8 multiplied by alpha^2*deltat.    JCA\n```\n\nImplicit solution option for finite difference frozen soils algorithm\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\ndisplay_current_settings.c\nfrozen_soil.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_global.c\nMakefile\nsurface_fluxes.c\nvicNl_def.h\nvicNl.h\n\nDescription:\n\nThe implicit solution uses Newton Raphson to solve the system of non-\nlinear equations.  Therefore there is a new option, IMPLICIT.  If the\nimplicit solution fails (which can sometimes occur at the initial\nformation of ice in the soil column), the model will use the original\nexplicit solver to solve for the thermal temperatures for that time\nstep only.  The implicit option is unconditionally stable and therefore\nthe Courant-Friedrichs-Lewy condition does not need to be checked (as\nit should be for the explicit solver).                  JCA\n```\n\nZsum_node calculated once and passed in soil_con to other subroutines\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\nfunc_surf_energy_bal.c\ninitialize_model_state.c\nlakes.eb.c\nread_initial_model_state.c\nrunoff.c\nsoil_conduction.c\nvicNl_def.h\nwrite_debug.c\nwrite_model_state.c\n\nDescription:\n\nZsum_node is the depth of each of the thermal nodes needed\nfor the finite difference frozen soils algorithm.  Rather than re-\ncalculating this value in various places, this vector is now passed\nin the soil_con structure to the various subroutines where it is\nneeded.  The one exception is set_node_parameters, because this is\na slightly different definition of Zsum.                JCA\n```\n\nPatch for \"cold nose\" problem\n\n```\nFiles Affected:\n\nfrozen_soil.c\nsoil_thermal_eqn.c\n\nDescription:\n\nThis is an inelegant fix for \"cold nose\" problem that may occur in\nthe finite different frozen soil algorithm in each mode of operation.\nThis involves a thermal node that is of a lower temperature than the\nupper and lower thermal nodes.  Due to the first term of the heat\nconduction term (the term that accounts for a change in the thermal\nconductivity in space), the first term can become more negative\nthan the second term. This causes this cold node to become\nmuch colder and thus breaks the second law of thermodynamics (because\nflux_term1 exceeds flux_term2 in absolute magnitude).  Therefore, a check\nis now made to set the first term to zero when this begins to happen.\nThis only seems to happen in the first and second near-surface nodes.   JCA\n```\n\nAdded EXCESS_ICE option (set in user_def.h)\n\n```\nFiles Affected:\n\ncalc_surf_energy_bal.c\ncalc_water_energy_balance_errors.c\ndisplay_current_settings.c\nfrozen_soil.c\nfull_energy.c\nfunc_surf_energy_bal.c\nget_global_param.c\ninitialize_model_state.c\ninitialize_soil.c\nLAKE.h\nlakes.eb.c\noutput_list_utils.c\nprepare_full_energy.c\nput_data.c\nread_initial_model_state.c\nread_soilparam_arc.c\nread_soilparam.c\nrunoff.c\nsoil_conduction.c\nsoil_thermal_eqn.c\nsurface_fluxes.c\nuser_def.h\nvicNl.c\nvicNl_def.h\nvicNl.h\nwetland_energy.c\nwrite_model_state.c\n\nDescription:\n\nIf TRUE, VIC allows for excess ground ice, i.e. an expanded porosity\nto account for an initial volumetric ice fraction larger than\nsoil porosity.  The ground subsides (therefore soil depth is no\nlonger static) and the porosity decreases as the excess ice melts.\nOnce porosity reaches the soil porosity (1-bulk density/soil density),\nit does not change.  The initial volumetric ice fraction for\neach soil layer must be defined in the soil file. The maximum value\nfor this initial ice fraction is set by MAX_ICE_INIT in\nvicNl_def.h.  Another new parameter is ICE_AT_SUBSIDENCE, also set\nin vicNl_def.h.  This parameter controls the rate of subsidence as\nthe ground warms.  Setting a larger value will cause the ground to\nsubside sooner and faster.  The physical bounds of this parameter\nare 0.0 and 1.0, although setting this to a value of 1.0 will result\nin the ground continually subsiding despite very cold soil\ntemperatures because there is always a small amount of unfrozen water\nin each soil layer due to the function used in maximum_unfrozen_water.\nThe recommended value is 0.8.                       JCA\n```\n\nBare soil evap for LAI=0\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\n\nDescription:\n\nModified to use arno_evap rather than canopy_evap if LAI\nis 0, e.g. winter cropland.                     KAC via TJB\n```\n\nDrop canopy snow if thin\n\n```\nFiles Affected:\n\nsnow_intercept.c\n\nDescription:\n\nModified to drop canopy snow if it is especially thin\n(< MIN_SWQ_EB_THRES), which should improve the numeric\nstability of the canopy energy balance solution.            KAC via TJB\n```\n\n## Bug Fixes:\n\nVarious bugs in output variables\n\n```\nFiles Affected:\n\nglobal.param.sample\noutput_list_utils.c\noutput.PILPS-2E.ALMA.template\noutput.TRADITIONAL.410.template\noutput.TRADITIONAL.template\nput_data.c\nset_output_defaults.c\nvicNl_def.h\n\nDescription:\n\n1. Shortened the names of variables whose names were too long\n2. Fixed typos in other names\n3. Added OUT_IN_LONG\n                                    TJB\n```\n\nUninitialized value of ice[] in transpiration()\n\n```\nFiles Affected:\n\ncanopy_evap.c\n\nDescription:\n\nModified to initialize ice[] for all soil layers before computing\navailable moisture (to avoid using uninitialized values later on).  TJB\n```\n\nUninitialized value of mixdepth in solve_lake()\n\n```\nFiles Affected:\n\nlakes.eb.c\n\nDescription:\n\nNow set mixdepth=0 for case of complete ice cover; this guarantees that\nit is initialized for all cases.                    TJB\n```\n\nIncorrect sub-daily temperature interpolation when referencing GMT instead of\nlocal time\n\n```\nFiles Affected:\n\ncalc_air_temperature.c\n\nDescription:\n\nTemperature interpolation didn't account for case in which min or max\ntemperature could cross the boundary of the current day.  This can\nhappen when referencing GMT instead of local time, for cells far away\nfrom 0 E longitude.  This has been fixed.               TJB\n```\n\nWater budget errors in snow pack on top of lake ice\n\n```\nFiles Affected:\n\nlakes.eb.c\n\nDescription:\n\nConvert swq and surf_water from mm over lake to mm over ice fraction at\nbeginning of solve_lake().  This was needed to avoid a water budget\nerror since swq and surf_water were being converted to mm over lake at\nend of solve_lake().                            TJB\n```\n\nIncorrect filenames in Makefile for variable output list functions\n\n```\nFiles Affected:\n\nMakefile\n\nDescription:\n\nChanged \".c\" to \".o\" for output_list_utils.o, parse_output_info.o,\nset_output_defaults.o                           TJB\n```\n\nOutput variable OUT_DELSURFSTOR not functioning\n\n```\nFiles Affected:\n\noutput_list_utils.c\nput_data.c\n\nDescription:\n\nDefault properties for OUT_DELSURFSTOR were not set in\noutput_list_utils.c, and OUT_DELSURFSTOR was not assigned a\nvalue in put_data.c.  These problems have been fixed.           TJB\n```\n\nPressure and vapor pressure output in wrong units\n\n```\nFiles Affected:\n\nput_data.c\nwrite_forcing_file.c\n\nDescription:\n\nThe output variables pressure and vapor pressure were output in Pa\ninstead of kPa.  This has been fixed.                   TJB\n```\n\nChanged OUT_SURF_TEMP from the average of T[0] and T[1] to exactly\nequal to T[0].\n\n```\nFiles Affected:\n\nput_data.c\n\nDescription:\n\nPreviously, OUT_SURF_TEMP had been set to the average of node\ntemperatures T[0] and T[1].  This has been changed to just T[0],\nsince OUT_SURF_TEMP represents the surface skin temperature.        TJB\n```\n\nAdded case of SPATIAL_FROST = TRUE in full_energy.c\n\n```\nFiles Affected:\n\nfull_energy.c\n\nDescription:\n\nThis module needed to handle the case of SPATIAL_FROST = TRUE.      GCT\n```\n\nFixed fread statements\n\n```\nFiles Affected:\n\nread_initial_model_state.c\n\nDescription:\n\nFixed fread checks to make sure correct number of items were read\nin rather than the size of the item read in.                JCA\n```\n\nRead in order incorrect in error_print_surf_energy_bal\n\n```\nFiles Affected:\ncalc_surf_energy_bal.c\n                                    GCT\n```\n\nRemoved (1.-snow_coverage) from three equations where it did not belong\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\n                                    GCT\n```\n\nsetup_frozen_soil subroutine removed as it is never called\n\n```\nFiles Affected:\n\nfrozen_soil.c\n                                    GCT\n```\n\nBug fix for previous bug fix to dt_baseflow calculation.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nFixed bug arising from earlier fix to dt_baseflow\ncalculation.  Earlier fix took residual moisture\ninto account in the linear part of the baseflow eqn,\nbut not in the non-linear part.  Now we take residual\nmoisture into account correctly throughout the whole\nequation.                               TJB\n```\n\nSub-daily snow step for 24h wb mode not aggregating correctly\n\n```\nFiles Affected:\n\nsnow_melt.c\nsolve_snow.c\nsurface_fluxes.c\n\nDescription:\n\nThe implementation of the canopy iteration in surface_fluxes() \ncaused the data structures containing the results\nfor the sub-daily snow steps to be reset at the beginning\nof every sub-daily step, resulting in large water\nbalance errors and incorrect daily results.  This has been fixed by\ncreating distinct data structures to store results for \niterations (iter_*) and steps (step_*).  In addition,\nthe units of snow melt were corrected to\nbe consistent (mm) across functions.                    TJB\n```\n\nMoved Implicit error counting above call for solve_T_profile.\n\n```\nFiles Affected:\n\nfunc_surf_energy_bal.c\n                                    GCT\n```\n\nMoved ARNO/NIJSSEN conversion after calculation of max_moist.\n\n```\nFiles Affected:\n\nread_soilparam_arc.c\n                                    GCT\n```\n\nAdded ErrorFlag return value from initialize_prcp.\n\n```\nFiles Affected:\n\nlakes.eb.c\nLAKE.h\n                                    GCT\n```\n\nTrap cases of T-errors matching variable ERROR for root_brent.\n\n```\nFiles Affected:\n\ncalc_atmos_energy_bal.c\ncalc_surf_energy_bal.c\nfrozen_soil.c\nice_melt.c\nroot_brent.c\nsnow_intercept.c\nsnow_melt.c\n\nDescription:\n\nBasically, what was happening was that when root_brent was called\nfrom calc_surf_energy_bal with func_surf_energy_bal as Function,\nthen func_surf_energy_bal was ocasionally returning a value of ERROR to\nroot_brent, and root_brent was then (in some cases) interpreting\nthis as an actual surface temperature and continuing merrily on\nits way. So, there was an error in the model that was never\ncaught. So, now root_brent checks for this and returns a value of\nERROR if there is a problem. Because of this change, all of the\nroutines that call root_brent had to be changed since they checked\nagainst an error of -9998 - now they check for\nvalues less than -998, since ERROR = -999.              JCA\n```\n\nTrap cases of negative soil moisture.\n\n```\nFiles Affected:\n\nfull_energy.c\n\nDescription:\n\nNo longer resets ice content to previous time-step ice content if\nsubsidence has occurred.                        JCA\n```\n\nFixed bug for read-in during EXCESS_ICE option.\n\n```\nFiles Affected:\n\nread_initial_model_state.c\n\nDescription:\n\nFixed bug for read-in during EXCESS_ICE option.             JCA\n```\n\nMemory errors for ARC_SOIL=TRUE and OUTPUT_FORCE=TRUE\n\n```\nFiles Affected:\n\nget_force_type.c\nget_global_param.c\ninitialize_global.c\nread_soilparam.c\nread_soilparam_arc.c\nvicNl.c\n\nDescription:\n\nMemory errors would occur when ARC_SOIL=TRUE and OUTPUT_FORCE=TRUE.\nIn addition, the output files would not contain sufficient contents due\nto not closing properly.  These have been fixed.            TJB\n```\n\nHandling of cells missing from snowband file\n\n```\nFiles Affected:\n\nread_snowband.c\n\nDescription:\n\nPreviously, if SNOW_BAND = TRUE and a particular cell was not listed\nin the snowband file, VIC would abort.  Now, when VIC encounters\ncells with no information in the snowband file, VIC issues a warning\nand sets the cells to have 1 band, with Tfactor = 0 and Pfactor = 1.    KAC via TJB\n```\n\nMoved check for soil moisture > max to initialize_model_state.c\n\n```\nFiles Affected:\n\nread_initial_model_state.c\ninitialize_model_state.c\n\nDescription:\n\nFor initializing the model state the check for soil\nmoist > max moist was moved from read_initial_model_state.c\nto initialize_model_state.c. The check is performed on all veg types\neven if the area fraction = 0. There was a situation with\nEXCESS_ICE = TRUE when the model was trying to distribute\nmoisture values that exceeded max moist to each thermal node\nin the wetland area when Cl = 0.                    JCA\n```\n\nIncorrect limits on soil layer evap in runoff() for SPATIAL_FROST = TRUE\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nModified to correctly handle evaporation from spatially\ndistributed soil frost.  Original version could produce\nnegative soil moisture in fractions with high ice content\nsince only total evaporation was checked versus total\nliquid water content, not versus available liquid water\nin each frost subsection.                       KAC via TJB\n```\n\nBug fixes in EXCESS_ICE calculations\n\n```\nFiles Affected:\n\nfull_energy.c\nvicNl_def.h\n\nDescription:\n\nAdded MAX_SUBSIDENCE parameter to EXCESS_ICE option.\nFixed bug in subsidence calculation.                    JCA\n```\n\nReturn ERROR instead of exiting in ice_melt.c module\n\n```\nFiles Affected:\n\nice_melt.c\n\nDescription:\n\nReturn ERROR instead of exiting, if ice_melt could not converge to\na solution in root_brent.                       JCA\n```\n\nForce runoff() to use user-specified resid_moist\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nRemoved logic that reset resid_moist[i].  Previously,\nresid_moist[i] was reset to 0 for i > 0 when\nresid_moist[0] == 0.  Such resetting of soil properties\nwas deemed unnecessary and confusing, since VIC would end\nup using different residual moisture values than those\nspecified by the user.  If a user truly wants to specify\nresidual moisture in all layers to be 0, the user should\nset these explicitly in the soil parameter file.  Also\nfixed typo in fprintf() on line 289.                    TJB\n```\n\nFixed error in EXP_TRANS formulation\n\n```\nFiles Affected:\n\nfrozen_soil.c\nsoil_thermal_eqn.c\n\nDescription:\n\nFixed error in EXP_TRANS formulation.                   JCA\n```\n\nUpdated default output file variable lists to match traditional 4.1.0\noutput files\n\n```\nFiles Affected:\n\nset_output_defaults.c\n\nDescription:\n\nUpdated to reflect variables present in traditional 4.1.0\noutput files.  Previously the defaults matched the traditional\n4.0.6 output files.                         TJB\n```\n\nModel aborts when TIME_STEP = 24 and STARTHOUR is not specified.\n\n```\nFiles Affected:\n\nget_global_param.c\n\nDescription:\n\nAdded validation of dt, start date, end date, and nrecs.        TJB\n```\n\nMiscellaneous bugs in frozen soils.\n\n```\nFiles Affected:\n\nfrozen_soil.c\nsoil_conduction.c\n\nDescription:\n\nFixed miscellaneous bugs (typos) in frozen soil equations.      JCA\n```\n\nOutput file headers contain \"hour\" field despite output dt == 24 hours.\n\n```\nFiles Affected:\n\nwrite_header.c\n\nDescription:\n\nReplaced all instances of global.dt with global.out_dt,\nsince out_dt is the time interval used in the output files.     TJB\n```\n\nLiquid soil moisture sometimes falls below residual.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nFixed the checks on the lower bound of soil moisture.\nPreviously, the condition was\n  (moist[lindex]+ice[lindex]) < resid_moist[lindex]\nwhich led to liquid soil moisture falling below residual\nduring winter conditions.  This has been changed to\n  moist[lindex] < resid_moist[lindex]\nto eliminate these errors and make the logic consistent\nwith the rest of the code.                      TJB\n```\n\nVariable \"moist\" in runoff() has different meaning than in other functions.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nRenamed all *moist* variables to *liq* if they only refer\nto liquid soil moisture.  This makes the logic much easier\nto understand.                              TJB\n```\n\nSoil moisture drops below residual for sub-daily time step interval and\nFULL_ENERGY or FROZEN_SOIL = TRUE.\n\n```\nFiles Affected:\n\nrunoff.c\n\nDescription:\n\nFixed the checks on the lower bound of soil moisture.  Previously,\nthe lower bound on soil moisture was\n  (liquid + ice >= residual moisture)\nand the way this bound was enforced was to reduce baseflow to\nbring total liquid + ice content back up to residual, but this\ncompensation was limited so that the compensation would never\nbe larger than baseflow (i.e. the compensation would never create\nnegative baseflow).\n\nHowever, this condition had two main problems: 1. it allowed liquid\nmoisture to fall to very low values (due to evap being over-estimated\nin arno_evap() and transpiration(), and/or Q12 being over-estimated\nearlier in runoff() due to bad numerics) in the presence of ice, and\n2.  it had limited ability to recover from these low values because\nbaseflow (already small) wasn't allowed to be reduced below 0.\n\nThis behavior has been replaced with the following conditions: For\nunfrozen soil, the new lower bound is\n  (liquid >= resid_moist)\nwhile for frozen soil, the new error condition is\n  (liquid >= min_liq_fraction * resid_moist)\nwhere\n  min_liq_fraction = the value returned by maximum_unfrozen_water()\n                     for a unit maximum moisture content.\n\nIf overestimates of evap or drainage do occur, baseflow is allowed\nto be reduced below 0 to bring liquid water back up to the lower\nlimit.  Then, further down in the code, if baseflow is negative,\nbottom-layer evap is reduced by (-baseflow) and baseflow is set to 0.   TJB\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.0 beta r2 to VIC 4.1.0 beta r3 *****\n\n## New Features:\n\nImproved lake model\n\n```\nFiles Affected:\nCalcBlowingSnow.c, LAKE.h, IceEnergyBalance.c, ice_melt.c,\ninitialize_atmos.c, initialize_lake.c, lakes.eb.c, read_lakeparam.c,\nsolve_snow.c, surface_fluxes.c, vicNl.h, vicNl_def.h,\nwater_energy_balance.c, water_under_ice.c\n\nDescription:\nThis fixes the following bugs:\n\n    Lake model crashes when lakes fill up\n    Lake model crashes when lakes dry out\n\nAnd introduces the following new features:\n\n    Blowing snow sublimation computed over lakes\n    Tuning of default lake profile (parabolic to square)\n\nThe new parameter BETA in LAKE.h can be used to control the shape of the\nautomatic lake profile (when the global option LAKE_PROFILE is FALSE).\nBETA=0.5 is strongly parabolic, while BETA=0.001 is almost square\n(vertical walls).\n\nIf LAKE_PROFILE=FALSE, the lake parameter file from VIC 4.1.0 beta 2 can\nbe used without any changes.  However, if LAKE_PROFILE=TRUE, the lake\nparameter file must now contain a (depth,area) pair for each lake node.\nSee read_lakeparam.c for details.\n```\n\nVIC now supports ALMA input and output variables.\n\n```\nFiles Affected:\nMakefile, conv_force_vic2alma.c, conv_results_vic2alma.c, close_files.c,\ndisplay_current_settings.c, dist_prec.c, get_force_type.c,\nget_global_param.c, initialize_atmos.c, initialize_global.c,\nmake_in_and_outfiles.c, put_data.c, read_atmos_data.c, vicNl.h,\nvicNl_def.h, write_data.c, write_forcing_file.c\n\nDescription:\nVIC now supports ALMA input and output variables.  To have VIC read ALMA\ninput (forcing) variables, all that is required is to identify them by\nthe appropriate names in the forcing section of the global parameter file.\nThe appropriate names are listed in vicNl_def.h.  To have VIC write ALMA\noutput variables, it is necessary to include the option ALMA_OUTPUT in the\nglobal parameter file and set it to TRUE.  This option does not affect\nmodel physics.\n```\n\nState file is now written at the END of the final timestep of the date indicated\nin the global parameter file.\n\n```\nFiles Affected:\ndist_prec.c\n\nDescription:\nPrevious versions of VIC wrote the state file at the beginnning of the\ndate indicated (via STATEYEAR, STATEMONTH, and STATEDAY) in the global\nparameter file.  For sub-daily model time steps, this meant that the\nsimulation's end could not be aligned exactly with the writing of the\nstate file, since the model would continue simluating for the remainder\nof the final day after writing the state file.  This created difficulties\nwhen running VIC in real-time simulations, in which the forcings are\nbroken up into short time periods and the previous state file must be\nused as the initial condition for the next time period.\n\nNow that the state file is written at the end of the final timestep of the\ndate indicated in the global parameter file, it is possible for the end of\na forcing file, the end of the simulation, and the timing of the state file\nall to align on the same time.  This simplifies re-starting the model for\na forcing file that begins immediately after the previous forcing file\nended, since the state file now is equivalent to the initial condition at\nthe beginning of the new forcing file.\n```\n\nEQUAL_AREA global parameter option\n\n```\nFiles Affected:\ndisplay_current_settings.c, get_global_param.c, initialize_global.c,\nread_lakeparam.c, vicNl_def.h\n\nDescription:\nNew global parameter option.  When EQUAL_AREA is TRUE, all grid cells are\nassumed to have the same area, and the global parameter RESOLUTION is\ninterpreted to store the grid cell area in km^2.  When EQUAL_AREA is FALSE,\ngrid cells are assumed to have the same side length in degrees, and\nRESOLUTION is interpreted to store the grid cell side length in degrees,\nas before.\n```\n\nNew vicInterp executable\n\n```\nFiles Affected:\nMakefile, check_files.c, close_files.c, get_global_param.c,\nread_soilparam.c, vicNl.c\n\nDescription:\nNow users can create a stand-alone executable called \"vicInterp\" by\ntyping \"make interp\".  This executable is a stripped-down version \nof VIC that reads a set of forcing files and outputs diurnally-varying\nsub-daily forcings.  The interpolation scheme, based on the Thornton and\nRunning (mtclim) algorithm, can convert from from daily Prec, Tmin, Tmax,\nand Wind to sub-daily Prec, AirTemp, Shortwave and Longwave radiation,\nWind, Pressure, and air Density.  The interpolated forms of Prec, Wind,\nPressure, and Density do not vary diurnally but are assumed constant\nduring each day.\n\nvicInterp is vicNl, compiled with the OUTPUT_FORCE option set to TRUE.\nAs such, vicInterp can read a standard VIC global parameter file.  While\nit will ignore many of the options, it understands (and requires) the\nfollowing:\n    TIMESTEP\n    STARTYEAR\n    STARTMONTH\n    STARTDAY\n    STARTHOUR\n    ENDYEAR\n    ENDMONTH\n    ENDDAY\n    GRID_DECIMAL\n    FORCING1\n    N_TYPES\n    FORCE_TYPE\n    FORCE_FORMAT\n    FORCE_ENDIAN\n    FORCE_DT\n    FORCEYEAR\n    FORCEMONTH\n    FORCEDAY\n    FORCEHOUR\n    SOIL\n    RESULT_DIR\nIn addition, the following options are optional:\n    BINARY_OUTPUT\n    ALMA_OUTPUT\n\nFor example, if FORCE_DT is 24 and TIMESTEP is 3, vicInterp will\ninterpolate the input daily forcings to a 3-hour time step.  If\nALMA_OUTPUT is TRUE, these output forcings will be standard ALMA\nvariables.\n\nThis new feature also involves an update to the OUTPUT_FORCE option\nthat fixes a bug in which output files were not properly closed\nbefore exiting.  This prevented all of the output data from being\ncompletely written.\n```\n\n## Bug Fixes:\n\nLarge water balance errors in daily water balance mode when snow is present\n\n```\nFiles Affected:\nsurface_fluxes.c\n\nDescription:\nFixed broken snow step in surface_fluxes.c.  Per-snow-step snow\nquantities were being reset at the beginning of each canopy-surface\nenergy balance iteration, preventing snow characteristics from being\naccumulated over all snow steps, and resulting in large water balance\nerrors.  Now per-iteration snow quantities are stored separately\nfrom per-snow-step quantities.\n```\n\nAerodynamic resistance incorrect in output fluxes file\n\n```\n    Files Affected:\n    IceEnergyBalance.c, LAKE.h, SnowPackEnergyBalance.c,\n    calc_surf_energy_bal.c, full_energy.c, func_canopy_energy_bal.c,\n    func_surf_energy_bal.c, ice_melt.c, lakes.eb.c, put_data.c,\n    snow_intercept.c, snow_melt.c, solve_snow.c, surface_fluxes.c,\n    vicNl.h, vicNl_def.h, wetland_energy.c\n\n    Description:\n    In 4.1.0 beta r2 and earlier, the aerodynamic resistance written to the\n    output fluxes file rarely reflected the value actually used in flux\n    computations.  This has been fixed.\n\n    VIC actually computes an array of 3 different aerodynamic resistances,\n    as follows:\n      aero_resist[0] : over vegetation or bare soil\n      aero_resist[1] : over snow-filled overstory\n      aero_resist[2] : over snow pack\n    VIC determines which element of the array to use depending on the\ncurrent vegetation type and whether snow is present.  In addition, in\nmost cases, VIC applies a stability correction to this aerodynamic\nresistance before using it in flux computations.  Furthermore, when the\ncurrent vegetation tile contains overstory and snow is present on the\nground, aero_resist[2] is used for snow pack flux computations and\neither aero_resist[1] or aero_resist[0] is used for canopy flux\ncomputations, meaning that two different aerodynamic resistances are in\nuse in the same time step.\n\n    However, VIC 4.1.0 beta r2 always wrote the uncorrected value of\n    aero_resist[0] to the fluxes file.\n\n    In 4.1.0 beta r3 and later, the value written to the fluxes file is the\n    actual value used in flux computations, including any corrections that\n    were applied.  In the case mentioned above in which two different\n    aerodynamic resistances are in use at the same time, the one used for\n    the snow pack is written.  In addition, the aerodynamic resistance of\n    the canopy air/surrounding atmosphere interface is not tracked.\n```\n\nAerodynamic resistance not correctly aggregated for output\n\n```\nFiles Affected:\nconv_results_vic2alma.c, put_data.c, vicNl_def.h\n\nDescription:\nIn previous releases, aerodynamic resistance (out_data->aero_resist)\nwas aggregated by a simple area-weighted average over veg tiles.  This\nled to an aggregate value that was not the true effective resistance\nof the entire grid cell.  Since evaporation is proportional to\n1/aero_resist, it is (1/aero_resist), or the aerodynamic conductivity,\nthat should be averaged over the grid cell.  Therefore, a new variable,\nout_data.aero_cond, was created for the purposes of aggregation.  After\naggregation, out_data.aero_resist is computed as 1/out_data.aero_cond.\n\nThe effect of the change is most pronounced when there is a large range\nof values of aerodynamic resistance among the veg tiles in a grid cell.\nThe effective aerodynamic resistance, computed the new way, will tend\nto be smaller than the old way when the values cover a wide range.\nHowever, the effective aerodynamic resistance will never be smaller than\nthe smallest value among the various veg tiles in the cell.\n```\n\nState variables for SPATIAL_FROST and LAKE_MODEL options not stored in state\nfile.\n\n```\nFiles Affected:\ndist_prec.c, initialize_model_state.c, read_initial_model_state.c,\nvicNl.h, write_model_state.c\n\nDescription:\nState variables for SPATIAL_FROST and LAKE_MODEL options were not stored\nin state files, causing these variables to be reset to default values\nwhen reading from an initial state file.  This has been fixed.\n\nNOTE: this fix involves a change in the format of state files which\nmakes state files used with 4.1.0 beta 3 incompatible with earlier\nreleases (and vice versa).\n```\n\nARNO_PARAMS global parameter option changed to BASEFLOW\n\n```\n    Files Affected:\n    display_current_settings.c\n    get_global_param.c\n    global.param.sample\n    initialize_global.c\n    read_soilparam.c\n    read_soilparam_arc.c\n    vicNl_def.h\n\n    Changed the name of the ARNO_PARAMS global parameter option to\n    BASEFLOW.  The meaning of the ARNO_PARAMS option was actually\n    opposite to its name: when ARNO_PARAMS was FALSE, VIC would\n    interpret the first four parameters in the soil parameter file\n    to be the standard ARNO soil parameters Ds, Dsmax, Ws, and c,\n    while when ARNO_PARAMS was TRUE, VIC would interpret the first\n    four parameters to be d1, d2, d3, and d4, the soil parameters\n    used in Nijssen et al. (2001).  The new option now can take\n    values of \"ARNO\" and \"NIJSSEN2001\".  When BASEFLOW == NIJSSEN2001,\n    VIC assumes the soil parameter file contains d1, d2, d3, and d4.\n    When BASEFLOW == ARNO, VIC assumes the soil parameter file\n    contains Ds, Dsmax, Ws, and c.\n```\n\nRemoved some snowband output\n\n```\nFiles Affected:\nwrite_data.c\n\nDescription:\n    Removed  net sw radiation, net lw, albedo, latent heat flux, \nsensible heat flux, ground heat flux\n```\n\nSTATE file option is now specified in global file, not in user_def.h at compile time\n\n```\n    Files Affected:\n\n    display_current_settings.c\n    dist_prec.c\n    get_global_param.c\n    initialize_global.c\n    open_state_file.c\n    user_def.h\n    vicNl.c\n    vicNl.h\n    vicNl_def.h\n    write_model_state.c\n\n    Previously, to be able to read/write state files, VIC required\n    users to define SAVE_STATE to be TRUE in user_def.h and\n    recompile VIC, in addition to having the correct settings of\n    INIT_STATE, STATENAME, STATEYEAR, STATEMONTH, and STATEDAY in\n    the global parameter file.\n\n    This was both unnecessary and confusing.  Setting SAVE_STATE\n    to FALSE did not improve VIC performance noticeably, and\n    having both a SAVE_STATE compile option and state file\n    information in the global parameter file only led to mistakes\n    in which the user made a change in one place without realizing\n    a change needed to be made elsewhere.\n\n    Now VIC behaves as follows:\n    1. To read an initial state file, the following line\n    must be in the global parameter file:\n      INIT_STATE init_state_filename\n\n    where init_state_filename is the name of the initial state\n    file.  If this line is absent or commented out (preceded by a\n    \"#\"), VIC will start from default initial conditions.\n\n    2. To write a state file during the simulation, the\n    following lines must be in the global parameter file:\n      STATENAME  state_file_name\n      STATEYEAR  state_year\n      STATEMONTH state_month\n      STATEDAY   state_day\n\n    where state_file_name is the path and prefix of the file to\n    save the state information in (the simulation date on which\n    the state file is saved will be appended to the state file\n    name), and state_year, state_month, and state_day are the\n    year, month, and day of the simulation on which to save state.\n    The state will be saved AFTER the FINAL time step of that\n    date.  If all of these lines are absent or commented out, VIC\n    will not save a state file.  If some (but not all) of these\n    lines are present, VIC will give an error.\n```\n\nNow reads extra_veg from state file\n\n```\n    Files Affected:\n    read_initial_model_state.c\n```\n\nReverting from version 5.10 to 5.9 in surface_fluxes.c \n\n```\n    Files Affected:\n    surface_fluxes.c\n\n    Energy balance errors had been introduced in the changes from 5.9 to 5.10.\n    This is an intermittent problem that appears to depend on versions of FreeBSD\n    when compiling with the optimization flag. This temporary reversion should\n    be okay as long as the time steps are sub-daily.  GCT\n```\n\nSkip reading/writing of snow band for areafract <= 0\n\n```\n    Files Affected:\n    read_initial_model_state.c\n    write_model_state.c\n\n    This will reduce the size of the statefile. GCT\n```\n\nLake model energy terms NaN for southern hemisphere lakes\n\n```\n    Files Affected:\n    lakes.eb.c\n\n    The computation of ks in the eddy() function was attempting to compute\n  ks=6.6*pow(sin((double)lat*PI/180.),0.5)*pow(wind,-1.84);\nhowever, in the southern hemisphere, lat is negative and ks evaluates\nto NaN, causing lake temperatures to all become NaN.  This line has\nbeen replaced by\n  ks=6.6*pow(sin((double)fabs(lat)*PI/180.),0.5)*pow(wind,-1.84);\nThis appears to fix the problem.    TJB\n```\n\nMiscellaneous fixes for memory leaks and uninitialized variables.\n\n```\n    Files Affected:\n\n    free_dist_prcp.c\n    get_global_param.c\n    initialize_lake.c\n    initialize_model_state.c\n    lakes.eb.c\n    make_dmy.c\n    mtclim42_vic.c\n    output_list_utils.c\n    parse_output_info.c\n    put_data.c\n    read_veglib.c\n    solve_snow.c\n    vicNl.c\n    vicNl.h\n\n    Description:\n\n    Miscellaneous fixes for memory leaks and uninitialized variables.\n    Also changed comments in vicNl.h to reflect type changes introduced\n    in 4.1.0._r4h   TJB\n```\n\n---\n\n## ****\\* Description of changes from VIC 4.1.0 beta r1 to VIC 4.1.0 beta r2 *****\n\n## New Features:\n\n\"-v\" and \"-o\" command-line options and display of run/compile-time options\n\n```\n    Files Affected:\n    cmd_proc.c, display_current_settings.c, get_global_param.c, global.h,\n    vicNl.c, vicNl.h, vicNl_def.h\n\n    Description:\n    In VIC 4.1.0 beta r2, if VERBOSE is TRUE, all compile-time options (from\n    user_def.h) and run-time options (from your global parameter file) are\n    displayed for you at the beginning of a model run.  If you are saving\n    your model output to a log file, this information will be stored with\n    your log, so you will have a record of the option settings that produced\n    the results of that particular model run.\n\nThe new \"-v\" option will display the release number of your vicNl\nexecutable.  For example, typing:\n    vicNl -v\ngives\n    ***** VIC Version 4.1.0 Beta Release 2 *****\n\n    Meanwhile, the new \"-o\" option displays the current compile-time\n    options.  One benefit of this option is that you can see what the\n    options in user_def.h were set to when vicNl was compiled, without\n    having to start a model run.  Since your version of user_def.h may have\n    changed since you compiled vicNl, this is the most reliable way to see\n    what these options are set to.  For example:\n\ngen.hydro.washington.edu 175: vicNl -o\n\n***** VIC Version 4.1.0 Beta Release 2 - Current Model Settings *****\n\nCOMPILE-TIME OPTIONS (set in user_def.h)\n----------------------------------------\n\nOutput to Screen:\nOUTPUT_FORCE_STATS      FALSE\nVERBOSE                 TRUE\n\nInput Files:\nNO_REWIND               TRUE\n\nOutput Files:\nLDAS_OUTPUT             FALSE\nLINK_DEBUG              FALSE\nOPTIMIZE                FALSE\nOUTPUT_FORCE            FALSE\nSAVE_STATE              FALSE\n\nSimulation Parameters:\nCLOSE_ENERGY            FALSE\nCOMPUTE_TREELINE        FALSE\nLAKE_MODEL              FALSE\nLOW_RES_MOIST           FALSE\nQUICK_FS                FALSE\nSPATIAL_FROST           FALSE\nSPATIAL_SNOW            FALSE\n\nMaximum Array Sizes:\nMAX_BANDS               10\nMAX_FRONTS               3\nMAX_LAKE_NODES          20\nMAX_LAYERS               3\nMAX_NODES               18\nMAX_VEG                 12\n\nSnow Constants:\nNEW_SNOW_ALB            0.850000\nSNOW_ALB_ACCUM_A        0.940000\nSNOW_ALB_ACCUM_B        0.580000\nSNOW_ALB_THAW_A         0.820000\nSNOW_ALB_THAW_B         0.460000\nTraceSnow               0.030000\n\nOther Constants:\nLAI_WATER_FACTOR        0.200000\nLWAVE_COR               1.000000\nMAXIT_FE                25\n```\n\nAutomatic recompilation on updates to *.h\n\n```\n    Files Affected:\n    Makefile\n\n    Description:\n    In VIC 4.1.0 beta r1, updating a .h file and recompiling VIC would not\nresult in recompilation of files that depend on the .h file, unless a\n\"make clean\" command was issued first.  Now, if any .h files are\n    updated, all dependent .c files are recompiled on the next \"make\".\n```\n\nNEW_ARNO_TYPE global option is now ARNO_PARAMS\n\n```\nFiles Affected:\nget_global_param.c, read_soilparam.c, vicNl_def.h\n\nDescription:\nChanged the name of the global option NEW_ARNO_TYPE to be ARNO_PARAMS.\n\"NEW_ARNO_TYPE\" is confusing, since this option will not be new\nforever, and doesn't refer to a \"type\" but rather a set of parameters.\n\nNOTE: This change requires the user to replace all occurrences of\n\"NEW_ARNO_TYPE\" in their global control files with \"ARNO_PARAMS\".\n```\n\n## Bug Fixes:\n\nSpurious condensation at low temperatures\n\n```\n    Files Affected:\n    arno_evap.c\n\n    Description:\n    Changed logic of evap limit check to avoid creating spurious\n    condensation.  In VIC 4.1.0 beta r1, whenever evaporation > (liquid\n    moisture - residual moisture), evaporation would be set to (liquid\n    moisture - residual moisture).  However, at low temperatures, when most\n    or all soil moisture is frozen, liquid moisture < residual moisture,\n    causing (liquid moisture - residual moisture) to be negative.  Any non-\n    negative evap would be greater than this, resulting in evap getting set\n    to (liquid moisture - residual moisture), which would be negative (i.e.\n    condensation).  This artificially created condensation in whatever\n    amount necessary to bring liquid moisture up to residual, causing 1)\n    large latent heat flux, 2) incorrect surface temperatures, 3) occasional\n    inability for calc_surf_energy_bal to converge in root_brent, and 4)\n    spuriously high runoff and baseflow.  Now there is an added condition\n    that liquid moisture > residual moisture for evap to be capped at\n    (liquid moisture - residual moisture).\n\n    NOTE: This fix results in lower runoff and baseflow in unvegetated areas\n    with frozen soils, and may require recalibration of soil parameters.\n```\n\nIncorrect baseflow limits\n\n```\n    Files Affected:\n    runoff.c\n\n    Description:\n    In 4.1.0 beta r1, runoff.c checked for the wrong bounds on baseflow,\n    allowing baseflow to become negative when liquid soil moisture < residual\n    moisture.  These bounds have been fixed in 4.1.0 beta r2, as follows:\n    baseflow is not allowed to exceed (liquid soil moisture - residual moisture);\n    when baseflow < 0, baseflow is set to 0; when baseflow > 0 and the resulting\n    soil moisture < residual moisture, water is taken out of baseflow and\n    given to the soil as follows:\n      if baseflow > (residual moisture - soil moisture), then\n        baseflow -= (residual moisture - soil moisture);\n        soil moisture += (residual moisture - soil moisture);\n      else\n        soil moisture += baseflow;\n        baseflow = 0;\n\n    NOTE: This fix may result in small changes in baseflow and evaporation.\n```\n\nRuns using initial state files starting at state file date rather than global\nstart date\n\n```\n    Files Affected:\n    check_state_file.c\n\n    Description:\n    In 4.1.0 beta r1, check_state_file.c would increment the index of the\n    forcing data array until it reached the record corresponding to the date\n    stored in the state file.  This caused the simulation to start at the\n    date at which the state file was saved rather than the start date\n    specified in the global parameter file.  If the state file's date was\n    earlier than the start date in the global parameter file, the index\n    would be incremented until a segmentation fault occurred.  This has\n    been fixed in 4.1.0 beta r2 so that the start date in the global parameter\n    file is always the start date of the simulation.  The date stored in\n    the initial state file is ignored.\n\n    NOTE: If you have been relying on the state file to dictate when your\n    simulations start, this fix may require you to change your global\n    parameter file so that STARTYEAR, STARTMONTH, etc. reflect the start\n    date/time you want.\n```\n\nIncorrect sublimation values for BLOWING option\n\n```\nFiles Affected:\nCalcBlowingSnow.c, IceEnergyBalance.c, SnowPackEnergyBalance.c,\ncalc_surf_energy_bal.c, func_surf_energy_bal.c, ice_melt.c, lakes.eb.c,\nlatent_heat_from_snow.c, put_data.c, snow_melt.c, solve_snow.c,\nsurface_fluxes.c, vicNl.h, vicNl_def.h\n\nDescription:\nFixed 3 bugs in the sublimation terms: 1) sub_surface was wrong when\nsnow step was not 1 hour, 2) sub_blowing was wrong under certain\nconditions, and 3) sub_blowing and sub_surface did not contain the\ncontribution from lakes, even though sub_total did.  The fix\nestablishes the convention that the internal variables VaporMassFlux,\nBlowingMassFlux, and SurfaceMassFlux always have units of kg/m2s; and\nthat internal variables vapor_flux, blowing_flux, and surface_flux\nalways have units of m/timestep.  Unnecessary terms were removed from\nthe parameter lists of several functions.\n\nNOTE: The effects of this fix on major water balance terms such as\nrunoff, baseflow, evaporation, etc. should be very small.\n\nNOTE 2: The lake contribution to sub_blowing is currently set to 0.\n```\n\nNegative incoming shortwave radiation at high latitudes\n\n```\n    Files Affected:\n    mtclim42_vic.c\n\n    Description:\n    In 4.1.0 beta r1, when sub-daily shortwave radiation is estimated from\n    daily min/max temperatures, negative values occasionally are calculated\n    in coastal areas above the Arctic Circle in winter.  Now, if estimated\n    sub-daily incident shortwave is negative, it is set to 0.0.\n```\n\nUndefined daily precipitation for deserts\n\n```\n    Files Affected:\n    mtclim42_vic.c\n\n    Description:\n    In 4.1.0 beta r1, if a grid cell's annual precipitation (specified in\n    the soil parameter file) is 0, then the adjusted daily precipitation\n    calculated in mtclim42_vic.c ends up being undefined.  In 4.1.0 beta r2\n    this has been fixed.\n\n    More specifically, the MTCLIM 4.2 algorithm (which VIC uses for\n    estimating sub-daily forcing values) was originally set up to expect a\n    base precipitation as an input, and to translate this base precip into\n    a site-specific precip via an adjustment function.  The adjustment\n    function multiplies the base precip by the ratio of site_isohyet to\n    base_isohyet to get site precipitation.  In calling the MTCLIM 4.2\n    functions, VIC sets site_isohyet and base_isohyet to the grid cell's\n    annual precipitation.  So this ratio should always = 1.  However,\n    when annual precipitation is 0.0, this ratio is undefined.  So, the\n    fix is to set the ratio to 1 when both site_isohyet and base_isohyet\n    are 0 (or very small). (found by Liz Clark)\n```\n\nSnow_flux incorrectly set to Tcanopy in fluxes output file\n\n```\nFiles Affected:\nput_data.c\n\nDescription:\nIn 4.1.0 beta r1, the snow_flux output variable was incorrectly set to\nTcanopy.  This has been corrected.\n```\n\nIncorrect value for sub_snow in fluxes output file\n\n```\nFiles Affected:\nwrite_data.c\n\nDescription:\nReplaced output of sub_snow[0] in fluxes file with sub_total.\n```\n\nSpecial case in Penman equation\n\n```\n    Files Affected:\n    penman.c\n\n    Description:\n    Changed\n            if (vpd > 0.0 && evap < 0.0)\n    to\n            if (vpd >= 0.0 && evap < 0.0)\n    to correctly handle evap when vpd == 0.0. (found by Justin Sheffield\n    at Princeton)\n```\n\nRint() function not supported on all platforms\n\n```\n    Files Affected:\n    compute_dz.c, initialize_atmos.c, read_soilparam.c,\n    read_soilparam_arc.c\n\n    Description:\n    Replaced rint(something) with (float)(int)(something + 0.5) to\n    handle rounding without resorting to rint(), which isn't supported\n    on all platforms.  (found by Justin Sheffield at Princeton)\n```\n\nGlobal parameter initialization\n\n```\n    Files Affected:\n    initialize_global.c\n\n    Description:\n    Initialize ARC_SOIL, COMPRESS, and ARNO_PARAMS to FALSE.  Also changed\n    limit on loop over forcing types from hard-coded 17 to variable\n    N_FORCING_TYPES.  (found by Justin Sheffield at Princeton)\n```\n\nBottom soil node thickness initialization\n\n```\n    Files Affected:\n    initialize_model_state.c\n\n    Description:\n    Initialize soil_con->dz_node[Nnodes] to 0.0, since it is accessed in\n    set_node_parameters().  (found by Justin Sheffield at Princeton)\n```\n\nCanopy evaporation and distributed precipitation\n\n```\n    Files Affected:\n    surface_fluxes.c\n\n    Description:\n    Fixed initialization of canopyevap to initialize for every value of\n    dist, rather than just dist 0. (found by Justin Sheffield at Princeton)\n```\n\nOutput debug file error\n\n```\n    Files Affected:\n    write_atmosdata.c\n\n    Description:\n    No longer close the debug file, since the next cell must write to it.\n    (found by Justin Sheffield at Princeton)\n```\n\nCalculation of deltaH when FS_ACTIVE is FALSE\n\n```\n    Files Affected:\n    func_surf_energy_bal.c\n\n    Description:\n    Added check that both FS_ACTIVE and FROZEN_SOIL are true before\n    adjusting *deltaH.  This is just a safety measure; ice and ice0 should\n    both be 0 when FS_ACTIVE is FALSE.  (found by Justin Sheffield at\n    Princeton)\n```\n\nRoot_brent error message clarification\n\n```\n    Files Affected:\n    calc_atmos_energy_bal.c, calc_surf_energy_bal.c, frozen_soil.c,\nice_melt.c, root_brent.c, snow_intercept.c, snow_melt.c, vicNl.h\n\n    Description:\n    Instead of printing warning or error messages, root_brent.c now\npasses descriptions of the errors to the functions that called it,\n    leaving it to them to describe the specific error and its consequences.\nIn 4.0.4, root_brent's messages sometimes were wrong.\n```\n\nDisplay current grid cell number for arc/info soil files\n\n```\n    Files Affected:\n    read_soilparam_arc.c\n\n    Description:\n    In 4.1.0 beta r1, for arc/info-format soil files, the current grid\n    cell is not displayed (for regular-format soil files, it is displayed).\n    Now the current grid cell number is always displayed.\n```\n\nInconsistent format in state file\n\n```\nFiles Affected:\nwrite_model_state.c\n\nDescription:\nRemoved initial space on veg/band info line in ASCII file.\n```\n\n## Pending Issues:\n\nLake model crashes when lake level gets too high\n\nLake model crashes when lake level gets too low\n\nCOMPUTE_TREELINE option non-functional\n\n```\nDescription:\nThis issue is waiting for completion of a treeline-computation scheme\nthat allows landcover fractions to be stated explicitly as a function\nof elevation band.\n```\n\nLakes smeared across multiple elevation bands\n\n```\nDescription:\nCurrently, VIC assumes that the percentage of grid cell area covered by\nlakes is constant throughout the grid cell, and therefore when multiple\nelevation bands are specified for a grid cell, the lake percentage is\ndistributed evenly across all elevations.  However, when modeling large\nlakes, this assumption does not hold; the bulk of the lake coverage may\nbe due to a single large lake, which by definition cannot exist in\nmultiple elevation bands.  Therefore, we need a way of explicitly\nspecifying lake coverage as a function of elevation.\n```\n\n---\n\nUpdates 7-30-2003: VIC 4.1.0 r1\n\n```\n(1) Added support for ASCII as well as Binary state files (NOTE: ASCII\nstate files were added for easier editing when trying to start the \nmodel from observed state - Only Binary state files will produce\nidentical runs if used to store and restart from the model state).\nAdded BINARY_STATE_FILE to the global file, if TRUE state file I/O\nis in binary, if FALSE it is ASCII.\n(2) Made certain that local NOFLUX flag is set in calc_surf_energy_bal.c\nevery time the routine is executed.\n(3) write_data.c: Corrected output of sub_snow variable to item [0] \nrather than a point - will need to decide what parts of this array \nare important to output.\n(4) Modified runoff.c so that only the top two layers are used when\ncomputing infiltration.  Previously, all but the bottom layer was \nused.  Therefore this only affects you if you tried running with\nmore than three layers.  This change was made as it makes more sense \nfor a situation where you are trying to improve the representation\n    of the soil column by increasing the resolution (and perhaps depth)\nof the soil column.\n(5) snow_utility.c (snow_density): Added check to keep compression from \naging from exceeding the actual depth of the snowpack.\n(6) solve_snow.c: Added check so that MELTING flag is only TRUE if melt\n    occurs in the melt season - currently this is defined between March 1 \nand October 1.  Otherwise the MELTING flag can trigger rapid very \nearly season melt.\n```\n\nUpdates 4-21-2003: Mering codes to form VIC 4.1.0 r0\n\n---\n\n```\nFrom comparison of LatestAdminSource and LatestTestSource\n\nDynamic allocation of as many arrays and structures as are currently \nused by the VIC model cause electric fence (a memory debugging tool)\nto bog down/fail in the allocation process.  As the allocation of\nmemory is unlikely to be the cause of new memory errors, hard wired \nmemory can be used instead, letting eleectric fence penetrate further\ninto the code.\nalloc_atmos.c: (KAC) MEMORY_DEBUG update\nModified so that dynamic allocation of the atmospheric data arrays\ndoes not occur when the debugging code is linked to the model.  \nThis makes it possible to use electric fence to debug memory errors\nwithout changing the model code.  Previously, dynamic allocation\nof the atmospheric arrays was only skipped if VIC was configured \nfor optimization work.\nvicNl_def.h: (KAC) MEMORY_DEBUG update\n    See alloc_atmos.c.\n\nNewest version of the model had water balance errors when using \ndistributed precipitation.  Model crashes were also witnessed.  Fixed\nerrors introduced by other model updates.\narno_evap.c: (KAC) DIST_PRCP fix\nMoved unit conversion of moist_resid outside of the distributed\nprecipitation loop.  This prevents it from being multiplied by \nD1 * 1000 twice for the DRY fraction of the grid cell.\ninitialize_model_state.c: (KAC) DIST_PRCP fix\n    Modified to initialize soil and vegetation parameters for the dry \ngrid cell fraction, if distributed precipitation is activated.\nsnow_intercept.c: (KAC) DIST_PRCP fix\n    Added check of intercepted before mass balance error calculation.  \nSince interception quantity can be greater than Wd_max when snow \nis present, the routine could return dew values higher than maximum \nin a time step when intercepted snow melted.  If there is no other \nsnow, and distributed precipitation is active this could cause the \nmodel to crash in redistribute_during_storm as it will be unable to \nconserve water when too much water is in the canopy.\n\n** Make sure that all updates from surface_fluxes.c are accounted for\nafter merge with 4.0.4beta **\n```\n\n---\n\n```\nFrom comparison of LatestAdminSource (updated above) and LaurasNewestSource\n\nIceEnergyBalance.c: (LCB) LAKE_WETLAND updates\n    SnowFlux variable renamed to qf to match the lake-ice model \ndocumentation.\nLAKE.h: (LCB) LAKE_WETLAND updates\n    Modified some model parameters (need to check with Laura as to their\napplicability outside dissertation basins).  Also updated profiles\nfor several subroutines.\nSnowPackEnergyBalance.c: (KAC) OTHER\n    Certain constant definitions have been moved to vicNl_def.h to \nstandardize the location of model constants.  This is especially \nuseful for eliminating redundant and unused constant definitions.\nSnowPackEnergyBalance.c: (LCB) BLOWING_SNOW update\n    New variables are passed to the routine and along to \nlatent_heat_from_snow to add the effects of blowing snow to the\naccumulation and ablation of the snowpack.\ncalc_surf_energy_bal.c: (LCB) BLOWING_SNOW update\n    Modified to include the effects of blowing snow in the surface \nenergy balance calulations.\nclose_files.c: (LCB) LAKE_WETLAND updates\n    Now closes the lake and wetland debugging file.\nfull_energy.c: (LCB) BLOWING_SNOW updates\n    Modified to handle blowing snow.\nfull_energy.c: (LCB) LAKE_WETLAND updates\nModified to output lake model variables during debugging.\nfunc_surf_energy_bal.c: (LCB) BLOWING_SNOW updates\n    Modified to handle blowing snow.\nfunc_surf_energy_bal.c: (KAC) OTHER\n    Modified so that the calculation of sensible heat flux so that \noccurs in all model versions.  This eliminates a problem in\nWB mode where sensible heat flux was not set to 0, instead it\nshowed the cumulative sensible heat flux from the snowpack.\nget_global_param.c: (LCB) BLOWING_SNOW update\n    Added BLOWING_SNOW parameter\nget_global_param.c: (Jenny?) NEW_ARNO_TYPE\n    Added parameter for reading Bart's new Arno parameters\nget_global_param.c: (LCB) LAKE_WETLAND updates\n    Added PRT_LAKE parameter to output lake variables during debugging.\nice_melt.c: (LCB) LAKE_WETLAND updates\n    Modified method by which lake coverage fraction and ice height \n    are updated? ** Check with Laura **\ninitialize_global.c: (LCB) LAKE_WETLAND updates\n    Added the initialization of PRT_LAKE to the list of debugging flags.\ninitialize_global.c: (LCB) BLOWING_SNOW update\n    Added initialization of BLOWING_SNOW to the list of global parameters.\ninitialize_lake.c: (LCB) LAKE_WETLAND updates\n    Made improvements to the initialization process for lakes.  \n    ** Check with Laura **\ninitialize_model_state.c: (LCB) LAKE_WETLAND updates\n    Modified to initialize lake variables.\ninitialize_snow.c: (LCB) BLOWING_SNOW update\n    Modified to initalize blowing_snow variable.\ninitialize_soil.c: (LCB) LAKE_WETLAND updates\n    Modified to initialize wetland soil moisture.\ninitialize_veg.c: (LCB) LAKE_WETLAND updates\n    Modified to get the maximum number of vegetation types passed to \nit.  This allows the maximum number of vegetation types to include \nthe wetland vegetation fraction when the lake model is active.\nlakes.eb.c: (LCB) LAKE_WETLAND updates\n    Modifications were made to improve handling of snow and ice and to \nmake the lake algorithm interact with the wetland algorithm.\nlatent_heat_from_snow.c: (LCB) BLOWING_SNOW update\n    Modified to handle the effects of blowing snow.\nmake_dist_prcp.c: (LCB) LAKE_WETLAND updates\n    Modified to allocate vegetation variables for the wetland \nvegetation class.\nmake_in_and_outfiles.c: (LCB) OTHER\n    Modified to print notification that the output fluxes file will be \nin a binary format.\nopen_debug.c: (LCB) LAKE_WETLAND updates\nModified to open lake model debugging file.\nput_data.c: (LCB) LAKE_WETLAND updates\n    Updated output of lake variables to reflect algorithm changes.  \nput_data.c: (LCB) BLOWING_SNOW update\n    Added output variables for blowing snow algorithm.\nread_lakeparam.c: (LCB) LAKE_WETLAND updates\n    Modified to reflect updates to the lake and wetland algorithms.\nread_soilparam.c: (JA) OTHER\n    Modified to convert from Bart's new Arno parameters into the \n    standard parameters (Dsmax, Ds, Ws, and c).\nread_vegparam.c: (LCB) BLOWING_SNOW update\n    Added code to read in blowing snow parameters.\nsnow_melt.c: (LCB) BLOWING_SNOW update\n    Modified to handle blowing snow.\nsoil_conduction.c (set_node_parameters): (KAC) OTHER\n    Modified to correct differences between calculations to determine \nmaximum node moisture and node moisture, so that nodes on the \nboundary between soil layers are computed the same way for both.\nsoil_conduction.c (distribute_node_moisture_properties): (KAC) OTHER\n    Modified to check that node soil moisture is less than or equal \nto maximum node soil moisture, otherwise an error is printed to \nthe screen and the model exits.\nsolve_snow.c: (LCB) BLOWING_SNOW update\n    Modified to handle the effects of blowing snow.\nsurface_fluxes.c: (LCB) BLOWING_SNOW update\n    Modified to add the effects of blowing snow.\nuser_def.h: (KAC) SPATIAL_SNOW\n    Added TraceSnow to indicate the minimum depth of new snow required \nto reset the snow surface albedo from the ablation to the \naccumulation curve.\nvicNl.c: (LCB) LAKE_WETLAND updates\n    Updated storage of lake water for water balance calculations.\nvicNl.h: (LCB,KAC,JA)\n    Updated to reflect model changes.\nvicNl_def.h: (LCB,KAC,JA)\n    Updated to reflect model changes.\nwater_energy_balance.c: (LCB) LAKE_WETLAND updates\n    Updated to reflect changes in algorithm structure.\nwater_under_ice.c: (LCB) LAKE_WETLAND updates\n    Updated to reflect changes in algorithm structure.\nwrite_data.c: (LCB) LAKE_WETLAND updates\n    Updated output of model for lakes and wetlands algorithm.\n    ** No lake variables are output when using LDAS format. **\nwrite_data.c: (KAC) BLOWING_SNOW update\n    Added additional sublimation terms to LDAS and standard snow\n    output files.\n\nAdded:\nCalcBlowingSnow.c: (LCB) BLOWING_SNOW update\n    Subroutine to compute the effects of blowing snow on snowpack \nsublimation.\nwetland_energy.c: (LCB) LAKE_WETLAND updates\n    Subroutine computes the surface energy balance for exposed \nwetland vegetation.\n```\n\n---\n\n```\nFrom comparison of LatestAdminSource (updated above) and SOURCE_4.0.4beta\n\nCalcAerodynamic.c: (KAC) CANOPY_ENERGY_BALANCE update\n    This routine was modified to store wind speed, aerodynamics\nresistance, reference height, roughness lengh and displacement\nheight for three conditions: (1) snow-free, (2) snow-covered and\n(3) canopy wind speed.\nSnowPackEnergyBalance.c: No Changes Needed\nStabilityCorrection.c: (KAC) OTHER\n    Moved definition of G (gravity) to vicNl_def.h to provide a \nconsistant location for all model constants.\nalloc_atmos.c: No Changes Needed\narno_evap.c: No Changes Needed\ncalc_longwave.c: No Changes Needed\ncalc_rainonly.c: \n    Why does version 4.0.4 check to see if MAX_SNOW_TEMP <= MIN_RAIN_TEMP,\nrather than justt less than as the new version does?  Was this a bug\nor personal preference?  ** Check This **\ncalc_surf_energy_bal.c: (KAC) CANOPY_ENERGY_BALANCE update\n    Modified to work with the canopy energy balance updates.\ncalc_surf_energy_bal.c: (KAC) SPATIAL_FROST update\n    Modified to work with the spatial frost updates.\ncalc_surf_energy_bal.c: (KAC) QUICK_SOLVE update\n    Modified determine the minimum number of soil thermal nodes to \ncapture the maximum amount of the surface energy flux exchange.\nThis reduces solution time with frozen soil significantly, but \nincreases energy balance errors.\ncanopy_energy_bal.c: (KAC)\nThis include changes for spatial snow and frost plus the new\ncanopy energy balance.  No notes indicate fixes made to v4.0.4\nthat need to be incorporated.\n- converted internal time step accounting to seconds from hours\n- added check to further restrict evaporative losses if ice content\n  is less than wilting point, otherwise dry soils can evaporate too\n  much if ice is present.\ncheck_files:\nAdded lines for lake file\ncheck_state_file.c: (KAC) STATE_FILE updates\n    Modified to work with new binary state file, fixed in version 4.0.4.\nclose_files:\nAdded lines for lake file\ncompress_files.c: No changes made\nModified to nice the backgrounded file compression processes.\ndist_prcp.c: (KAC) DIST_PRCP, TREELINE and STATE_FILE updates\nThis will have to be carefully merged, as there are several fixes\nand improvements which should be maintained.  Some of these include \nfixes to the accounting storms, updates for spatial frost and snow,\nupdates for the state file, updates to account for the treeline.\n** This will involve some extra effort, especially since distributed\nprecipitation variables are now account for in several locations. **\n--> DRY_TIME and STILL_STORM are now computed separatly for vegetation\n    types, this needs to be incorporated into state file.\nfrozen_soil.c: (KAC)\nModified so that soil layer ice content is only calculated if the \nfrozen soil algorithm is implemented and active in the current grid \ncell.\nfull_energy.c: (KAC)\nAdded lake algorithm, and canopy energy balance updates.  Nothing\nappears to be needed from v4.0.4.\nfunc_surf_energy_bal.c: (KAC)\nupdated for spatial snow and frost as well as the canopy energy \nbalance.  No important changes in v4.0.4 found.\nget_global_param.c: (KAC)\n    Nothing new in v4.0.4, all additions are in the admin code.\ninitialize_atmos.c: (KAC)\n    Modified to initialize atmospheric pressues in Pa rather than kPa,\nall calculations now use Pa eliminating internal conversions.  Added\ntreeline calculations. Added output of forcing file statistics (this\nis in addition to the output of forcing files which was in v4.0.3).\ninitialize_global.c: (KAC)\n    Added initialization of lake variables, blowing snow variables and\nQUICK_SOLVE for frozen soil energy fluxes.\ninitialize_model_state.c: (KAC)\n    Updated for canopy energy balance, new model state file, and lakes \nand wetlands algorithm.\ninitialize_new_storm.c: (KAC)\n    Modified to work with spatial frozen soil.\ninitialize_snow.c: (KAC)\n    Modified to initialize blowing snow and spatial snow algorithm \n    variables.\nmake_dist_prcp.c: (LCB)\n    Modified to include wetland variables in the new structures.\nmake_dmy.c:\n    Only white space changes\nmake_in_and_outfiles.c: (KAC)\n    Lake model file control was added\nmtclim42_vic.c: (KAC) \n    Modified to compute all pressures in Pa rather than kPa.\nmtclim42_vic.h: (KAC)\n    Definition of EPS constant moved to vicNl_def.h\nmtclim42_wrapper.c: (KAC)\n    Changed calls to vicrerror to calls to nrerror.  Now handles \npressure in Pa, rather than kPa.\nopen_state_file.c: (KAC)\n    Updated to handle binary state file.\npenman.c: (KAC)\n    Now handles pressure in Pa, rather than kPa.\nprepare_full_energy.c: (KAC)\n    modified so that ice content is set to zero unless the frozen soil \nalgorithm is implemented and active in the current grid cell. \nput_data.c: (KAC)\n    modified to incorporate the effects of treeline calculations, the\nlake and wetland algorithm, spatial snow and frost algorithms, and \nthe canopy energy balance.\nread_atmos_data.c: (KAC)\n    v4.0.4 multiplies nrecs by NF to check for a long enough file,\n    v.4.1.0 multiples by dt.  I think new version is probably correct.\nread_initial_model_state.c: (KAC)\n    Updated to handle binary state file.  Need to address storm state\nvariables!\nread_snowband.c: (KAC)\nModified to allocate treeline variable.  Will need to update to fix\n    lake model/snow band problem!\nread_soilparam.c: (KAC, JA)\n    Modified to read in spatial snow and frost parameters and to read in \nBart's new Arno parameter set.  \nread_soilparam_arc.c: (KAC)\n    Modified to read in spatial snow and frost parameters and to read in \nBart's new Arno parameter set.\nread_vegparam.c: (DP,KAC)\n    Modified code to update Wdmax based on LAI values read in for the \ncurrent grid cell.  If LAI is not obtained from this function, then \nthe values cacluated in read_veglib.c are left unchanged.\nredistribute_during_storm.c: (KAC)\n    Modified to work with distributed snow and frozen soil.\nrunoff.c: (KAC)\n    Modified to handle spatial snow and soil frost.\nsnow.h: (KAC)\n    Added minimum SWQ for computing snow pack energy balance.  Added\n    coefficients of shortwave attenuation through the snowpack.  \nRemoved minimum SWQ for full coverage, now included in the soil \nfiles.\nsnow_intercept.c: (KAC)\n    Modified to handle new variables required to close the canopy \nenergy balance.\nsnow_melt.c: (KAC)\n    Modified to handle partial snow cover.  Modified to assure that \nground heat flux is used properly in the snow surface energy \nbalance as well as imporving the handling of energy fluxes for \npartial snow cover.  Modified to handle blowing snow.\nsnow_utility.c: (KAC)\n    Moved definition of G to vicNl_def.h.\nsoil_conduction.c: (KAC)\nset_node_parameters:\n    Modified to correct differences between calculations to determine \nmaximum node moisture and node moisture, so that nodes on the \nboundary between soil layers are computed the same way for both.\ndistribute_node_moisture_propertes:\nModified to check that node soil moisture is less than or equal to \nmaximum node soil moisture, otherwise an error is printed to the \nscreen and the model exits.\nestimate_layer_ice_content:\nModified to find ice content in spatial frost bands.\nsolve_snow.c: (KAC)\n- Added partial snow cover and advection of sensible heat from local \nbare patches.\n- Modified to pass the minimum depth of full snow cover as a variable \nin soil_con rather than a globally defined constant.\n- Fixed check of new snow accumulation for setting understory flag to \nuse snowfall[WET] not snowfall.\n- Set MELTING flag to maintain melting albedo curve even during brief \nperiods of refreezing, until a snowfall exceeds SnowThres.\n- Modified to handle the effects of blowing snow.\n- Modified to handle closed canopy energy balance.\nsurface_fluxes.c: (KAC)\n    - Modified to handle partial snow cover.\n    - Modified to iterate a solution for the exchange of energy between \nthe snowpack and the ground surface.\n    - Modified to add the effects of blowing snow.\n    - Fixed indexing problem for sub-daily snow model within daily water \nbalance VIC: hour (now hidx) is incremented by 1 rather than the \nsub-daily time step, so the atmospheric forcing data is now properly \nindexed.\n- Indexing fix sent SNOW_STEP to calc_surf_energy_bal rather than the \nmodel time step, meaning that without snow the evaporation was \ncomputed for SNOW_STEP hours rather than a full day.  This was fixed \nby introducing step_inc to index the arrays, while step_dt keeps \ntrack of the correct time step.\nsvp.c: (KAC)\n    Modified internal calculations to use kPa rather than Pa for \nconsistancy\nuser_def.h: (KAC)\n    Added options for lake model, closing the canopy energy balance,\ncomputing the treeline, computing statistics from the input \nforcings, and controls for spatial snow and frost.\nvicNl.c: (KAC)\n    - Added controls for lake model.\n- Updated storage of lake water for water balance calculations.\n- Modifed to add AboveTreeLine to soil_con_struct so that the model \ncan make use of the computed treeline.\n- Modified to initialize storm parameters using the state file.\n    - Modified to start the model by skipping records until the state \nfile date is found.  This replaces the previous method of modifying \nthe global file start date, which can change the interpolation of \natmospheric forcing data.\n- Modified to store wet and dry fractions when intializing water \nbalance storage.  This accounts for changes in model state \ninitialization, which now stores wet and dry fractions rather than \njust averaged values.\nvicNl.h: (KAC)\n    Added definitions for treeline and forcing stats subroutines and\nmade some needed modifications to subroutine definitions due to\nother changes, however, other changes still need to be made.\nvicNl_def.h: (KAC)\n    Modified to handle lake algorithm, blowing snow, spatial snow and\nfrost, and treeline calculations.\nwrite_data.c: (KAC)\n- Made hour a variable in all output data file formats even if the \nmodel is run at a daily time step.  Also modified all output files \nto account for new variables introduced by the spatial frost and \nsnow algorithms, the lake algorithm and the PILPS 2e study.\n- Added energy fluxes to snow band output files.\n- Updated output of model for lakes and wetlands algorithm.  Added \noutput of blowing snow sublimation to LDAS and standard snow output \nfiles.  ** No Lake Variables are included in the LDAS output format. \n**\n- Modified LDAS SWQ output, so that it is multiplied by 10 instead \nof 100 before being converted to a short integer.  This reduces \nstored value precision to 0.1, but increases the maximum storable \nSWQ, which was exceeded in previous LDAS simulations.\n    - Eliminated different formats between energy balance and water\nbalance model output.\nwrite_debug.c: (KAC)\n    Modified to work with closed canopy energy balance.\nwrite_forcing_file.c: (KAC)\nModified to output pressures, which are handled internally in kPa, \nas Pa for backward compatability.\nwrite_layer.c: (KAC)\n    Modified to handle spatial soil frost.\nwrite_model_state.c: (KAC)\n- Rewritten to handle updates to vicNl_def.h and to write the file \nas binary to minimize write time and differences with simulations \nstarted with the state file.\n- Model is now restarted with the correct values for mu and \nLAST_STORM.\n    ** Still need to account for differences with distributed \nprecipitation flags, which now differ with vegetation - also need\nto check storage of lake variables, blowing snow variables and \nMELTING flag.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29818", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29818/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29818/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.0.4", "id": 29818, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODE4", "tag_name": "VIC.4.0.4", "target_commitish": "master", "name": "Release of VIC 4.0.4", "draft": false, "prerelease": false, "created_at": "2004-05-07T00:39:53Z", "published_at": "2013-08-20T19:34:19Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.0.4", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.0.4", "body": "June 4, 2003: VIC release 4.0.4beta r2\n\nThis covers bugs found during tests with the snow algorithm.\n\n```\n    solve_snow.c: Bug found by KAC\n    Counter for number of days since last snowfall was \n    incremented twice in the MELTING update.  This has been\n    fixed.\nsolve_snow.c: modification by KAC\n    Added check so that MELTING flag is only TRUE if melt\n    occurs in the melt season - currently this is defined\n    between March 1 and October 1.  Otherwise the MELTING\n    flag can trigger rapid very early season melt\nwrite_model_state.c, read_initial_model_state.c, open_state_file.c,\ncheck_state_file.c: Modification by KAC\n    Modified to handle both ASCII and BINARY state files.\n    NOTE: ASCII mode is designed to make it easier to create \n    a state file for initializing a point model.  It includes \n    all features of the Binary state file, but values are \n    truncated so the resulting restart will not be identical.\n    If you need an exact restart, use the Binary files.  Also\n    removed ice content from the state file as it is computed\n    at the beginning of each time step, so storing its value\n    is unnecessary.\n```\n\n---\n\nApril 23, 2003: VIC release 4.0.4beta r1\n\nThis covers bug fixes found by beta testers and fixed in the version of \nthe code bundled with this file.\n\n```\nsurface_fluxes.c: (found by Ingjerd Haddeland)\n    Indexing fix sent SNOW_STEP to calc_surf_energy_bal rather\n    than the model time step, meaning that without snow the \n    evaporation was computed for SNOW_STEP hours rather than a\n    full day.  This was fixed by introducing step_inc to \n    index the arrays, while step_dt keeps track of the correct\n    time step. \n```\n\n---\n\nMarch 27, 2003: VIC release 4.0.4beta\n\nThis release covers patches for several bugs found in 4.0.3, which were \nnever formally released (i.e. the downloadable source code was modified, \nbut no major announcement was made).  It also includes other fixes and \nmodifications that have been identified as being needed prior to releasing \nversion 4.1.0, which will involve several significant changes (including \nlakes & wetlands, spatial snow & frost, and a closed canopy energy balance).\n\nModifications:\n\n```\nSnow albedo update: (found by Keith)\n     In previous releases, the snow albedo function has been hyper \n     sensitive to trace amounts of snowfall during the melt period.  \n     Whenever new snow falls or the cold content falls below 0, the \n     albedo is switched from the ablation curve to the accumulation \n     curve.  This curve is then followed until the cold content \n     exceeds 0, indicating it is in the spring melt season.  This is \n     fine when accounting for thin early season snowpacks or mid-\n     season melt events, however, a cold snap or light dusting of \n     snow should not reset the snowpack albedo to much higher winter \n     values for days or weeks at a time.  This release of the model \n     monitors the state of pack with the variable MELTING.  This \n     flag keeps the snowpack on the ablation curve unless new snow-\n     fall exceeds a threshold (TraceSnow in user_def.h) indicating \n     that the top of the snowpack should be represented by the albedo \n     of the new snow.\nModel initialization: (found by Ulysses and Keith)\n     In previous releases, the initialization of soil layer moist[] \n     and ice[] was within a second set of loops for band and \n     vegetation, using the same counters.  Because of the dual use\n     of counters, initialization was not completed correctly.  The\n     primary effect of this was that thermal node values beyond the\n     first vegetation type were not correctly initialized, which \n     caused the model to crash during some simulations with full\n         energy or frozen soils active.  Without frozen soil, most \n     simulations would compensate for the problem within their\n     spin-up time, so it is unlikely that this bug impacts any \n     simulations not employing frozen soil.\nSnow time step: (found by Andy, et al.)\n     The snow algorithm needs to run sub-daily for the energy balance\n     components to function properly.  This means that for daily \n     simulations, the snow model must be solved at a finer (sub-daily)\n     time step.  In the previous release, initialize_atmos.c stored\n     sub-daily met data in each days variable using positions (e.g. \n         0,1,..8 for 3 hour data).  In surface_fluxes.c the model indexed \n     the sub-daily time steps used by the snow algorithm with hours \n     (e.g. 0,3,6,...21 for three hour data).  This means the arrays\n     were incorrectly indexed and the resulting model simulations \n     would be wrong.  The fix implemented here has been tested under \n     several model configurations and is deemed the official version.\n     WARNING: There are several versions of this fix circulating,\n     please update your code to this version - the previous fixes\n     may not work in all circumstances!\nFROZEN_SOIL active flag: (found by Ed and Justin)\n     The cause of the problem is a bug in the code that occurs when \n     the global frozen soils flag (FROZEN_SOILS) is set to true but \n     the individual cell frozen soil flag (FS_ACTIVE) is set to \n     false. This causes the change in soil heat storage to be \n     calculated incorrectly.  This was fixed by adding additional\n     conditions within frozen_soil.c and initialize_model_state.c,\n     which verify the FS_ACTIVE is TRUE before running \n     estimate_layer_ice_content.  This avoids the problem of the \n     soil layer ice content being set to a positive value, ignored\n     by the rest of the model.\nVapor pressure: (Keith)\n     All internal vapor pressure calculations are now done in \n     Pascals.  Previous release versions, switched between Pa\n     and kPa, so this simply removes the extra step.  The input\n     file format is unchanged, so there should be no change to\n     model output (model might run slightly faster, but it is\n     also unlikely that this will be witnessed by a normal user).\nConstant dew despite changing LAI: (Dave Peterson)\n     The modification of read_vegparam.c to update LAI based on \n     a grid cell specific value did not change the values of Wdmax.  \n     Wdmax values were computed in read_veglib.c based on the \n     default LAI values, so they did not necessarily reflect the \n     actually LAI values used for the grid cell.  Values for Wdmax \n     are now computed in read_vegparam.c whenever GLOBAL_LAI are \n     provided.  The effects of this change will change in magnitude\n     based on how different the cell LAI values are from those in\n     the default library file.\nDRY_TIME error: (Reinur Schnur)\n     DRY_TIME in dist_prcp.c was incremented by the time step in \n     hours.  Then to see if the current rain was part of the same \n     storm or the start of a new one, DRY_TIME was checked to see \n     if it was greater than or equal to 24/dt.  This compares \n     DRY_TIME in hours to the model time step.  The \"/dt\" has been \n     removed, so now DRY_TIME is checked versus the hours since the \n     last storm.\nState file: (KAC)\n     *** WARNING: This may require modifications to your global file ***\n     The state file has been modified to account for model updates.\n     It has also been converted to write binary files - this makes \n     them less convenient to edit, but means that model starts using\n     the same forcing, soil and vegetation files will produce the\n     exact same results.  There has also been a slight change in how\n     the global file is set up to restart the model.  The global\n     file should now have the same year, month, day and hour as the \n     original global file - the VIC model will compute the number of\n     records to skip at the beginning to reach the point where the \n     model state was saved.  This means that calculations to yield\n     sub-daily metrological forcings from daily forcings will produce \n     the exact same forcing values -> this also means that restarted\n     simulations will be exactly the same as the original run.  Slight\n     variations in the model results were also introduced because the\n     method for storing soil node depths led to the possibility of \n     very small differences in dz_node for the restarted model.  \n     Previous versions also did not store the snowpack cold content,\n     this meant that for restarts during winter, the snowpack albedo\n     might start on the ablation curve (as cold content was initialized\n     to 0 and not to a value less than 0) rather than the accumulation\n     curve.  This could lead to slight differences in the snowpack\n     if no new snow fell and the snowpack was not melting - but\n     after 10 years of simulations the differences were minor.  As \n     noted above the new version of the state file should allow the\n     model to be restarted and to produce exactly the same results as\n     the original complete result.  If there are cases where this is\n     not true, please report.  If you edit the read/write model state\n     functions - BE VERY CAREFUL to edit Nbytes to reflect any changes.\nCOMPUTE_TREELINE: (KAC and LCB)\n     This is an added feature which computes the treeline elevation\n     in the current grid cell and does not include vegetation \n     fractions with overstory in the grid cell averages for snow bands\n     that exceed the treeline elevation.  This feature was added\n     to the model to reduce the appearance of \"glaciers\" in high\n     elevation snow bands.  It computes average annual July air\n     temperatures using the temperature data from the atmospheric\n     forcing files (WARNING - elevation of treeline may change if\n     the period of forcing data used changes).  It then lapses the\n     average annual July air temperature to locate the elevation \n     at which it equals 10C.  This is assumed to be the treeline,\n     so vegetation types with overstory in snow bands with average \n     elevations higher than this, are excluded from the grid cell\n     average variables in put_data.c.  For the time being full \n     energy and water balances are still computed for these \n     vegetation fractions, and no attempt is made to verify that\n     a snow band has a non-overstory vegetation type that can be \n     expanded to represent the coverage area lost due to the \n     exclusion of the overstory fraction.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29816", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29816/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29816/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.0.3", "id": 29816, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODE2", "tag_name": "VIC.4.0.3", "target_commitish": "master", "name": "Release of VIC 4.0.3", "draft": false, "prerelease": false, "created_at": "2004-05-07T00:32:27Z", "published_at": "2013-08-20T19:32:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.0.3", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.0.3", "body": "August 15, 2000: VIC release 4.0.3\n\nThis release fixes a problem with the implementation of va_arg that \ncauses run time errors on some systems.  Previous releases of the code \nworked correctly on the LINUX and freeBSD systems where it was tested. \nHowever on some systems (including Sun Ultra-2s) character variables \npassed with va_arg are changed into integers so reading a character from \nthe argument list does not produce the value sent to the routine.  The\ncharacter flags used by VIC to indicate if there is snow present and if\nthe frozen soil algorithm has been activated have now been converted to \nintegers, which should make the va_arg call work on all systems.\n\nAlso fixed in this release was a check in dist_prec.c to see if it is \nstill raining which actually used the memory address of the \nprecipitation variable rather than the daily value in the check.\n\nMODIFIED FILES:\n    read_atmos_data.c   -   Fixed input file time step check\n    write_forcing_files.c   -   Added free statements for pointers\n    calc_surf_energy_bal.c  -   Converted char flags to int\n    dist_prec.c     -   Fixed logical statement error\n    frozen_soil.c       -   Converted char flags to int\n    func_surf_energy_bal.c  -   Converted char flags to int\n    initialize_atmos.c  -   Added flag for output forcing\n    vicNl.h         -   Converted char flags to int\n    vicNl_def.h     -   Converted char flags to int\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29815", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29815/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29815/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.0.2", "id": 29815, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODE1", "tag_name": "VIC.4.0.2", "target_commitish": "master", "name": "Release of VIC 4.0.2", "draft": false, "prerelease": false, "created_at": "2004-05-07T00:32:09Z", "published_at": "2013-08-20T19:31:35Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.0.2", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.0.2", "body": "July 19, 2000: VIC release 4.0.2\n\nTwo new pre-processor options have been added to VIC as well as minor \nmodifications to two subroutines.  \n\nIf set to TRUE the NO_REWIND pre-processor option stops the VIC model from\nrewinding the soil and vegetation parameter input files for each new grid\ncell.  This reduces run times but requires that all input files are in the\nsame order as the soil parameter file.  \n\nIf set TRUE the OUTPUT_FORCE pre-processor option blocks off the main\nmodel and only reads the provided forcing files. Once VIC has estimated\nthe missing forcing parameters the full forcing data set for the defined\nsimulation period is output to a series of gridded forcing files.  The\ngridded forcing files are written to the RESULTS directory defined in the\nglobal control file with the prefix \"full_data_\".  The new files are in\nBinary or ASCII depending on the setting of BINARY_OUTPUT.\n\nThe error messages in get_global_param.c have been modified so that the\ncorrect file is referenced when telling the user to change values found in\nthe model source code.\n\nIn read_soilparam.c, the soil parameters are defined only if the current\ngrid cell is run, otherwise the line in the file is skipped and soil_con\nis returned without new data values.\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29814", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29814/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29814/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.0.1", "id": 29814, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODE0", "tag_name": "VIC.4.0.1", "target_commitish": "master", "name": "Release of VIC 4.0.1", "draft": false, "prerelease": false, "created_at": "2004-05-07T00:31:51Z", "published_at": "2013-08-20T19:30:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.0.1", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.0.1", "body": "May 30, 2000: VIC release 4.0.1\n\nIncreased use of the released VIC model code has lead to the\ndiscovery of a couple of minor bugs.  This release fixes those bugs as\nwell as introducing a improved precipitation correction algorithm based on \nYang et al. 1998.  Unless you have encountered these problems or are\ntrying to correct precipitation undercatch due to wind, in the VIC\nmodel, your results will not be impacted by these fixes.\n\nMODIFIED FILES:\n    correct_precip.c       - changed to WMO correction equation for\n                             NWS 8\" standard gauge.\n    full_energy.c          - modified to handle WMO correction.\n    initialize_atmos.c     - modified to handle WMO correction.\n                             fixed error in estimating minimum daily \n                             temperature from sub-daily temperatures.\n    make_in_and_outfiles.c - removed line that opened the state file\n                             again for each new grid cell.\n    open_state_file.c      - modified comments.\n    put_data.c             - modified to handle WMO correction.\n    snow_utility.c         - cleaned source code.\n    solve_snow.c           - modified to handle WMO correction.\n    surface_fluxes.c       - modified to handle WMO correction.\n    vicNl.h                - modified to handle WMO correction.\n    vicNl_def.h            - modified to handle WMO correction.\n\nREFERENCE:\n\n```\nYang, D., B. E. Goodison, J. R. Metcalfe, V. S. Golubev, R.\nBates, T. Pangburn, and C. L. Hanson, Accuracy of NWS 8\" Standard \nNonrecording Precipitation Gauge: Results and Application of WMO \nIntercomparison, J. Atmos. Oceanic Tech., 15, 54-68, 1998.\n```\n"}
{"url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29812", "assets_url": "https://api.github.com/repos/UW-Hydro/VIC/releases/29812/assets", "upload_url": "https://uploads.github.com/repos/UW-Hydro/VIC/releases/29812/assets{?name,label}", "html_url": "https://github.com/UW-Hydro/VIC/releases/tag/VIC.4.0.0", "id": 29812, "author": {"login": "jhamman", "id": 2443309, "node_id": "MDQ6VXNlcjI0NDMzMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/2443309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhamman", "html_url": "https://github.com/jhamman", "followers_url": "https://api.github.com/users/jhamman/followers", "following_url": "https://api.github.com/users/jhamman/following{/other_user}", "gists_url": "https://api.github.com/users/jhamman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhamman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhamman/subscriptions", "organizations_url": "https://api.github.com/users/jhamman/orgs", "repos_url": "https://api.github.com/users/jhamman/repos", "events_url": "https://api.github.com/users/jhamman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhamman/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5ODEy", "tag_name": "VIC.4.0.0", "target_commitish": "master", "name": "Release of VIC 4.0.0", "draft": false, "prerelease": false, "created_at": "2004-05-07T00:31:23Z", "published_at": "2013-08-20T19:28:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/UW-Hydro/VIC/tarball/VIC.4.0.0", "zipball_url": "https://api.github.com/repos/UW-Hydro/VIC/zipball/VIC.4.0.0", "body": "Date: May 16, 2000\n\nFrom: Keith Cherkauer\n\nTopic: Release of VIC 4.0.0\n\nThe code for VIC release 4.0.0 has undergone several months of tests (as\nVIC release 3.3.0 Beta) and has now been deemed ready for release to the\ngeneral public.  This document is designed to provide information\nconcerning changes in the model between the last release version (3.2.1)\nand the current version.\n\nThere is no formal users manual, information about how to use the current\nversion can be found at\nhttp://www.hydro.washington.edu/Lettenmaier/Models/VIC/VIChome.html.  \nInformation about the basic model design can be found in Liang, et al.\n(1994), while the rewrite of the source code as well as the addition of\ncold season processes is described in Cherkauer and Lettenmaier (1999).\n\nThe VIC macroscale hydrologic model was developed as a research tool.  As\nsuch it is the users responsibility to verify that it is working correctly\nwhen applied to new situations.  When using the VIC model reference should\nbe made to Liang, et al. (1994) and Cherkauer and Lettenmaier (1999) as\nwell as an acknowledgment that the code was received from the University\nof Washington.  Other important papers relating to the development of the\nVIC model are included on the home page and in the source code.\n\nPossible bugs in the code should be reported to\nvicadmin@hydro.washington.edu.  ALWAYS CHECK YOUR INPUT FILES!  Most\n\"bugs\" are actually caused by trying to run the model with bad parameters\nor forcing data.  The VIC model will run limited checks to find common\nmajor errors but in most cases it will attempt to run with the bad values.  \nIf after checking all of your input data you still believe you have found\na bug in the model, send an e-mail including the complete output from the\nmodel as well as a description of the problem and the files necessary to\nrun the model to recreate the code (if files are large please put a\ncompressed tar file in\nftp://ftp.ce.washington.edu/pub/HYDRO/vicadmin/TEMP).  Outdated and\nmodified versions of the code are the responsibility of the user to debug.  \nModifications made to the code, which may improve the general model\nperformance, may be submitted to vicadmin@hydro.washington.edu for\npossible inclusion in future versions of the code.\n\nVIC release 4.0.0 represents a major change to the source code from\nversion 3.2.1.  It is strongly recommended that if you were using version\n3.2.1 or earlier versions that you update with a complete copy of the new\ncode.\n\nMajor changes from release version 3.2.1 to 4.0.0:\n- Radiation Estimation Update: The routines to estimate shortwave and\n  longwave radiation as well as vapor pressure from daily minimum and\n  maximum temperature and precipitation have been updated to correspond to\n  the algorithm described by Thornton and Running (1999).  These routines\n  provide significantly improved radiation estimates especially in regions\n  outside the continental United States.\n- Model Core Update: The core of the VIC model was rewritten so that all\n  modes of the model (water balance, energy balance, etc.) make use of the\n  same model code.  This makes it easier to modify the model and have\n  modifications apply to sll modes, it also allows the model to run with new\n  combinations of algorithms (i.e. full energy balance mode with the finite\n  difference ground heat flux solution).\n- Soil Moisture Transport Update: The frozen and thawed sub-layers added\n  to the model for the original frozen soil algorithm have been removed.  \n  This makes the soil drainage routine cleaner and faster.  Frozen soils now\n  estimate full layer ice contents from the ice content at each soil thermal\n  node.  Without being confined by sub-layers, the frozen soil algorithm can\n  now be applied to regions of permafrost.\n- Forcing File Control Added: Version 4.0.0 moves controls of the forcing\n  file format and data types into the global control file.  The model can\n  now handle most ASCII column and short int Binary files without writing\n  new subroutines and recompiling the source code.\n- Pre-processor Options Added: There are now more option flags in the\n  source code headers to control which parts of the model are in fact\n  compiled.  This allows the model functionality to be adjusted without the\n  addition of computationally intensive conditional switching statements.\n- Model State File: With the release of version 4.0.0 separate snow and\n  soil initialization files have been combined into a single model state\n  file.  The state file can be created outside the model for starting\n  simulations with prescribed initial conditions, or the model state can be\n  saved by VIC at a specified date.  Note that currently there will be small\n  differences between a full and a warm started simulation because radiation\n  and vapor pressure are estimated using forcing data from the simulation\n  period, not from the full dataset included in the forcing file.  It also\n  does not store wet and dry fraction information, when running with\n  distributed precipitation the model is restarted using average soil\n  conditions.\n\nReferences:\n\nLiang, X., D. P. Lettenmaier, E. F. Wood, and S. J. Burges, A simple\nhydrologically based model of land surface water and energy fluxes for\nGSMs, J. Geophys. Res., 99(D7), 14,415-14,428, 1994.\n\nCherkauer, K. A., and D. P. Lettenmaier, Hydrologic effects of frozen\nsoils in the upper Mississippi River basin, J. Geophys. Res., 104(D16),\n19,599-19,610, 1999.\n\nThornton, P.E. and S.W. Running, An improved algorithm for estimating\nincident daily solar radiation from measurements of temperature, humidity,\nand precipitation, Ag. For. Met., 93, 211-228, 1999.\n"}

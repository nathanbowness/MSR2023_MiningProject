{"url": "https://api.github.com/repos/python-attrs/attrs/releases/73062967", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/73062967/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/73062967/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/22.1.0", "id": 73062967, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAciG_84EWto3", "tag_name": "22.1.0", "target_commitish": "main", "name": "22.1.0", "draft": false, "prerelease": false, "created_at": "2022-07-28T13:03:05Z", "published_at": "2022-07-28T13:27:48Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/22.1.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/22.1.0", "body": "# Highlights\r\n\r\nThe main features of this release are:\r\n\r\n- The departure of Python 2.7 (enjoy your retirement!),\r\n- and the arrival of Python 3.11.\r\n\r\nWe had loftier goals feature-wise, but didn't want to block others embracing Python 3.11.\r\n\r\n\u2764\ufe0f **Huge** thanks to my [GitHub sponsors](https://github.com/sponsors/hynek), [Tidelift subscribers](https://tidelift.com/subscription/pkg/pypi-attrs), and [Ko-fi buyers](https://ko-fi.com/the_hynek)! \u2764\ufe0f\r\n\r\nNone of my projects would exist in their current form without you!\r\n\r\n# Full Changelog\r\n\r\n## Backwards-incompatible Changes\r\n\r\n-   Python 2.7 is not supported anymore.\r\n\r\n    Dealing with Python 2.7 tooling has become too difficult for a volunteer-run project.\r\n\r\n    We have supported Python 2 more than 2 years after it was officially discontinued and feel that we have paid our dues. All version up to 21.4.0 from December 2021 remain fully functional, of course. [\\#936](https://github.com/python-attrs/attrs/issues/936)\r\n\r\n-   The deprecated `cmp` attribute of `attrs.Attribute` has been removed. This does not affect the *cmp* argument to `attr.s` that can be used as a shortcut to set *eq* and *order* at the same time. [\\#939](https://github.com/python-attrs/attrs/issues/939)\r\n\r\n## Changes\r\n\r\n-   Instantiation of frozen slotted classes is now faster. [\\#898](https://github.com/python-attrs/attrs/issues/898)\r\n-   If an `eq` key is defined, it is also used before hashing the attribute. [\\#909](https://github.com/python-attrs/attrs/issues/909)\r\n-   Added `attrs.validators.min_len()`. [\\#916](https://github.com/python-attrs/attrs/issues/916)\r\n-   `attrs.validators.deep_iterable()`'s *member_validator* argument now also accepts a list of validators and wraps them in an `attrs.validators.and_()`. [\\#925](https://github.com/python-attrs/attrs/issues/925)\r\n-   Added missing type stub re-imports for `attrs.converters` and `attrs.filters`. [\\#931](https://github.com/python-attrs/attrs/issues/931)\r\n-   Added missing stub for `attr(s).cmp_using()`. [\\#949](https://github.com/python-attrs/attrs/issues/949)\r\n-   `attrs.validators._in()`'s `ValueError` is not missing the attribute, expected options, and the value it got anymore. [\\#951](https://github.com/python-attrs/attrs/issues/951)\r\n-   Python 3.11 is now officially supported. [\\#969](https://github.com/python-attrs/attrs/issues/969)\r\n", "reactions": {"url": "https://api.github.com/repos/python-attrs/attrs/releases/73062967/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 9, "eyes": 0}}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/56137586", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/56137586/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/56137586/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/21.4.0", "id": 56137586, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAciG_84DWJdy", "tag_name": "21.4.0", "target_commitish": "main", "name": "21.4.0", "draft": false, "prerelease": false, "created_at": "2021-12-29T13:09:30Z", "published_at": "2021-12-29T13:21:45Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/21.4.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/21.4.0", "body": "This is a quick bug fix release for a regression that causes `coverage report` fail under certain circumstances.\r\n\r\n\r\n# Full Changelog\r\n\r\n## Changes\r\n\r\n-   Fixed the test suite on PyPy3.8 where `cloudpickle` does not work. [#892](https://github.com/python-attrs/attrs/issues/892)\r\n-   Fixed `coverage report` for projects that use `attrs` and don't set a `--source`. [#895](https://github.com/python-attrs/attrs/issues/895), [#896](https://github.com/python-attrs/attrs/issues/896)\r\n", "reactions": {"url": "https://api.github.com/repos/python-attrs/attrs/releases/56137586/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/56066912", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/56066912/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/56066912/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/21.3.0", "id": 56066912, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAciG_84DV4Ng", "tag_name": "21.3.0", "target_commitish": "main", "name": "21.3.0", "draft": false, "prerelease": false, "created_at": "2021-12-28T05:59:47Z", "published_at": "2021-12-28T06:58:49Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/21.3.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/21.3.0", "body": "This is a big release in the history of `attrs` and finishes an arc that took way too long and also delayed this very overdue release. But it's done: `import attrs` that has been talked about for years[^issue], but fell victim to \u201cjust this one more thing\u201d has _finally_ landed.\r\n\r\nFrom now on, modern `attrs` code looks like this:\r\n\r\n```python\r\nfrom attrs import define\r\n\r\n@define\r\nclass HelloWorld:\r\n    modern: bool = True\r\n```\r\n\r\nThe `define`/`field` APIs have been around for over a year and were very popular, now the rest of the package followed suit. I'm very excited that `attrs` remains relevant and keeps evolving over now more than half a decade. If you're curious about some of the background, the docs now contain a short [explanation and history lesson](https://www.attrs.org/en/stable/names.html). As long as our users keep pushing us, we will keep pushing forward class generation in Python!\r\n\r\nBig thanks to my [GitHub Sponsors](https://github.com/sponsors/hynek/dashboard), [Tidelift subscribers](https://tidelift.com/subscription/pkg/pypi-attrs?utm_source=pypi-attrs&utm_medium=referral&utm_campaign=enterprise&utm_term=repo), and [Ko-fi buyers](https://ko-fi.com/the_hynekl) that help me mustering the motivation for such long-running project!\r\n\r\n---\r\n\r\nSince the release took so long, there's more highlights than we can enumerate here, we'd just like to point out a breaking change in the new APIs: converters now run on setting attributes by default. If this is causing problems to you, you can disable that behavior by setting `@define(on_setattr=[])`.\r\n\r\n[^issue]:  I have an issue from 2018 that I wanted to \"come back the moment this lands\".\r\n\r\n# Full Changelog\r\n\r\n## Backward-incompatible Changes\r\n\r\n-   When using `@define`, converters are now run by default when setting an attribute on an instance -- additionally to validators. I.e. the new default is `on_setattr=[attrs.setters.convert, attrs.setters.validate]`.\r\n\r\n    This is unfortunately a breaking change, but it was an oversight, impossible to raise a `DeprecationWarning` about, and it's better to fix it now while the APIs are very fresh with few users. [#835](https://github.com/python-attrs/attrs/issues/835), [#886](https://github.com/python-attrs/attrs/issues/886)\r\n\r\n-   `import attrs` has finally landed! As of this release, you can finally import `attrs` using its proper name.\r\n\r\n    Not all names from the `attr` namespace have been transferred; most notably `attr.s` and `attr.ib` are missing. See `attrs.define` and `attrs.field` if you haven't seen our next-generation APIs yet. A more elaborate explanation can be found [On The Core API Names](https://www.attrs.org/en/latest/names.html)\r\n\r\n    This feature is at least for one release **provisional**. We don't *plan* on changing anything, but such a big change is unlikely to go perfectly on the first strike.\r\n\r\n    The API docs have been mostly updated, but it will be an ongoing effort to change everything to the new APIs. Please note that we have **not** moved -- or even removed -- anything from `attr`!\r\n\r\n    Please do report any bugs or documentation inconsistencies! [#887](https://github.com/python-attrs/attrs/issues/887)\r\n\r\n## Changes\r\n\r\n-   `attr.asdict(retain_collection_types=False)` (default) dumps collection-esque keys as tuples. [#646](https://github.com/python-attrs/attrs/issues/646), [#888](https://github.com/python-attrs/attrs/issues/888)\r\n-   `__match_args__` are now generated to support Python 3.10's [Structural Pattern Matching](https://docs.python.org/3.10/whatsnew/3.10.html#pep-634-structural-pattern-matching). This can be controlled by the `match_args` argument to the class decorators on Python 3.10 and later. On older versions, it is never added and the argument is ignored. [#815](https://github.com/python-attrs/attrs/issues/815)\r\n-   If the class-level *on_setattr* is set to `attrs.setters.validate` (default in `@define` and `@mutable`) but no field defines a validator, pretend that it's not set. [#817](https://github.com/python-attrs/attrs/issues/817)\r\n-   The generated `__repr__` is significantly faster on Pythons with f-strings. [#819](https://github.com/python-attrs/attrs/issues/819)\r\n-   Attributes transformed via `field_transformer` are wrapped with `AttrsClass` again. [#824](https://github.com/python-attrs/attrs/issues/824)\r\n-   Generated source code is now cached more efficiently for identical classes. [#828](https://github.com/python-attrs/attrs/issues/828)\r\n-   Added `attrs.converters.to_bool()`. [#830](https://github.com/python-attrs/attrs/issues/830)\r\n-   `attrs.resolve_types()` now resolves types of subclasses after the parents are resolved. [#842](https://github.com/python-attrs/attrs/issues/842) [#843](https://github.com/python-attrs/attrs/issues/843)\r\n-   Added new validators: `lt(val)` (\\< val), `le(va)` (\u2264 val), `ge(val)` (\u2265 val), `gt(val)` (> val), and `maxlen(n)`. [#845](https://github.com/python-attrs/attrs/issues/845)\r\n-   `attrs` classes are now fully compatible with [cloudpickle](https://github.com/cloudpipe/cloudpickle) (no need to disable `repr` anymore). [#857](https://github.com/python-attrs/attrs/issues/857)\r\n-   Added new context manager `attrs.validators.disabled()` and functions `attrs.validators.(set|get)_disabled()`. They deprecate `attrs.(set|get)_run_validators()`. All functions are interoperable and modify the same internal state. They are not \u2013 and never were \u2013 thread-safe, though. [#859](https://github.com/python-attrs/attrs/issues/859)\r\n-   `attrs.validators.matches_re()` now accepts pre-compiled regular expressions in addition to pattern strings. [#877](https://github.com/python-attrs/attrs/issues/877)\r\n", "reactions": {"url": "https://api.github.com/repos/python-attrs/attrs/releases/56066912/reactions", "total_count": 19, "+1": 0, "-1": 0, "laugh": 0, "hooray": 19, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/42592331", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/42592331/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/42592331/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/21.2.0", "id": 42592331, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQyNTkyMzMx", "tag_name": "21.2.0", "target_commitish": "main", "name": "21.2.0", "draft": false, "prerelease": false, "created_at": "2021-05-07T09:22:34Z", "published_at": "2021-05-07T09:39:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/21.2.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/21.2.0", "body": "Yesterday's 21.1.0 has unfortunately two regressions that we're fixing with today's 21.2.0 release:\r\n\r\n- The new recursive mode for `attr.evolve()` broke some use cases.\r\n- `attrs` is not importable under Python 3.4 anymore. While 3.4 hasn't been supported for a while now, we don't want it throw errors after installation.\r\n\r\nWe've reverted the changes to `attr.evolve()` and added packaging metadata blocking Python 3.4.\r\n\r\nAdditionally, we are [yanking](https://pypi.org/help/#yanked) 21.1.0 from PyPI. If you've pinned `attrs` to 21.1.0, this does **not** affect you in *any* way."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/42524883", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/42524883/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/42524883/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/21.1.0", "id": 42524883, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQyNTI0ODgz", "tag_name": "21.1.0", "target_commitish": "main", "name": "21.1.0", "draft": false, "prerelease": false, "created_at": "2021-05-06T08:20:55Z", "published_at": "2021-05-06T08:32:40Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/21.1.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/21.1.0", "body": "I am *extremely* excited to announce the release of *attrs* 21.1.0.\r\n\r\n*attrs* is the direct ancestor of \u2013 and the inspiration for \u2013 *dataclasses* in the standard library and remains the more powerful option for creating regular classes without getting bogged down with writing identical boilerplate again and again:\u00a0<https://www.attrs.org/>\r\n\r\nHeartfelt thanks go to my generous [GitHub sponsors](https://github.com/sponsors/hynek), companies subscribing to *attrs* on [Tidelift](https://tidelift.com/subscription/pkg/pypi-attrs), and people who\u00a0bought me a coffee on [Ko-fi](https://ko-fi.com/the_hynek)!\u00a0Support like that\u00a0makes me work on FOSS on a Saturday afternoon \u2013 especially when a release drags itself like this one! <3\r\n\r\nWhile this release took a bit longer than I wished for, it comes with many exciting changes. The highlights alone are longer than a usual changelog:\r\n\r\n- The **next-generation APIs** (`@attr.define`, `@attr.mutable`, `@attr.frozen`, `@attr.field`) are deemed **stable** now. The old ones aren't going anywhere, but I encourage you to check the new ones out \u2013 they're much nicer!\r\n- ***pyright* and *pylance* support**: Eric Traut of Microsoft was kind enough to involve me in their work on the [dataclass_transforms](https://github.com/microsoft/pyright/blob/master/specs/dataclass_transforms.md) spec.\r\n\r\n  As a result, Microsoft's type checker [*pyright*](https://github.com/microsoft/pyright) will work with this *attrs* release, and so will their Python language server [*pylance*](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance) which should be exciting to *VS Code* users.\r\n  \r\n  Currently it only supports a subset of *attrs*'s features, but it's the most important ones and more will most likely follow. Some of the limitations are documented in our [documentation on type annotations](https://www.attrs.org/en/stable/types.html#pyright).\r\n- **Customization of field comparison**. This is something especially *NumPy* users have been asking for for a long time: you can now fully customize how a field is compared. We also ship a helper to avoid boilerplate code. So if you'd like to have an object with a *NumPy* array that compares correctly, this is the way:\r\n\r\n  ```python\r\n  import attr\r\n  import numpy\r\n\r\n  @attr.define\r\n  class C:\r\n      an_array = attr.field(eq=attr.cmp_using(eq=numpy.array_equal))\r\n  ```\r\n\r\n  Check out the [new documentation on comparison](https://www.attrs.org/en/stable/comparison.html) for details.\r\n- To make it more ergonomic, I've decided to **un-deprecate the `cmp` argument** again, so you can customize `eq` and `order` in one go. Sorry about the trouble! The `cmp` *attribute* remains deprecated.\r\n- New powerful **`__init__` helpers**:\r\n    1. If *attrs* deduces you don't want it to write a `__init__` for you, it will create an `__attrs_init__` instead that you can call from your custom `__init__`.\r\n    2. If *attrs* finds a `__attrs_pre_init__`, it will call it without any arguments before doing any initializations. This is really only useful if you want to run `super().__init__()`, but that's a use-case people have asked for for years!\r\n  \r\n  See [Hooking Yourself Into Initialization](https://www.attrs.org/en/latest/init.html#hooking-yourself-into-initialization) for details.\r\n- In preparation for the (rescinded) plan to make `from __future__ import annotations` the default in **Python 3.10**, `attr.resolve_types()` can now also be used to resolve types inside of `field_transformer`s.\r\n\r\n\r\n# A Look Ahead\r\n\r\nFor the next release we've got even bigger plans! By stabilizing the next-generation APIs we can finally go the last step, I've been talking for years (yeah, sorry): `import attrs`.\r\n\r\n*attrs*'s playful APIs (`@attr.s`, `@attr.ib`) lost a bit of their charm as the scope of the package grew \u2013 especially after the introduction of type annotations.\r\n\r\nWhile the old APIs aren't going anywhere, in the next feature release  there will be *additionally* an `attrs` package that you can use as an alternative to `attr`. No more `attr.Factory`!\r\n\r\nThe new package gives us the opportunity to rethink the defaults of some functions. So if you have any pet peeves, please air them on [\\#487](https://github.com/python-attrs/attrs/issues/487#issuecomment-832581079).\r\n\r\n\r\n# Full Changelog\r\n \r\n\r\n## Deprecations\r\n\r\n-   The long-awaited, much-talked-about, little-delivered `import attrs` is finally upon us!\r\n\r\n    Since the NG APIs have now been proclaimed stable, the **next** release of `attrs` will allow you to actually `import attrs`. We're taking this opportunity to replace some defaults in our APIs that made sense in 2015, but don't in 2021.\r\n\r\n    So please, if you have any pet peeves about defaults in `attrs`'s APIs, *now* is the time to air your grievances in \\#487! We're not gonna get such a chance for a second time, without breaking our backward-compatibility guarantees, or long deprecation cycles. Therefore, speak now or forever hold you peace! [\\#487](https://github.com/python-attrs/attrs/issues/487)\r\n\r\n-   The *cmp* argument to `attr.s()` and <span class=\"title-ref\">attr.ib()</span> has been **undeprecated** It will continue to be supported as syntactic sugar to set *eq* and *order* in one go.\r\n\r\n    I'm terribly sorry for the hassle around this argument! The reason we're bringing it back is it's usefulness regarding customization of equality/ordering.\r\n\r\n    The `cmp` attribute and argument on `attr.Attribute` remains deprecated and will be removed later this year. [\\#773](https://github.com/python-attrs/attrs/issues/773)\r\n\r\n## Changes\r\n\r\n-   It's now possible to customize the behavior of `eq` and `order` by passing in a callable. [\\#435](https://github.com/python-attrs/attrs/issues/435), [\\#627](https://github.com/python-attrs/attrs/issues/627)\r\n\r\n-   The instant favorite [next-generation APIs](https://www.attrs.org/en/stable/api.html#next-gen) are not provisional anymore!\r\n\r\n    They are also officially supported by Mypy as of their [0.800 release](https://mypy-lang.blogspot.com/2021/01/mypy-0800-released.html).\r\n\r\n    We hope the next release will already contain an (additional) importable package called `attrs`. [\\#668](https://github.com/python-attrs/attrs/issues/668), [\\#786](https://github.com/python-attrs/attrs/issues/786)\r\n\r\n-   If an attribute defines a converter, the type of its parameter is used as type annotation for its corresponding `__init__` parameter.\r\n\r\n    If an `attr.converters.pipe` is used, the first one's is used. [\\#710](https://github.com/python-attrs/attrs/issues/710)\r\n\r\n-   Fixed the creation of an extra slot for an `attr.ib` when the parent class already has a slot with the same name. [\\#718](https://github.com/python-attrs/attrs/issues/718)\r\n\r\n-   `__attrs__init__()` will now be injected if `init=False`, or if `auto_detect=True` and a user-defined `__init__()` exists.\r\n\r\n    This enables users to do \"pre-init\" work in their `__init__()` (such as `super().__init__()`).\r\n\r\n    `__init__()` can then delegate constructor argument processing to `self.__attrs_init__(*args, **kwargs)`. [\\#731](https://github.com/python-attrs/attrs/issues/731)\r\n\r\n-   `bool(attr.NOTHING)` is now `False`. [\\#732](https://github.com/python-attrs/attrs/issues/732)\r\n\r\n-   It's now possible to use `super()` inside of properties of slotted classes. [\\#747](https://github.com/python-attrs/attrs/issues/747)\r\n\r\n-   Allow for a `__attrs_pre_init__()` method that -- if defined -- will get called at the beginning of the `attrs`-generated `__init__()` method. [\\#750](https://github.com/python-attrs/attrs/issues/750)\r\n\r\n-   Added forgotten `attr.Attribute.evolve()` to type stubs. [\\#752](https://github.com/python-attrs/attrs/issues/752)\r\n\r\n-   `attrs.evolve()` now works recursively with nested `attrs` classes. [\\#759](https://github.com/python-attrs/attrs/issues/759)\r\n\r\n-   Python 3.10 is now officially supported. [\\#763](https://github.com/python-attrs/attrs/issues/763)\r\n\r\n-   `attr.resolve_types()` now takes an optional *attrib* argument to work inside a `field_transformer`. [\\#774](https://github.com/python-attrs/attrs/issues/774)\r\n\r\n-   `ClassVar`s are now also detected if they come from [typing-extensions](https://pypi.org/project/typing-extensions/). [\\#782](https://github.com/python-attrs/attrs/issues/782)\r\n\r\n-   To make it easier to customize attribute comparison (\\#435), we have added the `attr.cmp_with()` helper.\r\n\r\n    See the [new docs on comparison](https://www.attrs.org/en/stable/comparison.html) for more details. [\\#787](https://github.com/python-attrs/attrs/issues/787)\r\n\r\n-   Added **provisional** support for static typing in `pyright` via the [dataclass\\_transforms specification](https://github.com/microsoft/pyright/blob/master/specs/dataclass_transforms.md). Both the `pyright` specification and `attrs` implementation may change in future versions of both projects.\r\n\r\n    Your constructive feedback is welcome in both [attrs\\#795](https://github.com/python-attrs/attrs/issues/795) and [pyright\\#1782](https://github.com/microsoft/pyright/discussions/1782). [\\#796](https://github.com/python-attrs/attrs/issues/796)\r\n"}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/33494311", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/33494311/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/33494311/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/20.3.0", "id": 33494311, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMzNDk0MzEx", "tag_name": "20.3.0", "target_commitish": "master", "name": "20.3.0", "draft": false, "prerelease": false, "created_at": "2020-11-05T10:00:51Z", "published_at": "2020-11-05T10:11:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/20.3.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/20.3.0", "body": "Backward-incompatible Changes\r\n-----------------------------\r\n\r\n-   `attr.define()`, `attr.frozen()`, `attr.mutable()`, and `attr.field()` remain **provisional**.\r\n\r\n    This release does **not** change change anything about them and they are already used widely in production though.\r\n\r\n    If you wish to use them together with mypy, you can simply drop [this plugin](https://gist.github.com/hynek/1e3844d0c99e479e716169034b5fa963#file-attrs_ng_plugin-py) into your project.\r\n\r\n    Feel free to provide feedback to them in the linked issue \\#668.\r\n\r\n    We will release the `attrs` namespace once we have the feeling that the APIs have properly settled. [\\#668](https://github.com/python-attrs/attrs/issues/668)\r\n\r\nChanges\r\n-------\r\n\r\n-   `attr.s()` now has a *field\\_transformer* hook that is called for all `Attribute`s and returns a (modified or updated) list of `Attribute` instances. `attr.asdict()` has a *value\\_serializer* hook that can change the way values are converted. Both hooks are meant to help with data (de-)serialization workflows. [\\#653](https://github.com/python-attrs/attrs/issues/653)\r\n-   `kw_only=True` now works on Python 2. [\\#700](https://github.com/python-attrs/attrs/issues/700)\r\n-   `raise from` now works on frozen classes on PyPy. [\\#703](https://github.com/python-attrs/attrs/issues/703), [\\#712](https://github.com/python-attrs/attrs/issues/712)\r\n-   `attr.asdict()` and `attr.astuple()` now treat `frozenset`s like `set`s with regards to the *retain\\_collection\\_types* argument. [\\#704](https://github.com/python-attrs/attrs/issues/704)\r\n-   The type stubs for `attr.s()` and `attr.make_class()` are not missing the *collect\\_by\\_mro* argument anymore. [\\#711](https://github.com/python-attrs/attrs/issues/711)\r\n"}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/30772584", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/30772584/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/30772584/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/20.2.0", "id": 30772584, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMwNzcyNTg0", "tag_name": "20.2.0", "target_commitish": "master", "name": "20.2.0", "draft": false, "prerelease": false, "created_at": "2020-09-05T10:19:09Z", "published_at": "2020-09-05T10:37:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/20.2.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/20.2.0", "body": "Backward-incompatible Changes\r\n=============================\r\n\r\n-   `attr.define()`, `attr.frozen()`, `attr.mutable()`, and `attr.field()` remain **provisional**.\r\n\r\n    This release fixes a bunch of bugs and ergonomics but they remain mostly unchanged.\r\n\r\n    If you wish to use them together with mypy, you can simply drop [this plugin](https://gist.github.com/hynek/1e3844d0c99e479e716169034b5fa963#file-attrs_ng_plugin-py) into your project.\r\n\r\n    Feel free to provide feedback to them in the linked issue \\#668.\r\n\r\n    We will release the `attrs` namespace once we have the feeling that the APIs have properly settled. [\\#668](https://github.com/python-attrs/attrs/issues/668)\r\n\r\nChanges\r\n=======\r\n\r\n-   `attr.define()` et al now correct detect `__eq__` and `__ne__`. [\\#671](https://github.com/python-attrs/attrs/issues/671)\r\n\r\n-   `attr.define()` et al\\'s hybrid behavior now also works correctly when arguments are passed. [\\#675](https://github.com/python-attrs/attrs/issues/675)\r\n\r\n-   It\\'s possible to define custom `__setattr__` methods on slotted classes again. [\\#681](https://github.com/python-attrs/attrs/issues/681)\r\n\r\n-   In 20.1.0 we introduced the `inherited` attribute on the `attr.Attribute` class to differentiate attributes that have been inherited and those that have been defined directly on the class.\r\n\r\n    It has shown to be problematic to involve that attribute when comparing instances of `attr.Attribute` though, because when sub-classing, attributes from base classes are suddenly not equal to themselves in a super class.\r\n\r\n    Therefore the `inherited` attribute will now be ignored when hashing and comparing instances of `attr.Attribute`. [\\#684](https://github.com/python-attrs/attrs/issues/684)\r\n\r\n-   `zope.interface` is now a \\\"soft dependency\\\" when running the test suite; if `zope.interface` is not installed when running the test suite, the interface-related tests will be automatically skipped. [\\#685](https://github.com/python-attrs/attrs/issues/685)\r\n\r\n-   The ergonomics of creating frozen classes using `@define(frozen=True)` and sub-classing frozen classes has been improved: you don\\'t have to set `on_setattr=None` anymore. [\\#687](https://github.com/python-attrs/attrs/issues/687)"}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/29941689", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/29941689/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/29941689/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/20.1.0", "id": 29941689, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5OTQxNjg5", "tag_name": "20.1.0", "target_commitish": "master", "name": "20.1.0", "draft": false, "prerelease": false, "created_at": "2020-08-20T17:16:17Z", "published_at": "2020-08-20T17:40:04Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/20.1.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/20.1.0", "body": "Backward-incompatible Changes\r\n=============================\r\n\r\n-   Python 3.4 is not supported anymore. It has been unsupported by the Python core team for a while now, its PyPI downloads are negligible, and our CI provider removed it as a supported option.\r\n\r\n    It\\'s very unlikely that `attrs` will break under 3.4 anytime soon, which is why we do *not* block its installation on Python 3.4. But we don\\'t test it anymore and will block it once someone reports breakage. [\\#608](https://github.com/python-attrs/attrs/issues/608)\r\n\r\nDeprecations\r\n============\r\n\r\n-   Less of a deprecation and more of a heads up: the next release of `attrs` will introduce an `attrs` namespace. That means that you\\'ll finally be able to run `import attrs` with new functions that aren\\'t cute abbreviations and that will carry better defaults.\r\n\r\n    This should not break any of your code, because project-local packages have priority before installed ones. If this is a problem for you for some reason, please report it to our bug tracker and we\\'ll figure something out.\r\n\r\n    The old `attr` namespace isn\\'t going anywhere and its defaults are not changing -- this is a purely additive measure. Please check out the linked issue for more details.\r\n\r\n    These new APIs have been added *provisionally* as part of \\#666 so you can try them out today and provide feedback. Learn more in the [API docs](https://www.attrs.org/en/stable/api.html#provisional-apis). [\\#408](https://github.com/python-attrs/attrs/issues/408)\r\n\r\nChanges\r\n=======\r\n\r\n-   Added `attr.resolve_types()`. It ensures that all forward-references and types in string form are resolved into concrete types.\r\n\r\n    You need this only if you need concrete types at runtime. That means that if you only use types for static type checking, you do **not** need this function. [\\#288](https://github.com/python-attrs/attrs/issues/288), [\\#302](https://github.com/python-attrs/attrs/issues/302)\r\n\r\n-   Added `@attr.s(collect_by_mro=False)` argument that if set to `True` fixes the collection of attributes from base classes.\r\n\r\n    It\\'s only necessary for certain cases of multiple-inheritance but is kept off for now for backward-compatibility reasons. It will be turned on by default in the future.\r\n\r\n    As a side-effect, `attr.Attribute` now *always* has an `inherited` attribute indicating whether an attribute on a class was directly defined or inherited. [\\#428](https://github.com/python-attrs/attrs/issues/428), [\\#635](https://github.com/python-attrs/attrs/issues/635)\r\n\r\n-   On Python 3, all generated methods now have a docstring explaining that they have been created by `attrs`. [\\#506](https://github.com/python-attrs/attrs/issues/506)\r\n\r\n-   It is now possible to prevent `attrs` from auto-generating the `__setstate__` and `__getstate__` methods that are required for pickling of slotted classes.\r\n\r\n    Either pass `@attr.s(getstate_setstate=False)` or pass `@attr.s(auto_detect=True)` and implement them yourself: if `attrs` finds either of the two methods directly on the decorated class, it assumes implicitly `getstate_setstate=False` (and implements neither).\r\n\r\n    This option works with dict classes but should never be necessary. [\\#512](https://github.com/python-attrs/attrs/issues/512), [\\#513](https://github.com/python-attrs/attrs/issues/513), [\\#642](https://github.com/python-attrs/attrs/issues/642)\r\n\r\n-   Fixed a `ValueError: Cell is empty` bug that could happen in some rare edge cases. [\\#590](https://github.com/python-attrs/attrs/issues/590)\r\n\r\n-   `attrs` can now automatically detect your own implementations and infer `init=False`, `repr=False`, `eq=False`, `order=False`, and `hash=False` if you set `@attr.s(auto_detect=True)`. `attrs` will ignore inherited methods. If the argument implies more than one method (e.g. `eq=True` creates both `__eq__` and `__ne__`), it\\'s enough for *one* of them to exist and `attrs` will create *neither*.\r\n\r\n    This feature requires Python 3. [\\#607](https://github.com/python-attrs/attrs/issues/607)\r\n\r\n-   Added `attr.converters.pipe()`. The feature allows combining multiple conversion callbacks into one by piping the value through all of them, and retuning the last result.\r\n\r\n    As part of this feature, we had to relax the type information for converter callables. [\\#618](https://github.com/python-attrs/attrs/issues/618)\r\n\r\n-   Fixed serialization behavior of non-slots classes with `cache_hash=True`. The hash cache will be cleared on operations which make \\\"deep copies\\\" of instances of classes with hash caching, though the cache will not be cleared with shallow copies like those made by `copy.copy()`.\r\n\r\n    Previously, `copy.deepcopy()` or serialization and deserialization with `pickle` would result in an un-initialized object.\r\n\r\n    This change also allows the creation of `cache_hash=True` classes with a custom `__setstate__`, which was previously forbidden ([\\#494](https://github.com/python-attrs/attrs/issues/494)). [\\#620](https://github.com/python-attrs/attrs/issues/620)\r\n\r\n-   It is now possible to specify hooks that are called whenever an attribute is set **after** a class has been instantiated.\r\n\r\n    You can pass `on_setattr` both to `@attr.s()` to set the default for all attributes on a class, and to `@attr.ib()` to overwrite it for individual attributes.\r\n\r\n    `attrs` also comes with a new module `attr.setters` that brings helpers that run validators, converters, or allow to freeze a subset of attributes. [\\#645](https://github.com/python-attrs/attrs/issues/645), [\\#660](https://github.com/python-attrs/attrs/issues/660)\r\n\r\n-   **Provisional** APIs called `attr.define()`, `attr.mutable()`, and `attr.frozen()` have been added.\r\n\r\n    They are only available on Python 3.6 and later, and call `attr.s()` with different default values.\r\n\r\n    If nothing comes up, they will become the official way for creating classes in 20.2.0 (see above).\r\n\r\n    **Please note** that it may take some time until mypy -- and other tools that have dedicated support for `attrs` -- recognize these new APIs. Please **do not** open issues on our bug tracker, there is nothing we can do about it. [\\#666](https://github.com/python-attrs/attrs/issues/666)\r\n\r\n-   We have also provisionally added `attr.field()` that supplants `attr.ib()`. It also requires at least Python 3.6 and is keyword-only. Other than that, it only dropped a few arguments, but changed no defaults.\r\n\r\n    As with `attr.s()`: `attr.ib()` is not going anywhere. [\\#669](https://github.com/python-attrs/attrs/issues/669)"}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/22611386", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/22611386/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/22611386/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/19.3.0", "id": 22611386, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIyNjExMzg2", "tag_name": "19.3.0", "target_commitish": "master", "name": "19.3.0", "draft": false, "prerelease": false, "created_at": "2019-10-15T05:46:06Z", "published_at": "2020-01-06T08:40:52Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/19.3.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/19.3.0", "body": "See <http://www.attrs.org/en/19.3.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20388079", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20388079/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20388079/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/19.2.0", "id": 20388079, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMzg4MDc5", "tag_name": "19.2.0", "target_commitish": "master", "name": "19.2.0", "draft": false, "prerelease": false, "created_at": "2019-10-01T14:48:30Z", "published_at": "2019-10-01T15:21:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/19.2.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/19.2.0", "body": "See <http://www.attrs.org/en/19.2.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20084587", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20084587/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20084587/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/19.1.0", "id": 20084587, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMDg0NTg3", "tag_name": "19.1.0", "target_commitish": "master", "name": "19.1.0", "draft": false, "prerelease": false, "created_at": "2019-03-03T08:31:46Z", "published_at": "2019-09-18T16:36:07Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/19.1.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/19.1.0", "body": "See <https://www.attrs.org/en/19.1.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20084549", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20084549/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20084549/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/18.2.0", "id": 20084549, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMDg0NTQ5", "tag_name": "18.2.0", "target_commitish": "master", "name": "18.2.0", "draft": false, "prerelease": false, "created_at": "2018-09-01T04:44:36Z", "published_at": "2019-09-18T16:34:48Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/18.2.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/18.2.0", "body": "See <https://www.attrs.org/en/18.2.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20084524", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20084524/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20084524/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/18.1.0", "id": 20084524, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMDg0NTI0", "tag_name": "18.1.0", "target_commitish": "master", "name": "18.1.0", "draft": false, "prerelease": false, "created_at": "2018-05-03T16:15:26Z", "published_at": "2019-09-18T16:33:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/18.1.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/18.1.0", "body": "See <https://www.attrs.org/en/18.1.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20084489", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20084489/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20084489/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/17.4.0", "id": 20084489, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMDg0NDg5", "tag_name": "17.4.0", "target_commitish": "master", "name": "17.4.0", "draft": false, "prerelease": false, "created_at": "2017-12-30T08:06:59Z", "published_at": "2019-09-18T16:32:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/17.4.0", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/17.4.0", "body": "See <https://www.attrs.org/en/17.4.0/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/20084451", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/20084451/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/20084451/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/17.3.0.post2", "id": 20084451, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMDg0NDUx", "tag_name": "17.3.0.post2", "target_commitish": "master", "name": "Docs only", "draft": false, "prerelease": false, "created_at": "2017-11-08T18:46:41Z", "published_at": "2019-09-18T16:30:55Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/17.3.0.post2", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/17.3.0.post2", "body": "See <https://www.attrs.org/en/17.3.0.post2/changelog.html>."}
{"url": "https://api.github.com/repos/python-attrs/attrs/releases/8437874", "assets_url": "https://api.github.com/repos/python-attrs/attrs/releases/8437874/assets", "upload_url": "https://uploads.github.com/repos/python-attrs/attrs/releases/8437874/assets{?name,label}", "html_url": "https://github.com/python-attrs/attrs/releases/tag/17.3.0.post1", "id": 8437874, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg0Mzc4NzQ=", "tag_name": "17.3.0.post1", "target_commitish": "main", "name": "Minor typo in docs", "draft": false, "prerelease": false, "created_at": "2017-11-08T18:34:00Z", "published_at": "2017-11-08T18:36:08Z", "assets": [], "tarball_url": "https://api.github.com/repos/python-attrs/attrs/tarball/17.3.0.post1", "zipball_url": "https://api.github.com/repos/python-attrs/attrs/zipball/17.3.0.post1", "body": " No code changes, no new distributions."}

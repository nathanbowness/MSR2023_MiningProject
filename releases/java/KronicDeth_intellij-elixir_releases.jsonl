{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/79316099", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/79316099/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/79316099/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v13.2.1", "id": 79316099, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4EukSD", "tag_name": "v13.2.1", "target_commitish": "main", "name": "v13.2.1", "draft": false, "prerelease": false, "created_at": "2022-10-07T22:04:57Z", "published_at": "2022-10-07T22:07:26Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/80317649", "id": 80317649, "node_id": "RA_kwDOAVS3Wc4EyYzR", "name": "intellij-elixir-13.2.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7365152, "download_count": 20, "created_at": "2022-10-07T22:07:22Z", "updated_at": "2022-10-07T22:07:25Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v13.2.1/intellij-elixir-13.2.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v13.2.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v13.2.1", "body": "# Changelog\r\n\r\n## v13.2.1\r\n\r\n### Bug Fixes\r\n* [#2787](https://github.com/KronicDeth/intellij-elixir/pull/2787) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore `PsiErrorElement` when collecting doc comments.\r\n* [#2793](https://github.com/KronicDeth/intellij-elixir/pull/2793) - [@JamesFerguson](https://github.com/JamesFerguson)\r\n  * Fix README typos.\r\n* [#2800](https://github.com/KronicDeth/intellij-elixir/pull/2800) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Log before and after setting mirror for decompiled files.\r\n    Parsing complex decompiles can freeze the IDE.  Logging before parsing the decompiles will give a chance of finding the file and recovering the decompiled code to find the error or complexity that needs to be suppressed.\r\n  * Use `Options.truncateDecompiledBodyz on Elixir decompiled bodies too.\r\n    Previously, this was only used for Erlang functions.  Fixes parsing decompiled code causing freezes for some files.\r\n* [#2804](https://github.com/KronicDeth/intellij-elixir/pull/2804) - [@KronicDeth](https://github.com/KronicDeth) \r\n  *  Ignore `authors: ...` for documentation when injecting Markdown.\r\n* [#2808](https://github.com/KronicDeth/intellij-elixir/pull/2808) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Stop `prependQualifiers` when reaching a qualified bracket operation (`Alias.function[key]`).\r\n* [#2809](https://github.com/KronicDeth/intellij-elixir/pull/2809) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Skip `-1` and other unary operations when resolving types.\r\n* [#2810](https://github.com/KronicDeth/intellij-elixir/pull/2810) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Ignore maps at the root of files when collecting doc comments.\r\n* [#2812](https://github.com/KronicDeth/intellij-elixir/pull/2812) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Return `emptySequence` from `childExpressions` when `PsiElement` has no `firstChild` or `lastChild`.\r\n* [#2814](https://github.com/KronicDeth/intellij-elixir/pull/2814) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Don't descend inside struct literal when resolving types.\r\n* [#2848](https://github.com/KronicDeth/intellij-elixir/pull/2848) - [@KronicDeth](https://github.com/KronicDeth) \r\n  * Ignore injecting Markdown in calls that read the text from a file, such as in `@moduledoc File.read!(Path.join([__DIR__, \"..\", \"README.md\"]))`\r\n* [#2858](https://github.com/KronicDeth/intellij-elixir/pull/2858) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore undocument script code at root of files.\r\n    * Alias used in qualified call.\r\n    * Integers\r\n    * Floats\r\n    * Tuples\r\n* [#2890](https://github.com/KronicDeth/intellij-elixir/pull/2890) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Stop `ancestorTypeSpec` on `QualifiedMultipleAliases`.\r\n* [#2891](https://github.com/KronicDeth/intellij-elixir/pull/2891) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore pipelines for injecting Markdown in doc comments.\r\n* [#2892](https://github.com/KronicDeth/intellij-elixir/pull/2892) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore useless `warn_missing` in `edeliver`'s `distillery` dep.\r\n* [#2893](https://github.com/KronicDeth/intellij-elixir/pull/2893) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Stop accumulating qualifiers when bracket operation is hit either as qualifier or argument.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/79316099/reactions", "total_count": 8, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 7, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/73379422", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/73379422/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/73379422/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v13.2.0", "id": 73379422, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4EX65e", "tag_name": "v13.2.0", "target_commitish": "main", "name": "v13.2.0", "draft": false, "prerelease": false, "created_at": "2022-08-01T14:01:49Z", "published_at": "2022-08-01T20:58:05Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/73379222", "id": 73379222, "node_id": "RA_kwDOAVS3Wc4EX62W", "name": "intellij-elixir-13.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7197203, "download_count": 36, "created_at": "2022-08-01T20:56:50Z", "updated_at": "2022-08-01T20:56:53Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v13.2.0/intellij-elixir-13.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v13.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v13.2.0", "body": "# Changelog\r\n\r\n## v13.2.0\r\n\r\n### Enhancements\r\n* [#2768](https://github.com/KronicDeth/intellij-elixir/pull/2768) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Rendered Markdown toggle for `@moduledoc`, `@typedoc`, and `@doc`\r\n    * Inject markdown in `@doc deprecated: ...`\r\n    * Inject Markdown into doc lines and heredocs\r\n    * Ignore `false` for documentation module attributes\r\n    * Ignore `@doc` metadata that can't include Markdown\r\n      * `guard: ...`\r\n      * `since: ...`\r\n    * Ignore `@callback(unquote(spec))` when trying to find typespecs\r\n    * Interleave Markdown and Elixir for doctests\r\n      * Mark code blocks as Elixir language in Markdown documentation\r\n      * Mark multi-line exceptions in doctests as Markdown\r\n      * Treat *DBG* prefix doctest lines as Markdown instead of Elixir\r\n      * Resolve owner of docs as following call definition clause.\r\n      * Count `...> ` as Markdown since it's not Elixir syntax\r\n      * Count `** (...` as Markdown since it's not Elixir syntax for exception in iex prompts\r\n      * Count `iex> ` as Markdown since it's not Elixir syntax\r\n    * Documentation links in rendered documentation\r\n      * Modulars `MODULE`\r\n      * Callbacks\r\n        * Relative (`c:NAME/ARITY`)\r\n        * Absolute (`c:MODULE.NAME/ARITY`)\r\n      * Types\r\n        * Relative (`t:NAME/ARITY`)\r\n        * Absolute (`t:MODULE.NAME/ARITY`)\r\n      * Functions and Macros\r\n        * Relative (`NAME/ARITY`)\r\n        * Absolute (`MODULE.NAME/ARITY`)\r\n  * Quick Documentation for more elements\r\n    * Callbacks (`@doc` above `@callback` and `@macrocallback`)\r\n    * Types (`@typedoc` above `@type`, `@typep`, and `@opaque`)\r\n* [#2766](https://github.com/KronicDeth/intellij-elixir/pull/2766) - [@ViseLuca](https://github.com/ViseLuca)\r\n  * Compatibility with IntelliJ 2022.2.\r\n  * Updated Elixir version used in tests.\r\n  * Updated Gradle dependencies.\r\n\r\n### Bug Fixes\r\n* [#2768](https://github.com/KronicDeth/intellij-elixir/pull/2768) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add compiled CallDefinitionImpl delegation targets to resolve results\r\n  * Log non-Call modulars for resolving delegation\r\n* [#2766](https://github.com/KronicDeth/intellij-elixir/pull/2766) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix operator token set for `**`.\r\n\r\n# README Updates\r\n\r\n## Features\r\n\r\n### Documentation\r\n\r\n### Documentation\r\n#### Editor\r\nDocumentation in `@moduledoc`, `@typedoc` or `@doc` module attribute values are marked as Markdown language, so that [the JetBrains supplied Markdown support](https://www.jetbrains.com/help/idea/markdown-reference.html) works in documentation.\r\n##### Code Blocks\r\nCode in code blocks (indented 4 spaces) are marked as Elixir language, so all the normal language support works in code examples and doctests.\r\nThis includes highlighting reads and writes of variables\r\n![](screenshots/features/documentation/editor/Variable%20Usage.png)\r\nand Go To Definition for calls\r\n![](screenshots/features/documentation/editor/Go%20To%20Definition.png)\r\n##### Toggling Editor to Rendered\r\n1. Start with the Editor\r\n   ![](screenshots/features/documentation/editor/Markdown%20Editor.png)\r\n2. Click the \"Toggle Rendered View\" button in the gutter next to the editor.\r\n   ![](screenshots/features/documentation/editor/Toggle%20Editor%20to%20Rendered%20View.png)\r\n3. Rendered View will be shown\r\n   ![](screenshots/features/documentation/rendered_view/HTML%20Rendered%20View.png)\r\n#### Rendered View\r\nMarkdown documentation in `@moduledoc`, `@typedoc` or `@doc` can be toggled back and forth from the editable Markdown view and the rendered HTML view.\r\n##### Aliases link to Modules\r\nIn the rendered view, aliases are clickable and navigatable.\r\nClicking the links will show the documentation for module.\r\n![](screenshots/features/documentation/rendered_view/alias_link/Quick%20Documentation.png)\r\nUsing Go To Definition (Cmd+Click) on the link will take you to the module definition.\r\n![](screenshots/features/documentation/rendered_view/alias_link/Go%20To%20Definition.png)\r\n##### Toggling Rendered to Editor\r\n1. Start with the Rendered View\r\n   ![](screenshots/features/documentation/rendered_view/HTML%20Rendered%20View.png)\r\n2. Click the \"Toggle Rendered View\" button in the gutter next to the editor.\r\n   ![](screenshots/features/documentation/rendered_view/Toggle%20Rendered%20View%20to%20Editor.png)\r\n3. Editor will be shown\r\n   ![](screenshots/features/documentation/editor/Markdown%20Editor.png)\r\n#### Quick Documentation\r\nYou can get documentation for functions and macros that have a `@doc`, aliases of modules that have a `@moduledoc` or types that have a `@typedoc` in a pop-up using [Quick Documentation](https://www.jetbrains.com/help/idea/viewing-reference-information.html#inline-quick-documentation).\r\n##### For a function\r\n1. Place the cursor over the name of callback being referneced.\r\n2. Display the documentation with either:\r\n   * A keyboard shortcut: F1 to show rendered `@doc`\r\n   * From the menu: View > Quick Documentation\r\n\r\n   ![](screenshots/features/documentation/quick/@callback-@doc.png)\r\n\r\n##### For a function\r\n\r\n1. Place the cursor over the name of function being called.\r\n2. Display the documentation with either:\r\n   * A keyboard shortcut: F1 to show rendered `@doc`\r\n   * From the menu: View > Quick Documentation\r\n\r\n##### For a module\r\n\r\n1. Place the cursor on a fully-qualified module name\r\n2. Display the documentation with either:\r\n   * A keyboard shortcut: F1 to show rendered `@moduledoc`\r\n   * From the menu: View > Quick Documentation\r\n\r\n##### For a type\r\n\r\n1. Place the cursor over the name of a type being used. \r\n2. Display the documentation with either:\r\n   * A keyboard shortcut: F1 to show rendered `@typedoc`\r\n   * From the menu: View > Quick Documentation\r\n\r\n   ![](screenshots/features/documentation/quick/typedoc.png)", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/73379422/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/69732161", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/69732161/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/69732161/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v13.1.1", "id": 69732161, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4EKAdB", "tag_name": "v13.1.1", "target_commitish": "main", "name": "v13.1.1", "draft": false, "prerelease": false, "created_at": "2022-06-17T15:49:51Z", "published_at": "2022-06-17T16:20:37Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/68793853", "id": 68793853, "node_id": "RA_kwDOAVS3Wc4EGbX9", "name": "intellij-elixir-13.1.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7071492, "download_count": 59, "created_at": "2022-06-17T16:20:31Z", "updated_at": "2022-06-17T16:20:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v13.1.1/intellij-elixir-13.1.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v13.1.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v13.1.1", "body": "# Changelog\r\n\r\n## v13.1.1\r\n\r\n### Bug Fixes\r\n* [#2673](https://github.com/KronicDeth/intellij-elixir/pull/2673) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix Project Initialization Failed from New > Project > Elixir\r\n    * Catch and log `IOException`s swallowed by Project Initialization Failed.\r\n    * Recursively delete project directory before running `mix new`.\r\n      Previously, the directory was only deleted if empty, but whether the `.idea` directory is written when `setupProject` is called differs between IDE versions, so to be safe, recursively delete.\r\n* [#2705](https://github.com/KronicDeth/intellij-elixir/pull/2705) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix Go To Definition for function in compiled modules.\r\n    When switching over to delayed decompilation, `ModuleImpl` did not have `processDeclaration` overloadded, so the `PsiScopeProcessor` was never called on it and so the `CallDefinitionClause` scope processor did not check the `ModuleImpl#callDefinitons`.\r\n  * Implement Deprecated metadata handling for docs from BEAM files.\r\n* [#2709](https://github.com/KronicDeth/intellij-elixir/pull/2709) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't assume Elixir `SDK` `sdkAdditionalData` is non-`null`.\r\n* [#2711](https://github.com/KronicDeth/intellij-elixir/pull/2711) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't restrict Run Configurations to Run in Modules to Elixir modules.\r\n    The docs for `ModuleType` say the concept is meant to be deprecated, so don't enforce it and trying to load `ElixirModuleType` in RubyMine breaks as it tries to load `ElixirModuleBuilder` and therefore `JavaModuleBuilder`, which only works in IntelliJ.\r\n* [#2712](https://github.com/KronicDeth/intellij-elixir/pull/2712) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add the facet in a write action in addition to setting the SDK.\r\n* [#2717](https://github.com/KronicDeth/intellij-elixir/pull/2717) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Increase `SUSPECT_NAME_SET_SIZE` to `20`.\r\n    Increased to cover the `15` `impl`s of `String.Chars` in the `geo` hex package.\r\n* [#2719](https://github.com/KronicDeth/intellij-elixir/pull/2719) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Log if `erl` binary is not found when trying to run `mix format`.\r\n    Log instead of letting it throw up the stack and cause an error report since the SDK not being set will be very common.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/69732161/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 5, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/68351486", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/68351486/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/68351486/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v13.1.0", "id": 68351486, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4EEvX-", "tag_name": "v13.1.0", "target_commitish": "main", "name": "v13.1.0", "draft": false, "prerelease": false, "created_at": "2022-06-01T14:37:44Z", "published_at": "2022-06-01T14:45:10Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/67247482", "id": 67247482, "node_id": "RA_kwDOAVS3Wc4EAh16", "name": "intellij-elixir-13.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7089990, "download_count": 12, "created_at": "2022-06-01T14:45:05Z", "updated_at": "2022-06-01T14:45:08Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v13.1.0/intellij-elixir-13.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v13.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v13.1.0", "body": "# Changelog\r\n\r\n## v13.1.0\r\n\r\n### Enhancements\r\n\r\n* [#2673](https://github.com/KronicDeth/intellij-elixir/pull/2673) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Improved error reporting\r\n    * Include 5 lines of context around error elements\r\n    * Use `originalFile` when calculating path, so that `.beam` file path is used for decompiled files that don't have a `VirtualFile`.\r\n    * Compact line references\r\n      * Only including ending line if it is different than starting line.\r\n      * Add ending line as a range after starting line instead of a completely separate path and line.\r\n    * Put stacktrace in `<details>` with `<summary>`\r\n* [#2687](https://github.com/KronicDeth/intellij-elixir/pull/2687) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update dependencies\r\n    * `gradle` to `7.4.2`\r\n    * `gradle-intellij-plugin` to `1.6.0`\r\n    * Set `-Xjvm-default=all` for Kotlin to allow `@JvmDefault` interfaces\r\n       * Needed for `LanguageNewProjectWizard` subclasses and associated implementations\r\n  * New Project > Language > Elixir includes all mix options\r\n    * `--app`\r\n    * `--module`\r\n    * `--sup`\r\n    * `--umbrella`     \r\n* [#2578](https://github.com/KronicDeth/intellij-elixir/pull/2578) - [@yordis](https://github.com/yordis)\r\n  * Add `mix format` external formatter.\r\n    Requires project or module SDK be set in order to run.  If the SDK is not available, only the internal formatter will be used.  The internal formatter is still used for file subsection formatting and new line indenting as `mix format` works at the file-level.\r\n    * Allow `mix format` external formatter to be disabled.\r\n    \r\n      1. Preferences\r\n      2. Editor > Code Style > Elixir\r\n      3. Click the `mix format` tab\r\n      4. Expand the General group\r\n      5. Uncheck \"Format files with `mix format`\".\r\n* [#2697](https://github.com/KronicDeth/intellij-elixir/pull/2697) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Support Elixir 1.13.0 in debugger.\r\n\r\n### Bug Fixes\r\n\r\n* [#2637](https://github.com/KronicDeth/intellij-elixir/pull/2637) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Protect from `null` `containingFile` when fetching docs.\r\n* [#2639](https://github.com/KronicDeth/intellij-elixir/pull/2639) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Show notification if $HOME_PATH/lib does not exist.\r\n    Instead of logging an error show a notification since it can and does happen and is not a bug to be fixed in the\r\n    plugin, but a configuration change the user needs to do.\r\n* [#2640](https://github.com/KronicDeth/intellij-elixir/pull/2640) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore tuples as type restrictions that occur during typing.\r\n* [#2641](https://github.com/KronicDeth/intellij-elixir/pull/2641) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Catch `AlreadyDisposedException` when trying to find module for PsiElement in `mostSpecificSdk`.\r\n    * Check if the project`is disposed before using it to get module for `PsiElement`.\r\n* [#2645](https://github.com/KronicDeth/intellij-elixir/pull/2645) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Look above `CallDefinitionImpl` for `Type` scope processing\r\n    It should go up to the `ModuleImpl` to find the `TypeDefinitionImpl`.\r\n* [#2671](https://github.com/KronicDeth/intellij-elixir/pull/2671) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Have Credo Global Inspection use standard `Mix.commandLine` used for Run Configurations.\r\n    * Allow environment variables to be set similar to Run Configurations for projects that require environment variables to be set for Mix tasks due to checks in their config.\r\n    * No longer support Include Explanations as it takes too long to run.\r\n    * Remove annotator until it can be re-implemented in performant manner using corrected environment and SDK from Global Inspection.\r\n* [#2672](https://github.com/KronicDeth/intellij-elixir/pull/2672) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Look above `<variable>.<tuple>` for `ancestorTypeSpec`.\r\n    * Look above `<tuple>` after `<variable>.` for `ancestorTypeSpec`.\r\n* [#2673](https://github.com/KronicDeth/intellij-elixir/pull/2673) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix Find Usages that resolve to compiled types.\r\n    * Add element description for `TypeDefinitionImpl`\r\n      * Node Text is `@<module_attribte> <name>(<parameters>) :: ...`\r\n      * Long Name and Short Name are just the `name`\r\n      * Type is `type`\r\n    * Mirror `TypeDefinitionImpls` to types in decompiled source.\r\n      Allow `TypeDefinitionImpl.getNavigation` to go to decompiled types.\r\n  * Allow types with atom keyword names to be highlight even though they are invalid names. \r\n* [#2674](https://github.com/KronicDeth/intellij-elixir/pull/2674) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Catch `RuntimeException` if `rootProvider` is already disposed.\r\n    Catching `AssertionError` used to be enough in #1359, but not anymore as of #2623.\r\n* [#2675](https://github.com/KronicDeth/intellij-elixir/pull/2675) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore invalid format that occur while user is typing when highlighting types\r\n    * `@type name :: String.()`\r\n    * `@type String.()`\r\n    * `@type S`\r\n* [#2676](https://github.com/KronicDeth/intellij-elixir/pull/2676) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Restore Project configuration for Small IDEs.\r\n    I dropped an `!` when converting from `equals` to `==` when fixing the deprecation warnings, which made the Project SDK selection _only_ be **HIDDEN** where it needed to be **SHOWN**.\r\n* [#2679](https://github.com/KronicDeth/intellij-elixir/pull/2679) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Catch `StackOverflowError` in `find_usages.Provider.getType()`.\r\n  * Element descriptions for `CallDefinitionImpl`\r\n* [#2680](https://github.com/KronicDeth/intellij-elixir/pull/2680) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Highlight `CallDefinitionImpl` references as predefined if resolved `CallDefinitionImpl` is in `Kernel` or `Kernel.SpecialForms`.\r\n    Fixes highlighting `def` and other defined when using SDKs without source like Homebrew after the delayed-decompilation fixes from 12.2.1.  Now source-less (Homebrew) and SDKs with sources (ASDF) will both be able to highlight predefineds.\r\n* [#2681](https://github.com/KronicDeth/intellij-elixir/pull/2681) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * No longer record the SDK name as an attribute of the Facet configuration, as it didn't write back changes.\r\n    * Instead detect the Elixir SDK by finding any of the libraries that have an Elixir SDK name in the module. (The Elixir SDK was already being added as a library to allow indexing the SDK.)\r\n  * Clear out any existing Elixir SDKs listed as module libraries before setting a new SDK.\r\n    This eliminates the duplicates that happened before. (It turns out the JetBrains API doesn't prevent duplicates. Oopsie.) It also ensures that no SDK is recorded if the SDK is deselected in the UI, which wouldn't happen before.\r\n* [#2687](https://github.com/KronicDeth/intellij-elixir/pull/2687) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Handle disposed `Sdk.rootProvider` by reloading the `Sdk` when loading `ebinDirectories`\r\n  * In IntelliJ 2022, the New Project dialog changed and it no longer automatically listed `ModuleType.getBuilder` `ModuleBuilder`s as potential project builders, so it looked like Elixir New Project support disappeared.  Fix this by implementing the `newProjectWizard.language` extension that was added to control the Language switching in the new New Project dialog. \r\n* [#2688]](https://github.com/KronicDeth/intellij-elixir/pull/2688) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove references to `ElementClassHint` in BeamFileImpl that only work in IntelliJ.\r\n    `ElementClassHint` is part of the `processDeclaration` system used in Java and so was in the code because `BeamFileImpl` was original based on `ClassFileImpl`, but since the Elixir resolvers don't use the hint system at all, it can just be removed.\r\n* [#2578](https://github.com/KronicDeth/intellij-elixir/pull/2578) - [@yordis](https://github.com/KronicDeth/intellij-elixir/pull/2578)\r\n  * Remove `CodeStyleSettingsProvider` because it is redundant with `LanguageCodeStyleSettingsProvider`\r\n* [#2695](https://github.com/KronicDeth/intellij-elixir/pull/2695) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Restrict `UsageTargetProvider` to `ElixirFile`s\r\n    Without this restriction, it tries to run when developing the plugin itself and breaks Kotlin syntax highlighting.\r\n* [#2697](https://github.com/KronicDeth/intellij-elixir/pull/2697) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix environment not being passed to debug runs of ESpec and ExUnit Run Configurations.\r\n    The `env` from the `Configuration` was dropped because a local `env` was created to set `MIX_ENV` `true`.\r\n\r\n# README Updates\r\n\r\n## Features\r\n\r\n### Credo\r\n\r\n#### Inspection\r\n\r\n##### Batch Mode\r\n\r\nIf you'd like to run `mix credo` use can run it as a global Inspection.\r\n\r\n### Formatting\r\n\r\nIntelliJ Elixir both has an internal formatter used to format new linees and parts of files, but also can use `mix format` to format entire files. \r\n\r\n#### Formatters\r\n\r\n##### Internal\r\n\r\nIntelliJ Elixir's internal formatter can reformat code to follow a consistent style.\r\n\r\n##### External (`mix format`)\r\n\r\nIntelliJ Elixir will run `mix format -` on the text of the file.  As `mix format` works on entire files, only whole\r\nfile, multiple file, or directory formatting is supported using this external formatter.  Formatting subsections and\r\nnew lines use the internal formatter until the next full file format uses `mix format`.\r\n\r\n**NOTE: The module or project SDK *MUST* be set in order to run `mix format`.  If the SDK is not set, only the internal formatter will be run.**\r\n\r\n###### Disabling\r\n\r\n`mix format` can be disabled if you only want to use the Internal Formatter.\r\n\r\n1. Preferences\r\n2. Editor > Code Style > Elixir\r\n3. Click the `mix format` tab\r\n4. Expand the General group\r\n4. Uncheck \"Format files with `mix format`\".\r\n\r\n#### Format on Save\r\n\r\nTo tun on format on save:\r\n\r\n1. Preferences\r\n2. Tools > Actions on Save.\r\n3. Check \"Reformat code\".\r\n4. Make sure \"All file types\" is set or at least \"Files: Elixir\" is set.\r\n\r\n##### Autosave\r\n\r\n[JetBrains IDEs have autosave](https://www.jetbrains.com/help/idea/saving-and-reverting-changes.html) turned on by default when you click away from the editor window, but you can adjust the settings:\r\n\r\n1. Preferences\r\n2. Appearance & Behavior > System Settings.\r\n3. Check or uncheck the settings in the Autosave section.\r\n\r\n#### Formattables\r\n\r\n##### Directory\r\n\r\nAll files in a directory can be reformatted using the External Formatter (`mix format`)\r\n\r\n##### File\r\n\r\n###### Other File\r\n\r\nAll lines in a file can be reformatted with the External Formatter (`mix format`).\r\n\r\n###### Current File\r\n\r\nAll the lines in the current editor tab file can be reformatted with External Formatter (`mix format`).\r\n\r\n##### Selection\r\n\r\nA subset of a file can be reformatted using the Internal Formatter", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/68351486/reactions", "total_count": 19, "+1": 0, "-1": 0, "laugh": 0, "hooray": 7, "confused": 0, "heart": 9, "rocket": 3, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/66151199", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/66151199/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/66151199/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v13.0.0", "id": 66151199, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4D8WMf", "tag_name": "v13.0.0", "target_commitish": "main", "name": "v13.0.0", "draft": false, "prerelease": false, "created_at": "2022-05-05T18:13:08Z", "published_at": "2022-05-05T18:18:58Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/64590884", "id": 64590884, "node_id": "RA_kwDOAVS3Wc4D2ZQk", "name": "intellij-elixir-13.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7061821, "download_count": 33, "created_at": "2022-05-05T18:18:22Z", "updated_at": "2022-05-05T18:18:25Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v13.0.0/intellij-elixir-13.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v13.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v13.0.0", "body": "# Changelog\r\n\r\n## v13.0.0\r\n\r\n### Incompatible Changes\r\n\r\n* [#2594](https://github.com/KronicDeth/intellij-elixir/pull/2594) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Drop support for IDEEs before 2022.1.\r\n\r\n### Enhancements\r\n\r\n* [#2594](https://github.com/KronicDeth/intellij-elixir/pull/2594) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Support 2022.1 IDEs\r\n    * Update IntelliJ Plugin Gradle to 1.5.3.\r\n    * Set untilBuild explicitly\r\n    * Target JVM Version 11\r\n* [#2633](https://github.com/KronicDeth/intellij-elixir/pull/2633) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Expand `untilBuild` to cover PATCH releases of 2022.1.\r\n\r\n### Bug Fixes\r\n\r\n* [#2594](https://github.com/KronicDeth/intellij-elixir/pull/2594) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix (some) plugin verifier warnings\r\n    * Fix (some) deprecation warnings.\r\n    * Use fewer Internal APIs.\r\n* [#2633](https://github.com/KronicDeth/intellij-elixir/pull/2633) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't use ElixirModuleType to check if it is available.\r\n    It will not load in IDEs that lack `JavaModuleBuilder`, which is why I was hard coding the ran previously.\r\n  * Don't use `XmlSerializer` as equivalent of `DefaultJDOMExternalizer`\r\n    The `DefaultJDOMExternalizer` method calls weren't writing anything and the explicit attribute value accesses were,\r\n    so it is more correct to just remove the original deprecated calls.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/66151199/reactions", "total_count": 10, "+1": 0, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 8, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/64619466", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/64619466/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/64619466/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v12.2.1", "id": 64619466, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4D2gPK", "tag_name": "v12.2.1", "target_commitish": "main", "name": "v12.2.1", "draft": false, "prerelease": false, "created_at": "2022-04-18T02:12:51Z", "published_at": "2022-04-18T02:50:19Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/62869955", "id": 62869955, "node_id": "RA_kwDOAVS3Wc4Dv1HD", "name": "intellij-elixir-12.2.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7072825, "download_count": 87, "created_at": "2022-04-18T02:50:16Z", "updated_at": "2022-04-18T02:50:18Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v12.2.1/intellij-elixir-12.2.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v12.2.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v12.2.1", "body": "# Changelog\r\n\r\n## v12.2.1\r\n\r\n### Bug Fixes\r\n\r\n* [#2579](https://github.com/KronicDeth/intellij-elixir/pull/2579) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't call `.navigationElement` to prevent unnecessary decompilation when resolving references or showing\r\n    completions.\r\n    * Don't call `navigationElement` in `ChooseByNameContributor`\r\n    * Don't decompile Protocols to get their specific `t` type\r\n    * Don't call `.navigationElement` when resolving built-in types in `:erlang`\r\n    * Don't use `navigationElement` in `CallDefinitionClause.implicitImports` for `Kernel` and\r\n      `KernelSpecial.Forms`.\r\n    * Don't call `.navigationElement` in `reference.resolver.Module.multiResolveProject`\r\n      Prevents decompiling modules when doing completion.\r\n\r\n    Handle `PsiCompiledElement` in places that previously only handled source and decompiled `Call`s\r\n    * `getElementDescription` for ModuleImpl\r\n    * Complete call definition under binary modules\r\n    * Don't look for variables in compiled elements\r\n    * Don't assume elements have a non-null node Decompiled elements don't\r\n    * Index `TypeDefinition`s in .beam files Only supported built-in types faked in `:erlang` for now\r\n    * Walk `ModuleImpl` for `scope.Type`\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/64619466/reactions", "total_count": 6, "+1": 0, "-1": 0, "laugh": 0, "hooray": 6, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/57073329", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/57073329/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/57073329/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v12.2.0", "id": 57073329, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4DZt6x", "tag_name": "v12.2.0", "target_commitish": "main", "name": "v12.2.0", "draft": false, "prerelease": false, "created_at": "2022-01-14T03:39:23Z", "published_at": "2022-01-14T03:43:23Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/53934936", "id": 53934936, "node_id": "RA_kwDOAVS3Wc4DNvtY", "name": "intellij-elixir-12.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7043062, "download_count": 57, "created_at": "2022-01-14T03:42:14Z", "updated_at": "2022-01-14T03:42:17Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v12.2.0/intellij-elixir-12.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v12.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v12.2.0", "body": "# Changelog\r\n\r\n## v12.2.0\r\n\r\n### Enhancements\r\n* [#2461](https://github.com/KronicDeth/intellij-elixir/pull/2461) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Test against support IDEA versions in CI to prevent another Find Usage regression\r\n    * 2021.2.3 FindUsageTests differ from manual testings, so don't test 2021.2.3\r\n    * Make FindUsagesTest UsageViewTreeText work for both 2021.1.3 and other versions\r\n    * Add kernel.ex to all Find Usage Tests to ensure it doesn't work because it can't resolve primary element\r\n  * Add find usages for def test\r\n\r\n### Bug Fixes\r\n* [#2461](https://github.com/KronicDeth/intellij-elixir/pull/2461) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Work-around Find Usage bug due to temporary change in JetBrains API only in versions that have that change.\r\n    * Restore old find_usages.handler.Call\r\n    * Determine whether to resolve `FindUsageHandler` primary element based on application build number\r\n      Assume that are 213.* builds have the already resolved call. This excludes 2021.3, but not 2021.3.1, which includes the fix to restore the 2021.1.3 behaviour.\r\n* [#2466](https://github.com/KronicDeth/intellij-elixir/pull/2466) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix HTML errors in `description.html`.\r\n  * Add card one-liner.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/56633521", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/56633521/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/56633521/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v12.1.0", "id": 56633521, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4DYCix", "tag_name": "v12.1.0", "target_commitish": "main", "name": "v12.1.0", "draft": false, "prerelease": false, "created_at": "2022-01-07T17:47:20Z", "published_at": "2022-01-07T19:15:47Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/53437691", "id": 53437691, "node_id": "RA_kwDOAVS3Wc4DL2T7", "name": "intellij-elixir-12.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7037210, "download_count": 9, "created_at": "2022-01-07T19:08:56Z", "updated_at": "2022-01-07T19:08:58Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v12.1.0/intellij-elixir-12.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v12.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v12.1.0", "body": "# Changelog\r\n\r\n\r\n## v12.1.0\r\n\r\n### Enhancements\r\n* [#2405](https://github.com/KronicDeth/intellij-elixir/pull/2405) - [@osbre](https://github.com/osbre)\r\n    * Add MacPorts SDK locations to README.\r\n* [#2404](https://github.com/KronicDeth/intellij-elixir/pull/2404) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update build to elixir 1.13.0\r\n  * Add support for `**` operator to lexer and parser.\r\n    Port elixir-lang/elixir#11241\r\n* [#2436](https://github.com/KronicDeth/intellij-elixir/pull/2436) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Color settings for each sigil name. Both the interpolating (lower case) and literal (upper case) name use the same settings.\r\n* [#2202](https://github.com/KronicDeth/intellij-elixir/pull/2202) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add support for stepped ranges\r\n    Port elixir-lang/elixir#10810\r\n    * Regression test for #2200\r\n  * Update CI\r\n    * Update to Elixir 1.12.3\r\n    * Update to Erlang 24.1.6\r\n* [#2447](https://github.com/KronicDeth/intellij-elixir/pull/2447) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Use `getUsageViewTreeTextRepresentation` to check find usages.\r\n  * Regression test for #2374.\r\n* [#2448](https://github.com/KronicDeth/intellij-elixir/pull/2448) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Regression test for #2386\r\n    Issue #2386 had the same root cause (OtpExternalFun not being decompiled correctly) as Issue #2410, so Issue #2386 was fixed by Pull Request #2441, but since @alexxero was nice enough to upload the `.beam` file for Issue #2386, I might as well add it as a regression test too.\r\n* [#2453](https://github.com/KronicDeth/intellij-elixir/pull/2453) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Regression test for #2446\r\n\r\n### Bug Fixes\r\n* [#2397](https://github.com/KronicDeth/intellij-elixir/pull/2397) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Restore tests that weren't being run after 2021.3 upgrade.\r\n    Upgrading to 2021.3 dropped the number of run tests from 3741 to 1452.  This was due to a change in the packaging in 2021.3 that triggered a gradle bug.\r\n  \r\n    * Fix test broken by missing `markdown` in plugins list\r\n      Like the need for the `java` plugin to handle the `com.intellij.modules.java` `depends`in `plugin.xml`, the `org.intellij.plugins.markdown` `depends` needed `markdown` added to the list to make some of the tests work.  The failed tests weren't being run before after the 2021.3 upgrade.\r\n    * Manually include tests instead of scanning.\r\n      Work-around gradle/gradle#18486 as described in https://jetbrains-platform.slack.com/archives/C5U8BM1MK/p1637955960051600?thread_ts=1637923961.040000&cid=C5U8BM1MK that affects running tests with ideaVersion 2021.3.\r\n      * Rename ParsingTestCases with improper capitalization\r\n* [#2404](https://github.com/KronicDeth/intellij-elixir/pull/2404) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Decompile `{:|, ..., ...}` as cons operator in Elixir Dbgi.\r\n  * Fix missing guards when decompiling Elixr DbgI clauses using special decompiler\r\n    Guards where missing because only `decompiler.appendSignature` was used.\r\n  * Fix __module__.Reference.calculateDefaultRangeInElement\r\n    `element.textOffset` instead of `element.textLength` was used for end of range.\r\n* [#2436](https://github.com/KronicDeth/intellij-elixir/pull/2436) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Restore colors for char lists and strings lost with the PSI changes in e71b247.\r\n* [#2441](https://github.com/KronicDeth/intellij-elixir/pull/2441) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Render `OtpErlangExternalFun` correctly as remote captures (`&Mod.fun/arity`).\r\n    Fixes decompiling `Ecto.Changeset.validate_number`.\r\n* [#2445](https://github.com/KronicDeth/intellij-elixir/pull/2445) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Protect ExUnit configuration `Producer` from `ElixirFile` without `VirtualFile`.\r\n* [#2447](https://github.com/KronicDeth/intellij-elixir/pull/2447) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `Unquote.treeWalkUp` no longer assumes that the final argument to `unquote` is a `Call`.\r\n  * Fix Find Usages for call definitions\r\n    * Don't resolve primary Find Usages element.\r\n      The primary element passed to `FindUsageHandler` is now already resolved, so resolving it again for call definitions finds usages of `def`, `defmacro`, etc.\r\n    * Since the element passed to `FindUsagesProvider#canFindUsageFor`, definers can no longer be excluded, so remove that check.\r\n* [#2449](https://github.com/KronicDeth/intellij-elixir/pull/2449) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't highlight `Quote` or `Sigil` as normal text if part of documentation.\r\n    Since the annotators will run in arbitrary order, the `Textual` annotator has to avoid annotating the same nodes as the `ModuleAttribute` annotator or the colors can get interleaved.\r\n* [#2450](https://github.com/KronicDeth/intellij-elixir/pull/2450) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Put `ENTRANCE` and Initial Visited Element in `__module__.Resolver`.\r\n* [#2452](https://github.com/KronicDeth/intellij-elixir/pull/2452) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Keep searching when resolving type parameters if bitstring is encountered. \r\n* [#2453](https://github.com/KronicDeth/intellij-elixir/pull/2453) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix `UnaliasedName.unaliasedName` for atoms.\r\n  * Restore `ElixirAtom#getName`\r\n    Lost when parser was regenerated when Elixir <= 1.6 support was dropped in [679a9689cfe097018b9baa4e894d4550a84d7aac](https://github.com/KronicDeth/intellij-elixir/commit/679a9689cfe097018b9baa4e894d4550a84d7aac).\r\n\r\n# README Changes\r\n\r\n## Features\r\n\r\n### SDK\r\n\r\n#### Package Manager Install Locations\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Package Manager</th>\r\n      <th>SDK Type</th>\r\n      <th>Directory</th>\r\n    </tr>\r\n  </thead>\r\n    <tr>\r\n      <td rowspan=\"3\">\r\n        <a href=\"https://www.macports.org/\">MacPorts</a>\r\n      </td>\r\n      <td>Elixir SDK</td>\r\n      <td>\r\n        <code>/opt/local/lib/elixir</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang SDK</td>\r\n      <td rowspan=\"2\">\r\n        <code>/opt/local/lib/erlang</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang for Elixir SDK</td>\r\n    </tr>\r\n  </tbody>\r\n</table>", "mentions_count": 1}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54762283", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54762283/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/54762283/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v12.0.1", "id": 54762283, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4DQ5sr", "tag_name": "v12.0.1", "target_commitish": "main", "name": "v12.0.1", "draft": false, "prerelease": false, "created_at": "2021-12-07T02:57:09Z", "published_at": "2021-12-07T04:27:03Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/51182272", "id": 51182272, "node_id": "RA_kwDOAVS3Wc4DDPrA", "name": "intellij-elixir-12.0.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7128373, "download_count": 48, "created_at": "2021-12-07T04:26:55Z", "updated_at": "2021-12-07T04:27:00Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v12.0.1/intellij-elixir-12.0.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v12.0.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v12.0.1", "body": "# Changelog\r\n## v12.0.1\r\n\r\n### Bug Fixes\r\n* [#2345](https://github.com/KronicDeth/intellij-elixir/pull/2345) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Override `Override org.elixir_lang.*.configuration.Factory.getId` to fix deprecation warning about the default implementation being accidentally localizable when it shouldn't be.  The Elixir plugin didn't localize these name using message bundles, so this wasn't an actual risk, but overriding is the only way to silence the error.\r\n* [#2346](https://github.com/KronicDeth/intellij-elixir/pull/2346) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Stop look for qualifier at curly braces for `%{Alias}`.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54762283/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54670312", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54670312/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/54670312/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v12.0.0", "id": 54670312, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAVS3Wc4DQjPo", "tag_name": "v12.0.0", "target_commitish": "main", "name": "v12.0.0", "draft": false, "prerelease": false, "created_at": "2021-12-05T22:56:03Z", "published_at": "2021-12-05T22:58:13Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/51080023", "id": 51080023, "node_id": "RA_kwDOAVS3Wc4DC2tX", "name": "intellij-elixir-12.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7127490, "download_count": 18, "created_at": "2021-12-05T22:58:08Z", "updated_at": "2021-12-05T22:58:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v12.0.0/intellij-elixir-12.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v12.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v12.0.0", "body": "# Changelog\r\n## v12.0.0\r\n\r\n\r\n### Breaking Changes\r\n* [#2179](https://github.com/KronicDeth/intellij-elixir/pull/2179) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Drop support for Elixir <= 1.6.\r\n    Continuing support for Elixir <= 1.6 required special handling of the language level to support differences in precedence and operators.  Removing the language level tracking allows dropping the `Level` and `FilePropertyPusher` classes and all their usages, including in the parser grammar and the special `ifVersion` external rule.  It also eliminates the need for tests to setup the SDK since it was only needed to get the appropriate Level.  This makes the tests run in 45 seconds instead of 7 minutes.\r\n* [#2339](https://github.com/KronicDeth/intellij-elixir/pull/2339) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove code dependent on the Erlang plugin\r\n    [Erlang plugin is not 2021.3 compatible yet](https://github.com/ignatov/intellij-erlang/issues/963#issuecomment-986261646)\r\n\r\n### Enhancements\r\n* [#2179](https://github.com/KronicDeth/intellij-elixir/pull/2179) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Resolve more calls and bindings in `Ecto.Query` calls\r\n    * Resolve bindings in `Ecto.Query.lock/3`\r\n    * Resolve bindings in `Ecto.Query.windows/3`\r\n    * Walk `preload` binding and expression\r\n    * Resolve in `update` for Ecto.Query\r\n    * Resolve `fragment` in `with_cte`\r\n    * Resolve `binding` and `expr` in `Ecto.Query.dynamic/1-2`\r\n    * Resolve `field` in `join(..., on: field(..., ...) ...)`\r\n      For `join/5`, descend into the options to look for `on: value` and then walk `value` the same as the value to `having` or `where` in selects since they're all boolean conditions.\r\n    * Extract `ecto.query.Nested`\r\n    * Resolve `Ecto.Query.WindowAPI` functions\r\n    * Resolve reference variable src in `join(query, ..., [{src, counter}], ..., ...)`\r\n      Tuple lists in join have two forms:\r\n      1. `{^assoc, a}`\r\n      2.  `{src, counter}`\r\n\r\n      The pinned association form was already handled because the second element was checked for a declaration, but the first element was not, so `src` in (2) could not be resolved.\r\n    * `from([..] in ...)`\r\n    * Treat `or_having` the same as `having`\r\n    * Treat `or_where` the same as `where`\r\n    * Treat `having:` the same as `where:` in `from`\r\n    * Treat `select_merge` the same as `select` for resolving `Ecto.Query.API`.\r\n    * `from(..., [elements])`\r\n    * Resolve Ecto reference variables in `left in ...`\r\n  * `ModuleWalker` and `NameArityRangeWalker`\r\n    Reduce code by abstracting common pattern for walking library APIs.\r\n  * `ExUnit`\r\n    * Find modules declared in `test`s.\r\n    * Resolve call definitions inside `describe` blocks.\r\n    * Resolve variables in `assert_receive` and `assert_received`.\r\n    * Resolve `alias` to modules defined inside the enclosing `describe` block.\r\n    * Walk `assert` expression for variable declarations\r\n      * Check for earlier bindings of variables in right operand of `=` in `assert`.\r\n  * Resolve `require` `as:` arguments as Aliases\r\n  * Decompiler\r\n    * Erlang\r\n      * Decompile private Erlang functions\r\n      * Decompile specs from Erlang DbgI\r\n      * Decompile function bodies from Erlang DbgI\r\n        * Escape \"in\" when an Erlang Var in type\r\n      * Decompile types from Erlang DbgI\r\n        Fixes #2017\r\n    * Decompile Elixir function bodies using DbgI\r\n      * :erlang./(a, b) -> a / b\r\n      * :erlang.*(a, b) -> a * b\r\n      * Convert :erlang.==(a,b) to a == b\r\n      * Rewrite case to `and` when there is a badbool error too\r\n      * Decompile %{__struct__: name, ...} as %name{...}\r\n      * Rewrite more :erlang functions to Elixir\r\n      * Rewrite case to ||\r\n      * Rewrite `case expr1 do pat1 -> true; _ -> false; end` to `match?(pat1, expr1)`\r\n      * Rewrite `if var do false else true` to `!var`\r\n      * Rewrite case to or\r\n      * Rewrite case to and\r\n      * Rewrite :erlang.error(E.exception(M)) to raise E, M\r\n      * Rewrite case statements to if\r\n      * Rewrite case statements to &&\r\n      * Indent all lines of spec macro string in case it is multiple @spec\r\n  * Resolve module attributes defined outside the immediate modular lexical scope\r\n    * Resolve module attributes registered in `elixir_module.erl` to decompiled source\r\n      * after_compile\r\n      * before_compile\r\n      * behaviour\r\n      * compile\r\n      * derive\r\n      * dialyzer\r\n      * external_resource\r\n      * on_definition\r\n    * Index module attributes\r\n      Use the index to resolve module attributes when it can't be found directly by tree walking.\r\n\r\n      * Defined with `Module.put_attribute/3`\r\n      * Defined with `Module.register_attribute/3`\r\n      * Defined in `quote` blocks\r\n  * Resolve variables to variables in any `quote` blocks\r\n    If a variable can't be resolved in the scope, try resolving it to any variable declared at the top-level of a `quote` block.  This helps with certain patterns of `quote` blocks used in Ecto where a variable's declaration and usage are not in the same `quote` block.\r\n  * Simplify CallDefinitionClause resolver for modulars\r\n    Due to the addition of skipping if the entrance is a child call, the check for only following siblings is no longer needed.  Additionally, that check caused a bug because the `ElixirStabBody` skipped call definitions because they were new scopes.\r\n  * Resolve functions declared with `Mix.Generator.embed_template` and `embed_text`.\r\n    Also, new system for tracking resolves paths - `import`s, `defdelegate`, and `use` calls are added to the resolve results after the preferred elements are chosen for source in the same module.  This prevents only the `import` showing because the actual declaration is in another module or the SDK.\r\n  * Record a call as visited in its `treeWalkUp` instead of requiring the caller to do it in the pass `ResolveState`\r\n    * Record `quoteCall` as visited in `QuoteMacro.treeWalkUp`\r\n    * Record `unquoteCall` as visited in `Unquote.treeWalkUp`\r\n    * Record `unlessCall` as visited in `Unless.treeWalkUp`\r\n    * Record `ifCall` as visited in `If.treeWalkUp`\r\n    * Record `importCall` as visited in `Import.treeWalkUp`\r\n    * Record `useCall` as visited in `Use.treeWalkUp`\r\n  * More macro specialized in Structure View\r\n    * `test`\r\n    * `describe`\r\n  * Resolve `Qualifer.unquote(variable)(...)` to any definition with correct arity in `Qualifier`.\r\n  * Only calculate `element.resolvedFinalArity` once in `resolvedQualified`\r\n  * Implementations and Protocols\r\n    * Redo icons\r\n    * Implementations Go To Protocol line markers\r\n    * Go to Super for calls to `defimpl` function/macro\r\n      Goes to corresponding name/arity in the `defprotocol` that the `defimpl` implements.\r\n    * Go to implementations line marker from defprotocol def\r\n    * Go to implementations line marker from defprotocol\r\n    * Go To Implementation from individual functions in defimpl\r\n    * Go To Implementation from defimpl Alias\r\n    * Resolve protocol function to `def` in defprotocol\r\n    * Resolve defp inside of defimpl\r\n      Process declarations inside of implementation the same as modules.\r\n  * Stop `prependQualifiers` at top of file\r\n  * Walk the false and true (else) branch of unless in Modules or Quote\r\n  * Walk the true and false (else) branch of if in Modules or Quote\r\n  * Port `preferred` and `expand` system from `Callables` to `Modules`.\r\n  * Update CI build dependencies\r\n* [#2199](https://github.com/KronicDeth/intellij-elixir/pull/2199) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Regression test for [#2198](https://github.com/KronicDeth/intellij-elixir/issues/2198).\r\n* [#2201](https://github.com/KronicDeth/intellij-elixir/pull/2201) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Use callbacks as completions for calls.\r\n* [#2223](https://github.com/KronicDeth/intellij-elixir/pull/2223) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Decompiler\r\n    * Don't require `MacroNameArity` for `accept`, but use `NameArity` only because no decompiler cares about the macro.\r\n  * Tests for Code.Identifier and String.Tokenizer\r\n* [#2226](https://github.com/KronicDeth/intellij-elixir/pull/2226) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Structure View for `EEx.function_from_(file|string)`\r\n  * Variants (completion) for functions declared by special macros.\r\n    * Functions defined by `EEx.function_from_(file|string)`\r\n    * `exception/1` and `message/1` defined by `defexception`\r\n    * `*_text/0` and `*_template(assigns)` functions defined by `Mix.Generator.embed_text` and `Mix.Generator.embed_template`.\r\n* [#2334](https://github.com/KronicDeth/intellij-elixir/pull/2334) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Internal Tool for BEAM Bulk Decompilation\r\n    Decompile all .beam files in the project, modules and SDKs to check for errors in the generated Elixir code\r\n  * Decompiler\r\n    * Erlang Abst\r\n      * Log decompilation errors\r\n  * Error Reports\r\n    * Include system information in error reports\r\n      Instead of just including the plugin version, also include the Application name, edition, and version; and the Operation System name and version as these are common follow-up questions I have.\r\n    * Remove tab at start of location for title of issues\r\n    * Don't include \"java.lang.Throwable: \" in title of issues\r\n      The `Throwable` is necessary to get a stacktrace, but not a real error.\r\n* [#2339](https://github.com/KronicDeth/intellij-elixir/pull/2339) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Build against `2021.3`\r\n  * `runPluginVerifier` in GitHub Actions\r\n    * Update IDEA version range supports and verified\r\n    * Fix reported compatibility warnings\r\n      * Inline deprecated bundle messages\r\n      * Don't bundle built-in markdown plugin, depend on it instead\r\n\r\n### Bug Fixes\r\n* [#2074](https://github.com/KronicDeth/intellij-elixir/pull/2074) - [@Thau](https://github.com/Thau)\r\n  * Alternative function clause for `put_event` with `suite_finished`\r\n* [#2179](https://github.com/KronicDeth/intellij-elixir/pull/2179) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * StackOverflow fixes\r\n    * getElementDescription(ElixirAtom, ElementDescriptionLocation)\r\n      Override getElementDescription for atoms to prevent StackOverflow while looking for a provider.\r\n    * Don't descend into either branch of `if` or `unless` if entrance in either branch when resolving calls.\r\n      If the definition were in one of the branch, it would already have been found on processing previous siblings in the `ElixirStabBody`.\r\n    * Treat child of modulars as being at the same level if nested in `if` or `unless`\r\n      Prevents `test` in `if` in `supervisor_test.exs` in `ecto` from stack overflowing.\r\n    * Fix StackOverflow when looking for earlier bindings in parameters.\r\n    * Don't check following siblings of modulars if entrance is a direct child\r\n\r\n      Prevent StackOverflow when trying to resolve embed_template when more than one appears in the same module.\r\n\r\n      In general, if the entrance is a child of modular then it can only be defined by a previous sibling, usually an `import` or `use`, but if the entrance is descendant of a child, then it child then it may be a call to a function or macro defined in the modular to following siblings of the entrance ancestor child needs to be checked if the entrance is a forward-call to a later declared function or macro.\r\n    * Fix StackOverflowError in ifErlangRewriteTo\r\n      Don't rewriter :erlang.* to a different :erlang.*\r\n  * Adjust nameArityInterval in nameArityInAnyModule\r\n    Ensures that `fragment/1..` used in a `quote` can resolve to one in `Ecto.Query.API`.\r\n  * Resolve variable that are the only child of `quote`\r\n    Ecto loves doing `quote do: query` or other variable names in the code and tests, so record those as declarations to resolve as invalid results.\r\n  * Find enclosing macro call when keyword `do:` is surrounded by parentheses\r\n    Previously, only `quote do: variable` would work, but now `quote(do: variable)` also works to find the `quote` call.\r\n  * Don't mark fields and keys that are not expected to be resolvable yet as unresolvable in Elixir References inspection.\r\n    * `QualifiedBracketOperation` qualifier\r\n    * `StructOperation` qualifier\r\n    * Expect qualified `unquote` to only have invalid results.\r\n    * Don't mark invalid only results for first chained function call.\r\n      Don't report `unquote(schema).__schema__(:source)`\r\n    * Don't mark invalid only results for chained function calls.\r\n      Don't report `Mix.shell().yes?(\"Are you sure you want to drop the database for repo #{inspect repo}?\") `\r\n    * Don't mark invalid resolved function of call output\r\n    * Don't mark invalid resolved keys or fields of call output\r\n    * Don't mark invalid resolved function call on keys or fields\r\n    * Don't mark parentheses calls on variables if the call does not resolve.\r\n      Can't find exact valid resolves on variables yet.\r\n    * Don't mark keys or fields on the output of a function call.\r\n  * Fix some bugs with `Ecto.Query` calls.\r\n    * Add missing `state.put(Query.Call, call)` for `join/3-4` `executeOnIn`.\r\n    * Walk the operands of `|>` in `select` expressions.\r\n    * Resolve pinned variables as normal instead of as reference variables for Ecto.Query calls.\r\n    * Don't walk keywords that cannot declare reference variables.\r\n      * `hints`\r\n      * `lock`\r\n      * `intersect`\r\n      * `intersect_all`\r\n      * `except`\r\n      * `except_all`\r\n      * `union`\r\n      * `union_all`\r\n      * `prefix`\r\n      * `preload`\r\n      * `offset`\r\n      * `windows`\r\n      * `limit`\r\n    * Don't treat signature for call definition as use of Ecto macro\r\n  * Don't generate references to aliases, functions, or types that don't have declarations\r\n    * `assoc/2` in `join: .. in assoc(_, _)` in a no parentheses `from` call\r\n    * `var` in type restrictions\r\n      Related to elixir-ecto/ecto#3756\r\n    * `BitString`\r\n      `BitString` is recognized in `defimpl ..., for: BitString` to define protocol implementations for `<<..>>`, but the `BitString` module itself does not exist, so can't be resolved.\r\n  * Error reporting\r\n    * Ignore `at com.intellij.openapi.diagnostic.Logger` when calculating location for error report titles\r\n    * Improve error report format sent to GitHub\r\n    * Fix the `event` `message` not being included, which meant that the excerpt wasn't included, so no reproducibility or element class was available.\r\n    * Filter stacktrace to stop at last line from the plugin to limit their size and improve chance of URL being short enough for GitHub.\r\n    * Don't include \"What I was doing\" section unless user actually fills in the additional information in the UI form.\r\n      I'm sick of seeing the issue tracker full of \"I don't know what I was doing\", which is the default text when no additional info is given in the UI form.\r\n    * Set title to the message at start of exception and first `at` that isn't from the `errorreport.Logger` instead of `[auto-generated]` as this is the pattern I follow when renaming manually.\r\n  * Handle `alias __MODULE__.{...}` in prependQualifier\r\n    Fixes #2153\r\n  * Log error, but don't fail with TODO() for unknown strippedQualifier or null qualifier\r\n    Fixes #2153\r\n  * Go To Declaration for captures\r\n    * Don't allow name to be acceptable named parent in `&name/arity`.\r\n      Resolves #488\r\n      Allows Go To Declaration on `name` and not just on `/arity`.\r\n    * Don't allow `Mod.name` to be acceptable named parent in `&Mod.name/arity`.\r\n      Resolves #488\r\n      Fixes #2101\r\n\r\n      Allows Go To Declaration on `name` and not just on `/arity`.\r\n    * Resolve `&name/arity` and `&Mod.name/arity` using same code as callables.\r\n      Fixes resolving &Mod.name.arity and ensures that special handling for weird definitions for callables also apply to captures.\r\n  * Resolve `__MODULE__` in `quote` to `defmacro __MODULE__` in `Kernel.SpecialForms`\r\n  * Performance\r\n    * Fix String.Unicode decompiled being PlainText instead of Elixir\r\n      `String.Unicode` when decompiled using all information from `DbgI` was 161,171 lines long, which made the JetBrains API treat it as plain text instead of Elixir.  Being that long also made it freeze the UI while being decompiled.\r\n\r\n      Now, don't even attempt to use the `DbgI` if the function has more than 10 clauses.\r\n    * Don't decompile private macros and functions if > 500 definitions in one module.\r\n    * If body cannot be decompiled, decompile as one-liner with `...` body\r\n    * Don't decompile Abst clause bodies that exceed 1024 bytes.\r\n    * Decompile Erlang one clauses as Elixir one-liners\r\n  * Fix resolving type specs\r\n    * Find `ancestorTypeSpec` for qualified type used in parentheses in anonymous function type in an alternation\r\n\r\n      ```\r\n      @type run :: ((Ecto.Repo.t, changes) -> {:ok | :error, any}) | {module, atom, [any]}\r\n      ```\r\n    * Resolve type parameters used in inline anonymous function types\r\n    * Resolve callback heads to themselves when they have type restrictions using when\r\n    * Ignore literal parameters\r\n      * Decimals\r\n      * Aliases\r\n    * Check left operand of `\\\\` for type parameters as they could appear when copying def with defaults.\r\n  * putInitialVisitedElement in variable.Variants\r\n    Fixes #2002\r\n  * Walk `defdelegate`s when walking `import`s\r\n    Fixes resolving `config` from `use Mix.Config` as it delegates to `Config`\r\n  * Resolve variables used in `match?` guards to pattern declaration\r\n    Resolves `on_delete` in `match?(%{on_delete: on_delete} when on_delete != :nothing, reflection)`\r\n  * Implementations and Protocols\r\n    * Fix calculating definition for stubs of defimpl with `for:`\r\n      There was no clause for defimpl being arity 3, which is the case when there is the (1) protocol (2) `for:` and (3) `do` block.  Not having a definition meant that the `defimpl protocol, for: struct do` would be in AllName index, but not ModularName.\r\n    * Get name of enclosing modular for defimpl without `for:`\r\n  * Store if stubs are guards\r\n  * Decompiler\r\n    * Surround `case` statements with parentheses when used in `cond` clause conditions\r\n    * Convert OtpErlangString to OtpErlangList for tuple and call argument lists\r\n    * Escape ESC character as \\e\r\n    * Handle Clause arguments being OtpErlangString\r\n    * Handle tuple elements being an OtpErlangString\r\n    * Add missing `.` after callee when it is a module or fn\r\n    * Protect from `Macro.toString(macro)` StackOverflowError when decompiling body of function clauses\r\n    * Don't print function names as atoms in captures\r\n    * Escape `\\x` to `\\\\x` in OtpErlangStr\r\n    * Fix rewrite of :erlang calls\r\n    * Surround type unions with parentheses\r\n      Prevents parsing problems with unions in guard (when) clauses\r\n    * Don't use `prependIndent` because it indents blank lines too.\r\n      This doesn't match `mix format` or the IntelliJ Elixir formatting.\r\n    * Erlang\r\n      * Escape fn Erlang variable\r\n      * Escape Erlang char \\ as \\\\\r\n      * Don't append lines for clauses or `after` in Erlang `receive` when decompiling if empty.\r\n      * Use `Infix`, `Prefix`, and `Unquote` decompolers for Erlang Abst chunk in addition to DbgI chunk\r\n        * functions\r\n        * typesepcs\r\n      * Use `function.macroNameArityMacro.macro` when decompiling Erlang Abst clauses.\r\n        Don't use `def` anymore when unexported and therefore private; use `defp` instead.\r\n      * Remove space after `...` in decompiled private types.\r\n  * Process imports for calls\r\n    Imports were previously only processed inside of Modules and not in general, which means that imports in the file were not processed, which is needed for `association.ex` in Ecto.\r\n  * Classify ..// as OTHER instead of NOT_CALLABLE, so that it is escaped as a key.\r\n  * Fix Macro.ifCaptureModuleNameArity\r\n  * Resolve variable to parameter in `%parameter{}` patterns for struct names\r\n  * `Unquote.treeWalkUpUnquoted` through tuples\r\n  * `Quote.treeWalkUp` through `case`\r\n  * Stop searching on numerical index in binding\r\n  * Stop searching if atom in wrong place in binding\r\n    Stops invalid binding test from erroring when resolving it.\r\n  * Turn off `tailrec` because it doesn't work correctly for `ElixirAccessExpression`\r\n  * Stop searching for qualifier when `ElixirUnqualifiedNoParenthesesManyArgumentsCall`.\r\n* [#2199](https://github.com/KronicDeth/intellij-elixir/pull/2199) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Stop highlighting types when `unquote_splicing/1` is reached.\r\n    `unquote_splicing` is being used to splat arguments or fields of a struct into the type.  The arguments to `unquote_splicing` are normal calls or variables, not types.\r\n* [#2201](https://github.com/KronicDeth/intellij-elixir/pull/2201) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Implement `call_definition_clause.Variants#executeOnCallback`\r\n* [#2204](https://github.com/KronicDeth/intellij-elixir/pull/2201) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `CallDefinitionClause.time/1`\r\n    * Mark guards as runtime.\r\n    * Mark anything unknown as runtime too.\r\n    * Log unknown calls.\r\n* [#2207](https://github.com/KronicDeth/intellij-elixir/pull/2207) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check if `Call` `isValid` before using `containingFile` for `locationString`.\r\n* [#2208](https://github.com/KronicDeth/intellij-elixir/pull/2208) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check if `project` is not dumb in `nameArityInAnyModule`.\r\n* [#2209](https://github.com/KronicDeth/intellij-elixir/pull/2209) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Take `resolveInScope` only if at least one valid\r\n    Checking only for an empty collection allowed any prefixes in the scope to override exact matches in anywhere indexed, which meant that `Ecto` in `defmodule Ecto.Adapter do` resolved to itself instead of the exact `defmodule Ecto do`.\r\n* [#2214](https://github.com/KronicDeth/intellij-elixir/pull/2214) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * When regenerating the parser, `ElixirVisitor` is also regenerated.  When it was regenerated it lost the bug fix for `#visitLiteralSigileLine` calling itself.  Added a regression test, so that this can't happen again.\r\n* [#2223](https://github.com/KronicDeth/intellij-elixir/pull/2223) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ecto\r\n    * Walk keyword keys as right operand of `in` in `from`\r\n  * Resolving type references\r\n    * Walk struct operations for type parameters\r\n    * Check keyword values for type parameters\r\n    * Check operands of two operations for type parameters\r\n    * Stop looking for type parameters on qualified or unqualified alias\r\n  * Decompiler\r\n    * Only unquote `in` when an Erlang function, otherwise, use operators the same as Elixir for defs and calls.\r\n    * Fix apply Erlang arguments, so that they are inside `[]`.\r\n    * Quote keyword keys containing `-`\r\n      Fixes decompiling of `Elixir.Phoenix.HTML.Tag.beam`\r\n    * Use apply with escaped atom when Erlang function call is an Elixir operator\r\n  * Port String.Tokenizer.tokenize for use in Identifier.inspectAsKey\r\n    I was putting off porting all of `Identifer.inspectAsKey` by adding special cases as needed, but the decompiler kept having bugs, so port all of it including `String.Tokenizer.tokenize`.  It will also work for unicode characters now too.\r\n  * Resolve calls that are unquoted values to search for quote blocks in those functions.\r\n  * Stop looking for qualifiers to prepend when reaching `=>`\r\n  * The parent argument to AccumulatorContinue.childExpressionsFoldWhile should be this and not parent\r\n    When converting to an extension function I left `parent` in place because the argument is called `parent`, but since it is an extension function that value because `this.parent` when it really should have been `this`.  Using `this.parent` meant it would ask for the parent's children and keep looping back to `this`.\r\n  * Don't use `tailrec` in function with any body-recursion.\r\n    It causes issues with `ElixirAccessExpression` recursion sometimes.\r\n* [#2226](https://github.com/KronicDeth/intellij-elixir/pull/2226) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Implement completion for functions declared with `defdelegate`.\r\n  * Fix `LookupElementPresentation.putItemPresentation` `addTailText`.\r\n    Only append suffix of `presentableText` if it is prefixed by `itemText`.\r\n* [#2334](https://github.com/KronicDeth/intellij-elixir/pull/2334) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Decompiler\r\n    * Elixir\r\n      * Decompile local function calls in Elixir DbgI using inspectAsFunction\r\n        While remote calls used `inspectAsFunction`, local calls just used the `atomValue`,  which meant names that needed to be unquoted weren't and caused parsing errors.\r\n    * Erlang Abst\r\n      * Decompile Erlang Abst string with OtpErlangList as strings with non-ASCII codepoints\r\n        Fixes unknown string format in `idna.beam`\r\n      * Always group for comprehensions in sequence even if there is only 1 element\r\n        Some forms of `for` comprehensions cannot be used as the sole argument of a call unless surrounded by parentheses, so always add those parentheses.\r\n      * Decompile Erlang Abst record empty record fields as `[]` for updates\r\n      * Decompile Erlang Abst `left xor right` as `:erlang.xor(left, right)`\r\n        Elixir does not have a logical xor infix operator, so have to decompile as normal function call\r\n      * Decompile Erlang Abst named anonymous function as a macro\r\n        Named anonymous functions are support in Erlang, but not Elixir, so fake it as a macro when decompiling.\r\n      * Add builtin-types for Erlang Abst\r\n        * `bitstring`\r\n        * `float`\r\n        * `nonempty_improper_list`\r\n        * `nonempty_maybe_improper_list`\r\n      * Decompile tagged atoms and other complex expression as function name in Abst capture\r\n      * Decompile Erlang Abst `float`\r\n      * Decompile Erlang Abst `begin` blocks as parenthesized groups separated by ;\r\n      * Decompile empty OtpErlangList as \"\" in Erlang Abst `string`\r\n      * Track if decompiled Erlang Abst contains do blocks so that they can be surrounded by parentheses when necessary\r\n      * Fix decompiling Erlang Abst `record_index` when record name needs to be unquoted\r\n      * Decompile `map` updates in Erlang Abst\r\n      * Erlang Abst Function capture names are OtpErlangAtom and not tagged Atoms\r\n      * Inspect local function names as atoms instead of as functions when apply/3 is used for operations and unquoted in Erlang Abst\r\n        Stops `:unquote(:\"NAME\")` from happening\r\n      * Surround anonymous function definitions that are called immediately with parentheses and call arguments with .( in Erlang Abst\r\n      * Decompile `field_type` in Erlang Abst\r\n        Fixes decompiling `hipe_icode_call_elim.beam`\r\n      * Inspect type name usages as local functions to ensure invalid names are unquoted\r\n      * Inspect type names as local functions to ensure invalid names are unquoted\r\n  * References\r\n    * Stop looking for qualifiers to prepend when exiting interpolation\r\n    * Don't safeMultiResolve null call.reference in resolvesToModularName\r\n  * Types\r\n    * Fix highlighting types declared with unquote and no secondary parentheses\r\n  * Performance\r\n    * Don't error if a private function mirror cannot be found\r\n      Private functions are not decompiled if there are too many public functions.\r\n    * Fix CallDefinitionImpl.isExported\r\n      Used to be hard-coded to return `true`, but this pre-dated decompiling private functions.  Now with decompiling private functions, isExported needs to defer to the `Definition` and count as unexported if a private function, macro, or guard.\r\n* [#2337](https://github.com/KronicDeth/intellij-elixir/pull/2337) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Walk map constructin arguments, associatons, and variables when resolving type parameters.\r\n* [#2339](https://github.com/KronicDeth/intellij-elixir/pull/2339) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't use `PluginId.findId` that doesn't exist in 2021.1.X", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/54670312/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 4, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "mentions_count": 1}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/47081092", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/47081092/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/47081092/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.13.0", "id": 47081092, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ3MDgxMDky", "tag_name": "v11.13.0", "target_commitish": "main", "name": "v11.13.0", "draft": false, "prerelease": false, "created_at": "2021-07-31T02:09:57Z", "published_at": "2021-07-31T02:17:43Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/41394079", "id": 41394079, "node_id": "MDEyOlJlbGVhc2VBc3NldDQxMzk0MDc5", "name": "intellij-elixir-11.13.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7283477, "download_count": 68, "created_at": "2021-07-31T02:15:40Z", "updated_at": "2021-07-31T02:15:45Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.13.0/intellij-elixir-11.13.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.13.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.13.0", "body": "# Changelog\r\n## v11.13.0\r\n\r\n### Bug Fixes\r\n* [#2035](https://github.com/KronicDeth/intellij-elixir/pull/2035) - [@theqp](https://github.com/theqp)\r\n  * Remove bintray repositories.\r\n\r\n### Enhancements\r\n* [#2035](https://github.com/KronicDeth/intellij-elixir/pull/2035) - [@theqp](https://github.com/theqp)\r\n  * Update build to IntelliJ IDEA 2021.2.\r\n  * Upgrade to Gradle 7.1.1.\r\n* [#2036](https://github.com/KronicDeth/intellij-elixir/pull/2036) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Expand compatibility range to 2021.1.2-2021.2. \r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/47081092/reactions", "total_count": 13, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45592861", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45592861/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/45592861/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.12.0", "id": 45592861, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ1NTkyODYx", "tag_name": "v11.12.0", "target_commitish": "main", "name": "v11.12.0", "draft": false, "prerelease": false, "created_at": "2021-07-01T20:26:43Z", "published_at": "2021-07-01T23:32:59Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/39586510", "id": 39586510, "node_id": "MDEyOlJlbGVhc2VBc3NldDM5NTg2NTEw", "name": "intellij-elixir-11.12.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7256920, "download_count": 19, "created_at": "2021-07-01T23:32:52Z", "updated_at": "2021-07-01T23:32:56Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.12.0/intellij-elixir-11.12.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.12.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.12.0", "body": "# Thanks\r\n\r\n* For reporting that `CallDefinitionHead` could not be checked if it was decompiled.\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For reporting that BEAM Chunks tab labels did not render.\r\n  * Robin Hilliard ([@robinhilliard](https://github.com/robinhilliard))\r\n* For reporting `EOFException` while reading chunks from `.beam` files that were incomplete.\r\n  * Yordis Prieto ([@yordis](https://github.com/yordis))\r\n  * Pradeep Kumar ([@pkgodara](https://github.com/pkgodara))\r\n  * Ali Makki ([@alimakki](https://github.com/alimakki))\r\n  * Clifton McIntosh ([@cliftonmcintosh](https://github.com/cliftonmcintosh))\r\n  * [@mudphilo](https://github.com/mudphilo)\r\n  * \u041e\u043b\u0435\u0433 \u0414\u0443\u043b\u0435\u0446\u043a\u0438\u0439  ([@dog-64](https://github.com/dog-64))\r\n  * Mithen Ji ([@mithenji](https://github.com/mithenji))\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For posting a patch to fix an EEx bug\r\n  * Alexandr Evstigneev ([@hurricup](https://github.com/hurricup))\r\n* For posting missing `mix deps` options for determining dependency paths on disk.\r\n  * Ian Mikhailov ([@yanmhlv](https://github.com/yanmhlv))\r\n  * Simon McConnell  ([@simonmcconnell](https://github.com/simonmcconnell))\r\n* For reporting that there was unhandled element types in `Type` scope processor and better error handling was necessary.\r\n  * Donald Wilson ([@donaldww](https://github.com/donaldww))\r\n* For reporting that MIssing SDK error was not helpful in Dialyzer Service.\r\n  * Walter Weinmann ([@walter-weinmann](https://github.com/walter-weinmann))\r\n  * Klaus Ferreira  ([@KlausEverWalkingDev](https://github.com/KlausEverWalkingDev))\r\n  * Changyu Geng ([@KingMario](https://github.com/KingMario))\r\n  * [@snow-dev](https://github.com/snow-dev)\r\n  * [@marcel862](https://github.com/marcel862)\r\n  * Ram Kumar ([@ramka001](https://github.com/ramka001))\r\n* For reporting Stack Overflows in `Callable.annotate` due to improper tracking of modular children leading to looping when there is more than one `use`.\r\n  * [@ehayun](https://github.com/ehayun)\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Matt Pinkstron ([@mpinkston](https://github.com/mpinkston))\r\n  * Sergey Snozyk ([@nmbrone](https://github.com/nmbrone))\r\n  * Kevin Hagel ([@kevinhagel](https://github.com/kevinhagel))\r\n  * Surya Teja Muthyala ([@suryatejamuthyala](https://github.com/suryatejamuthyala))\r\n  * Simon McConnell  ([@simonmcconnell](https://github.com/simonmcconnell))\r\n  * Daniil Nevdah ([@ndan](https://github.com/ndan))\r\n  * Donald Wilson ([@donaldww](https://github.com/donaldww))\r\n  * Walter Weinmann ([@walter-weinmann](https://github.com/walter-weinmann))\r\n  * Moein ([@amoein](https://github.com/amoein))\r\n  * Jonathan (JC) Chen ([@dijonkitchen](https://github.com/dijonkitchen))\r\n* For pointing to [Yacto](https://github.com/gumi/yacto) as a reproduction repository for a bunch of bugs\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))  \r\n\r\n# Changelog\r\n\r\n## v11.12.0\r\n\r\n### Bug Fixes\r\n* [#1988](https://github.com/KronicDeth/intellij-elixir/pull/1988) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Only descend into modular children of modular for Module scope.  Prevents recursion loops on use calls.\r\n  * Don't search for unquoted variable value variable is value for `do:`.\r\n  * Protect from `IndexNotReady` in `resolver.Module.multiResolveProject`.\r\n  * Stop walking unquoted variable that resolves to a parameter.\r\n  * Walk case in `__using__` to find quote in any clause.  Fixes resolving test macro from `use PowerAssert`\r\n  * Resolve functions declared in `quote`'s scope when `block` injected with `unquote(block)`.\r\n    Fixes resolving `field`, `timestamps`, and `index` in `schema` for `use Yacto.Schema` as it makes the `block` see the `import Yacto.Schema` above `unquote(block)` in the `quote` in `schema(..., do: block)`.\r\n* [#1990](https://github.com/KronicDeth/intellij-elixir/pull/1990) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Convert MissingSDK errors for Dialyzer into Notifications.\r\n* [#1993](https://github.com/KronicDeth/intellij-elixir/pull/1993) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Log element in psi.scope.Type instead of using `TODO()`\r\n    Error will still be reported, but there will be enough information to triage and since `true` is returned now it won't stop the type resolving from working.\r\n* [#1994](https://github.com/KronicDeth/intellij-elixir/pull/1994) - [@KronicDeth](https://github.com/KronicDeth)    \r\n  * Add missing mix deps options to non-path influencing list:\r\n    * env\r\n    * manager\r\n    * repo\r\n    * sparse\r\n    * submodules\r\n    * system_env\r\n* [#1995](https://github.com/KronicDeth/intellij-elixir/pull/1995) - [@hurricup](https://github.com/hurricup)]\r\n  * Fix incorrect `OuterElementType` in `eex.lexer.TemplateData`.\r\n    The `EEX` `IElementType` needs to use `OuterLanguageElementType` instead of the direct `eex.psi.TokenType`.\r\n* [#1996](https://github.com/KronicDeth/intellij-elixir/pull/1996) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Run `QualifiedAlias#text` in `runReadAction` for `QualifiedAlias#name`\r\n* [#1997](https://github.com/KronicDeth/intellij-elixir/pull/1997) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Return `null` `Chunk` instead of throwing `IOException` when read incomplete.\r\n    Incomplete reads happen often due to incomplete writes to the file system being read in. As such, they shouldn't generate error reports and instead should be silently ignored.\r\n* [#1999](https://github.com/KronicDeth/intellij-elixir/pull/1999) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Implement `beam.FileEditor#getFile` to fix `DeprecatedMethodException` as the default implementation is now deprecated and requires an explicit implementation.\r\n  * Use `TabbedPaneWrapper.AsJBTabs` instead of `JBTabbedPane` for \"BEAM Chunks\" tabs.\r\n    I'm not sure why `JBTabbedPane` stopped showing its labels sometime in the 2020.X IDE version series, but by debugging when \"BEAM Chunks\" name was retrieved I found that the bottom tabs used `TabbedPaneWrapper.asJBTabs`.  Using that, the labels reappeared.\r\n* [#2000](https://github.com/KronicDeth/intellij-elixir/pull/2000) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't require Alias qualifier to be a `PsiNamedElement`.\r\n    It can be an `ElixirAtom` and getting the reference will still work.\r\n* [#2001](https://github.com/KronicDeth/intellij-elixir/pull/2000) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `Any.isDecompiled` for `CallDefinitionHead`.\r\n\r\n### Enhancements\r\n* [#1988](https://github.com/KronicDeth/intellij-elixir/pull/1988) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Find `Dep`s in function calls in the `deps()` list.\r\n  * `Dep.putPath` from a variable.\r\n  * Treat `Memoize` `defmemo` as `def` and `defmemop` as `defp`.\r\n  * Resolve `exception/1` and `message/1` to `defexception`.\r\n  * Resolve to callbacks when searching in any module.\r\n  * Support arity intervals for unquote_splicing in parameters\r\n  \r\n    Functions defined with unquote_splicing, such as `Ecto.Schema.__schema/2`:\r\n  \r\n    ```elixir\r\n    for clauses <- Ecto.Schema.__schema__(fields, field_sources, assocs, embeds),\r\n        {args, body} <- clauses do\r\n      def __schema__(unquote_splicing(args)), do: unquote(body)\r\n    end\r\n    ```\r\n  \r\n    Need to have their arity not be the number of PsiElements in the parentheses.  Any call to `unquote_splicing(...)` can end up have 0 to infinite parameters, so it means when one is saw, the range of `minimum...maximum` should change to an open interval of `minimum...`.  This required changing `IntRange resolvedFinalArityChange()` to `ArityInterval resolvedFinalArityInterval()` on all `Call`s, which was a large change.  It also meant changing a lot of ArityRange types to ArityInterval, and NameArityRange to NameArityInterval, which influenced the variable names.\r\n  \r\n    Since all Calls support ArityIntervals now and not just special forms and Ecto DSLs, exportArity is changed to always state the ResolveState, so that the special form changes can be integrated for all callers.\r\n  \r\n    The actual implementation of CallImpl.resolvedFinalArityRange is changes to fold over the ArityInterval:\r\n    * Normal arguments increase the minimum and maximum.\r\n    * Default arguments increase only the maximum.\r\n    * unquote_splicing changes the maximum to null to indicate the interval is half open.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45592861/reactions", "total_count": 15, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 10, "rocket": 5, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45028508", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45028508/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/45028508/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.11.0", "id": 45028508, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ1MDI4NTA4", "tag_name": "v11.11.0", "target_commitish": "main", "name": "v11.11.0", "draft": false, "prerelease": false, "created_at": "2021-06-22T13:52:51Z", "published_at": "2021-06-22T13:22:36Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/39044071", "id": 39044071, "node_id": "MDEyOlJlbGVhc2VBc3NldDM5MDQ0MDcx", "name": "intellij-elixir-11.11.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 7208573, "download_count": 8, "created_at": "2021-06-22T13:56:30Z", "updated_at": "2021-06-22T13:56:36Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.11.0/intellij-elixir-11.11.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.11.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.11.0", "body": "# Thanks\r\n\r\n* For reporting that Ctrl+Click / Go To Declaration did not work anymore in newer version of IntellIJ\r\n  * Joshua Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Ivan Shpotenko ([@IvanShpotenko](https://github.com/IvanShpotenko))\r\n  * Sergey Kislyakov ([@Defman21](https://github.com/Defman21))\r\n  * Raffael Krebs ([@kreba](https://github.com/kreba))\r\n  * Dmitry Arkhipenko ([@dkgitdev](https://github.com/dkgitdev))\r\n  * Christopher Bach ([@muspellpete](https://github.com/muspellpete))\r\n  * Chris Martin ([@ trbngr](https://github.com/trbngr))\r\n* For helping me on JetBrains Platform slack and pointing out that [the 2020 series of IDEs broke their plugins](https://youtrack.jetbrains.com/issue/IDEA-243212) too.\r\n  * Colin Fleming ([@cmf](https://github.com/cmf)) \r\n  * Joachim Ansorg ([@jansorg](https://github.com/jansorg))\r\n* For confirming that [JetBrains changed the API in 2020 to favor declaration instead of references](https://youtrack.jetbrains.com/issue/IDEA-243212#focus=Comments-27-4196159.0-0) and because of Elixir macros everything could be a declaration, which broke macro heavy languages like Clojure and Elixir\r\n  * Daniil Ovchinnikov ([@dovchinnikov](https://github.com/dovchinnikov))\r\n\r\n# Changelog\r\n\r\n\r\n## v11.11.0\r\n\r\n### Enhancements\r\n* [#1948](https://github.com/KronicDeth/intellij-elixir/pull/1948) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Reference Resolution\r\n    * Allow any Alias in a chain to have references.\r\n      This allows going to the declaration of `Phoenix`, `Phoenix.LiveView`, or `Phoenix.LiveView.Socket` depending on whether you're on the `Phoenix`, `LiveView`, or `Socket` Alias, respectively, in the chain.\r\n      * Allow any Alias in Qualified Alias to be resolved\r\n        This allows going to the declaration of Phoenix, Phoenix.LiveView, or Phoenix.LiveView.Socket depending on whether you're\r\n        on the Phoenix, LiveView, or Socket Alias, respectively, in the chain.\r\n      * Update DocumentationProvider to work with improved Alias resolution\r\n  \r\n        Without these changes the DocumentationProvider double-resolves and so ends up showing the docs for `def` and `defmodule`, instead of the call definition clause or module, respectively.\r\n    * Reimplement Module references\r\n      Instead of references for only the outermost QualifiableAlias, there is a reference for each right-most Alias at a given position, so instead of there only be a reference to `App.Context.Schema` in `App.Context.Schema`, there is now a reference to `App` in the `App` prefix, a reference to `App.Context` in `Context` in `App.Context`, and a reference to `App.Context.Schema` in `Schema` in `App.Context.Schema`.  Not only is this more useful, being able to jump to parent namespaces, but it fixed some of the capability issues with Go To Definition in the 2020 line of IDEs.  This approach of using `getRangeInElement` to target the range of the right-most Alias, while the element was still the parent that contained, but did not go beyond the Alias, was tried after having references only on `Alias`es and not `QualifiedAlias`es did not fix completion issues.  It was the while debugging Go To Declaration actions and noticing they were sensitive to the range in element AND the [docs for PsiReference#getRangeInElement](https://github.com/JetBrains/intellij-community/blob/f66e9644fa683fba22f4ce9e30c037720f745989/platform/core-api/src/com/intellij/psi/PsiReference.java#L49-L62) that I realized that the Go To Declaration and Completion has a hidden requirement that References for things that behave like namespaces have to work this way.\r\n      * Use `ModularName` index for Module Variants\r\n        Have a smaller index to iterate and remove need for the `isAlias` check.\r\n    * Limit Elixir Module resolution to same JetBrains Project Module\r\n      * Change the `GlobalSearchScope` from `allProject` to `moduleWithDependenciesAndLibrariesScope` for faster searching on multi-module projects.\r\n        * Set `includeTests` based whether the referring element is in a test directory.\r\n      * Use `StubIndex#processElements` instead of home grown `forEachNavigationElement` as `processElements` is more efficient.\r\n    * Favor Module `ResolveResults` under same `Module` content roots\r\n      This should favor deps sources in the same module.\r\n    * Iterate `function` body in `unquote(function())` when iterating call definition clauses in `quote`\r\n      Treats it `function` body the same as a `__using__` body.\r\n    * Standardized preferred `ResolveResult` filters between Callables and Modules\r\n  \r\n      1. Prefer valid results as long as it doesn't leave no results.\r\n      2. Prefer results in the same module as long as it doesn't leave no results.\r\n  \r\n      In Go To Declaration also:\r\n  \r\n      3. Prefer results in source (that aren't decompiled) as long as it doesn't leave no results.\r\n    * Use the second argument to `use` to determine which function is called with apply/3\r\n  \r\n      This pattern is used in Phoenix `__using__`, so this lets to differentiate whether `Plug.Conn.assign/3` or `Phoenix.LiveSocket.assign/3` is resolved in a Controller, LiveComponent, or LiveView.\r\n    * In LEEx Templates\r\n      * Resolve function calls in `*.html.leex` templates to functions defined in the corresponding LiveComponent/View module.\r\n      * Assigns\r\n        * Resolve assigns in LEEx templates to the keyword key in `assign/3` calls in `update/2` in the LiveComponent or LiveView\r\n          Had to add back in a `TargetElementEvaluator`, so that the `UnqualifiedNoArgumentCall` (`name`) that is the identifier in an assign (`@name`) was not counted as valid target for Find Usages / Go To Declaration by itself.\r\n        * Search for assigns in all call definitions in view module\r\n          Expand from just `update` to any call definition to cover helper functions and other callbacks. Don't stop on the first valid match because with helper functions and multiple callbacks, the last write isn't obvious.\r\n        * Resolve assigns set with `assign/3`\r\n        * Look for `assign` calls in `|>` pipelines\r\n        * Resolve assigns set with `assign_new/3`\r\n        * Resolve @live_action to where it is assigned Phoenix.LiveView.Channel.assign_action/2\r\n        * Find assigns in maps for assign/2\r\n          Since assign/2 accepts either a keyword list or a map, check in both types.\r\n        * Resolve @myself to where it is set in `render_pending_components`\r\n        * Resolve assigns in macros with do blocks like `case` and `if`\r\n        * Find assigns in `live_component` calls\r\n          If an assign can't be found in the body of a LiveComponent module, then it maybe passed through from the `live_component` call itself, so look for any references to the view module (the LiveComponent) and if it is a `live_component` call, then look at those assigns to try to resolve the assign name.\r\n        * Resolve assigns to `live_modal` calls\r\n          `live_modal` is not built into `phoenix_live_view`, but it is generated by `phx.gen.live`, so most projects will have it.\u00a0 This allows `return_to`, which is used use in `live_modal`, to be resolved.\r\n        * Resolve `@socket` to last socket variable or call in view module.\r\n        * Resolve `@flash` to `put_flash/3` calls.\r\n        * Resolve `@inner_content` to `Phoenix.LiveView.Utils.to_rendered/2` setting the assign with `put_in`\r\n      * Resolve aliases in `.leex` templates\r\n        Generalize the `.leex` and `use` walking from call definition clauses to any scope processor lambda, so it can be used to resolve uses of `Routes` in `.leex` templates.\r\n    * Resolve Types\r\n      * Have separate references specifically for Types.\r\n      * Resolve to both types declared with `@type`, `@typep`, or `@opaque`; and named type parameters.\r\n      * Process declarations for `@type`, `@typep`, and `@opaque`.\r\n      * Count `@callback` as declaring a Type\r\n      * Resolve type `t` for `defprotocol` to where it is defined in `Protocol.__protocol__`\r\n        Unfortunately, this ties all protocol's `t` to the same element, so Find Usage finds all protocol's types instead of just a specific module's type, but this works for projects that have source, but not yet compiled.\r\n        * Favor protocol-specific decompiled `@type t` when available.\r\n      * Resolve type variable to the keyword key in guards.\r\n      * `__MODULE__`\r\n    * Favor source over decompiled per name instead of overall for `ResolveResultOrderedSet`\r\n      This allows the `Routes` alias to be resolved to the both the `MyAppWeb.Router.Helpers` in `alias MyAppWeb.Router.Helpers, as: Routes` in the source of `MyAppWeb`, but also the decompiled `MyAppWeb.Router.Helpers`, which is necessary as `MyAppWeb.Router.Helpers` is produced on compile from `router.ex`.\r\n    * Resolve references through `defdelegate` calls.\r\n    * Resolve `code_reloading?` in MyApp.Endpoint\r\n  \r\n      The generated `MyApp.Endpoint` for `mix phx.new` has a section to enable code-reloading at compile time:\r\n  \r\n      ```elixir\r\n      # Code reloading can be explicitly enabled under the\r\n      # :code_reloader configuration of your endpoint.\r\n      if code_reloading? do\r\n        socket(\"/phoenix/live_reload/socket\", Phoenix.LiveReloader.Socket)\r\n        plug(Phoenix.LiveReloader)\r\n        plug(Phoenix.CodeReloader)\r\n      end\r\n      ```\r\n  \r\n      Previously, `code_reloading?` variable would not resolve because psi.scope.Variable ignored `use` calls, not `use` calls are entered and the `var!(code_reloading?)` is found in `Phoenix.Endpoint.config/1` by way of the `unquote(config(opts))` call in the `quote` block in `__using__(opts)`.\r\n    * Resolve qualified calls with unknown resolvable qualifier using only relative identifier and arity.\r\n    * `@spec`\r\n      * Resolve `@spec` to `defdelegate` calls.\r\n      * Resolve @specs to the definitions if the definitions are in a for comprehension\r\n    * `Ecto`\r\n      * `Query`\r\n        * Resolve reference variables in `Ecto.Query`\r\n          * Reference variables are introduced in as the left operand of `in` passed to `from/2` and the `join:` keyword in `from/2`.\r\n          * `join/3-5`\r\n          * Resolve bindings in `select/2-3`.\r\n          * Resolve reference variables in `where/2,3` binding.\r\n            Also add support for resolving `a` in `[{^assoc, a}]` binding.\r\n          * Resolve `bindings` in `group_by/2-3`.\r\n          * Resolve `bindings` and `expressions` in `order_by/2-3`.\r\n          * Resolve `bindings` in `having/2-3`.\r\n          * Add `select_merge` to declaring `Ecto.Query` macros.\r\n          * Add `distinct/2-3` as a declaring `Ecto.Query` macro.\r\n        * Resolve `field` calls in Ecto `schema` blocks\r\n  \r\n          How `field` works in `schema` for `Ecto.Schema`\r\n          1. `use Ecto.Schema`\r\n          2. `Ecto.Schema.__using__`\r\n          3. `import Ecto.Schema, only: [schema: 2, embedded_schema: 1]``\r\n  \r\n          Note that only the outer DSLs, schema and embedded_schema are available even though field/2 is defined in Ecto.Schema.\r\n  \r\n          So when you call `schema ... do`\r\n          1. `defmacro schema(source, [do: block])`\r\n          2. `schema(__CALLER__, source, true, :id, block)`\r\n          3. `defp schema(caller, source, meta?, type, block)`\r\n          4. There's a big `prelude = quote do` quote block\r\n  \r\n          At the end of prelude there is\r\n  \r\n          ```elixir\r\n          try do\r\n            import Ecto.Schema\r\n            unquote(block)\r\n          after\r\n            :ok\r\n          end\r\n          ```\r\n  \r\n          Hey! An `import Ecto.Schema`, but `prelude` is just floating as a variable.\u00a0 At the end of\u00a0 `defp schema(caller, source, meta?, type, block)` is\r\n  \r\n          ```elixir\r\n          quote do\r\n            unquote(prelude)\r\n            unquote(postlude)\r\n          end\r\n          ```\r\n  \r\n          So to statically analyze an `Ecto.Schema` module.\r\n  \r\n          1. Resolve `schema/2` to `defmacro schema` by walking the `use`, `__using__`, `quote`, and `import`.\r\n          2. Inside the `schema/2` (or macros in general if you want to get fancy \ud83d\udc85 and support more DSLs),\r\n          3. Go into the body of the macro.\u00a0 If there's a call, resolve it\r\n          4. Go into the called function\r\n          5. Look for a `quote` block at the end (the same as my current `__using__` support)\r\n          6. If there's a `Call` inside an `unquote` see if you can resolve it to a variable in addition to a call definition (which is already supported for Phoenix).\r\n          7. If it's a variable, check it's value.\u00a0 If it's a `quote`, use the quote block handling\r\n          8. In the quote block handling add support for `try`\r\n          9. Walk the `try` and see the `import`, walk the `import` to find `Ecto.Schema.field/2`\r\n        * `API`\r\n          *  Resolve `Ecto.Query.API` functions in `Ecto.Query`\r\n            * `from(order_by: ...)`\r\n            * `from(select: ...)`\r\n              * `from(select: tuple())`\r\n            * `from(where: ...)`\r\n            * `group_by/2-3`\r\n            * `having/2-3`\r\n            * `select/2-3` `expr` argument\r\n            * `where`\r\n          * Resolve `Ecto.Query.API.fragment` to arity interval `0..`.\r\n          * Resolve `fragment` nested in other `Ecto.Query.API` call like `type`.\r\n          * Walk `rightOperand` of `join(..., ... in ..., ...)` for `Ecto.Query.API` usages like `fragment`.\r\n    * Resolve module attributes defined in `use` `__using__` `quote` block\r\n      * Change `org.elixir_lang.reference.resolver.ModuleAttribute` to use `PsiScopeProcessor` for non-`@for` and non-`@protocol` instead of custom logic.\r\n      * Don't descend into a `use` if the `ENTRANCE` is an ancestor since that means the `Alias` on the `use` is probably being resolved.\r\n      * `AtUnqualifiedNoParenthesesCall.processDeclarations` will call `processor.execute` when it isn't a type spec.\r\n      * The `UseScopeSelector` for `AtUnqualifiedNoParenthesesCallImpl` has been changed to `SELF_AND_FOLLOWING_SIBLINGS` since the module attribute is used that way.\u00a0 The previous `SELF` value was when the `UseScopeSelector` only applied to variables.\r\n  * \"Elixir References\" inspection for finding unresolved or invalid references.\r\n    * `visitAtNonNumericOperation`\r\n      Helps \"Elixir References\" find unresolved assigns.\r\n  * Strip `AccessExpression`s from `Qualified` qualifiers automatically\r\n  * Documentation\r\n    * Show `deprecated`, `impl`, and `spec`, and actual heads in documentation for source functions\r\n    * Merge `Documentation` across multiple arities when arity of lookup is ambiguous.\r\n  * Find variables defined in EEx element\r\n    Finds variables defined in EEx PsiElement by creating them the same as a StabBody, which means that the siblings are checked backwards from the last parent.\u00a0 This fixes resolving the `f` from `f = form_for ...` in `*input f ...` in LiveView FormComponent templates.\r\n  * Highlight named parameters in types.\r\n  * Decompilation\r\n    * Fake built-in types by decompiling in `:erlang.beam`\r\n      For type reference resolution of built-in types to work, they need to be defined somewhere.\u00a0 IntelliJ Erlang does this by looping usages back on themselves, but this leads to Find Usages not working for built-in types since each usage is a distinct declaration.\u00a0 By instead defining the types in decompiled `:erlang.beam` (even though they aren't actually defined there), there is a shared location for all reference to point to and then check for Find Usages.\r\n    * Decompile types from EEP-48 documentation.\r\n  * Descend into body of `unless` in `quote` for `treeWalkUp`.\r\n  * Descend into `for` when looking for call definition clauses.\r\n  * `QuoteMacro.treeWalkUp` into `if`\r\n    `unless` was already walked, but not `if`.\u00a0 Fixes resolving `Repo.preload/2`, which is defined inside an `if` in `use Ecto.Repo`'s `__using__`.\r\n  * Add `defguard` and `defguardp` to CallDefinitionClause.`is`.\r\n  * Don't generate a reference for `Elixir`\r\n    `Elixir` is not declared anywhere. It is the namespace of all Aliases.\r\n  * Refactor how sibling sequences are walked\r\n    Port filtering out comments, white space and end of expressions from `siblingExpression`.\r\n  * Reimplement `fullyQualifiedName`\r\n  \r\n    Eliminate the specialization for `ElixirAlias` AND `QualifiableAlias` as which was picked as based on the static casted type. `fullyQualifiedName` will include the following:\r\n    * Convert `__MODULE__` to the enclosing modular canonical name\r\n    * Combine an ElixirAlias with its qualifier\r\n      * If in a `ElixirMultipleAliases` will combine the qualifier (`qualifier.{...}`) outside the `{}` with the relative name inside `...{relative, ...}`.\r\n  * EEx\r\n    * `viewFile` for `.eex` files used in same directory as `.ex` using `EEx.function_from_file`.\r\n    * Resolve function calls to those defined by `EEx.function_from_file/3-5`.\r\n    * Find view modules for templates under the `templates` directory.\r\n  * Walk `quote` macros for sibling call definitions\r\n  * Always fallback to name/arity in any module if callable not resolved in scope\r\n  * Resolve uses of aliased name produced by `alias __MODULE__`\r\n* [#1967](https://github.com/KronicDeth/intellij-elixir/pull/1967) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Updates\r\n    * IntelliJ IDEA build version to 2021.1.2\r\n      * Update `ParsingTestCase` to latest APIs.\r\n    * Gradle plugins\r\n      * intellij 1.0\r\n      * kotlin.jvm 1.5.10 \r\n  * Configure `runPluginVerifier`\r\n\r\n### Bug Fixes\r\n* [#1948](https://github.com/KronicDeth/intellij-elixir/pull/1948) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix Ctrl+Click/Cmd+B/Go To Declaration for Aliases.\r\n  * Don't index non-canonical names.\r\n    The non-canonical name for a nested `defmodule` is the Alias given to that `defmodule` call.  While that name should be resolvable within the parent modular, it should not be indexed because the index is for the global scope.\r\n  \r\n    Prevents `defmodule Enum` in\r\n  \r\n    ```elixir\r\n    defmodule ExJsonSchema.Validator.Error do\r\n      ...\r\n      defmodule Enum do\r\n        ...\r\n      end\r\n      ...\r\n    end\r\n    ```\r\n  \r\n    from being indexed as `Enum`, which hides the decompiled version from the standard library because source references are favored over decompiled versions when resolving references.\r\n  * Reference Resolution\r\n    * Only favor same file Module resolutions if they are valid\r\n      Invalid same file results can occur for prefix matches, but if only prefix matches are available, then a whole project search should occur instead of only when there are no same file `ResolveResult` of either validity.\r\n    * Include library sources in `Module#multiResolveProject` `GlobalSearchScope`\r\n       Ensures that library sources can be returned, which are favored over decompiled libraries, so that `__using__` macros can be followed.\r\n    * Protect from `Module` reference element not having a `VirtualFile` when checking if a test file.\r\n    * Fix `QualifiableAliasImpl#fullyQualifiedName`\r\n      * Include qualifier of `MultipleAliases`\r\n        In an `alias` line like `alias Myapp.MyContext.{Schema1, Schema2}`, `Schema1` would think its `fullyQualifiedName` was only `Schema1`, when it should included the `fullyQualifiedName` of the qualifier, `MyApp.MyContext` too. This leads to the correct `Schema1` fully-qualified name of `MyApp.MyContext.Schema1`.\u00a0 This fix makes references to `Schema1` resolve to both the `alias` and the `defmodule`.\r\n      * Include qualifier of `MultipleAliases` for deep aliases\r\n        In an `alias` line like `alias Myapp.MyContext.{NestedContext1.Schema1, NestedContext2.Schema2}`, `Schema1` would think its `fullyQualifiedName` was only `NestedContext1.Schema1`, when it should included the `fullyQualifiedName` of the qualifier, `MyApp.MyContext` too.\u00a0 This leads to the correct `Schema1` fully-qualified name of `MyApp.MyContext.NestedContext.Schema1`.\u00a0 This fix makes references to `Schema1` resolve to both the `alias` and the `defmodule`.\r\n    * In LEEx Templates\r\n      * Don't check for implicit imports at top of template file if there is a view file\r\n        The implicit imports should come last, after the view file has been processed.\r\n      * Ignore call definition clauses expressions that can't contain an assign\r\n        * Atom keywords (`false`, `true`, `nil`)\r\n        * Maps\r\n        * Structs\r\n        * Keyword lists\r\n        * Strings and charlists\r\n      * Don't follow variables for assigns\r\n        For now, don't follow variables to look for assigns.\r\n      * Fix finding assigns in `|> case do ... end`\r\n        `None` calls were ignored, but when `case` is used in a pipeline it is a `None` since it has no literal arguments and only resolved arguments, so it was being ignored.\r\n      * Ignore Lists and Aliases when resolving assigns\r\n      * Fix resolve assigns in `if`s\r\n        Only looked in `stab` of the `doBlock`, but the `else` is in the `blockList`.\r\n    * Don't use the same path for actual aliases and defmodules when resolving aliases\r\n      Prevents a case of an exact match and its namespace both being marked as valid (exact matches).\r\n    * Types\r\n      * Don't generate references for map key optionality (`required/1` and `optional/1`)\r\n      * Don't create a reference to `...` in lists in type specs.\r\n      * Look above `ElixirStabBody` for `ancestorTypeSpec`.\r\n      * Generate `Callable` reference for `unquote` in typespec instead of `Type` reference.\r\n    * Allow modular names to resolve to multiple modulars\r\n      Fix `:systemd.ready()` not resolving because `:systemd` only exists as a decompiled file from source because it is Erlang and there is no preference given to different MIX_ENVs.\u00a0 All MIX_ENV `defmodule :systemd` are returned for the `:systemd` and all of them are checked for `ready/0`.\r\n    * Fix resolving qualified calls that are defined through use\r\n  \r\n      Resolving qualified calls only used `Modular.callDefinitionClauseCallFoldWhile`, which ignores all non call definition, which means it ignored the `use`, but switching to use `org.elixir_lang.psi.scope.call_definition_clause.MultiResolve` `PsiScopeProcessor` used for unqualified calls, but starting on the modular call of the qualifier, all the `use` handling that works for unqualified calls also works for qualified calls now.\r\n  \r\n      This fixes resolving `MyAppWeb.Endpoint.config_change(changed, removed)` in `MyApp.Application.config_change/3` because `use Phoenix.Endpoint, otp_app: :my_app` in `MyAppWeb.Endpoint` is now walked for qualified calls.\r\n    * Fix resolving variables to parameters that are both pattern matched and defaulted\r\n  \r\n      In functions like\r\n  \r\n      ```elixir\r\n      def f(%Struct{} = s \\\\ %Struct{}) do\r\n        s\r\n      end\r\n      ```\r\n  \r\n      `s` in the body would not resolve to the `s` parameter because the default parameter had to be `PsiNamedElement`, that is a variable directly. Instead, recurse on any operand before the `\\\\` to support pattern matching too.\r\n    * Use `keepProcessing()` in `MultiResolve.addToResolveResults` instead of specific return values\r\n  \r\n      Fixes `def` in `def default_host_flag, do: \"--host` resolving as an invalid match to `default_host_flag` instead of search the implicit imports for `defmacro def`.\r\n    * The `nameIdentifier` for a `defdelegate` is the first argument, not the `as:`\r\n      The `as:` is the name in the `to:` module only.\r\n    * Fix `defdelegate` `MultiResolve`\r\n      1. I had flipped the head name and `as` name for checking for a name match\r\n      2. I only counted the `defdelegate` as matching if the `as` name as found in `to` module, but if the head alone is prefixed by the name then the head should be a ResolveResult element even if the `to` or `as` can't be found\r\n      3. Inside the `to`, I only checked if the children were call definition clauses, but this meant that all the `for` handling was ignored, so start a new `resolveResults()` for each modular.\r\n    * Fix `toModulars` not returning all modulars\r\n      `fullyResolve` only touched the first modular.\r\n    * Favor complete valid results over incomplete invalid earlier bindings for variables.\r\n    * Ecto\r\n      * Don't generate reference for `assoc/2` pseudo-function in `join(..., _ in assoc(_, _))`\r\n    * Fix unaliasing multiple aliases\r\n      `UnaliasName` still assumed that `fullyQualifiedName` included the qualifier, but it is just the lexical qualifier now.\r\n    * Check for `MULTIPLE_ALIASES_QUALIFIER` in `ResolveState` for prefix matches.\r\n      Fixes resolving `SSH.Key` to `Foo.SSH.Key` when the alias is `alias Foo.{SSH, ...}`.\r\n    * Ignore type variables in type restrictions when resolving normal variables.\r\n    * Fix `withSelf` for `childExpressions` `siblingExpressions` call\r\n      While refactoring the walk, I copied the call for siblings, which shouldn't included self.\u00a0 Children should include self, or the first expression is missed which showed up as `Repo.transaction` not being found because `transaction` is the first `def` inside an `if` in `Ecto.Repo.__using__`'s `quote` block.\r\n    * Don't try to resolve keys/fields of a capture.\r\n    * Don't generate reference for `assoc` in `*join*: .. in assoc(..., ...)`.\r\n      Already worked for `join/3` calls, extend to keyword syntax too.\r\n    * Fix resolving references to `Modulars` when resolved is in BEAM file\r\n      The check to see if the resolved was a modular only worked for source elements because it checked if it was a `Call`, but decompiled modules in BEAM files are `ModuleImpls`.\r\n    * Fix logic error when ignored pinned variables as declaration sites\r\n  \r\n      The logic was supposed to be that\r\n  \r\n      * If it is pinned, keep searching\r\n      * If it is not pinned, check the operation as a Call\r\n  \r\n      ... but, the code was `operatorText != \"^\" && execute(match as Call, state)` which meant that if the `operatorText` was `\"^\"`, then the whole expression was `false`, which meant `keepProcessing` was `false`, so any pin stopped the processing for other unpinned parameters after the pin in addition to processing in the outer scope of the pin.\r\n    * Prefer source only for target candidates for Go To Declaration and not all ResolveResults.\r\n      Ensures that functions only defined in decompiled Modules can be found because the Module's ResolveResults include the decompiled Module in addition to the source ones.\r\n    * Don't prefer source over decompiled in `ResolveResultOrderedSet`\r\n      Preference is now handled in `Resolver`, so that source preference only happens on Go To Declaration and not for `multiResolve` because that needs decompiled Modulars for compile-time `for` loops that are too complex to infer.\r\n    * Use primary arity instead of final for resolving Callables\r\n  \r\n      Fixes `unquote` in `def unquote(...)() do` not resolving.\r\n  * Filter out decompiled private functions from completions\r\n    If they are only available as decompiled functions, it is unlikely we have the source available to make them public, which was the reasoning to allow private functions at all.\r\n  * Decompiling\r\n    * Include module name for \"No decompiled source function\" errors\r\n    * Unquote `and` when not and/2\r\n      Fixes decompiling `:hipe_arm_encode`.\r\n    * `unquote` `false` when decompiling.\r\n      Fixes decompiling `:thrift_json_parser`. Add `true` to the `Unquote` list too since it would have the same issue.\r\n    * Unquote `in` when not `in/2`\r\n      Fix decompiling `:digraph_utils`\r\n    * Use `containingFile.originalFile` for `resolve.Module.multiResolveProject`\r\n      Ensures `VirtualFile` is available for decompiled files.\r\n  * Performance\r\n    * Don't use `.navigationElement` for `Variants`\r\n  \r\n      Using `navigationElement` forces parsing of the decompiled source, which isn't necessary whe only showing the lookup string.\r\n    * Remove `ModuleOwner` interface\r\n      * `BeamFileImpl` is known to have only 1 module in it, so it makes the code more complicated to make it act like source files.\r\n      * Don't use `getChildrenByType`, as it causes the decompiled source to be parsed, which is slow and unnecessary since all the metadata for modules is available from the binary format.\r\n    * Get project from parent in decompiled Module and CallDefinition\r\n      Not doing this causes an unnecessary parsing of the decompiled source.\r\n  * Fix infinite recursion in `ElixirVisitor#visitLiteralSigilLine`\r\n  * Show more scope for keyword key Go To Definition\r\n    * Always show the keyword pair, instead of just the keyword key, so that the value being assigned to the key can be seen before Go To.\r\n    * Show the location at the path relative to the content root and the line number as `live_modal` may be used more than once in the same file.\r\n  * Put `entrance` as initial visited in `module.Variants`.\r\n  * Check if `PsiElement` has been visited before walking `quote` and `__using__`\r\n  * Don't mark qualified calls as unresolved in \"Elixir References\" inspection\r\n    I don't have a good approach for resolving struct fields or map keys for now, don't mark them as unresolved as it clutters finding unresolved calls I expect to work.\r\n  * Don't assume `PsiFile#virtualFile` is `NotNull` in `PsiElement.moduleWithDependentsScope`.\r\n  * Don't assume `PsiFile#virtualFile` is `NotNull` in `AtNonNumericOperation.computeReference()`.\r\n  * `putInitialVisitedElement` in `variable.MultiResolve`\r\n    Fixes resolving variables through `use` statements for variables in the body of `defmodule` blocks.\r\n  * Log when `VISITED_ELEMENT_SET` is `null` instead of erroring.\r\n  * Fix `resolvePrimaryArity` for `|> case do`\r\n    `resolvedPrimaryArity` did not add both the doBlock's arity and the arity from the `|>` at the same time.\u00a0 If the pipe was there, the `do` was ignored because the pre-existing `resolvePrimaryArity` was not used if the normal primary arity of the call was zero, which is the case for `|> case do`.\r\n  * Find module for elements in libraries\r\n    Elements in libraries don't have a `Module` from `ModuleUtil.findModuleForPsiElement`, so scan the element's project's module's content roots for the closest `Module` for libraries.\r\n  * `prependQualifiers` when typing an alias on a new line in the body of a function.\r\n  * Don't descend into `quote` blocks if the call being resolved is given to an `unquote` in the `quote` block.\r\n* [#1967](https://github.com/KronicDeth/intellij-elixir/pull/1967) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `updateSinceUntilBuild` to prevent breaking in future IDEs.\r\n  * Check if modules loaded before using `findModuleForPsiElement`.\r\n  * Use `BasePlatformTestCase` instead of `LightCodeInsightTestCase` because `LightCodeInsightTestCase` is deprecated.\r\n", "reactions": {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/45028508/reactions", "total_count": 14, "+1": 6, "-1": 0, "laugh": 0, "hooray": 8, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/37924377", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/37924377/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/37924377/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.10.0", "id": 37924377, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM3OTI0Mzc3", "tag_name": "v11.10.0", "target_commitish": "master", "name": "v11.10.0", "draft": false, "prerelease": false, "created_at": "2021-02-11T04:15:04Z", "published_at": "2021-02-11T14:55:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/31949436", "id": 31949436, "node_id": "MDEyOlJlbGVhc2VBc3NldDMxOTQ5NDM2", "name": "intellij-elixir-11.10.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6872142, "download_count": 61, "created_at": "2021-02-11T14:55:23Z", "updated_at": "2021-02-11T14:55:28Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.10.0/intellij-elixir-11.10.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.10.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.10.0", "body": "# Thanks\r\n\r\n* For reporting problems with ASDF SDKs\r\n  * River ([@locopati](https://github.com/locopati))\r\n  * Ivan Shpotenko ([@IvanShpotenko](https://github.com/IvanShpotenko))\r\n  * Pedro Assun\u00e7\u00e3o ([@noozo](https://github.com/noozo))\r\n  * [@x984a](https://github.com/x984a)\r\n  * Andrew Glassman ([@aglassman](https://github.com/aglassman))\r\n  * Don Lettrich ([@drl123](https://github.com/drl123))\r\n  * Jo\u00e3o Evangelista ([@sleepiejohn](https://github.com/sleepiejohn))\r\n  * O. F. K. ([@OmanF](https://github.com/OmanF))\r\n  * Maqbool ([@m13m](https://github.com/m13m))\r\n  * Elton Lima ([@eltonplima](https://github.com/eltonplima))\r\n  * Ilya Zabludovskiy ([@MrLalatg](https://github.com/MrLalatg))\r\n  * Douglas Correa ([@douglascorrea](https://github.com/douglascorrea))\r\n  * Mathieu Gautier ([@MattGo](https://github.com/MattGo))\r\n  * Jon ([@jonthulu](https://github.com/jonthulu))\r\n  * Johannes ([@johannesE](https://github.com/johannesE))\r\n  * [@guruarumugam](https://github.com/guruarumugam)\r\n  * Daya Sharma ([@daya](https://github.com/daya))\r\n  * Beatrix Klebe ([@bklebe](https://github.com/bklebe))\r\n* For reporting the NPE in `Call.finalArguments`\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Heitor Polidoro  ([@heitorpolidoro](https://github.com/heitorpolidoro))\r\n  * Donald Wilson ([@donaldww](https://github.com/donaldww))\r\n* For reporting that `html.leex` was not being being parsed as HTML for the template data language.\r\n  * Wasi Ur Rahman ([@DevWasi](https://github.com/DevWasi))\r\n  * Ruud Kamphuis ([@ruudk](https://github.com/ruudk))\r\n\r\n# Changelog\r\n\r\n## v11.10.0\r\n\r\n### Enhancements\r\n* [#1893](https://github.com/KronicDeth/intellij-elixir/pull/1893) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Simplify `onlyTemplateDateFileType`\r\n* [#1897](https://github.com/KronicDeth/intellij-elixir/pull/1897) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add missing opcodes to `Code` disassembler\r\n    * OTP 23 opcode `bs_start_match4`\r\n    * Current (in-development) OTP 24 opcodes\r\n      * `make_fun3`\r\n      * `init_yregs`\r\n      * `recv_marker_bind`\r\n      * `recv_marker_clear`\r\n      * `recv_marker_clear`\r\n      * `recv_marker_user `\r\n* [#1899](https://github.com/KronicDeth/intellij-elixir/pull/1899) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Log `PsiElement` if `Call#finalArguments` contain a `null`.\r\n* [#1902](https://github.com/KronicDeth/intellij-elixir/pull/1902) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Suggest ASDF directories as `homepath`s for both Elixir and Erlang for Elixir SDKs.\r\n* [#1821](https://github.com/KronicDeth/intellij-elixir/pull/1821) - [@jacekgajek](https://github.com/jacekgajek)\r\n  * Run 'Dialyzer based inspections (Elixir)' using Elixir SDK running `mix dialyzer` or any customized `mix` command.\r\n\r\n### Bug Fixes\r\n* [#1893](https://github.com/KronicDeth/intellij-elixir/pull/1893) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Use `VirtualFile#fileType` instead of EEx Type::INSTANCE when looking up extensions.\r\n    Since LEEx file `Type` is a subclass of EEx's file `Type`, it calls `templateDataFileTypeSet` in EEx's `Type`, but `templateDataFileTypeSet` uses `INSTANCE` from EEx.  By using the `VirtualFile#fileType` instead, it will properly be EEx or LEEx based on the actual file extension and then it can be used to strip that off and find the DataTemplateLanguage, such as `HTMLLanguage` for `.html.leex`.\r\n* [#1897](https://github.com/KronicDeth/intellij-elixir/pull/1897) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Compare max opcode in to file to max opcode number, not ordinal.\r\n    Opcodes are 1-based, but the ordinal of the Kotlin `Enum`s are 0-based, so the comparison was off-by-1 when a file had the max opcode and would be incorrectly marked as too new.\r\n* [#1899](https://github.com/KronicDeth/intellij-elixir/pull/1899) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't return null left or right infix operands in `primaryArguments`\r\n    `operation.infix.Normalized.leftOperand` and `.rightOperand` ensures that `PsiErrorElement` is not returned: they can return `null` when there is no left or right operand.  `Infix.primaryArguments` was not taking this into account and so could return a `null` as one of the `primaryArguments`, which broke `Call.finalArguments`.\r\n* [#1902](https://github.com/KronicDeth/intellij-elixir/pull/1902) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't attempt to execute `elixir -e \"System.version |> IO.puts\"` to get the version number as it requires too much of a full SDK to be built and from the Erlang paths to be correct too, which was rarely the case for ASDF.  Since for Homebrew and ASDF, the directory name is the version name, this shouldn't be a loss in naming ability.  If the directory name is not a parseable version it will be of the format `Elixir at <path>`.  This is probably more correct for installs directories that aren't versioned as SDK versions aren't updated if the version installed at the path changes, such as `/usr/local/elixir` or `/opt/elixir`, etc.\r\n\r\n# README updates\r\n\r\n### Dialyzer\r\n\r\n#### Inspection\r\n\r\n##### Batch Mode\r\n\r\n1. Analyze > Run Inspection by Name... (\u2325\u21e7\u2318I)\r\n2. Type \"Dialyzer\"\r\n3. Select \"Dialyzer based inspections (Elixir)\" from the shortened list\r\n4. Hit Enter.\r\n\r\nYou'll be presented with a \"Run 'Dialyzer based inspections (Elixir)'\" dialog\r\n\r\n![Run 'Dialyzer based inspections (Elixir)'](https://github.com/KronicDeth/intellij-elixir/raw/v11.10.0/screenshots/features/dialyzer/inspection/batch_mode/Run%20Dialyzer%20based%20inspections%20(Elixir)%20Whole%20Project.png?raw=true)\r\n\r\n1. Change the scope if you want.\r\n2. Click \"OK\"\r\n\r\nThe Inspections Result Tool Pane will open and show results as each file is processed.\r\n\r\n1. Click the \u25b6 to expand the Credo section to show all warnings\r\n \r\n   ![Individual Entry](https://github.com/KronicDeth/intellij-elixir/raw/v11.10.0/screenshots/features/dialyzer/inspection/batch_mode/Individual%20Entry.png?raw=true)\r\n2. Click an entry for the details of an individual warning with a code highlighting.\r\n   ![Code Highlighting](https://github.com/KronicDeth/intellij-elixir/raw/v11.10.0/screenshots/features/dialyzer/inspection/batch_mode/Code%20Highlighting.png?raw=true)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36808686", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36808686/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/36808686/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.9.2", "id": 36808686, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2ODA4Njg2", "tag_name": "v11.9.2", "target_commitish": "master", "name": "v11.9.2", "draft": false, "prerelease": false, "created_at": "2021-01-23T16:45:57Z", "published_at": "2021-01-23T17:36:55Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/31093515", "id": 31093515, "node_id": "MDEyOlJlbGVhc2VBc3NldDMxMDkzNTE1", "name": "intellij-elixir-11.9.2.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6835593, "download_count": 32, "created_at": "2021-01-23T17:36:38Z", "updated_at": "2021-01-23T17:36:47Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.9.2/intellij-elixir-11.9.2.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.9.2", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.9.2", "body": "# Thanks\r\n\r\n* For reporting syntax highlighting stopping in 11.9.1\r\n  * Tomoki Odaka ([odk211](https://github.com/odk211))\r\n  * Joshua Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n  * [@tsedge](https://github.com/tsedge)\r\n  * Matt Pinkston ([@mpinkston](https://github.com/mpinkston))\r\n  * Mikhail ([@mikanoz](https://github.com/mikanoz))\r\n  * Kilian G\u00e4rtner ([@Meldanor](https://github.com/Meldanor)\r\n  * Angelika Tyborska ([@angelikatyborska](https://github.com/angelikatyborska))\r\n* For reporting no decompiled source functions with names\r\n  * Joshua Taylor ([@joshuataylor](https://github.com/joshuataylor))  \r\n  * Tomoki Odaka ([odk211](https://github.com/odk211))   \r\n  * Vincent ([@depeiwang](https://github.com/depeiwang))\r\n  * Angelika Tyborska ([@angelikatyborska](https://github.com/angelikatyborska))\r\n  * Masoud Motallebipour ([@peprog](https://github.com/peprog))\r\n* For testing 11.9.2 pre-releases\r\n  * Tomoki Odaka ([odk211](https://github.com/odk211))\r\n  * Matt Pinkston ([@mpinkston](https://github.com/mpinkston))\r\n* For posting videos (!) of the highlighting not working in 11.9.2 pre-releases\r\n  * Tomoki Odaka ([odk211](https://github.com/odk211))\r\n* For working through the `LexerEditorHighlighter` code with me on JetBrains Platform Slack\r\n  * Joachim Ansorg [jansorg](https://github.com/jansorg)\r\n\r\n# Changelog\r\n\r\n## v11.9.2\r\n\r\n### Bug Fixes\r\n* [#1887](https://github.com/KronicDeth/intellij-elixir/pull/1887) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Protect from nested heredocs in documentation from stopping documentation's heredoc as happens in `Module` and `Ecto.Query`.\r\n    * Use `~S` for `@moduledoc` too, in addition to `@doc`.\r\n    * Check if the documentation contains `\"\"\"` or `'''` and use the opposite one as the promoter/terminator.\r\n      * If neither is used, use `\"\"\"`.\r\n      * If both are used, use `\"\"\"`, but then escape `\"\"\"` as `\\\"\\\"\\\"`.\r\n    * Trim trailing whitespace from documentation lines to match formatter output.\r\n* [#1890](https://github.com/KronicDeth/intellij-elixir/pull/1890) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Set `runIde` `maxHeapSize` to `7g`\r\n    * Set to the same I run my own IDE at, so the debugged instance isn't any slower than the normal IDE when I need to do extended all day testing to trigger bugs.\r\n  * Test that all `FormattingTest` files can be parsed.\r\n  * `YYINITIAL` is special - wrappers of the lexer assume that if in `YYINITIAL`, it is safe to shift the lexer over when there is an error, having [`{OPENING_CURLY}` `pushAndBegin(YYINITIAL)` when it was either in `YYINITIAL` or `INTERPOLATION`](https://github.com/KronicDeth/intellij-elixir/blob/36b53331967950453906c3bde9c7f79dc3f9cd2f/src/org/elixir_lang/Elixir.flex#L812) means that the lexer looked like it was restartable when it really wasn't.  This code has been in the lexer for [6 years](https://github.com/KronicDeth/intellij-elixir/blame/36b53331967950453906c3bde9c7f79dc3f9cd2f/src/org/elixir_lang/Elixir.flex#L812).\r\n    * When in `YYINITIAL`, `{` no longer recurses into `YYINITIAL` as `}` does not need to be counted to determine if it is closing an interpolation.\r\n    * When in `INTERPOLATION`, `{` enters `INTERPOLATION_CURLY` to allow counting and matching of `}` until it can exit and go back to `INTERPOLATION`, where `}` will exit the interpolation.\r\n    * When in `INTERPOLATION_CURLY`, `{` enters another level of `INTERPOLATION_CURLY` to allow counting and matching of `}` until it can exit and go up a level.\r\n  * The `}` in `YYINITIAL` did `yybegin(ADDITION_OR_SUBTRACTION_MAYBE)`, but it should have been `pushAndBegin(ADDITION_OR_SUBTRACTION)` as `ADDITION_OR_SUBTRACTION_MAYBE` or its following states all exit with `handleInLastState()` or `popAndBegin()`.  This was not caught in #1859 because the extra `YYINITIAL` from `pushAndBegin(YYINTIAL)` hid the bug.\r\n  * Prevent nested `YYINITIAL` bugs in the future by erroring\r\n    * If trying to `pushAndBegin(YYINITIAL)`.\r\n    * If trying to `push(YYINITIAL)` and the state stack is not empty\r\n  * Clear the state Stack when `ElixirFlexLexer#reset` is called, as at the level of typing and pasting, the `ElixirFlexLexer` is wrapped in many layers of lexers including `LexerEditorHighlighter` where the `ElixirFlexLexer` is no longer re-instantiated when there is no text, but instead, `ElixirFlexLexer#reset` is only called.  This has always been an invariant violation since the stack state was [added 7 years ago](https://github.com/KronicDeth/intellij-elixir/commit/52cb2fbf6368ba551a4784bd1de49e1fc21c969a).  It likely only became more apparent with the changes to +/- parsing in #1859 that made return-to-`YYINITIAL` less likely.\r\n    * Since this `stack.clear()` has to be manually added to `ElixirFlexLexer.java`, which is generated from `Elixir.flex`, `ResetTest` is added to check that the code is still there.\r\n  *  For a reason I haven't been able to explain, the `LexerEditorHighlighter` stops working after `:` is typed at the start of an atom in certain situations, such as before `)` inside a function call, like when adding an argument.  In this case, the old version of the lexer would mark `)` as a `BAD_CHARACTER` and continue to do so until an expected atom start of [a-zA-Z_], `'`, `\"`, or an operator occurred.  Now, if an invalid atom start is matched, the `ATOM_START` state ends and the previous state handles the text, which in the function case mean `)` is parsed as `CLOSING_PARENTHESIS`.  This change allows the highlighting to continue.   I do not know if returning `BAD_CHARACTER` will always break the `LexerEditorHighlighter`, but I don't think, so since [the `GroovyLexer` in `intellij-community` returns it](https://github.com/JetBrains/intellij-community/blob/f66e9644fa683fba22f4ce9e30c037720f745989/plugins/groovy/groovy-psi/src/org/jetbrains/plugins/groovy/lang/lexer/groovy.flex#L538), but it may be the case that it isn't actually returned ever when users are typing and only handled by the lexer for completeness.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36500349", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36500349/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/36500349/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.9.1", "id": 36500349, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2NTAwMzQ5", "tag_name": "v11.9.1", "target_commitish": "master", "name": "v11.9.1", "draft": false, "prerelease": false, "created_at": "2021-01-16T18:17:09Z", "published_at": "2021-01-16T18:06:52Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/30793349", "id": 30793349, "node_id": "MDEyOlJlbGVhc2VBc3NldDMwNzkzMzQ5", "name": "intellij-elixir-11.9.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6837923, "download_count": 11, "created_at": "2021-01-16T18:22:06Z", "updated_at": "2021-01-16T18:22:14Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.9.1/intellij-elixir-11.9.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.9.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.9.1", "body": "# Thanks\r\n\r\n* For reporting that the JPS (external builder) subproject was built with Java > 1.8, which is incompatible with JPS.\r\n  * [@petermant](https://github.com/petermant)\r\n  * Robb Wright ([@audaxion](https://github.com/audaxion))\r\n  * Deni Helizar ([@Deni7777](https://github.com/Deni7777))\r\n* For reporting NPE caused by old code referring to DepsWatcher as a Project _Component_ instead of a Project _Listener_.\r\n  * Vladimir Carballo ([@venriq](https://github.com/venriq))\r\n* For reporting that syntax highlighting was broke due to broken decompilation of `Kernel` and `Kernel.SpecialForms` due to bugs in #1834.\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Jonathan Stiansen ([@jonathanstiansen](https://github.com/jonathanstiansen))\r\n  * Josh Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n  * Alex Yip ([@alexttyip](https://github.com/alexttyip))\r\n  * Tres Wong-Godfrey ([@tres](https://github.com/tres))\r\n  * Andre Cloutier ([@andrecloutier-pd](https://github.com/andrecloutier-pd))\r\n  * Andrew Shu ([@montooner](https://github.com/montooner))\r\n  * Kilian G\u00e4rtner ([@Meldanor](https://github.com/Meldanor))\r\n  * Aditya Suman Maharana ([@adityamaharana7](https://github.com/adityamaharana7))\r\n  * Erik Hanson ([@eahanson](https://github.com/eahanson))\r\n  * Oliver Switzer ([@oliverswitzer](https://github.com/oliverswitzer))\r\n  * Matt Pinkston ([@mpinkston](https://github.com/mpinkston))\r\n  * Michael Maier ([@zookzook](https://github.com/zookzook))\r\n* For testing fixes broken highlighting.\r\n  * Josh Taylor ((@joshuataylor)[https://github.com/joshuataylor])  \r\n\r\n# Changelog\r\n\r\n## v11.9.1\r\n\r\n### Bug Fixes\r\n* [#1877](https://github.com/KronicDeth/intellij-elixir/pull/1877) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix syntax highlighting stopping due to decompiling of `Kernel` failing caused by bugs introduced in #1834. \r\n    Syntax highlighting could fail part way through a file when `Kernel` needed to be decompiled to resolve parts of the syntax.  This would lead to the file to be colored above a certain point, but then the default gray after that point.\r\n\r\n    * Connect compiled stubs to decompiled source by name/arity.\r\n      Previously, when the decompiler didn't use the `Docs`, it was guaranteed that the `PsiCompiled` stubs would correlate, in-order, with the decompiled source call definitions, and so mirrors could be set by matching up the list of them in order.  Since the `Docs` doesn't have to correspond to and doesn't correspond to the binary precisely for some BEAMs, most importantly, `Elixir.Kernel.beam`, the PsiCompiled stub and decompiled source is now matched by name and arity.   This means some mirrors are missed, but no errors are produced.\r\n    * Allow decompile source to map to entire arity range\r\n      Since the decompile source from `Docs` can have default arguments the call definition clauses can have an arity range and not just a fixed arity, so all arities in the range need to be mappable to `PsiCompiled` functions.\r\n    * Use correct macro for signature from `Docs`.\r\n      Ensures that defmacro is used for macros instead of hard-coding `def` as in #1834.\r\n    * Use `~S\"\"\"` for docs from `Docs` chunk.\r\n      The docs from the `Docs` chunk may contain interpolation in the code samples or `#{` in regex examples, but these should not be treated as an interpolation start as the `Docs` format does not support interpolation.  Anything that looks like interpolation in the docs text was actually escaped in the original docs, so also escape it here by using `S\"\"\"`, which turns off interpolation.\r\n    * Log an error if `Code` function can't be matched to decompiled source.\r\n      Unlike the old `InvalidMirrorException`, this won't be an exception and the binary <-> decompile will still work for the other functions/macros in the file, so it will be a more graceful degradation.\r\n* [1878](https://github.com/KronicDeth/intellij-elixir/pull/1878) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix missed references to `DepsWatcher` as project component\r\n    `DepsWatcher` was converted to a Project Listener in #1844 to support installing the plugin from the Marketplace without reloading, but some references to `DepsWatcher` were still trying to get its instance for project using `project.getComponent()`, which would now return `null`.\r\n* [#1879](https://github.com/KronicDeth/intellij-elixir/pull/1879) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Target Java 1.8 for JPS compatibility.\r\n    JPS (JetBrains Project System) is the API used to allow External Builders, like `mix` to build projects.\r\n* [#1880](https://github.com/KronicDeth/intellij-elixir/pull/1880) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix matching `unquote(ATOM)` call definitions to compiled function by using the argument to`unquote` when calculating the name of the call definition clause if possible.\r\n    Needed to match anonymous function names that are `unquote`d because they contain `/` to separate the outer function name from the anonymous function naming convention.\r\n  * Don't use `Docs` signature for `MacroNameArity` that is an operator or `unquote`d\r\n    The signatures for operators and `unquote`d don't produce valid code that can be parsed.\r\n  *  Don't use signatures for `__struct__` functions.\r\n     The signatures for the `__struct__` functions are like `%Module{}`, but that's not parseable, so bypass the signatures with a specialized `SignatureOverride` decompiler that matches the actual code in `defstruct`.\r\n  * Don't indent empty lines from `Docs` for `@moduledoc` and `@doc` to match the formatter output. \r\n* [#1881](https://github.com/KronicDeth/intellij-elixir/pull/1881) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix capitalization of `Docs` `@moduledoc`\r\n    `@moduleDoc` -> `@moduledoc`\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36156164", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/36156164/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/36156164/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.9.0", "id": 36156164, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2MTU2MTY0", "tag_name": "v11.9.0", "target_commitish": "master", "name": "v11.9.0", "draft": false, "prerelease": false, "created_at": "2021-01-08T18:14:48Z", "published_at": "2021-01-08T18:20:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/30447061", "id": 30447061, "node_id": "MDEyOlJlbGVhc2VBc3NldDMwNDQ3MDYx", "name": "intellij-elixir-11.9.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6836467, "download_count": 10, "created_at": "2021-01-08T18:16:40Z", "updated_at": "2021-01-08T18:16:42Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.9.0/intellij-elixir-11.9.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.9.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.9.0", "body": "# Thanks\r\n\r\n* For reporting that `-1` could not be parsed as a `case` clause.\r\n  * Sam Hagman ([@samhagman](https://github.com/samhagman))\r\n* For reporting that newlines could not be escaped at the end of heredocs.\r\n  * Ross van Zyl ([@rossvz](https://github.com/rossvz))\r\n\r\n# Changelog\r\n\r\n## v11.9.0\r\n\r\n### Enhancements\r\n* [#1844](https://github.com/KronicDeth/intellij-elixir/pull/1844) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Make plugin updatable without a restart when installing from the JetBrains Marketplace.  (If installing from file on GitHub you still need to restart due to a limitation in the JetBrains API.). JetBrains refers to this as a [Dynamic Plugin](https://jetbrains.org/intellij/sdk/docs/basics/plugin_structure/dynamic_plugins.html).\r\n    * Convert `DepsWatcher` from project component to project listener\r\n    * Convert `Watcher` from module component to project listener\r\n    * Make org.elixir_lang.packageManager extension point dynamic\r\n  * Remove unnecessary `assert`.\r\n  * Replace `if` with `when`\r\n  * Include `asd` tool version\r\n    Prevent me screwing up the quoter cache using the wrong elixir version again.\r\n  * Update gradle project  \r\n    * `gradlew` `6.7.1`\r\n    * `org.jetbrains.intellij` `0.6.3`\r\n    * `org.jetbrains.kotlin.jvm` `1.3.70`\r\n    * `de.undercouch.download` to `4.4.1`\r\n  * Update to GitHub Environment Files\r\n* [#1859](https://github.com/KronicDeth/intellij-elixir/pull/1859) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update CI to Elixir 1.11.2 and Erlang 23.1\r\n    * Quoting (for verification of correspondences between plugin and Elixir native lexer and parser.)\r\n      * Port elixir-lang/elixir#9725\r\n        * Indentations for sigil binaries with complex content.\r\n          Makes sure the indentation metadata is added to sigils that have content with metadata already.\r\n      * Quote charlist the same as string when used for a quoted atom\r\n      * Port elixir-lang/elixir@e89e9d874bf803379d729a3bae185052a5323a85\r\n      * Add sigil delimiter to metadata\r\n        Ports elixir-lang/elixir#9671\r\n        * Have 3 character delimiter for heredocs\r\n      * Add `no_parens: true` metadata\r\n        Port elixir-lang/elixir@8e7befb1087bd37d5acb883e21925b1c0eb0a55f\r\n    * Remove elixir-lang parsing tests for files that don't exist in Elixir 1.11\r\n    * Add missing `@Deprecated` to match overridden method\r\n    * Format expected and actual quoted\r\n      Makes the diff not be a one-liner. so easier to spot the difference.\r\n    * Convert `Quoter` to Kotlin\r\n    * Regenerate Parser for newer GrammarParser version.\r\n    * Port elixir-lang/elixir@1e4e05ef78b3105065f0a313bd0e1e78b2aa973e\r\n* [#1834](https://github.com/KronicDeth/intellij-elixir/pull/1834) - [@marcindawidziuk](https://github.com/marcindawidziuk)\r\n  * Rewrote the `DocumentationProvider` so it no longer relies on invoking `mix` (which I admit was more like a hack than a real solution). This now works so quickly that it actually makes sense to show docs on mouse hover.\r\n    * It can get the documentation from both the source code and decompiled .beam files.\r\n  * Decompilation of documentation was implemented according to EEP-48. \r\n  * The experience on navigating through decompiled file has also been improved a bit\r\n    * See the `@moduledoc`  and `@doc`s\r\n    * See if a function has been deprecated\r\n    * See the original signature of the function (instead of just `p0`, `p1`, ...).\r\n\r\n### Bug Fixes\r\n* [#1844](https://github.com/KronicDeth/intellij-elixir/pull/1844) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix deprecation warnings for IntelliJ IDEA 2020.2\r\n    *  Replace `fileTypeFactory` extensions with `fileType` \r\n      * Convert `fileType`s to Kotlin\r\n    * Replace uses of deprecated `Project#baseDir` \r\n    * Replace uses of deprecated `ContainerUtil.newHashMap`\r\n    * Replace `defaultLiveTemplatesProvider` with `defaultLiveTemplates`\r\n    * `spaceExistanceTypeBetweenTokens` replaced with `spaceExistenceTypeBetweenTokens`\r\n    * Replace `ListCellRendererWrapper` with `SimpleListCellRenderer`\r\n    * Replace `StdFileTypes.PLAIN_TEXT` with `FileTypes.PLAIN_TEXT`\r\n    * Replace `LanguageSubstitutors.INSTANCE` with `getInstance()`\r\n    * Replace `ReportMessages.ERROR_REPORT` with `ReportMessages.getErrorReport()`\r\n    * Replace `DefaultProgramRunner` with `GenericProgramRunner`\r\n      * Have only one runner for all configurations in plugin since body of runner was all the same for non-debug.\r\n    * Don't override deprecated `flushBufferBeforeTerminating()`\r\n    * Don't override deprecated `acceptsFile`\r\n    * Override `initExtra(Project)` instead of `initExtra(Project, MessageBus, Engine)`\r\n    * Replace `NamedFoldingDescriptor` with `FoldingDescriptor`\r\n      * Convert `folding.Builder` to Kotlin\r\n    * Replace `file` with `value` for `@Storage` annotation\r\n    * Replace `checkBox(fieldName, title)` with `checkBox(title, getter, setter)`\r\n    * Replace `com.intellij.util.contains.Predicate` with `java.util.function.Predicate`\r\n    * Replace `CodeStyleSettingsManager` with `CodeStyle`\r\n    * Replace `Comparing.equal` with `Objects.equals`   \r\n    * Replace `UsageType(String)` with `UsageType(Supplier)`\r\n    * Replace `PluginManager` with `PluginManagerCore`\r\n    * Replace `WakValueHashMap` with `createWakeValueMap`\r\n    * Don't pass `Pass` to `LineMarkerInfo`\r\n    * Replace `newArrayListWithCapacity` with `ArrayList`\r\n    * Replace `newIdentityHashMap` with `IdentityHashMap`\r\n    * Replace `RefElement#element` with `#psiElement`\r\n    * Pass `columnMargin` to `setupCheckboxColumn`\r\n    * `Extensions.getExtensions(name)` -> `name.extensionList`\r\n    * `Extensions.findExtension` -> `ExtensionPointName.findExtensionOrFail`\r\n    * `Object` -> `Any`\r\n    * Replace `choseAndSetSdk` with `SdkPopupFactory`\r\n  * Fix error reporting formatting\r\n    * Fix new lines around excerpts so that code blocks quote correctly\r\n    * Use FILE:LINE format for excerpt location, so it can be used in editors for rapid lookup.\r\n    * Separate title from message\r\n    * Remove use of `ErrorBean`\r\n    * Pass project for LevelPropertyPusher DumbModeTask\r\n    * Don't use constructor injection for `SetupSDKNotificationProvider`\r\n    * Don't use `AnnotationHolder::create*` APIs and use `AnnotationBuilder` instead.\r\n      * Convert `Annotator`s to Kotlin\r\n    * Use `logger.error` directly instead of `LogMessageEx`\r\n  * Fix Atom annotator to only annotator within current element.\r\n    Annotation keyword pair's key and colon instead of annotating the keyword key and the colon outside of it.\r\n  * Fix `Macro` parsing in `DbgI`\r\n    * `ifAccessToString`\r\n      I missed taking the 3rd element of the tuple to get `[Access, :get]` and was checking the outer tuple directly.\r\n      * Convert `beam.assembly.ParserDefinition` to Kotlin\r\n    * `ifWhenToString` where `as` should be `as?`\r\n  * Suppress unused variables for `TODO()`s\r\n  * Remove unnecessary `Line` chunk dependency on `Atom` chunk\r\n  * Switch unused `unsignedInt` values to `_` as Kotlin doesn't support `_name`\r\n  * Use `key` instead of environment for `computeIfAbsent`\r\n  * Replace lambda with constructor reference\r\n  * Remove unnecessary `!!`s\r\n  * Replace `mapIndexed` with `map` because `index` is unused\r\n  * Remove `open` that has no effect in `object`\r\n  * Fix `is` overrides by converting to Kotlin\r\n  * Remove unused `Call` from `Implementation.` and `CallDefinitionClause` `.elementDescription(Call, ElementDescriptionLocation)`.\r\n  * Don't shadow `resolveResultList` in `addToResolveResultList`\r\n  * Remove useless `?:`\r\n  * Remove unnecessary `!= null`\r\n  * Fix named argument calling by using super argument name\r\n  * Change `Float.from(ByteArray, Int)` to `TODO()` as implementation is invalid.\r\n  * Remove unused `ModuleChooserDialog`\r\n  * Setup `EncodingManager` for `ParsingTestCase`\r\n  * Remove redundant `internal`\r\n  * Don't highlight resolved callables along with referrers \r\n    Newest annotation API asserts that the annotator only annotates the PsiElement being visited, so can't highlight the resolved call definitions at the same time anymore.\r\n* [#1859](https://github.com/KronicDeth/intellij-elixir/pull/1859) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Differentiate signs, unary +/-, and addition/subtraction in lexer.\r\n    Fix parsing of `-1` for `case` clauses (#1316) by more strictly parsing decimal exponent signs differently than addition/subtraction and differently from unary `+` and `-`.  No longer have a \"dual\" operation emitted from the lexer like the Elixir native lexer and instead use specific tokens for each use case so that the parser doesn't need to decide on the operation.\r\n  * Heredoc with escapable newlines (#1843)\r\n    Heredocs allow the final newline to be escaped so you can write a heredoc in the code, but have no newlines in the string term at runtime.\r\n  * Fix terminators docs to show closing version and not opening version\r\n* [#1866](https://github.com/KronicDeth/intellij-elixir/pull/1866) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Protect against `IndexOutOfBounds` from `highlighterIterator` in `QuoteHandler`.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/34257277", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/34257277/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/34257277/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.9.0-pre%2B20201121032253", "id": 34257277, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0MjU3Mjc3", "tag_name": "v11.9.0-pre+20201121032253", "target_commitish": "cac8ff5ab98640499a80627f0a8fe3d7cd5ee773", "name": "v11.9.0-pre+20201121032253", "draft": false, "prerelease": true, "created_at": "2020-11-21T03:09:48Z", "published_at": "2020-11-21T03:27:39Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/28584811", "id": 28584811, "node_id": "MDEyOlJlbGVhc2VBc3NldDI4NTg0ODEx", "name": "intellij-elixir-11.9.0-pre+20201121032253.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6721114, "download_count": 16, "created_at": "2020-11-21T03:27:39Z", "updated_at": "2020-11-21T03:27:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.9.0-pre%2B20201121032253/intellij-elixir-11.9.0-pre%2B20201121032253.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.9.0-pre+20201121032253", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.9.0-pre+20201121032253", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31827486", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31827486/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/31827486/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.1", "id": 31827486, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxODI3NDg2", "tag_name": "v11.8.1", "target_commitish": "master", "name": "v11.8.1", "draft": false, "prerelease": false, "created_at": "2020-09-18T20:24:45Z", "published_at": "2020-09-25T18:59:24Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/26201755", "id": 26201755, "node_id": "MDEyOlJlbGVhc2VBc3NldDI2MjAxNzU1", "name": "intellij-elixir-11.8.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6713174, "download_count": 48, "created_at": "2020-09-25T18:59:11Z", "updated_at": "2020-09-25T18:59:19Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.1/intellij-elixir-11.8.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.1", "body": "# Thanks\r\n* For reporting that the JInterface on Maven Repository was missing modern ETF support for `BIG_CREATION`.\r\n  * nabeel ([@katebushgg](https://github.com/katebushgg))\r\n  * Prabu ([@praburajan](https://github.com/praburajan))\r\n  * [@KrishManohar](https://github.com/KrishManohar)\r\n  * [@Fabsolute](https://github.com/Fabsolute)\r\n  * Michael Shapiro ([@koudelka](https://github.com/koudelka))\r\n  * Austin Arbor ([@austinarbor](https://github.com/austinarbor))\r\n* For reporting that the debugger did not work on Windows because of path separators\r\n  * [@audiobuddha](https://github.com/audiobuddha)\r\n  * [@irenekay](https://github.com/irenekay)\r\n  * [@fatnlazycat](https://github.com/fatnlazycat)\r\n\r\n# Changelog\r\n## v11.8.1\r\n### Bug Fixes\r\n* [#1822](https://github.com/KronicDeth/intellij-elixir/pull/1822) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Vendor JInterface 1.11 to support `BIG_CREATION` when debugging.\r\n    The JInterface on Maven Central has stopped being updated because [the OTP Team didn't actually maintain it](https://bugs.erlang.org/browse/ERL-928?focusedCommentId=16521&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16521), that was Basho, and Basho is gone now.  This version of JInterface, 1.11, is from Erlang 23.0.4 from Homebrew, but with the formula edited (`brew edit erlang`) to add `--with-java` and then built with `brew install erlang --build-from-source`.\r\n* [#1823](https://github.com/KronicDeth/intellij-elixir/pull/1823) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * On Windows, the `file.path` to the debugger server files has `\\`, but they aren't escaped.  Therefore, replace them with escaped version, `\\\\` to fix debugging on Windows, but leave Linux and macOS unaffected.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31827773", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31827773/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/31827773/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.1-pre%2B20200925190150", "id": 31827773, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxODI3Nzcz", "tag_name": "v11.8.1-pre+20200925190150", "target_commitish": "2451d44ca69bff210853a2397182b50e0744a014", "name": "v11.8.1-pre+20200925190150", "draft": false, "prerelease": true, "created_at": "2020-09-18T20:13:45Z", "published_at": "2020-09-25T19:07:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/26202000", "id": 26202000, "node_id": "MDEyOlJlbGVhc2VBc3NldDI2MjAyMDAw", "name": "intellij-elixir-11.8.1-pre+20200925190150.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6683649, "download_count": 4, "created_at": "2020-09-25T19:07:21Z", "updated_at": "2020-09-25T19:07:21Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.1-pre%2B20200925190150/intellij-elixir-11.8.1-pre%2B20200925190150.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.1-pre+20200925190150", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.1-pre+20200925190150", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31227422", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/31227422/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/31227422/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.0-pre%2B20200914021547", "id": 31227422, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMxMjI3NDIy", "tag_name": "v11.8.0-pre+20200914021547", "target_commitish": "eb4270a184f3d21c85a158b85e9e1074de3586b3", "name": "v11.8.0-pre+20200914021547", "draft": false, "prerelease": true, "created_at": "2020-09-14T02:03:55Z", "published_at": "2020-09-14T02:20:54Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/25559141", "id": 25559141, "node_id": "MDEyOlJlbGVhc2VBc3NldDI1NTU5MTQx", "name": "intellij-elixir-11.8.0-pre+20200914021547.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6683334, "download_count": 11, "created_at": "2020-09-14T02:20:55Z", "updated_at": "2020-09-14T02:20:55Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.0-pre%2B20200914021547/intellij-elixir-11.8.0-pre%2B20200914021547.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.0-pre+20200914021547", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.0-pre+20200914021547", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29749783", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29749783/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/29749783/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.0-pre%2B20200816191046", "id": 29749783, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5NzQ5Nzgz", "tag_name": "v11.8.0-pre+20200816191046", "target_commitish": "b8627a6560ffe28cbaa5039d533fcd853429b205", "name": "v11.8.0-pre+20200816191046", "draft": false, "prerelease": true, "created_at": "2020-08-16T18:59:27Z", "published_at": "2020-08-16T19:16:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/23983710", "id": 23983710, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzOTgzNzEw", "name": "intellij-elixir-11.8.0-pre+20200816191046.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6696443, "download_count": 14, "created_at": "2020-08-16T19:16:32Z", "updated_at": "2020-08-16T19:16:33Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.0-pre%2B20200816191046/intellij-elixir-11.8.0-pre%2B20200816191046.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.0-pre+20200816191046", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.0-pre+20200816191046", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29278690", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29278690/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/29278690/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.0", "id": 29278690, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5Mjc4Njkw", "tag_name": "v11.8.0", "target_commitish": "master", "name": "v11.8.0", "draft": false, "prerelease": false, "created_at": "2020-08-04T15:30:21Z", "published_at": "2020-08-04T15:42:01Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/23599474", "id": 23599474, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzNTk5NDc0", "name": "intellij-elixir-11.8.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6705219, "download_count": 22, "created_at": "2020-08-04T15:41:28Z", "updated_at": "2020-08-04T15:41:36Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.0/intellij-elixir-11.8.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.0", "body": "# Thanks\r\n\r\n* For reporting that unchecking Show Method Separators did not turn off the method separator above `@doc` and `@spec`\r\n  * Marek Kaput ([@mkaput](https://github.com/mkaput))\r\n* For reporting that the formatter did not work properly in EEx templates\r\n  * Nathan Shafer ([@nshafer](https://github.com/nshafer))\r\n\r\n# Changelog\r\n\r\n## v11.8.0\r\n### Enhancements\r\n* [#1792](https://github.com/KronicDeth/intellij-elixir/pull/1792) - [@marcindawidziuk](https://github.com/marcindawidziuk)\r\n  * Quick documentation (F1/Ctrl+Q)\r\n* [#1807](https://github.com/KronicDeth/intellij-elixir/pull/1807) - [@niknetniko](https://github.com/niknetniko)\r\n  * Run Icons in gutter next to ExUnit tests.  The icon changes to the state of the test: green for passing and red for failing. \r\n\r\n### Bug Fixes\r\n* [#1788](https://github.com/KronicDeth/intellij-elixir/pull/1788) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix Unchecking Show Method Separator still showing on `@doc` and `@spec`.\r\n  \r\n    Previously, unchecking Show Method Separator would still show the method separator if it was the module attributes (such as `@doc` and `@spec`) associated with the call definition (`def`, `defp`, `defmacro`, or `defmacrop`) and only disabled the ones directly above the call definition.  This is fixed by checking if method separators are enabled in `getLineMarkerInfo(PsiElement)` instead of the specialized `getLineMarkerInfo(Call)`, so that the check happens for both module attributes and call definitions.\r\n* [#1786](https://github.com/KronicDeth/intellij-elixir/pull/1786) - [@odk211](https://github.com/odk211)\r\n  * Remove \"Unresolved module attribute\" error annotation because module attributes cannot be resolved through `use` yet, so current annotation is a false positive in those cases.\r\n* [#1801](https://github.com/KronicDeth/intellij-elixir/pull/1801) - [@niknetniko](https://github.com/niknetniko)\r\n  * Use `SimpleTemplateLanguageFormattingModelBuilder` for EEx files, so that the `TemplateDataLanguage` (i.e. `html` when the extension is `.html.eex`) formatter is used instead of the Elixir formatter.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29277317", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29277317/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/29277317/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.0-pre%2B20200804150641", "id": 29277317, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5Mjc3MzE3", "tag_name": "v11.8.0-pre+20200804150641", "target_commitish": "32c3776957a84b79e345514775b6931541d31d90", "name": "v11.8.0-pre+20200804150641", "draft": false, "prerelease": true, "created_at": "2020-08-04T14:53:36Z", "published_at": "2020-08-04T15:12:06Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/23598431", "id": 23598431, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzNTk4NDMx", "name": "intellij-elixir-11.8.0-pre+20200804150641.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6695954, "download_count": 4, "created_at": "2020-08-04T15:12:06Z", "updated_at": "2020-08-04T15:12:07Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.0-pre%2B20200804150641/intellij-elixir-11.8.0-pre%2B20200804150641.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.0-pre+20200804150641", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.0-pre+20200804150641", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29198256", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29198256/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/29198256/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.8.0-pre%2B20200802015428", "id": 29198256, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5MTk4MjU2", "tag_name": "v11.8.0-pre+20200802015428", "target_commitish": "e41bd5597c12c3075de297776c6c0a8e4c707f45", "name": "v11.8.0-pre+20200802015428", "draft": false, "prerelease": true, "created_at": "2020-08-02T01:42:54Z", "published_at": "2020-08-02T01:59:49Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/23506905", "id": 23506905, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzNTA2OTA1", "name": "intellij-elixir-11.8.0-pre+20200802015428.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 6693583, "download_count": 5, "created_at": "2020-08-02T01:59:49Z", "updated_at": "2020-08-02T01:59:50Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.8.0-pre%2B20200802015428/intellij-elixir-11.8.0-pre%2B20200802015428.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.8.0-pre+20200802015428", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.8.0-pre+20200802015428", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29172997", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/29172997/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/29172997/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200731164202", "id": 29172997, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5MTcyOTk3", "tag_name": "v11.7.1-pre+20200731164202", "target_commitish": "996fc41f8262b389a8e5823ff93c7469da0c7a28", "name": "v11.7.1-pre+20200731164202", "draft": false, "prerelease": true, "created_at": "2020-07-31T16:30:19Z", "published_at": "2020-07-31T16:47:41Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/23465131", "id": 23465131, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzNDY1MTMx", "name": "intellij-elixir-11.7.1-pre+20200731164202.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4985594, "download_count": 5, "created_at": "2020-07-31T16:47:41Z", "updated_at": "2020-07-31T16:47:42Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200731164202/intellij-elixir-11.7.1-pre%2B20200731164202.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200731164202", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200731164202", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/27273157", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/27273157/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/27273157/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200605172758", "id": 27273157, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3MjczMTU3", "tag_name": "v11.7.1-pre+20200605172758", "target_commitish": "main", "name": "v11.7.1-pre+20200605172758", "draft": false, "prerelease": true, "created_at": "2020-06-05T17:16:49Z", "published_at": "2020-06-05T17:33:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/21453741", "id": 21453741, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxNDUzNzQx", "name": "intellij-elixir-11.7.1-pre+20200605172758.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4985795, "download_count": 21, "created_at": "2020-06-05T17:33:21Z", "updated_at": "2020-06-05T17:33:21Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200605172758/intellij-elixir-11.7.1-pre%2B20200605172758.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200605172758", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200605172758", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/27271666", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/27271666/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/27271666/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200605164152", "id": 27271666, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3MjcxNjY2", "tag_name": "v11.7.1-pre+20200605164152", "target_commitish": "main", "name": "v11.7.1-pre+20200605164152", "draft": false, "prerelease": true, "created_at": "2020-06-05T16:29:13Z", "published_at": "2020-06-05T16:46:37Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/21451972", "id": 21451972, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxNDUxOTcy", "name": "intellij-elixir-11.7.1-pre+20200605164152.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4987158, "download_count": 5, "created_at": "2020-06-05T16:46:37Z", "updated_at": "2020-06-05T16:46:38Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200605164152/intellij-elixir-11.7.1-pre%2B20200605164152.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200605164152", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200605164152", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822207", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822207/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26822207/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200523030125", "id": 26822207, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODIyMjA3", "tag_name": "v11.7.1-pre+20200523030125", "target_commitish": "main", "name": "v11.7.1-pre+20200523030125", "draft": false, "prerelease": true, "created_at": "2020-05-23T02:47:07Z", "published_at": "2020-05-23T03:06:05Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20987441", "id": 20987441, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTg3NDQx", "name": "intellij-elixir-11.7.1-pre+20200523030125.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4986742, "download_count": 11, "created_at": "2020-05-23T03:06:06Z", "updated_at": "2020-05-23T03:06:06Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200523030125/intellij-elixir-11.7.1-pre%2B20200523030125.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200523030125", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200523030125", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822186", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822186/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26822186/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200523025659", "id": 26822186, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODIyMTg2", "tag_name": "v11.7.1-pre+20200523025659", "target_commitish": "main", "name": "v11.7.1-pre+20200523025659", "draft": false, "prerelease": true, "created_at": "2020-05-23T02:46:11Z", "published_at": "2020-05-23T03:02:25Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20987413", "id": 20987413, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTg3NDEz", "name": "intellij-elixir-11.7.1-pre+20200523025659.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4986064, "download_count": 5, "created_at": "2020-05-23T03:02:26Z", "updated_at": "2020-05-23T03:02:26Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200523025659/intellij-elixir-11.7.1-pre%2B20200523025659.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200523025659", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200523025659", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822117", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822117/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26822117/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.1-pre%2B20200523024626", "id": 26822117, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODIyMTE3", "tag_name": "v11.7.1-pre+20200523024626", "target_commitish": "main", "name": "v11.7.1-pre+20200523024626", "draft": false, "prerelease": true, "created_at": "2020-05-23T02:35:43Z", "published_at": "2020-05-23T02:52:17Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20987333", "id": 20987333, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTg3MzMz", "name": "intellij-elixir-11.7.1-pre+20200523024626.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4986844, "download_count": 5, "created_at": "2020-05-23T02:52:18Z", "updated_at": "2020-05-23T02:52:18Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.1-pre%2B20200523024626/intellij-elixir-11.7.1-pre%2B20200523024626.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.1-pre+20200523024626", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.1-pre+20200523024626", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822310", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822310/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26822310/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.0", "id": 26822310, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODIyMzEw", "tag_name": "v11.7.0", "target_commitish": "master", "name": "v11.7.0", "draft": false, "prerelease": false, "created_at": "2020-05-23T03:19:04Z", "published_at": "2020-05-23T03:24:04Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20987562", "id": 20987562, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTg3NTYy", "name": "intellij-elixir-11.7.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4990023, "download_count": 25, "created_at": "2020-05-23T03:22:52Z", "updated_at": "2020-05-23T03:22:54Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.0/intellij-elixir-11.7.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.0", "body": "# Thanks\r\n* For reporting that if two module attributes start with the same letters, then later in the code, the shorter one is falsely flagged as an 'Unresolved module attribute'.\r\n  * Reinhard Engel ([@rengel-de](https://github.com/rengel-de))\r\n* For reporting **and fixing!** that `iex` and `erl` arguments not being saved for IEx Mix Run Configurations\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n\r\n# Changelog\r\n## v11.7.0\r\n### Enhancements\r\n* [#1781](https://github.com/KronicDeth/intellij-elixir/pull/1781) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Convert `annotator.ModuleAttribute` to Kotlin\r\n    * Apply optional Kotlin transformations.\r\n\r\n### Bug Fixes\r\n* [#1781](https://github.com/KronicDeth/intellij-elixir/pull/1781) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check if at least one resolution for module attribute references is valid\r\n    \r\n    Previously, it was checked if module attributes resolved to exactly one declaration, but this is no longer true with the looser reference resolution that allows invalid results for PisPolyVariantReference.  `resolve()` will return `null` when there is more than one result from `multiResolve` even if some are invalid, so we need to explicitly check if the `PsiReference` is a `PsiPolyVariantReference` and if so check if any are valid.\r\n  * Fix deprecation warnings for `annotator.ModuleAttribute`.\r\n  * Quick fixes for inlinables in `annotator.ModuleAttribute`.\r\n* [#1774](https://github.com/KronicDeth/intellij-elixir/pull/1774) - [@odk211](https://github.com/odk211)\r\n  * Fix `iex` and `erl` arguments not being saved for IEx Mix Run Configurations.\r\n "}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822404", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26822404/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26822404/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.7.0-pre%2B20200523032945", "id": 26822404, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2ODIyNDA0", "tag_name": "v11.7.0-pre+20200523032945", "target_commitish": "main", "name": "v11.7.0-pre+20200523032945", "draft": false, "prerelease": true, "created_at": "2020-05-23T03:18:44Z", "published_at": "2020-05-23T03:35:10Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20987694", "id": 20987694, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTg3Njk0", "name": "intellij-elixir-11.7.0-pre+20200523032945.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4986841, "download_count": 5, "created_at": "2020-05-23T03:35:10Z", "updated_at": "2020-05-23T03:35:10Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.7.0-pre%2B20200523032945/intellij-elixir-11.7.0-pre%2B20200523032945.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.7.0-pre+20200523032945", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.7.0-pre+20200523032945", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26573842", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26573842/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26573842/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.1", "id": 26573842, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2NTczODQy", "tag_name": "v11.6.1", "target_commitish": "master", "name": "v11.6.1", "draft": false, "prerelease": false, "created_at": "2020-05-15T19:28:10Z", "published_at": "2020-05-15T19:37:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20773965", "id": 20773965, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwNzczOTY1", "name": "intellij-elixir-11.6.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5018597, "download_count": 10, "created_at": "2020-05-15T19:37:07Z", "updated_at": "2020-05-15T19:37:09Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.1/intellij-elixir-11.6.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.1", "body": "# Thanks\r\n* For reporting that keyword pairs can have more than 2 children when there are grammatical errors.\r\n  * [@daffyDukk](https://github.com/daffyDukk)\r\n  * [@lanarchyste](https://github.com/lanarchyste)\r\n  * Daria Struts ([@Dashenok](https://github.com/Dashenok))\r\n* For reporting that TeamCity formatter did not support the ExUnit Diff changes from [elixir-lang/elixir@98c6bba](https://github.com/elixir-lang/elixir/commit/98c6bba436cc4833363295e5fedd3f819504d79d) in Elixir 1.10.\r\n\r\n# Changelog\r\n## v11.6.1\r\n### Bug Fixes\r\n* [#1762](https://github.com/KronicDeth/intellij-elixir/pull/1762) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Support diffs in pattern matching added in Elixir `1.10.0` in the ExUnit formatter.  Ports [elixir-lang/elixir@98c6bba436cc4833363295e5fedd3f819504d79d](https://github.com/elixir-lang/elixir/commit/98c6bba436cc4833363295e5fedd3f819504d79d).\r\n* [#1773](https://github.com/KronicDeth/intellij-elixir/pull/1773) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Only require at least the number of children to safely get a specific child instead of exact number to allow getting prefix children when there are grammatical errors."}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26556209", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/26556209/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/26556209/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.1-pre%2B20200515124444", "id": 26556209, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2NTU2MjA5", "tag_name": "v11.6.1-pre+20200515124444", "target_commitish": "main", "name": "v11.6.1-pre+20200515124444", "draft": false, "prerelease": true, "created_at": "2020-05-15T12:32:30Z", "published_at": "2020-05-15T12:48:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20761920", "id": 20761920, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwNzYxOTIw", "name": "intellij-elixir-11.6.1-pre+20200515124444.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4984605, "download_count": 5, "created_at": "2020-05-15T12:48:45Z", "updated_at": "2020-05-15T12:48:46Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.1-pre%2B20200515124444/intellij-elixir-11.6.1-pre%2B20200515124444.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.1-pre+20200515124444", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.1-pre+20200515124444", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25861827", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25861827/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25861827/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200424181019", "id": 25861827, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1ODYxODI3", "tag_name": "v11.6.0-pre+20200424181019", "target_commitish": "main", "name": "v11.6.0-pre+20200424181019", "draft": false, "prerelease": true, "created_at": "2020-04-24T17:57:25Z", "published_at": "2020-04-24T18:14:53Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/20124958", "id": 20124958, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwMTI0OTU4", "name": "intellij-elixir-11.6.0-pre+20200424181019.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4984630, "download_count": 15, "created_at": "2020-04-24T18:14:53Z", "updated_at": "2020-04-24T18:14:53Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200424181019/intellij-elixir-11.6.0-pre%2B20200424181019.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200424181019", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200424181019", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25419417", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25419417/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25419417/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0", "id": 25419417, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NDE5NDE3", "tag_name": "v11.6.0", "target_commitish": "master", "name": "v11.6.0", "draft": false, "prerelease": false, "created_at": "2020-04-11T20:05:57Z", "published_at": "2020-04-11T20:36:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19677930", "id": 19677930, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5Njc3OTMw", "name": "intellij-elixir-11.6.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5013577, "download_count": 17, "created_at": "2020-04-11T20:36:24Z", "updated_at": "2020-04-11T20:36:31Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0/intellij-elixir-11.6.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0", "body": "# Thanks\r\n* For reporting that binary, octal, and hexadecimal numbers could not use underscores.\r\n  * [@gerritwalther](https://github.com/gerritwalther)\r\n* For reporting that `Icons` was using removed icons from `AllIcons`.\r\n  * [@bhjakobsen](https://github.com/bhjakobsen)\r\n  * Altug Sahin ([@sahina](https://github.com/sahina))\r\n  * Wasi Ur Rahman ([@DevWasi](https://github.com/DevWasi))\r\n  * Alexandru Pinca ([@pinkahd](https://github.com/pinkahd))\r\n  * Hans Hoffman ([@hansjhoffman](https://github.com/hansjhoffman))\r\n  * Tomislav ([@trajakovic](https://github.com/trajakovic))\r\n  * Felix Dux ([@FelixDux](https://github.com/FelixDux))\r\n  * [@dimitribeer](https://github.com/dimitribeer)\r\n  * Ahmed ([@ahmediprahim](https://github.com/ahmediprahim))\r\n  * Nitin Gupta ([@nitingupta910](https://github.com/nitingupta910))\r\n  * Jerson Pena ([@jersonsw](https://github.com/jersonsw))\r\n  * Bosko Zeljkovic ([@boskozeljkovic1990](https://github.com/boskozeljkovic1990))\r\n  * Ilya Gorskin ([@Revent](https://github.com/Revent))\r\n  * Hidde Wieringa ([@hiddewie](https://github.com/hiddewie))\r\n  * [@henriquef2013](https://github.com/henriquef2013)\r\n  * [@nidzelskyy](https://github.com/nidzelskyy)\r\n  * [@paskudnyprogramista](https://github.com/paskudnyprogramista)\r\n  * Nate D Andrews ([@nate-d-andrews94](https://github.com/nate-d-andrews94))\r\n  * [@jordankanter](https://github.com/jordankanter)\r\n  * Maksym Kosenko ([@maxie7](https://github.com/maxie7))\r\n  * Marcio Camello ([@marciocamello](https://github.com/marciocamello))\r\n  * Walter Weinmann ([@walter-weinmann](https://github.com/walter-weinmann))\r\n  * Deyve Vieira ([@deyvedvm](https://github.com/deyvedvm))\r\n  * Gareth Jones ([@G-Rath](https://github.com/G-Rath))\r\n  * Steve ([@stevecw](https://github.com/stevecw))\r\n  * Oleksii Moisieienko ([@alexmay23](https://github.com/alexmay23))\r\n  * Dmitry Chekurov ([@chedv13](https://github.com/chedv13))\r\n  * Edwin Fine ([@efine](https://github.com/efine))\r\n  * Victor Sago ([@VictorSago](https://github.com/VictorSago))\r\n  * [@anatoliy86](https://github.com/anatoliy86)\r\n  * [@mhtouseef9](https://github.com/mhtouseef9)\r\n  * [@simonjuk](https://github.com/simonjuk)\r\n  * Vikrant Sagar ([@hellcoderz](https://github.com/hellcoderz))\r\n  * Marco Masotti ([@m4s0](https://github.com/m4s0))\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n  * Tan Yeong Sheng ([@yeongsheng-tan](https://github.com/yeongsheng-tan))\r\n  * Ian Hall ([@ianhall](https://github.com/ianhall))\r\n  * Manuel Kosel ([@GeheimagEnte](https://github.com/GeheimagEnte))\r\n  * Daniel Sokil ([@s0kil](https://github.com/s0kil))\r\n  * Nicolas ([@njouanin](https://github.com/njouanin))\r\n  * Matt Jadczak ([@mjadczak](https://github.com/mjadczak))\r\n * For reporting that Live EEx was not highlighted like EEx\r\n  * [@D4no0](https://github.com/D4no0)\r\n  * Thomas Schmidleithner ([@tschmidleithner](https://github.com/tschmidleithner))\r\n \r\n# Changelog\r\n## v11.6.0\r\n### Enhancements\r\n* [#1691](https://github.com/KronicDeth/intellij-elixir/pull/1691) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Treat `.leex` files as `.eex` files, so same features apply to both.\r\n* [#1735](https://github.com/KronicDeth/intellij-elixir/pull/1735) - [@KronciDeth](https://github.com/KronicDeth)\r\n  * Switch build to GitHub Actions.\r\n* [#1738](https://github.com/KronicDeth/intellij-elixir/pull/1738) - [@Koziolek](https://github.com/Koziolek)\r\n  * Update build to IntelliJ IDEA 2020.1\r\n\r\n### Bug Fixes\r\n* [#1646](https://github.com/KronicDeth/intellij-elixir/pull/1646) - [@seanwash](https://github.com/seanwash)\r\n  * Swap improperly sized `General.QuestionDialog` icon for `RunConfigurations.TestUnknown` icon for Unknown icon in Structure View.\r\n* [#1632](https://github.com/KronicDeth/intellij-elixir/pull/1632) - [@ortex](https://github.com/ortex)\r\n  * Fix `MODULENAME` variable in `defm` live template, so that the file name is camel-cased before being capitalized.\r\n* [#1643](https://github.com/KronicDeth/intellij-elixir/pull/1643) - [@zrma](https://github.com/zrma)\r\n  * Update `README.md` about information for Goland IDE since has been released for awhile and no longer only an EAP.\r\n* [#1735](https://github.com/KronicDeth/intellij-elixir/pull/1735) - [@KronciDeth](https://github.com/KronicDeth)\r\n  * Restore canary [builds being published to JetBrains Marketplace](https://plugins.jetbrains.com/plugin/7522-elixir/versions).\r\n* [#1738](https://github.com/KronicDeth/intellij-elixir/pull/1738) - [@Koziolek](https://github.com/Koziolek)\r\n  * JetBrains IDEs 2020.1 compatibility\r\n    * Change obsolete references to `AllocIcons` in `Icons` to new ones in `AlllIcons` that are recommended in documentation.\r\n    * Update to `@NotNull` annotation on `PsiElementVisitor`\r\n      * `DepGatherer`\r\n      * `QuotableImpl.quote`\r\n* [#1745](https://github.com/KronicDeth/intellij-elixir/pull/1745) - [@KronciDeth](https://github.com/KronicDeth)\r\n  * Fix tests for IDEA 2020.1.\r\n* [#1753](https://github.com/KronicDeth/intellij-elixir/pull/1753) - [@KronciDeth](https://github.com/KronicDeth)\r\n  * Get `ProjectImportProvider` builder in `doGetBuilder` instead of constructor.\r\n  \r\n    Fixes use of deprecated constructor dependency injection that is incompatible with dynamic, injectable plugins in 2020.1.\r\n  \r\n    ```\r\n    com.intellij.diagnostic.PluginException: getComponentAdapterOfType is\r\n    used to get org.elixir_lang.mix.project._import.Builder(\r\n      requestorClass=org.elixir_lang.mix.project._import.Provider,\r\n      requestorConstructor=protected org.elixir_lang.mix.project._import.Provider(org.elixir_lang.mix.project._import.Builder)\r\n    ).\r\n    \r\n    Probably constructor should be marked as NonInjectable. [Plugin: org.elixir_lang]\r\n    ```\r\n* [#1685](https://github.com/KronicDeth/intellij-elixir/pull/1685) - [@gerritwalther](https://github.com/gerritwalther)\r\n  * Allow underscores in binary (`0b`), octal (`0o`) , and hexadecimal (`0x`) numbers.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25419608", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25419608/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25419608/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200411205042", "id": 25419608, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NDE5NjA4", "tag_name": "v11.6.0-pre+20200411205042", "target_commitish": "main", "name": "v11.6.0-pre+20200411205042", "draft": false, "prerelease": true, "created_at": "2020-04-11T20:38:15Z", "published_at": "2020-04-11T20:56:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19678244", "id": 19678244, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5Njc4MjQ0", "name": "intellij-elixir-11.6.0-pre+20200411205042.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4983809, "download_count": 5, "created_at": "2020-04-11T20:56:21Z", "updated_at": "2020-04-11T20:56:21Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200411205042/intellij-elixir-11.6.0-pre%2B20200411205042.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200411205042", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200411205042", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25418241", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25418241/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25418241/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200411183119", "id": 25418241, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NDE4MjQx", "tag_name": "v11.6.0-pre+20200411183119", "target_commitish": "main", "name": "v11.6.0-pre+20200411183119", "draft": false, "prerelease": true, "created_at": "2020-04-11T18:20:28Z", "published_at": "2020-04-11T18:36:59Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19675200", "id": 19675200, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5Njc1MjAw", "name": "intellij-elixir-11.6.0-pre+20200411183119.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017486, "download_count": 6, "created_at": "2020-04-11T18:37:00Z", "updated_at": "2020-04-11T18:37:00Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200411183119/intellij-elixir-11.6.0-pre%2B20200411183119.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200411183119", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200411183119", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25416897", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25416897/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25416897/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200411163206", "id": 25416897, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1NDE2ODk3", "tag_name": "v11.6.0-pre+20200411163206", "target_commitish": "main", "name": "v11.6.0-pre+20200411163206", "draft": false, "prerelease": true, "created_at": "2020-04-11T16:20:17Z", "published_at": "2020-04-11T16:36:55Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19672304", "id": 19672304, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NjcyMzA0", "name": "intellij-elixir-11.6.0-pre+20200411163206.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5016206, "download_count": 8, "created_at": "2020-04-11T16:36:56Z", "updated_at": "2020-04-11T16:36:56Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200411163206/intellij-elixir-11.6.0-pre%2B20200411163206.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200411163206", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200411163206", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25393950", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25393950/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25393950/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200410134019", "id": 25393950, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MzkzOTUw", "tag_name": "v11.6.0-pre+20200410134019", "target_commitish": "main", "name": "v11.6.0-pre+20200410134019", "draft": false, "prerelease": true, "created_at": "2020-04-10T13:27:45Z", "published_at": "2020-04-10T13:45:22Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19639765", "id": 19639765, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NjM5NzY1", "name": "intellij-elixir-11.6.0-pre+20200410134019.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017439, "download_count": 14, "created_at": "2020-04-10T13:45:22Z", "updated_at": "2020-04-10T13:45:23Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200410134019/intellij-elixir-11.6.0-pre%2B20200410134019.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200410134019", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200410134019", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25392323", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25392323/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25392323/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200410122934", "id": 25392323, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MzkyMzIz", "tag_name": "v11.6.0-pre+20200410122934", "target_commitish": "main", "name": "v11.6.0-pre+20200410122934", "draft": false, "prerelease": true, "created_at": "2020-04-10T12:28:22Z", "published_at": "2020-04-10T12:36:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19636649", "id": 19636649, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NjM2NjQ5", "name": "intellij-elixir-11.6.0-pre+20200410122934.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017561, "download_count": 7, "created_at": "2020-04-10T12:36:19Z", "updated_at": "2020-04-10T12:36:19Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200410122934/intellij-elixir-11.6.0-pre%2B20200410122934.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200410122934", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200410122934", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25392128", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25392128/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25392128/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200410122155", "id": 25392128, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MzkyMTI4", "tag_name": "v11.6.0-pre+20200410122155", "target_commitish": "main", "name": "v11.6.0-pre+20200410122155", "draft": false, "prerelease": true, "created_at": "2020-04-10T12:20:42Z", "published_at": "2020-04-10T12:26:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19636532", "id": 19636532, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NjM2NTMy", "name": "intellij-elixir-11.6.0-pre+20200410122155.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017560, "download_count": 5, "created_at": "2020-04-10T12:26:32Z", "updated_at": "2020-04-10T12:26:33Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200410122155/intellij-elixir-11.6.0-pre%2B20200410122155.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200410122155", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200410122155", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25233031", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25233031/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25233031/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200406115738", "id": 25233031, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MjMzMDMx", "tag_name": "v11.6.0-pre+20200406115738", "target_commitish": "main", "name": "v11.6.0-pre+20200406115738", "draft": false, "prerelease": true, "created_at": "2020-04-06T11:56:26Z", "published_at": "2020-04-06T12:02:27Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19425279", "id": 19425279, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NDI1Mjc5", "name": "intellij-elixir-11.6.0-pre+20200406115738.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5016801, "download_count": 11, "created_at": "2020-04-06T12:02:27Z", "updated_at": "2020-04-06T12:02:28Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200406115738/intellij-elixir-11.6.0-pre%2B20200406115738.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200406115738", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200406115738", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25221013", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25221013/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25221013/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200406030705", "id": 25221013, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MjIxMDEz", "tag_name": "v11.6.0-pre+20200406030705", "target_commitish": "main", "name": "v11.6.0-pre+20200406030705", "draft": false, "prerelease": true, "created_at": "2020-04-06T03:05:54Z", "published_at": "2020-04-06T03:12:26Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19413085", "id": 19413085, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NDEzMDg1", "name": "intellij-elixir-11.6.0-pre+20200406030705.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5016709, "download_count": 7, "created_at": "2020-04-06T03:12:26Z", "updated_at": "2020-04-06T03:12:26Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200406030705/intellij-elixir-11.6.0-pre%2B20200406030705.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200406030705", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200406030705", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25220854", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25220854/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25220854/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200406025432", "id": 25220854, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MjIwODU0", "tag_name": "v11.6.0-pre+20200406025432", "target_commitish": "main", "name": "v11.6.0-pre+20200406025432", "draft": false, "prerelease": true, "created_at": "2020-04-06T02:53:03Z", "published_at": "2020-04-06T02:59:58Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19412822", "id": 19412822, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NDEyODIy", "name": "intellij-elixir-11.6.0-pre+20200406025432.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017083, "download_count": 5, "created_at": "2020-04-06T02:59:58Z", "updated_at": "2020-04-06T02:59:58Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200406025432/intellij-elixir-11.6.0-pre%2B20200406025432.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200406025432", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200406025432", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25220731", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25220731/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25220731/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200406024242", "id": 25220731, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MjIwNzMx", "tag_name": "v11.6.0-pre+20200406024242", "target_commitish": "main", "name": "v11.6.0-pre+20200406024242", "draft": false, "prerelease": true, "created_at": "2020-04-06T02:29:39Z", "published_at": "2020-04-06T02:48:50Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19412741", "id": 19412741, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NDEyNzQx", "name": "intellij-elixir-11.6.0-pre+20200406024242.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017562, "download_count": 5, "created_at": "2020-04-06T02:48:51Z", "updated_at": "2020-04-06T02:48:51Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200406024242/intellij-elixir-11.6.0-pre%2B20200406024242.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200406024242", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200406024242", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25187431", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25187431/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25187431/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200403203712", "id": 25187431, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MTg3NDMx", "tag_name": "v11.6.0-pre+20200403203712", "target_commitish": "main", "name": "v11.6.0-pre+20200403203712", "draft": false, "prerelease": true, "created_at": "2020-04-03T20:24:07Z", "published_at": "2020-04-03T20:42:42Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19359038", "id": 19359038, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5MzU5MDM4", "name": "intellij-elixir-11.6.0-pre+20200403203712.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5016707, "download_count": 6, "created_at": "2020-04-03T20:42:43Z", "updated_at": "2020-04-03T20:42:43Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200403203712/intellij-elixir-11.6.0-pre%2B20200403203712.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200403203712", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200403203712", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25183264", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25183264/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25183264/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/11.6.0-pre%2B20200403182000", "id": 25183264, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MTgzMjY0", "tag_name": "11.6.0-pre+20200403182000", "target_commitish": "main", "name": "11.6.0-pre+20200403182000", "draft": false, "prerelease": true, "created_at": "2020-04-03T18:07:57Z", "published_at": "2020-04-03T18:25:58Z", "assets": [], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/11.6.0-pre+20200403182000", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/11.6.0-pre+20200403182000", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24875666", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24875666/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/24875666/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.6.0-pre%2B20200326025312", "id": 24875666, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0ODc1NjY2", "tag_name": "v11.6.0-pre+20200326025312", "target_commitish": "3fe2c623c70e67b23fcc18ce0afc9a5629be8ef8", "name": null, "draft": false, "prerelease": true, "created_at": "2020-03-26T02:38:32Z", "published_at": "2020-03-26T02:59:40Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19012614", "id": 19012614, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5MDEyNjE0", "name": "intellij-elixir-11.6.0-pre+20200326025312.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5015257, "download_count": 16, "created_at": "2020-03-26T02:59:38Z", "updated_at": "2020-03-26T02:59:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.6.0-pre%2B20200326025312/intellij-elixir-11.6.0-pre%2B20200326025312.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.6.0-pre+20200326025312", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.6.0-pre+20200326025312", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25185521", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25185521/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25185521/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/vv11.6.0-pre%2B20200403193502", "id": 25185521, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MTg1NTIx", "tag_name": "vv11.6.0-pre+20200403193502", "target_commitish": "master", "name": "vv11.6.0-pre+20200403193502", "draft": false, "prerelease": true, "created_at": "2020-03-26T02:38:32Z", "published_at": "2020-04-03T19:40:15Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/19355916", "id": 19355916, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5MzU1OTE2", "name": "intellij-elixir-11.6.0-pre+20200403193502.zip", "label": "", "uploader": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017560, "download_count": 5, "created_at": "2020-04-03T19:40:15Z", "updated_at": "2020-04-03T19:40:16Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/vv11.6.0-pre%2B20200403193502/intellij-elixir-11.6.0-pre%2B20200403193502.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/vv11.6.0-pre+20200403193502", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/vv11.6.0-pre+20200403193502", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25184867", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/25184867/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/25184867/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/vv11.6.0-pre%2B20200403191316", "id": 25184867, "author": {"login": "github-actions[bot]", "id": 41898282, "node_id": "MDM6Qm90NDE4OTgyODI=", "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-actions%5Bbot%5D", "html_url": "https://github.com/apps/github-actions", "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers", "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos", "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI1MTg0ODY3", "tag_name": "vv11.6.0-pre+20200403191316", "target_commitish": "master", "name": "vv11.6.0-pre+20200403191316", "draft": false, "prerelease": true, "created_at": "2020-03-26T02:38:32Z", "published_at": "2020-04-03T19:18:07Z", "assets": [], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/vv11.6.0-pre+20200403191316", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/vv11.6.0-pre+20200403191316", "body": ""}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24505871", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24505871/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/24505871/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.1-pre%2B20200313145502", "id": 24505871, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0NTA1ODcx", "tag_name": "v11.5.1-pre+20200313145502", "target_commitish": "daf77bb560701ec1689a3f69532ec844416d4ed5", "name": null, "draft": false, "prerelease": true, "created_at": "2020-03-13T14:39:26Z", "published_at": "2020-03-13T15:00:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/18689339", "id": 18689339, "node_id": "MDEyOlJlbGVhc2VBc3NldDE4Njg5MzM5", "name": "intellij-elixir-11.5.1-pre+20200313145502.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014731, "download_count": 21, "created_at": "2020-03-13T15:00:44Z", "updated_at": "2020-03-13T15:00:44Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.1-pre%2B20200313145502/intellij-elixir-11.5.1-pre%2B20200313145502.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.1-pre+20200313145502", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.1-pre+20200313145502", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24505591", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24505591/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/24505591/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.1-pre%2B20200313144735", "id": 24505591, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0NTA1NTkx", "tag_name": "v11.5.1-pre+20200313144735", "target_commitish": "8124fc1695f51ddbcc76b4769aca3b30e4321ef0", "name": null, "draft": false, "prerelease": true, "created_at": "2020-03-13T14:32:44Z", "published_at": "2020-03-13T14:53:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/18689175", "id": 18689175, "node_id": "MDEyOlJlbGVhc2VBc3NldDE4Njg5MTc1", "name": "intellij-elixir-11.5.1-pre+20200313144735.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014674, "download_count": 11, "created_at": "2020-03-13T14:53:17Z", "updated_at": "2020-03-13T14:53:17Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.1-pre%2B20200313144735/intellij-elixir-11.5.1-pre%2B20200313144735.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.1-pre+20200313144735", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.1-pre+20200313144735", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24449934", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/24449934/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/24449934/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.1-pre%2B20200312032811", "id": 24449934, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0NDQ5OTM0", "tag_name": "v11.5.1-pre+20200312032811", "target_commitish": "bcee5f8f1de2b27ce8634bb8dc20f4089795eda2", "name": null, "draft": false, "prerelease": true, "created_at": "2020-03-12T03:12:25Z", "published_at": "2020-03-12T03:36:50Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/18651001", "id": 18651001, "node_id": "MDEyOlJlbGVhc2VBc3NldDE4NjUxMDAx", "name": "intellij-elixir-11.5.1-pre+20200312032811.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014551, "download_count": 11, "created_at": "2020-03-12T03:36:49Z", "updated_at": "2020-03-12T03:36:49Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.1-pre%2B20200312032811/intellij-elixir-11.5.1-pre%2B20200312032811.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.1-pre+20200312032811", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.1-pre+20200312032811", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/23321671", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/23321671/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/23321671/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.0", "id": 23321671, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzMzIxNjcx", "tag_name": "v11.5.0", "target_commitish": "1d83a56b112bc5a392ca3a544d0c209afa39cfe9", "name": "v11.5.0", "draft": false, "prerelease": false, "created_at": "2020-02-02T17:30:11Z", "published_at": "2020-02-02T17:55:10Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/17746623", "id": 17746623, "node_id": "MDEyOlJlbGVhc2VBc3NldDE3NzQ2NjIz", "name": "intellij-elixir-11.5.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5019801, "download_count": 30, "created_at": "2020-02-02T18:22:44Z", "updated_at": "2020-02-02T18:22:55Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.0/intellij-elixir-11.5.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.0", "body": "# Changelog\r\n## v11.5.0\r\n### Enhancements\r\n* [#1630](https://github.com/KronicDeth/intellij-elixir/pull/1630) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore the `incompleteCode` flag and instead always use the criteria used when `incompleteCode` was set.  \r\n\r\n    | name prefix | exact name | ResolveResult | valid |\r\n    |-------------|------------|---------------|-------|\r\n    | \u274c           | N/A        | \u274c             | N/A   |\r\n    | \u2705           | \u274c          | \u2705             | \u274c     |\r\n    | \u2705           | \u2705          | \u2705             | \u2705     |\r\n\r\n    This extends #1617 to more cases.\r\n    * Qualified calls (`Process.flag(...)`, etc)\r\n    * Type specs (`@spec foo(...)`)\r\n    * Aliases (`alias Foo...`)\r\n    * Module Attributes (`@attribute`)\r\n    * Variables (`foo`)\r\n    * `Protocol` reserved module attributes (`@protocol` and `@for`)\r\n\r\n### Bug Fixes\r\n* [#1650](https://github.com/KronicDeth/intellij-elixir/pull/1650) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix debugger evaluator for Elixir >= 1.9.2. Ports [elixir-lang/elixir@7002554](https://github.com/elixir-lang/elixir/commit/7002554a478f4c99dc4b63786a13cc7dca67799d).\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/23321654", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/23321654/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/23321654/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.0-pre%2B20200202174313", "id": 23321654, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzMzIxNjU0", "tag_name": "v11.5.0-pre+20200202174313", "target_commitish": "a1db1c1a16ff9620db8ff0845da5d5d9efaea64f", "name": null, "draft": false, "prerelease": true, "created_at": "2020-02-02T17:25:14Z", "published_at": "2020-02-02T17:53:34Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/17746315", "id": 17746315, "node_id": "MDEyOlJlbGVhc2VBc3NldDE3NzQ2MzE1", "name": "intellij-elixir-11.5.0-pre+20200202174313.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014176, "download_count": 8, "created_at": "2020-02-02T17:53:33Z", "updated_at": "2020-02-02T17:53:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.0-pre%2B20200202174313/intellij-elixir-11.5.0-pre%2B20200202174313.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.0-pre+20200202174313", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.0-pre+20200202174313", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21881055", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21881055/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/21881055/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.5.0-pre%2B20191201194202", "id": 21881055, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxODgxMDU1", "tag_name": "v11.5.0-pre+20191201194202", "target_commitish": "9fdba1020ecc4ba465292c6c7aa04a9f42fb3e67", "name": null, "draft": false, "prerelease": true, "created_at": "2019-12-01T19:24:39Z", "published_at": "2019-12-01T19:48:58Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/16518893", "id": 16518893, "node_id": "MDEyOlJlbGVhc2VBc3NldDE2NTE4ODkz", "name": "intellij-elixir-11.5.0-pre+20191201194202.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014032, "download_count": 19, "created_at": "2019-12-01T19:48:57Z", "updated_at": "2019-12-01T19:48:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.5.0-pre%2B20191201194202/intellij-elixir-11.5.0-pre%2B20191201194202.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.5.0-pre+20191201194202", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.5.0-pre+20191201194202", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21812129", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21812129/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/21812129/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.4.0", "id": 21812129, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxODEyMTI5", "tag_name": "v11.4.0", "target_commitish": "cc7ae8e1dde808fb7de14d1c5e91ca3545eead66", "name": "v11.4.0", "draft": false, "prerelease": false, "created_at": "2019-11-27T19:44:12Z", "published_at": "2019-11-27T19:52:00Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/16442213", "id": 16442213, "node_id": "MDEyOlJlbGVhc2VBc3NldDE2NDQyMjEz", "name": "intellij-elixir-11.4.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014896, "download_count": 33, "created_at": "2019-11-27T19:50:28Z", "updated_at": "2019-11-27T19:51:47Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.4.0/intellij-elixir-11.4.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.4.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.4.0", "body": "# Changelog\r\n## v11.4.0\r\n### Enhancements\r\n* [#1617](https://github.com/KronicDeth/intellij-elixir/pull/1617) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Previously, the arity of a function or macro could only disagree with the definition and resolve if\r\n\r\n    1. The arity of the call was in the arity range of the definition and the `ResolveResult` was marked as a `validResult`.\r\n    2. The code is marked as `incomplete` (because the IDE detects typing, etc) and the arity mismatches and the `ResolveResult` is marked as an invalid result.\r\n\r\n      By marking all arity mismatches, regardless of incompleteness of the code as an invalid result, Go To Definition and Show Parameters works when the the arity is incorrect.  This makes Show Parameters work while typing out a call without the correct number of commas and allows jumping to the definition while typing out the call too.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21353449", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21353449/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/21353449/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.3.0-pre%2B20191111031457", "id": 21353449, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxMzUzNDQ5", "tag_name": "v11.3.0-pre+20191111031457", "target_commitish": "0f0a342e7622441ca1652de6a3db18e5780fba89", "name": null, "draft": false, "prerelease": true, "created_at": "2019-11-11T02:57:22Z", "published_at": "2019-11-11T03:21:40Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/16078427", "id": 16078427, "node_id": "MDEyOlJlbGVhc2VBc3NldDE2MDc4NDI3", "name": "intellij-elixir-11.3.0-pre+20191111031457.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5014926, "download_count": 18, "created_at": "2019-11-11T03:21:39Z", "updated_at": "2019-11-11T03:21:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.3.0-pre%2B20191111031457/intellij-elixir-11.3.0-pre%2B20191111031457.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.3.0-pre+20191111031457", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.3.0-pre+20191111031457", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21207561", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/21207561/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/21207561/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.3.0", "id": 21207561, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxMjA3NTYx", "tag_name": "v11.3.0", "target_commitish": "d107d2047988e63a019e6b83275415fcdfb61cc1", "name": "v11.3.0", "draft": false, "prerelease": false, "created_at": "2019-11-05T00:06:28Z", "published_at": "2019-11-04T23:59:57Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15955920", "id": 15955920, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1OTU1OTIw", "name": "intellij-elixir-11.3.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5072087, "download_count": 17, "created_at": "2019-11-05T00:10:46Z", "updated_at": "2019-11-05T00:10:55Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.3.0/intellij-elixir-11.3.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.3.0", "body": "# Thanks\r\n* For reporting that Windows was reporting the SDKs were corrupt due to quoting issues\r\n  * Keith Miller ([@keith-miller](https://github.com/keith-miller))\r\n\r\n# Changelog\r\n## v11.3.0\r\n### Enhancements\r\n* [#1600](https://github.com/KronicDeth/intellij-elixir/pull/1600) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Show Parameter Info (\u2318+P/Ctrl+P)\r\n\r\n### Bug Fixes\r\n* [#1607](https://github.com/KronicDeth/intellij-elixir/pull/1607) - [@hoodaly](https://github.com/hoodaly)\r\n  * Fix must specify non-empty 'commandLine' parameter\r\n* [#1608](https://github.com/KronicDeth/intellij-elixir/pull/1608) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `GeneralCommandLine`'s escaping for Windows can't handle the parentheses in a way that both works for the Windows shell and Elixir running the code the shell hands off.  Removing the parentheses leaves runnable code even if it is no longer formatted.  \r\n  \r\n     Fixes \"Unknown Version\" naming for Elixir SDKs and the \"Probably SDK installed in ... is corrupt\" dialog from appearing.\r\n\r\n# README Updates\r\n\r\n### Show Parameters\r\n\r\nThe parameter names for the current call can be shown (\u2318+P/Ctrl+P)\r\n\r\n![Ecto.Schema.cast parameters](https://github.com/KronicDeth/intellij-elixir/blob/v11.3.0/screenshots/features/Show%20Parameters.png?raw=true \"Ecto.Schema.cast parameters\")\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20839044", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20839044/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20839044/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.3.0-pre%2B20191021023818", "id": 20839044, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwODM5MDQ0", "tag_name": "v11.3.0-pre+20191021023818", "target_commitish": "59ce2a074758d05494f4ca87e7d1641813fd78c5", "name": null, "draft": false, "prerelease": true, "created_at": "2019-10-21T02:20:58Z", "published_at": "2019-10-21T02:45:36Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15611335", "id": 15611335, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NjExMzM1", "name": "intellij-elixir-11.3.0-pre+20191021023818.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5018155, "download_count": 17, "created_at": "2019-10-21T02:45:35Z", "updated_at": "2019-10-21T02:45:35Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.3.0-pre%2B20191021023818/intellij-elixir-11.3.0-pre%2B20191021023818.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.3.0-pre+20191021023818", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.3.0-pre+20191021023818", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20838231", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20838231/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20838231/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.3.0-pre%2B20191021010727", "id": 20838231, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwODM4MjMx", "tag_name": "v11.3.0-pre+20191021010727", "target_commitish": "029152383fc3c2445d59746882ed21d6078c6f04", "name": null, "draft": false, "prerelease": true, "created_at": "2019-10-21T00:50:36Z", "published_at": "2019-10-21T01:14:41Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15610431", "id": 15610431, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NjEwNDMx", "name": "intellij-elixir-11.3.0-pre+20191021010727.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5017771, "download_count": 8, "created_at": "2019-10-21T01:14:40Z", "updated_at": "2019-10-21T01:14:40Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.3.0-pre%2B20191021010727/intellij-elixir-11.3.0-pre%2B20191021010727.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.3.0-pre+20191021010727", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.3.0-pre+20191021010727", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20670973", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20670973/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20670973/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.3.0-pre%2B20191014030233", "id": 20670973, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNjcwOTcz", "tag_name": "v11.3.0-pre+20191014030233", "target_commitish": "fd059460910f93d334120073bde9ce5bd41af83c", "name": null, "draft": false, "prerelease": true, "created_at": "2019-10-14T02:45:10Z", "published_at": "2019-10-14T03:09:30Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15461241", "id": 15461241, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NDYxMjQx", "name": "intellij-elixir-11.3.0-pre+20191014030233.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5018038, "download_count": 8, "created_at": "2019-10-14T03:09:29Z", "updated_at": "2019-10-14T03:09:30Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.3.0-pre%2B20191014030233/intellij-elixir-11.3.0-pre%2B20191014030233.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.3.0-pre+20191014030233", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.3.0-pre+20191014030233", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20643857", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20643857/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20643857/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.2.0", "id": 20643857, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNjQzODU3", "tag_name": "v11.2.0", "target_commitish": "3cb60e1491cbef36c9b5f1327542c3bd963f8ff6", "name": "v11.2.0", "draft": false, "prerelease": false, "created_at": "2019-10-11T14:36:28Z", "published_at": "2019-10-11T15:13:00Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15428416", "id": 15428416, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NDI4NDE2", "name": "intellij-elixir-11.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5064799, "download_count": 17, "created_at": "2019-10-11T15:12:36Z", "updated_at": "2019-10-11T15:12:43Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.2.0/intellij-elixir-11.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.2.0", "body": "# Thanks\r\n\r\n* For reporting that `runtime` being typoed as `runtume` in `guardian` was being reported by the mix deps new keyword derector.\r\n  * Masoud Ghorbani ([@msudgh](https://github.com/msudgh))\r\n  * Ray Knight ([@ArrayKnight](https://github.com/ArrayKnight))\r\n  * James Ferguson  ([@JamesFerguson](https://github.com/JamesFerguson))\r\n  * Hammad Ur Rahman ([@hammadurrahman](https://github.com/hammadurrahman))\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * Bloom ([@yaBliznyk](https://github.com/yaBliznyk))\r\n  * Tan Yeong Sheng ([@yeongsheng-tan](https://github.com/yeongsheng-tan))\r\n  * [@philogic](https://github.com/philogic)\r\n  * Steve Wagner ([@ciroque](https://github.com/ciroque))\r\n  * Daniel Honig ([@dhonig](https://github.com/dhonig))\r\n  * MelarDev ([@melardev](https://github.com/melardev))\r\n  * Bonn Ortloff ([@bortloff](https://github.com/bortloff))\r\n\r\n# Changelog\r\n\r\n## v11.2.0\r\n### Enhancements\r\n* [#1592](https://github.com/KronicDeth/intellij-elixir/pull/1592) - [@alex-dukhno](https://github.com/alex-dukhno)\r\n  * Add `ExUnit` `describe` block template.\r\n\r\n### Bug Fixes\r\n* [#1589](https://github.com/KronicDeth/intellij-elixir/pull/1589) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't error on `runtume` in mix deps.  `guardian` is too common of a dependency and too many users have the version with the typo installed.\r\n* [#1569](https://github.com/KronicDeth/intellij-elixir/pull/1569) - [@chitacan](https://github.com/chitacan)\r\n  * Fix IEx Mix Run/Debug Configuration for `asdf` by using absolute path to `mix`.\r\n* [#1595](https://github.com/KronicDeth/intellij-elixir/pull/1595) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add OTP 22 and 23 opcodes to Code BEAM Chunk Viewer\r\n    * `put_tuple/2`\r\n    * `bs_get_tail/3`\r\n    * `bs_start_match3/4`\r\n    * `bs_get_position/3`\r\n    * `bs_set_position/2`\r\n    * `swap/2`"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20642431", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20642431/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20642431/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20191011142204", "id": 20642431, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNjQyNDMx", "tag_name": "v11.1.0-pre+20191011142204", "target_commitish": "dd5d64a4f3512ddbc23e0d29cc651a77644ae537", "name": null, "draft": false, "prerelease": true, "created_at": "2019-10-11T14:04:49Z", "published_at": "2019-10-11T14:28:56Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15427550", "id": 15427550, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NDI3NTUw", "name": "intellij-elixir-11.1.0-pre+20191011142204.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5012720, "download_count": 10, "created_at": "2019-10-11T14:28:55Z", "updated_at": "2019-10-11T14:28:56Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20191011142204/intellij-elixir-11.1.0-pre%2B20191011142204.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20191011142204", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20191011142204", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20642405", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20642405/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20642405/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20191011142133", "id": 20642405, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNjQyNDA1", "tag_name": "v11.1.0-pre+20191011142133", "target_commitish": "2b016cd9df562c4d5d5f44ec836a7dbcdec3885b", "name": null, "draft": false, "prerelease": true, "created_at": "2019-10-11T14:03:33Z", "published_at": "2019-10-11T14:28:12Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15427537", "id": 15427537, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1NDI3NTM3", "name": "intellij-elixir-11.1.0-pre+20191011142133.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5012711, "download_count": 5, "created_at": "2019-10-11T14:28:11Z", "updated_at": "2019-10-11T14:28:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20191011142133/intellij-elixir-11.1.0-pre%2B20191011142133.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20191011142133", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20191011142133", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20311812", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20311812/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20311812/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20190927150919", "id": 20311812, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMzExODEy", "tag_name": "v11.1.0-pre+20190927150919", "target_commitish": "04ff77d1e301dc8548c266f85775aa407a1d375c", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-27T14:50:52Z", "published_at": "2019-09-27T15:16:25Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15168361", "id": 15168361, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MTY4MzYx", "name": "intellij-elixir-11.1.0-pre+20190927150919.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5012048, "download_count": 13, "created_at": "2019-09-27T15:16:24Z", "updated_at": "2019-09-27T15:16:25Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20190927150919/intellij-elixir-11.1.0-pre%2B20190927150919.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20190927150919", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20190927150919", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20308789", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20308789/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20308789/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20190927133443", "id": 20308789, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMzA4Nzg5", "tag_name": "v11.1.0-pre+20190927133443", "target_commitish": "c7f0de16ba9544b60e415dfc269dc0f24122451a", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-27T13:17:48Z", "published_at": "2019-09-27T13:41:35Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15166368", "id": 15166368, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MTY2MzY4", "name": "intellij-elixir-11.1.0-pre+20190927133443.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5011801, "download_count": 9, "created_at": "2019-09-27T13:41:34Z", "updated_at": "2019-09-27T13:41:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20190927133443/intellij-elixir-11.1.0-pre%2B20190927133443.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20190927133443", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20190927133443", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20308763", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20308763/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20308763/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20190927133337", "id": 20308763, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMzA4NzYz", "tag_name": "v11.1.0-pre+20190927133337", "target_commitish": "d74fc021d50f20157a08d024818fc31cddac8373", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-27T13:16:19Z", "published_at": "2019-09-27T13:40:48Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15166363", "id": 15166363, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MTY2MzYz", "name": "intellij-elixir-11.1.0-pre+20190927133337.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5011768, "download_count": 11, "created_at": "2019-09-27T13:40:46Z", "updated_at": "2019-09-27T13:40:47Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20190927133337/intellij-elixir-11.1.0-pre%2B20190927133337.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20190927133337", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20190927133337", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20146116", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20146116/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20146116/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0", "id": 20146116, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMTQ2MTE2", "tag_name": "v11.1.0", "target_commitish": "4e872e29001b5cac68e66f3e49ed81ca36b0ba2f", "name": "v11.1.0", "draft": false, "prerelease": false, "created_at": "2019-09-20T17:29:50Z", "published_at": "2019-09-20T17:56:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15037564", "id": 15037564, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MDM3NTY0", "name": "intellij-elixir-11.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5057505, "download_count": 15, "created_at": "2019-09-20T18:05:14Z", "updated_at": "2019-09-20T18:05:22Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0/intellij-elixir-11.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0", "body": "# Thanks\r\n\r\n* For reporting `ConcurrentModificationException` from Structure View\r\n  * Binyomin Greenes ([@Ben52](https://github.com/Ben52))\r\n  * Sparta Science ([@sparta-developers](https://github.com/sparta-developers))\r\n  * Michael Chen ([@QC15213](https://github.com/QC15213))\r\n  * wenfu.p ([@feng19](https://github.com/feng19))\r\n  * Domenico Visconti ([@visd0m](https://github.com/visd0m))\r\n  * Yordis Prieto ([@yordis](https://github.com/yordis))\r\n  * Yuguang Zhang ([@yuguang](https://github.com/yuguang))\r\n  * John Christopher ([@jgchristopher](https://github.com/jgchristopher))\r\n  * Hoang Tran ([@hoangtranwork](https://github.com/hoangtranwork))\r\n  * Luigi Clemente ([@Gigitsu](https://github.com/Gigitsu))\r\n  * Aaron Myatt ([@aaronmyatt](https://github.com/aaronmyatt))\r\n  * James Mitchell ([@mezz](https://github.com/mezz))\r\n  * Sean Washington ([@seanwash](https://github.com/seanwash))\r\n  * Ross van Zyl ([@rossvz](https://github.com/rossvz))\r\n  * Andrew Aunelle ([@AndroidOatmeal](https://github.com/AndroidOatmeal))\r\n  * Kurt Lenfesty ([@kurtlenfesty](https://github.com/kurtlenfesty))\r\n  * Cesar ([@cesarslzr](https://github.com/cesarslzr))\r\n* For reporting that the typeID could not be read from partial `.beam` files.\r\n  * Manuel M\u00e9ndez ([@charangas](https://github.com/charangas))\r\n  * Zbigniew P\u0119kala ([@zbigniewpekala](https://github.com/zbigniewpekala))\r\n  * Ilya Gorskin ([@Revent](https://github.com/Revent))\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * Kevin Hagel ([@kevinhagel](https://github.com/kevinhagel))\r\n  * Eugene ([@virtual-light](https://github.com/virtual-light))\r\n  * Steve Ops ([@steveops](https://github.com/steveops))\r\n  * [@fahadnaeemkhan](https://github.com/fahadnaeemkhan)\r\n  * Raz ([@RazgrizHsu](https://github.com/RazgrizHsu))\r\n  * Marvin Lee Fimmel ([@Ekranos](https://github.com/Ekranos))\r\n  * [@fahadnaeemkhan](https://github.com/fahadnaeemkhan)\r\n  * Dmitrii Golub ([@Houdini](https://github.com/Houdini))\r\n  * Nick Bauman ([@nickbauman](https://github.com/nickbauman))\r\n  * Eric des Courtis ([@edescourtis](https://github.com/edescourtis))\r\n\r\n# Changelog\r\n\r\n## v11.1.0\r\n### Enhancements\r\n* [#1587](https://github.com/KronicDeth/intellij-elixir/pull/1587) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update gradle plugins\r\n    * `gradle-intellij-plugin` (`org.jetbrains.intellij`) to `0.4.10`\r\n    * `org.jetbrains.kotlin.jvm` to `1.3.50`\r\n    * `de.undercrouch.download` to `4.0.0`\r\n  * Update IDEA version in builds\r\n    * `2019.2` -> `2019.2.2`\r\n\r\n### Bug Fixes\r\n* [#1582](https://github.com/KronicDeth/intellij-elixir/pull/1582) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't log if partial or no header typeID is read.  It happens too often due to `.beam` files being written partially to disk during the build process.  They will be re-indexed when they are complete.\r\n* [#1587](https://github.com/KronicDeth/intellij-elixir/pull/1587) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update gradle intellij plugin to fix `runIde` on newer macOS.\r\n* [#1588](https://github.com/KronicDeth/intellij-elixir/pull/1588) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix `ConcurrentModificationException` in Structure View\r\n\r\n    Java 9 fixed a bug (https://bugs.openjdk.java.net/browse/JDK-8071667) in `HashMap` where `computeIfAbsent` did not check for concurrent modifications, and it turns out that `TreeElementList` was using concurrent modifications, so it was now broke.\r\n\r\n    Fixed by use `get` or `put` if it is absent, so that `putNew` can ensure that the `CallDefinition` is in the `TreeElementList` before it is added to the `MutableList<TreeElement>`, which was the original reason why there was a `put` inside of `computeIfAbsent`, which would have `put` when the function returned anyway.\r\n\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20148375", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20148375/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20148375/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.1.0-pre%2B20190920192822", "id": 20148375, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMTQ4Mzc1", "tag_name": "v11.1.0-pre+20190920192822", "target_commitish": "a4fade4c00f12b172b231be3d93641caa47dd3b0", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-20T19:10:19Z", "published_at": "2019-09-20T19:35:02Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15038982", "id": 15038982, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MDM4OTgy", "name": "intellij-elixir-11.1.0-pre+20190920192822.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5011757, "download_count": 12, "created_at": "2019-09-20T19:35:00Z", "updated_at": "2019-09-20T19:35:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.1.0-pre%2B20190920192822/intellij-elixir-11.1.0-pre%2B20190920192822.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.1.0-pre+20190920192822", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.1.0-pre+20190920192822", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20145833", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20145833/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20145833/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1-pre%2B20190920173657", "id": 20145833, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMTQ1ODMz", "tag_name": "v11.0.1-pre+20190920173657", "target_commitish": "b2b3013b939393767a3258afaafb34522829c20b", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-20T17:19:36Z", "published_at": "2019-09-20T17:44:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15037302", "id": 15037302, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MDM3MzAy", "name": "intellij-elixir-11.0.1-pre+20190920173657.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5011087, "download_count": 9, "created_at": "2019-09-20T17:44:36Z", "updated_at": "2019-09-20T17:44:37Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1-pre%2B20190920173657/intellij-elixir-11.0.1-pre%2B20190920173657.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1-pre+20190920173657", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1-pre+20190920173657", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20140560", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/20140560/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/20140560/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1-pre%2B20190920141227", "id": 20140560, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwMTQwNTYw", "tag_name": "v11.0.1-pre+20190920141227", "target_commitish": "1a2570301f339774d30f6c00a0342ae5bb3b8c99", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-20T13:52:40Z", "published_at": "2019-09-20T14:19:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/15033865", "id": 15033865, "node_id": "MDEyOlJlbGVhc2VBc3NldDE1MDMzODY1", "name": "intellij-elixir-11.0.1-pre+20190920141227.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5011389, "download_count": 9, "created_at": "2019-09-20T14:19:37Z", "updated_at": "2019-09-20T14:19:37Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1-pre%2B20190920141227/intellij-elixir-11.0.1-pre%2B20190920141227.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1-pre+20190920141227", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1-pre+20190920141227", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983621", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983621/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19983621/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1-pre%2B20190913195638", "id": 19983621, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5OTgzNjIx", "tag_name": "v11.0.1-pre+20190913195638", "target_commitish": "c03d9245730382aff32829a46b5a3a8860910c5c", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-13T19:39:17Z", "published_at": "2019-09-13T20:03:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14914122", "id": 14914122, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0OTE0MTIy", "name": "intellij-elixir-11.0.1-pre+20190913195638.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4998098, "download_count": 12, "created_at": "2019-09-13T20:03:10Z", "updated_at": "2019-09-13T20:03:10Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1-pre%2B20190913195638/intellij-elixir-11.0.1-pre%2B20190913195638.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1-pre+20190913195638", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1-pre+20190913195638", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983560", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983560/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19983560/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1-pre%2B20190913195339", "id": 19983560, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5OTgzNTYw", "tag_name": "v11.0.1-pre+20190913195339", "target_commitish": "14bc4589b846455fbe1054b8462351fe3aefb998", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-13T19:36:13Z", "published_at": "2019-09-13T20:00:51Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14914094", "id": 14914094, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0OTE0MDk0", "name": "intellij-elixir-11.0.1-pre+20190913195339.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4998111, "download_count": 9, "created_at": "2019-09-13T20:00:50Z", "updated_at": "2019-09-13T20:00:50Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1-pre%2B20190913195339/intellij-elixir-11.0.1-pre%2B20190913195339.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1-pre+20190913195339", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1-pre+20190913195339", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983353", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19983353/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19983353/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1-pre%2B20190913194527", "id": 19983353, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5OTgzMzUz", "tag_name": "v11.0.1-pre+20190913194527", "target_commitish": "9ef0e481ba4ab5f9e2220ceb62f54203f849ebf0", "name": null, "draft": false, "prerelease": true, "created_at": "2019-09-13T19:27:49Z", "published_at": "2019-09-13T19:52:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14913978", "id": 14913978, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0OTEzOTc4", "name": "intellij-elixir-11.0.1-pre+20190913194527.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4998104, "download_count": 10, "created_at": "2019-09-13T19:52:19Z", "updated_at": "2019-09-13T19:52:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1-pre%2B20190913194527/intellij-elixir-11.0.1-pre%2B20190913194527.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1-pre+20190913194527", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1-pre+20190913194527", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19339221", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19339221/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19339221/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.1", "id": 19339221, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5MzM5MjIx", "tag_name": "v11.0.1", "target_commitish": "b80bba9ae0a576770f992b97800ea14d937f7547", "name": "v11.0.1", "draft": false, "prerelease": true, "created_at": "2019-08-16T13:43:29Z", "published_at": "2019-08-16T13:49:40Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14414478", "id": 14414478, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NDE0NDc4", "name": "intellij-elixir-11.0.1-pre+20190816135815.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4998049, "download_count": 9, "created_at": "2019-08-16T14:04:50Z", "updated_at": "2019-08-16T14:04:51Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1/intellij-elixir-11.0.1-pre%2B20190816135815.zip"}, {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14414137", "id": 14414137, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NDE0MTM3", "name": "intellij-elixir-11.0.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5040579, "download_count": 25, "created_at": "2019-08-16T13:49:06Z", "updated_at": "2019-08-16T13:49:15Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.1/intellij-elixir-11.0.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.1", "body": "# Thanks\r\n\r\n* For reporting that IntelliJ 2019.2 compatibility changes in v11.0.0 broke Rubymine compatibility\r\n  * Olivier Pichon ([@olivierpichon](https://github.com/olivierpichon))\r\n\r\n# Changelog\r\n## v11.0.1\r\n### Bug Fixes\r\n* [#1548](https://github.com/KronicDeth/intellij-elixir/pull/1545) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * The java plugin dependency needs to be declared so that it shows up for compiling the JPS builder system and the project importer in IntelliJ and Android Studio, but it needs to be optional, so that the plugin is still compatible with Rubymine and the other small IDEs."}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19323195", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19323195/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19323195/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.0-pre%2B20190815200934", "id": 19323195, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5MzIzMTk1", "tag_name": "v11.0.0-pre+20190815200934", "target_commitish": "8edcd845ff23be45405a49445b0e5e90a66a80eb", "name": null, "draft": false, "prerelease": true, "created_at": "2019-08-15T19:49:36Z", "published_at": "2019-08-15T20:16:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14401953", "id": 14401953, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NDAxOTUz", "name": "intellij-elixir-11.0.0-pre+20190815200934.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4997771, "download_count": 9, "created_at": "2019-08-15T20:16:37Z", "updated_at": "2019-08-15T20:16:37Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.0-pre%2B20190815200934/intellij-elixir-11.0.0-pre%2B20190815200934.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.0-pre+20190815200934", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.0-pre+20190815200934", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19324532", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/19324532/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/19324532/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v11.0.0", "id": 19324532, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5MzI0NTMy", "tag_name": "v11.0.0", "target_commitish": "d0531f4b13d49786da25e6b76e17d7d201299e1e", "name": "v11.0.0", "draft": false, "prerelease": true, "created_at": "2019-08-15T21:12:46Z", "published_at": "2019-08-15T21:21:43Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14402961", "id": 14402961, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NDAyOTYx", "name": "intellij-elixir-11.0.0-pre+20190815212613.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4997860, "download_count": 7, "created_at": "2019-08-15T21:32:53Z", "updated_at": "2019-08-15T21:32:54Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.0/intellij-elixir-11.0.0-pre%2B20190815212613.zip"}, {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/14402782", "id": 14402782, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NDAyNzgy", "name": "intellij-elixir-11.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5029246, "download_count": 13, "created_at": "2019-08-15T21:21:32Z", "updated_at": "2019-08-15T21:21:40Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v11.0.0/intellij-elixir-11.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v11.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v11.0.0", "body": "# Thanks\r\n\r\n* For reporting how totally breaking the breaking changes in 2019.2 were\r\n  * Jinlong Zhao ([@vwlio](https://github.com/vwlio))\r\n  * Olivier Pichon ([@olivierpichon](https://github.com/olivierpichon))\r\n\r\n# Changelog\r\n\r\n## v11.0.0\r\n### Enhancements\r\n* [#1545](https://github.com/KronicDeth/intellij-elixir/pull/1545) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Simplifications due to only supporting IntelliJ 2019.2\r\n    * Don't use reflection for error report Submitter\r\n    * Don't use deprecated WeakHashMap. It was needed for backwards compatibility, but since this build is for 2019.2 only, no compatibility is necessary and it clears up the long warnings from the logs for end users.\r\n    *  Remove reflection from OutputToGeneralTestEventsConverters.  Only 2019.2 is now supported, so no need for complicated backwards compatibility.\r\n    * Only support IntelliJ 2019.2 in Travis CI\r\n  * Remove Elixir 1.5 and 1.6 builds as they are both > 1 year since the last release approximately.\r\n  \r\n### Bug Fixes\r\n* [#1545](https://github.com/KronicDeth/intellij-elixir/pull/1545) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * IntelliJ 2019.2 compatibility\r\n     * Explicitly depend on java plugin.  2019.2 extracted the Java functionality to a plugin (as outlined [here](https://blog.jetbrains.com/platform/2019/06/java-functionality-extracted-as-a-plugin/)), which includes the JPS builder used for Project Build functionality.\r\n    *  Remove project converterts.  Project converters are broken in 2019.2 because the `DialogWrapper` they try to launch isn't being launched in the Event Dispatch Thread (EDT) (https://youtrack.jetbrains.com/issue/IDEA-218071).\r\n  \r\n       As this is bug in code wholey controlled by upstream, the only option is to remove the project converters.  The work-around is for users to re-import projects when a project layout update is necessary.\r\n    *  Fix nullability of `override` arguments in `ChooseByNameModel`\r\n    *  Don't use dependency injection for OpenProcessor builder.  JetBrains has removed dependency injection for Extensions in 2019.2.\r\n    * Don't pass a null name ot findSdk\r\n\r\n### Incompatible Changes\r\n* [#1545](https://github.com/KronicDeth/intellij-elixir/pull/1545) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Changes needed for 2019.2 compatibility make this build incompatible with earlier releases.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17616643", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17616643/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17616643/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.6.0", "id": 17616643, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NjE2NjQz", "tag_name": "v10.6.0", "target_commitish": "f9dd6b5bad850bf61184941555cc6591c2ef2ce6", "name": "v10.6.0", "draft": false, "prerelease": false, "created_at": "2019-05-28T00:57:08Z", "published_at": "2019-05-28T01:09:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12896406", "id": 12896406, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyODk2NDA2", "name": "intellij-elixir-10.6.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5090397, "download_count": 39, "created_at": "2019-05-28T01:09:13Z", "updated_at": "2019-05-28T01:09:21Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.6.0/intellij-elixir-10.6.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.6.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.6.0", "body": "# Thanks\r\n\r\n* For reporting that Evaluate was broken in the Debugger for Elixir 1.8 because the private APIs changed.\r\n  * Michael Chilton ([@mc962](https://github.com/mc962))\r\n  * Francesco Lo Franco ([@kekko1212](https://github.com/kekko1212))\r\n  * Micha\u0142 \u0141\u0119picki ([@michallepicki](https://github.com/michallepicki))\r\n* For reporting that the SDK home directory suggestions did not cover Linux Mint.\r\n  * Andy Beak ([@andybeak](https://github.com/andybeak))\r\n\r\n# Changelog\r\n\r\n## v10.6.0\r\n\r\n### Enhancements\r\n* [#1492](https://github.com/KronicDeth/intellij-elixir/pull/1492) - Add Linux Mint Erlang and Elixir home paths to SDK home path suggestions.  Linux Mint installs to `/usr/lib/erlang` and `/usr/lib/elixir` instead of `/usr/local/lib/erlang` and `/usr/local/lib/elixir`. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1491](https://github.com/KronicDeth/intellij-elixir/pull/1491) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Elixir 1.8 made `:elixir.quoted_to_erl/3` private, so in Elixir 1.8+, the debugger needs to inline the private version to maintain < 1.8 and >= 1.8 compatibility.\r\n  * Reformat debugger for Elixir 1.8\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17590669", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17590669/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17590669/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.1-pre%2B20190526023654", "id": 17590669, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NTkwNjY5", "tag_name": "v10.5.1-pre+20190526023654", "target_commitish": "e26cd9c914ed2b5a75314f421b6338ba7edbd717", "name": null, "draft": false, "prerelease": true, "created_at": "2019-05-26T02:10:17Z", "published_at": "2019-05-26T02:42:17Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12871829", "id": 12871829, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyODcxODI5", "name": "intellij-elixir-10.5.1-pre+20190526023654.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5038120, "download_count": 13, "created_at": "2019-05-26T02:42:16Z", "updated_at": "2019-05-26T02:42:17Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.1-pre%2B20190526023654/intellij-elixir-10.5.1-pre%2B20190526023654.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.1-pre+20190526023654", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.1-pre+20190526023654", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17520171", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17520171/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17520171/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.1", "id": 17520171, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NTIwMTcx", "tag_name": "v10.5.1", "target_commitish": "08a0f244f4282ee2a460727ed1b37c50d5e8f8c9", "name": "v10.5.1", "draft": false, "prerelease": true, "created_at": "2019-05-22T15:31:03Z", "published_at": "2019-05-22T15:41:53Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12816022", "id": 12816022, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyODE2MDIy", "name": "intellij-elixir-10.5.1-pre+20190522160802.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5037894, "download_count": 9, "created_at": "2019-05-22T16:13:38Z", "updated_at": "2019-05-22T16:13:38Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.1/intellij-elixir-10.5.1-pre%2B20190522160802.zip"}, {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12815533", "id": 12815533, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyODE1NTMz", "name": "intellij-elixir-10.5.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5065676, "download_count": 8, "created_at": "2019-05-22T15:41:27Z", "updated_at": "2019-05-22T15:41:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.1/intellij-elixir-10.5.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.1", "body": "# Thanks\r\n\r\n* For reporting `StackOverflowError`s for `use` calls that that refer back to the same Module.\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * [@crunchygregg](https://github.com/crunchygregg)\r\n  * [@sparta-developers](https://github.com/sparta-developers)\r\n  * Aur\u00e9lien B. ([@a12e](https://github.com/a12e))\r\n  * Neftaly Luis ([@neftalyluis](https://github.com/neftalyluis))\r\n\r\n# Changelog\r\n\r\n## v10.5.1\r\n\r\n### Bug Fixes\r\n* [#1483](https://github.com/KronicDeth/intellij-elixir/pull/1483) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Numerous users have reported that annotation can encounter a `StackOverflowError`.  [A reproduction case](https://github.com/KronicDeth/intellij-elixir/issues/1475#issuecomment-491616192) shows that they are called by Phoenix `Web` modules where one function containing `quote` block `use`s the same module again, such as an `admin_view` depending on the base `view` through `use App.Web, :view`.  When the `use App.Web, :view` is resolving, the `defmacro __using__` is re-entered as is the `admin_view` because there was no tracking of already visited `PsiElement`s.  The fix is to track the visited elements and not re-enter the visited elements so that `admin_view` is skipped and the other call definition clauses can be checked to find `view`.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17472904", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17472904/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17472904/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.1-pre%2B20190520204331", "id": 17472904, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NDcyOTA0", "tag_name": "v10.5.1-pre+20190520204331", "target_commitish": "ba56ce72c58686ec8e9e32fa0015c77a59db05e5", "name": null, "draft": false, "prerelease": true, "created_at": "2019-05-20T20:12:09Z", "published_at": "2019-05-20T20:48:57Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12781112", "id": 12781112, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyNzgxMTEy", "name": "intellij-elixir-10.5.1-pre+20190520204331.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5037853, "download_count": 13, "created_at": "2019-05-20T20:48:56Z", "updated_at": "2019-05-20T20:48:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.1-pre%2B20190520204331/intellij-elixir-10.5.1-pre%2B20190520204331.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.1-pre+20190520204331", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.1-pre+20190520204331", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17030338", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17030338/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17030338/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0", "id": 17030338, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3MDMwMzM4", "tag_name": "v10.5.0", "target_commitish": "69ffa6f1858cfafb3e9a5ae4b8dd2006e59ed01e", "name": "v10.5.0", "draft": false, "prerelease": false, "created_at": "2019-04-29T02:22:30Z", "published_at": "2019-04-29T02:50:54Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12284957", "id": 12284957, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMjg0OTU3", "name": "intellij-elixir-10.5.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5061876, "download_count": 17, "created_at": "2019-04-29T02:28:45Z", "updated_at": "2019-04-29T02:28:53Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0/intellij-elixir-10.5.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0", "body": "# Thanks\r\n\r\n* For reporting [Elixir Modules in small SDKs](https://github.com/KronicDeth/intellij-elixir/issues/1378)\r\n  * [@JerryBels](https://github.com/JerryBels)\r\n  * [@Flaires](https://github.com/Flaires)\r\n  * Werner Laude ([@wernerlaude](https://github.com/wernerlaude))\r\n  * Don Lettrich ([@drl123](https://github.com/drl123))\r\n  * Mike Kaisanov ([@mike-kasianov](https://github.com/mike-kasianov))\r\n  * (@storm255)[https://github.com/storm255)\r\n  * Ross van Zyl ([@rossvz](https://github.com/rossvz))\r\n* For reporting the the suspect `readNameSet` needed to be greater than 10\r\n  * [@mg98](https://github.com/mg98)  \r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * Kanmaniselvan Murugesan ([@kanmaniselvan](https://github.com/kanmaniselvan))\r\n* For reporting that [`kiex` had confusing directory structure which made it hard to select the correct SDK Home Path](https://github.com/KronicDeth/intellij-elixir/issues/1441).\r\n  * Svilen Gospodinov ([@svileng](https://github.com/svileng))\r\n* For reporting that the `ESpec` template was missing.\r\n  * Alexandre Cuva ([@cuvaalex](https://github.com/cuvaalex))\r\n* For reporting that `targets` is used in `mix` deps.\r\n  * Eugene ([@JohnBat26](https://github.com/JohnBat26))\r\n* For reporting that `organization` is used in `mix` deps.\r\n  * Shawn Campbell ([@jaegerpicker](https://github.com/jaegerpicker))\r\n* For reporting a missing `readAction` around `Document`\r\n  * Eugene ([@JohnBat26](https://github.com/JohnBat26))\r\n* For reporting caching using different elements in closure.\r\n  * Will Shown ([@thure](https://github.com/thure))\r\n  * Youssef Habri ([@youssefhabri](https://github.com/youssefhabri))\r\n* For reporting that name-only `rebar3` deps were not supported.\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n\r\n# Changelog\r\n\r\n## v10.5.0\r\n\r\n### Enhancements\r\n* [#1445](https://github.com/KronicDeth/intellij-elixir/pull/1445) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Replace comparator with Comparator.reverseOrder()\r\n  * The correct home path for `kiex` is `~/.kiex/elixirs/elixir-VERSION/lib/elixir` as that contains the true `lib` and `bin` directory, but users may select other directories by mistake, so doing the following adjustments:\r\n    * Adjust `bin` home path to `lib/elixir`.\r\n    * Adjust `elixirs/elixir-VERSION` home path to `elixirs/elixir-VERSION/lib/elixir`.\r\n* [#1462](https://github.com/KronicDeth/intellij-elixir/pull/1462) - Use reflections to allow saving settings when creating the projects before in 2018.3 and 2019.1 even though the API changed. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1443](https://github.com/KronicDeth/intellij-elixir/pull/1443) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * In RubyMine, attach OTP applications as separate projects with Elixir facets instead of directly creating `ELIXIR_MODULE` modules in `DirectoryConfigurator`.  This matches the manual steps of opening the OTP apps as separate directories after opening the root of the project.\r\n    * Mark directories when adding facet\r\n    * Sync libraries when adding facet or attaching to root project.  Ensures External Libraries show up for all OTP applications.\r\n  * Convert Small IDE projects with `ELIXIR_MODULE`s:\r\n     1. Remove `ELIXIR_MODULE` `*.iml` files\r\n     2. Remove `ELIXIR_MODULE` entries root project's `modules.xml` file.\r\n     3. [Lack of modules in project in `doOpenProject`](https://github.com/JetBrains/intellij-community/blob/1f49fc455d01f4b887463853db48e814f6700fb3/platform/platform-impl/src/com/intellij/platform/PlatformProjectOpenProcessor.java#L186-L188) will trigger `DirectoryProjectConfigurator`s to be [run](https://github.com/JetBrains/intellij-community/blob/1f49fc455d01f4b887463853db48e814f6700fb3/platform/platform-impl/src/com/intellij/platform/PlatformProjectOpenProcessor.java#L206), which will setup the project and run `DirectoryConfigurator` to attach the `apps` OTP apps and Elixir facets.\r\n        * Only support automatic attaching multiple OTP apps as separate projects in Rubymine.  In IntelliJ normal support for multiple Modules in one Project still works.\r\n* [#1444](https://github.com/KronicDeth/intellij-elixir/pull/1444) - Increase suspect `nameSet` size to `15` to support [`geo`](https://hex.pm/packages/geo).  `geo` has [13 `String.Chars` implementations](https://hexdocs.pm/geo/3.1.0/api-reference.html). - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1445](https://github.com/KronicDeth/intellij-elixir/pull/1445) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove obsolete `SdkType`.  I keep confusing it with its replacement `org.elixir_lang.sdk.elixir.Type`!\r\n  * Check that HomePath has `ebin` paths when validation.  Prevents selecting false HomePaths for `kiex`.\r\n* [#1446](https://github.com/KronicDeth/intellij-elixir/pull/1446) - Adding missing ESpec template.  When reviewing #1410 I missed that the template wasn't in `resources`. \ud83e\udd26\u200d\u2642\ufe0f - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1447](https://github.com/KronicDeth/intellij-elixir/pull/1447) - Ignore `targets` when calculating `Dep` path. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1448](https://github.com/KronicDeth/intellij-elixir/pull/1448) - Ignore `organization` when calculating `Dep` path. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1449](https://github.com/KronicDeth/intellij-elixir/pull/1449) - Get view provider document in read action. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1450](https://github.com/KronicDeth/intellij-elixir/pull/1450) - Support `rebar.config` deps that are name only. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1456](https://github.com/KronicDeth/intellij-elixir/pull/1456) - Always use `containingFile` for `QualifiableAlias` `maxScope` for `getReference`.  Prevents cache capturing `maxScope`, which can vary based on invocation. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1462](https://github.com/KronicDeth/intellij-elixir/pull/1462) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Create new project before attaching it in Small IDEs.\r\n    When attaching a directory to a project during startup, saving is disallowed, so the attached directory only has a `workspace.xml` in its `.idea` when the attach is attempted.  Attaching requires the `.idea/*.iml` Module file, so the attaching fails, saying the directory is an unsupported format.\r\n\r\n    Experimentation showed that manually attaching the directory also did not work, but opening the directory in a separate window, then opening and attaching it again would make the directory have the full project files.  To mimic this manual process:\r\n\r\n    1. The internals of `doOpenProject` are copied\r\n    2. A save of the project files is forced, bypassing the normal \"startup\" save blocker\r\n    3. The project is attached to the root project.\r\n\r\n    Tested to work when upgrading from 10.4.0 to 10.5.0-pre in Rubymine when no project was already open.\r\n  *  Check if project can be attached instead of if RubyMine\r\n     Although GoLand supports attaching projects, it doesn't work for non-Go projects, so it is also excluded.  How the support appears in each non-IntelliJ IDEA is shown below:\r\n\r\n     | IDE            | Works? |                                                                                                                                                                                                                                                                                                                                                                    |\r\n     |:---------------|:-------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n     | Android Studio | YES    | Android Studio is built on top of IntelliJ, so it has full multi-Module support.  It is not Small IDE.                                                                                                                                                                                                                                                             |\r\n     | CLion          | NO     | No Attach to Project support to multiple module support.                                                                                                                                                                                                                                                                                                           |\r\n     | DataGrip       | No     | DataGrip doesn't have a Project View and doesn't support Attach to Project.  You can still run tests if you directly open the file.                                                                                                                                                                                                                                |\r\n     | GoLand         | NO     | Modules show up, but independent projects are not attached as in other Small IDEs, so disabled.  In general, the Go settings, like Test Runners always win, so it is recommended to not use GoLand at all for Elixir development.                                                                                                                                  |\r\n     | PHPStorm       | YES    | The projects are listed in Directories.  The Languages & Frameworks > Elixir shows all 3 projects.  Right-clicking on the marked Test directory will not show the Elixir Run Configuration, Python ones win, but subdirectories and `*_test.exs` will show up in the context menu.                                                                                 |\r\n     | PyCharm        | YES    | The root project is listed in Project.  `app/*` projects are listed listed as Project Dependencies of the root Project.  The Languages & Frameworks > Elixir shows all 3 projects.  Right-clicking on the marked Test directory will not show the Elixir Run Configuration, Python ones win, but subdirectories and `*_test.exs` will show up in the context menu. |\r\n     | Rider          | No     | Solution system is separate from Project system.                                                                                                                                                                                                                                                                                                                   |\r\n     | Rubymine       | YES    | The projects are listed in Project Structure. The Languages & Frameworks > Elixir shows all 3 projects.  Right-clicking on the marked Test directory will not show the Elixir Run Configuration, Python ones win, but subdirectories and `*_test.exs` will show up in the context menu.                                                                            |\r\n     | WebStorm       | NO     | No Attach to Project support or multiple module support.                                                                                                                                                                                                                                                                                                           |\r\n  *  Don't count Android Studio as a Small IDE.   It includes Project Structure menu with multiple-language, multiple-Module per Project support from IntelliJ.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17029935", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17029935/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17029935/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190429012348", "id": 17029935, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3MDI5OTM1", "tag_name": "v10.5.0-pre+20190429012348", "target_commitish": "ca23ceb2bc2318101c5e10514e902f6ae2cef802", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-29T00:44:18Z", "published_at": "2019-04-29T01:29:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12284309", "id": 12284309, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMjg0MzA5", "name": "intellij-elixir-10.5.0-pre+20190429012348.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5034141, "download_count": 12, "created_at": "2019-04-29T01:29:20Z", "updated_at": "2019-04-29T01:29:21Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190429012348/intellij-elixir-10.5.0-pre%2B20190429012348.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190429012348", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190429012348", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17029824", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/17029824/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/17029824/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190429010519", "id": 17029824, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3MDI5ODI0", "tag_name": "v10.5.0-pre+20190429010519", "target_commitish": "6c177364b2556fd77a3042ebc68e26fe73c168cc", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-29T00:31:24Z", "published_at": "2019-04-29T01:14:27Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12284167", "id": 12284167, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMjg0MTY3", "name": "intellij-elixir-10.5.0-pre+20190429010519.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5034146, "download_count": 12, "created_at": "2019-04-29T01:14:26Z", "updated_at": "2019-04-29T01:14:27Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190429010519/intellij-elixir-10.5.0-pre%2B20190429010519.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190429010519", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190429010519", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16887014", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16887014/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16887014/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190421140049", "id": 16887014, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2ODg3MDE0", "tag_name": "v10.5.0-pre+20190421140049", "target_commitish": "595935574d47043ba217470927d677a4f1b126dd", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-21T13:39:35Z", "published_at": "2019-04-21T14:04:57Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12167128", "id": 12167128, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMTY3MTI4", "name": "intellij-elixir-10.5.0-pre+20190421140049.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5037853, "download_count": 16, "created_at": "2019-04-21T14:04:56Z", "updated_at": "2019-04-21T14:04:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190421140049/intellij-elixir-10.5.0-pre%2B20190421140049.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190421140049", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190421140049", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16887005", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16887005/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16887005/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190421140021", "id": 16887005, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2ODg3MDA1", "tag_name": "v10.5.0-pre+20190421140021", "target_commitish": "438d6fd2bfa8caadeba5758e4fd57953673aa7ec", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-21T13:33:19Z", "published_at": "2019-04-21T14:04:13Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12167114", "id": 12167114, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMTY3MTE0", "name": "intellij-elixir-10.5.0-pre+20190421140021.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5037830, "download_count": 12, "created_at": "2019-04-21T14:04:12Z", "updated_at": "2019-04-21T14:04:12Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190421140021/intellij-elixir-10.5.0-pre%2B20190421140021.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190421140021", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190421140021", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16875004", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16875004/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16875004/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190419202228", "id": 16875004, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2ODc1MDA0", "tag_name": "v10.5.0-pre+20190419202228", "target_commitish": "aa0b00e8c3beb4d1cdab80ff70e0b67ae055d899", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-19T20:03:49Z", "published_at": "2019-04-19T20:26:26Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12152763", "id": 12152763, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMTUyNzYz", "name": "intellij-elixir-10.5.0-pre+20190419202228.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5038607, "download_count": 14, "created_at": "2019-04-19T20:26:25Z", "updated_at": "2019-04-19T20:26:25Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190419202228/intellij-elixir-10.5.0-pre%2B20190419202228.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190419202228", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190419202228", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16754530", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16754530/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16754530/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190415014140", "id": 16754530, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzU0NTMw", "tag_name": "v10.5.0-pre+20190415014140", "target_commitish": "ef8aaed9eb975357db1fd898bf99a8a149230ffe", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-15T01:25:38Z", "published_at": "2019-04-15T01:45:46Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12064660", "id": 12064660, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDY0NjYw", "name": "intellij-elixir-10.5.0-pre+20190415014140.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5038831, "download_count": 14, "created_at": "2019-04-15T01:45:45Z", "updated_at": "2019-04-15T01:45:46Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190415014140/intellij-elixir-10.5.0-pre%2B20190415014140.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190415014140", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190415014140", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751805", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751805/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16751805/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190414182350", "id": 16751805, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzUxODA1", "tag_name": "v10.5.0-pre+20190414182350", "target_commitish": "5c9b261b3c558134909e28c8270c51c158852ec4", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-14T18:00:47Z", "published_at": "2019-04-14T18:28:02Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12062220", "id": 12062220, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDYyMjIw", "name": "intellij-elixir-10.5.0-pre+20190414182350.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5038261, "download_count": 11, "created_at": "2019-04-14T18:28:01Z", "updated_at": "2019-04-14T18:28:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190414182350/intellij-elixir-10.5.0-pre%2B20190414182350.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190414182350", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190414182350", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751549", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751549/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16751549/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190414175149", "id": 16751549, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzUxNTQ5", "tag_name": "v10.5.0-pre+20190414175149", "target_commitish": "c044323099cd70c48bd1badadfd8961d15a5466c", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-14T17:30:32Z", "published_at": "2019-04-14T17:56:05Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12062028", "id": 12062028, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDYyMDI4", "name": "intellij-elixir-10.5.0-pre+20190414175149.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5036798, "download_count": 13, "created_at": "2019-04-14T17:56:04Z", "updated_at": "2019-04-14T17:56:05Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190414175149/intellij-elixir-10.5.0-pre%2B20190414175149.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190414175149", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190414175149", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751209", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16751209/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16751209/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190414170343", "id": 16751209, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzUxMjA5", "tag_name": "v10.5.0-pre+20190414170343", "target_commitish": "d1964bf4769e80b745becaca4a12cbd0bb85aaef", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-14T16:47:44Z", "published_at": "2019-04-14T17:07:41Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12061737", "id": 12061737, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDYxNzM3", "name": "intellij-elixir-10.5.0-pre+20190414170343.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5036964, "download_count": 11, "created_at": "2019-04-14T17:07:40Z", "updated_at": "2019-04-14T17:07:41Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190414170343/intellij-elixir-10.5.0-pre%2B20190414170343.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190414170343", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190414170343", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16750816", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16750816/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16750816/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190414161107", "id": 16750816, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzUwODE2", "tag_name": "v10.5.0-pre+20190414161107", "target_commitish": "b6231d42265d55b714f404f488cb9220d60bcc3e", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-14T15:53:49Z", "published_at": "2019-04-14T16:15:15Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12061353", "id": 12061353, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDYxMzUz", "name": "intellij-elixir-10.5.0-pre+20190414161107.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5036886, "download_count": 11, "created_at": "2019-04-14T16:15:13Z", "updated_at": "2019-04-14T16:15:14Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190414161107/intellij-elixir-10.5.0-pre%2B20190414161107.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190414161107", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190414161107", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16745539", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16745539/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16745539/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.5.0-pre%2B20190413211141", "id": 16745539, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzQ1NTM5", "tag_name": "v10.5.0-pre+20190413211141", "target_commitish": "e90c96919116656b2c58cf07ca2cd7d6a8e6a052", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-13T20:55:17Z", "published_at": "2019-04-13T21:15:39Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12051735", "id": 12051735, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDUxNzM1", "name": "intellij-elixir-10.5.0-pre+20190413211141.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5036385, "download_count": 12, "created_at": "2019-04-13T21:15:38Z", "updated_at": "2019-04-13T21:15:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.5.0-pre%2B20190413211141/intellij-elixir-10.5.0-pre%2B20190413211141.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.5.0-pre+20190413211141", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.5.0-pre+20190413211141", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16739635", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16739635/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16739635/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.1-pre%2B20190413020326", "id": 16739635, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzM5NjM1", "tag_name": "v10.4.1-pre+20190413020326", "target_commitish": "d0fde155521fea8f39aaa86a70985b6d6d7f6096", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-13T01:47:30Z", "published_at": "2019-04-13T02:07:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12044208", "id": 12044208, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDQ0MjA4", "name": "intellij-elixir-10.4.1-pre+20190413020326.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5039040, "download_count": 13, "created_at": "2019-04-13T02:07:44Z", "updated_at": "2019-04-13T02:07:44Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.1-pre%2B20190413020326/intellij-elixir-10.4.1-pre%2B20190413020326.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.1-pre+20190413020326", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.1-pre+20190413020326", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16739512", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16739512/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16739512/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.1-pre%2B20190413014801", "id": 16739512, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzM5NTEy", "tag_name": "v10.4.1-pre+20190413014801", "target_commitish": "df23d3c9c160570824e2ebf9ce87cad8a805a281", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-13T01:32:39Z", "published_at": "2019-04-13T01:52:27Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12043650", "id": 12043650, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDQzNjUw", "name": "intellij-elixir-10.4.1-pre+20190413014801.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5037856, "download_count": 13, "created_at": "2019-04-13T01:52:26Z", "updated_at": "2019-04-13T01:52:26Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.1-pre%2B20190413014801/intellij-elixir-10.4.1-pre%2B20190413014801.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.1-pre+20190413014801", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.1-pre+20190413014801", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16736900", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16736900/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16736900/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.1-pre%2B20190412205800", "id": 16736900, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2NzM2OTAw", "tag_name": "v10.4.1-pre+20190412205800", "target_commitish": "8b2e1883c7396573f182eb9a036146b345661edb", "name": null, "draft": false, "prerelease": true, "created_at": "2019-04-12T20:42:05Z", "published_at": "2019-04-12T21:02:06Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/12040640", "id": 12040640, "node_id": "MDEyOlJlbGVhc2VBc3NldDEyMDQwNjQw", "name": "intellij-elixir-10.4.1-pre+20190412205800.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5038122, "download_count": 13, "created_at": "2019-04-12T21:02:05Z", "updated_at": "2019-04-12T21:02:05Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.1-pre%2B20190412205800/intellij-elixir-10.4.1-pre%2B20190412205800.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.1-pre+20190412205800", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.1-pre+20190412205800", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16310052", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16310052/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16310052/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0", "id": 16310052, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MzEwMDUy", "tag_name": "v10.4.0", "target_commitish": "master", "name": "v10.4.0", "draft": false, "prerelease": false, "created_at": "2019-03-23T17:46:03Z", "published_at": "2019-03-24T14:42:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11702022", "id": 11702022, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNzAyMDIy", "name": "intellij-elixir-10.4.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5023146, "download_count": 20, "created_at": "2019-03-24T14:42:14Z", "updated_at": "2019-03-24T14:42:27Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0/intellij-elixir-10.4.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0", "body": "# Thanks\r\n\r\n* For requesting `espec` support\r\n  * Don Lettrich ([@drl123](https://github.com/drl123))\r\n* For reporting missing `runReadAction`\r\n  * Jim James ([@jimjames99](https://github.com/jimjames99))\r\n\r\n# Changelog\r\n\r\n## v10.4.0\r\n\r\n### Enhancements\r\n* [#1410](https://github.com/KronicDeth/intellij-elixir/pull/1410)\r\n  * ESpec Test Runner - [alex-dukhno](https://github.com/alex-dukhno)\r\n  * ESpec Graphical Test Results - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1410](https://github.com/KronicDeth/intellij-elixir/pull/1410) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Only show Run/Debug ExUnit when `*_test.exs` files exist.\r\n  * Only show Run/Debug ESpec when `*_spec.exs` files exist.\r\n* [#1415](https://github.com/KronicDeth/intellij-elixir/pull/1415) - Wrap `UnqualifiedNoArgumentCall.quote` `identifier.text` in `runReadAction`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1419](https://github.com/KronicDeth/intellij-elixir/pull/1419) - Fix typos in `CONTRIBUTING.md` - [@nschulzke](https://github.com/nschulzke)\r\n* [#1420](https://github.com/KronicDeth/intellij-elixir/pull/1420) - Prevent the module attribute annotator from running in EEx files. - [@nschulzke](https://github.com/nschulzke)\r\n\r\n# README Changes\r\n\r\n## Features\r\n\r\n### Run/Debug Configurations\r\n\r\n#### `mix espec` ![](/resources/icons/run/mix/test.svg)\r\n\r\nThe `mix espec` task gets a special type of Run Configuration, `Elixir Mix Espec`.  Using this Run Configuration type instead, of the basic `Elixir Mix` Run Configuration will cause the IDE to attach a special formatter to `mix espec`, so that you get the standard graphical tree of Test Results.\r\n\r\nThe Run pane will show Test Results.  If there is a compilation error before or during `mix espec`, it will be shown as a test failure.  If the compilation failure is in a `_spec.exs` file can it can be inferred from the stacktrace, the compilation error will show up as a test failure in that specific module.\r\n\r\n##### Using graphical formatter\r\n\r\n**If you override the default formatters you will need to add the following code to your `spec_helper.exs`.**\r\n\r\nIf you override formatters similar to below\r\n\r\n```elixir\r\nESpec.configure fn(config) ->\r\n  config.formatters ...\r\n```\r\n\r\n```elixir\r\nESpec.configure fn(config) ->\r\n  config.formatters [\r\n      {ESpec.Formatters.Json, %{out_path: \"results.json\"}},\r\n      {ESpec.Formatters.Html, %{out_path: \"results.html\"}},\r\n      {ESpec.Formatters.Doc, %{details: true, out_path: \"results.txt\"}},\r\n      {ESpec.Formatters.Doc, %{details: true, diff_enabled?: false, out_path: \"results-no-diff.txt\"}},\r\n      {ESpec.CustomFormatter, %{a: 1, b: 2}},\r\n    ]\r\nend\r\n```\r\n\r\nReplace them with code that checks for the graphical formatter `TeamCityESpecFormatter` and uses only it when available.\r\n\r\n```elixir\r\nESpec.configure fn(config) ->\r\n  config.formatters(if Code.ensure_loaded?(TeamCityESpecFormatter) do\r\n    [{TeamCityESpecFormatter, %{}}]\r\n  else\r\n    ...\r\n  end)\r\nend\r\n```\r\n\r\n```elixir\r\nESpec.configure fn(config) ->\r\n  config.formatters(if Code.ensure_loaded?(TeamCityESpecFormatter) do\r\n    [{TeamCityESpecFormatter, %{}}]\r\n  else\r\n    [\r\n      {ESpec.Formatters.Json, %{out_path: \"results.json\"}},\r\n      {ESpec.Formatters.Html, %{out_path: \"results.html\"}},\r\n      {ESpec.Formatters.Doc, %{details: true, out_path: \"results.txt\"}},\r\n      {ESpec.Formatters.Doc, %{details: true, diff_enabled?: false, out_path: \"results-no-diff.txt\"}},\r\n      {ESpec.CustomFormatter, %{a: 1, b: 2}},\r\n    ]\r\n  end)\r\nend\r\n```\r\n\r\n##### Creating `mix espce` Run Configurations Manually\r\n\r\n1. Run > Edit Configurations...\r\n\r\n   ![Edit Run Configurations](/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"Elixir Mix ESpec\"\r\n\r\n   ![Add New Elixir Mix ESpec](/screenshots/features/run_debug_configurations/mix_espec/Add%20New.png?raw=true \"Add New Elixir Mix ESpec Run Configuration\")\r\n4. Fill in the \"`mix espec` arguments\" with the argument(s) to pass to `mix espec`.  Normally, this will be list of `*_spec.exs` files, relative to the \"Working directory\".\r\n\r\n   **NOTE: Unlike `mix test`, `mix espec` does not support directories as arguments.**\r\n5. (Optionally) fill in \"`elixir` arguments\" with the arguments to `elixir` before it runs `mix test`.\r\n6. (Optionally) fill in \"`erl` arguments\"` with the arguments to `erl` before it runs `elixir`.\r\n7. Fill in the \"Working directory\"\r\n   * Type the absolute path to the directory.\r\n   * Select the path using directory picker by clicking the `...` button\r\n8. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n9. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWith the Run Configuration defined you can either Run or Debug the `mix espec`s\r\n\r\n##### Running\r\n\r\n1. Click the Run arrow in the Toolbar to run the `mix test` task\r\n2. The Run pane will open showing the Test Results\r\n   ![Test Results](/screenshots/features/run_debug_configurations/mix_espec/Test%20Results.png?raw=true \"Full Green Test Results\")\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug the `mix test`s\r\n\r\nWhile you can create `Elixir Mix ESpec` run configurations manually using the `Run > Edit Configurations...` menu, it is probably more convenient to use the context menu.\r\n\r\n##### Creating `mix espec` Run Configurations from context\r\n\r\nThe context menu must know that the the directory, file, or line you are right-clicking is a test.  It does this by checking if the current directory or an ancestor is marked as a Test Sources Root and contains or is a `*_spec.exs` file(s)\r\n\r\n1. In the Project pane, ensure your OTP application's `espec` directory is marked as a Test Sources Root\r\n  1. Check if the `espec` directory is green.  If it is, it is likely a Test Sources Root.  This color may differ in different themes, so to be sure you can check the context menu\r\n  2. Right-click the `test` directory.\r\n  3. Hover over \"Mark Directory As &gt;\"\r\n     * If \"Unmark as Test Sources Root\" is shown, then the directory is already configured correctly, and create from context will work.\r\n\r\n       ![Mark Directory As &gt; Unmark as Test Sources Root](/screenshots/features/run_debug_configurations/mix_espec/mark_directory_as/Unmark%20as%20Test%20Sources%20Root.png?raw=true \"Unmark Directory as Test Sources Root\")\r\n     * If \"Test Sources Root\" is shown, then the directory need to be configured by clicking that entry\r\n\r\n       ![Mark Directory As &gt; Test Sources Root](/screenshots/features/run_debug_configurations/mix_espec/mark_directory_as/Test%20Sources%20Root.png?raw=true \"Mark Directory as Test Sources Root\")\r\n\r\n###### Creating/Running `mix espec` Run Configurations from directory\r\n\r\n1. Right-click the directory in the Project pane\r\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\r\n\r\n   ![Run Mix ESpec](/screenshots/features/run_debug_configurations/mix_espec/context/directory/Run%20Mix%20ESpec.png?raw=true \"Run Mix ESpec from right-clicking directory\")\r\n\r\n   * If you want to only create the Run Configuration, select \"Create Mix ESpec\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Select the directory in the Project pane.\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\r\n\r\n###### Creating/Running `mix espec` Run Configurations from file\r\n\r\n1. Right-click the file in the Project pane\r\n2. Click \"Run Mix ESpec\", which will both create the Run Configuration and Run it.\r\n   * If you want to only create the Run Configuration, select \"Create Mix ESpec\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Select the directory in the Project pane.\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\r\n\r\nFinally, you can use the editor tabs\r\n\r\n1. Right-click the editor tab for the test file you want to run\r\n\r\n   ![Run Mix ESpec](/screenshots/features/run_debug_configurations/mix_espec/context/file/Run%20Mix%20ESpec.png?raw=true \"Run Mix ESpec from right-clicking file editor tab\")\r\n2. Click \"Run Mix ESpec\", which will both create the Run Configuration and Run it.\r\n   * If you want to only create the Run Configuration, select \"Create Mix ESpec\" instead\r\n\r\n###### Creating/Running `mix espec` Run Configurations from line\r\n\r\nIf you want to be able to run a single test, you can create a Run Configuration for a line in that test\r\n\r\n1. Right-click a line in the test file\r\n\r\n   ![Run Mix ESpec](/screenshots/features/run_debug_configurations/mix_espec/context/line/Run%20Mix%20ESpec.png?raw=true \"Run Mix ESpec from right-clicking line in editor\")\r\n2. Click \"Run Mix ESpec\", which will both create the Run Configuration and Run it.\r\n   * If you want to only create the Run Configuration, select \"Create Mix ESpec\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Place the cursor on the line you want to test\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it."}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302599", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302599/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16302599/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0-pre%2B20190323160838", "id": 16302599, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MzAyNTk5", "tag_name": "v10.4.0-pre+20190323160838", "target_commitish": "f47cb51be439511107eeef1a093d290aabf5bbe6", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-23T15:40:43Z", "published_at": "2019-03-23T16:13:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11693292", "id": 11693292, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNjkzMjky", "name": "intellij-elixir-10.4.0-pre+20190323160838.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5025204, "download_count": 13, "created_at": "2019-03-23T16:13:10Z", "updated_at": "2019-03-23T16:13:10Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0-pre%2B20190323160838/intellij-elixir-10.4.0-pre%2B20190323160838.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0-pre+20190323160838", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0-pre+20190323160838", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302458", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302458/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16302458/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0-pre%2B20190323154653", "id": 16302458, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MzAyNDU4", "tag_name": "v10.4.0-pre+20190323154653", "target_commitish": "f3389fd5f2606f62f8654ce9e64a086e1f908fdb", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-23T15:20:47Z", "published_at": "2019-03-23T15:51:03Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11693087", "id": 11693087, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNjkzMDg3", "name": "intellij-elixir-10.4.0-pre+20190323154653.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5025046, "download_count": 13, "created_at": "2019-03-23T15:51:01Z", "updated_at": "2019-03-23T15:51:02Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0-pre%2B20190323154653/intellij-elixir-10.4.0-pre%2B20190323154653.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0-pre+20190323154653", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0-pre+20190323154653", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302353", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16302353/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16302353/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0-pre%2B20190323153348", "id": 16302353, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MzAyMzUz", "tag_name": "v10.4.0-pre+20190323153348", "target_commitish": "f0bdab8f11a5e3890f9da7df99122648531e727e", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-23T15:18:18Z", "published_at": "2019-03-23T15:38:05Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11692993", "id": 11692993, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNjkyOTkz", "name": "intellij-elixir-10.4.0-pre+20190323153348.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5024807, "download_count": 11, "created_at": "2019-03-23T15:38:03Z", "updated_at": "2019-03-23T15:38:04Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0-pre%2B20190323153348/intellij-elixir-10.4.0-pre%2B20190323153348.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0-pre+20190323153348", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0-pre+20190323153348", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16167710", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16167710/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16167710/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0-pre%2B20190318004053", "id": 16167710, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MTY3NzEw", "tag_name": "v10.4.0-pre+20190318004053", "target_commitish": "399f25f82bd044a8bd9a4108cca0551e9c386764", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-18T00:24:09Z", "published_at": "2019-03-18T00:44:58Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11586019", "id": 11586019, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNTg2MDE5", "name": "intellij-elixir-10.4.0-pre+20190318004053.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5025141, "download_count": 14, "created_at": "2019-03-18T00:44:56Z", "updated_at": "2019-03-18T00:44:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0-pre%2B20190318004053/intellij-elixir-10.4.0-pre%2B20190318004053.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0-pre+20190318004053", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0-pre+20190318004053", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16166705", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/16166705/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/16166705/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.4.0-pre%2B20190317214935", "id": 16166705, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MTY2NzA1", "tag_name": "v10.4.0-pre+20190317214935", "target_commitish": "e357927accb6d0c742432649e1026afeeb9d7074", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-17T21:33:53Z", "published_at": "2019-03-17T21:53:35Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11585068", "id": 11585068, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNTg1MDY4", "name": "intellij-elixir-10.4.0-pre+20190317214935.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 5023737, "download_count": 11, "created_at": "2019-03-17T21:53:33Z", "updated_at": "2019-03-17T21:53:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.4.0-pre%2B20190317214935/intellij-elixir-10.4.0-pre%2B20190317214935.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.4.0-pre+20190317214935", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.4.0-pre+20190317214935", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15981912", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15981912/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/15981912/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.3.0", "id": 15981912, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1OTgxOTEy", "tag_name": "v10.3.0", "target_commitish": "9d8eac94d693ac19bbe31bc83cd41855c6deb654", "name": "v10.3.0", "draft": false, "prerelease": false, "created_at": "2019-03-07T20:55:56Z", "published_at": "2019-03-07T21:01:27Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11418596", "id": 11418596, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNDE4NTk2", "name": "intellij-elixir-10.3.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4981871, "download_count": 18, "created_at": "2019-03-07T22:29:55Z", "updated_at": "2019-03-07T22:30:04Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.3.0/intellij-elixir-10.3.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.3.0", "body": "# Thanks\r\n\r\n* For reporting that they expect types to show up.\r\n  * carlos L ([@cocodrino](https://github.com/cocodrino))\r\n* For reporting performance issues\r\n  * Will Davies ([@wdavies973](https://github.com/wdavies973))\r\n  * Gerard de Brieder ([@smeevil](https://github.com/smeevil))\r\n* For including [thread dumps](https://intellij-support.jetbrains.com/hc/en-us/articles/206544899-Getting-a-thread-dump-when-IDE-hangs-and-doesn-t-respond) when reporting performance issues\r\n  * Gerard de Brieder ([@smeevil](https://github.com/smeevil))\r\n\r\n# Changelog\r\n\r\n## v10.3.0\r\n\r\n### Enhancements\r\n* [#1404](https://github.com/KronicDeth/intellij-elixir/pull/1404) - Add Type Specifications to Dbgi tab for :elixir_erl backend. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1407](https://github.com/KronicDeth/intellij-elixir/pull/1407) - Bug Report issue template. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1408](https://github.com/KronicDeth/intellij-elixir/pull/1408) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Cache all computed Elixir levels at the file, module, project, and SDK levels.  The computed Elixir level is used to determine how to emulate the various grammar changes made for the different Elixir versions.  This bug was potentially introduced as earlier as[v7.0.0]() (2017-12-15) and as late as [v7.5.0](https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.5.0) (2018-06-03) as that's [the history for `LevelPropertyPusher.java`](https://github.com/KronicDeth/intellij-elixir/commits/da149f8430cd378e964ae5a53a127754b3a00bc9/src/org/elixir_lang/file/LevelPropertyPusher.java) and has affected all later versions.  If you ever experienced the 6.X series as faster than the 7.X series and later, this bug may be why and you should upgrade/reinstall immediately.\r\n\r\n# README Changes\r\n\r\n## Features\r\n### `.beam` Files\r\n#### BEAM Chunks\r\n##### `Dbgi`\r\n###### Tab\r\n####### Elixir (`:elixir_erl` backend)\r\n######## Type Specifications\r\n\r\nThe Type Specifications tab is split between a tree of the Module, Module Attribute, and type specifications.\r\n\r\n![Tree.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Tree.png?raw=true)\r\n\r\nClicking on a type specification will show only that type specification, but clicking on a higher in the tree will show all type specifications for the same module attribute or the entire Module.\r\n\r\n![Callback.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Callback.png?raw=true)\r\n![Callbacks.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Callbacks.png?raw=true)\r\n![Optional Callback.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Optional%20Callback.png?raw=true)\r\n![Optional Callbacks.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Optional%20Callbacks.png?raw=true)\r\n![Spec.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Spec.png?raw=true)\r\n![Specs.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Specs.png?raw=true)\r\n![Type.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Type.png?raw=true)\r\n![Types.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Types.png?raw=true)\r\n![Module.png](https://github.com/KronicDeth/intellij-elixir/blob/v10.3.0/screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/type_specifications/Module.png?raw=true)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15979829", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15979829/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/15979829/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20190307192515", "id": 15979829, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1OTc5ODI5", "tag_name": "v10.2.0-pre+20190307192515", "target_commitish": "3e95b047b6b196382a1d2cc5c7c746cc9e24b5c6", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-07T18:55:14Z", "published_at": "2019-03-07T19:29:23Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11416086", "id": 11416086, "node_id": "MDEyOlJlbGVhc2VBc3NldDExNDE2MDg2", "name": "intellij-elixir-10.2.0-pre+20190307192515.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4982804, "download_count": 12, "created_at": "2019-03-07T19:29:22Z", "updated_at": "2019-03-07T19:29:22Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20190307192515/intellij-elixir-10.2.0-pre%2B20190307192515.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20190307192515", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20190307192515", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15860150", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/15860150/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/15860150/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20190301142557", "id": 15860150, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1ODYwMTUw", "tag_name": "v10.2.0-pre+20190301142557", "target_commitish": "aba7813ec97d913bc52120b29191eb6583af9fd1", "name": null, "draft": false, "prerelease": true, "created_at": "2019-03-01T14:06:33Z", "published_at": "2019-03-01T14:30:10Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/11306742", "id": 11306742, "node_id": "MDEyOlJlbGVhc2VBc3NldDExMzA2NzQy", "name": "intellij-elixir-10.2.0-pre+20190301142557.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4982170, "download_count": 13, "created_at": "2019-03-01T14:30:09Z", "updated_at": "2019-03-01T14:30:09Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20190301142557/intellij-elixir-10.2.0-pre%2B20190301142557.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20190301142557", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20190301142557", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14679678", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14679678/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14679678/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0", "id": 14679678, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0Njc5Njc4", "tag_name": "v10.2.0", "target_commitish": "master", "name": "v10.2.0", "draft": false, "prerelease": false, "created_at": "2018-12-23T23:07:40Z", "published_at": "2018-12-23T23:21:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10284270", "id": 10284270, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMjg0Mjcw", "name": "intellij-elixir-10.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4848700, "download_count": 33, "created_at": "2018-12-23T23:08:27Z", "updated_at": "2018-12-23T23:08:36Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0/intellij-elixir-10.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0", "body": "# Thanks\r\n\r\n* For reporting `:ref` was used for deps.\r\n  * Francesco ([@chess4ever](https://github.com/chess4ever))\r\n* For reporting `JBTerminalWidget` no longer supported `createTerminalSession` indicating `TerminalExecutionConsole` incompatibility with IntelliJ IDEA 2018.3.\r\n  * Joaquin Alcerro ([@joaquinalcerro](https://github.com/joaquinalcerro))\r\n  * Elliot Laurendeau ([@elaurendeau](https://github.com/elaurendeau))\r\n  * Christiaan ([@christiaan-janssen](https://github.com/christiaan-janssen))\r\n  * Hoang Tran ([@hoangtranwork](https://github.com/hoangtranwork))\r\n  * [@joeman29](https://github.com/joeman29)\r\n  * Zdenek Sejcek ([@zdeneksejcek](https://github.com/zdeneksejcek))\r\n* For reporting `:tag` was used for deps.\r\n  * Eugene ([@virtual-light](https://github.com/virtual-light))\r\n  * Tomislav ([@trajakovic](https://github.com/trajakovic))\r\n  * Eric des Courtis ([@edescourtis](https://github.com/edescourtis)) \r\n* For reporting `:path` was used for deps.\r\n  * Agnaldo de Oliveira ([@agnaldo4j](https://github.com/agnaldo4j))\r\n  * Eric des Courtis ([@edescourtis](https://github.com/edescourtis)) \r\n* For reporting `VirtualPointerContainer` was sometimes disposed of when still being used to get SDK paths.\r\n  * Lucas Henrique Mathias ([@https://github.com/lhmathias](https://github.com/lhmathias))\r\n* For reporting Elixir debugger code had warnings.\r\n  * Denis Gorbachev ([@DenisGorbachev](https://github.com/DenisGorbachev))\r\n\r\n# Changelog\r\n\r\n## v10.2.0\r\n\r\n### Enhancements\r\n* [#1353](https://github.com/KronicDeth/intellij-elixir/pull/1353) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Improve support for umbrella projects in Small IDEs like Rubymine by creating a separate module for each `mix.exs` when opening a directory (`DirectoryConfigurator`).  This matches the pre-existing support in Rich IDEs (IntelliJ Community & Ultimate Edition) when using Import From External Model and Quick Import when opening a directory.\r\n  * Ignore `assets` directory when looking for `mix.exs` files for Import From External Model, Quick Import and Directory Configurator.\r\n* [#1355](https://github.com/KronicDeth/intellij-elixir/pull/1355) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update Build Matrix\r\n    * Add `2018.3`.\r\n      * Update `gradlew` to `5.0`.\r\n      * Update `org.jetbrains.intellij` to `0.3.12`.\r\n      * Update `org.jetbrains.kotlin.kvm` to `1.3.10`.\r\n         * Update Kotlin `apiVerision` to `1.3`.\r\n      * Update `de.undercouch.download` to `3.4.3`.\r\n      * Don't configure Kotlin in projects that don't use it.\r\n    * Remove `2017.3` to keep version count at `3`.\r\n\r\n### Bug Fixes\r\n* [#1355](https://github.com/KronicDeth/intellij-elixir/pull/1355) - Prevent `ConcurrentModificationException`s when updating `gradle` by using `allprojects` less. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1359](https://github.com/KronicDeth/intellij-elixir/pull/1359) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove unused variables in Elixir debugger server.\r\n  * Protect from `AssertionError` when `VirtualFileCache` is disposed.\r\n* [#1360](https://github.com/KronicDeth/intellij-elixir/pull/1360) - Protect from `AssertionError` when `VirtualFilePointerContainer` is disposed. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1364](https://github.com/KronicDeth/intellij-elixir/pull/1364) - Use `:path` for deps for paths external to project.  Unfortunately, even though they show up in the Project Structure, only `ebin` directories are shown as it is restricted to those marked as `CLASSES` and the `:path` `lib` is a `SOURCES`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1367](https://github.com/KronicDeth/intellij-elixir/pull/1367) - Ignore `:tag` when finding path to dep. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1368](https://github.com/KronicDeth/intellij-elixir/pull/1368) - No longer use the forked version of `TerminalExecutionConsole` as `2018.3`'s version doesn't have the text echoing behavior that was being bypassed before. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1372](https://github.com/KronicDeth/intellij-elixir/pull/1372) - Ignore `:ref` when finding path to dep. - [@KronicDeth](https://github.com/KronicDeth)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14667557", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14667557/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14667557/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181221211012", "id": 14667557, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NjY3NTU3", "tag_name": "v10.2.0-pre+20181221211012", "target_commitish": "2f5c826040681e258e98c3e2f02b25985cd0766b", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-21T20:52:04Z", "published_at": "2018-12-21T21:14:07Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10266738", "id": 10266738, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMjY2NzM4", "name": "intellij-elixir-10.2.0-pre+20181221211012.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4851242, "download_count": 13, "created_at": "2018-12-21T21:14:06Z", "updated_at": "2018-12-21T21:14:07Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181221211012/intellij-elixir-10.2.0-pre%2B20181221211012.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181221211012", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181221211012", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14629059", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14629059/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14629059/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181220020236", "id": 14629059, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NjI5MDU5", "tag_name": "v10.2.0-pre+20181220020236", "target_commitish": "e42d07e8c05bf6d72a8810f91d35a78e02f1d8af", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-20T01:46:21Z", "published_at": "2018-12-20T02:07:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10236751", "id": 10236751, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMjM2NzUx", "name": "intellij-elixir-10.2.0-pre+20181220020236.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4850957, "download_count": 15, "created_at": "2018-12-20T02:07:09Z", "updated_at": "2018-12-20T02:07:09Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181220020236/intellij-elixir-10.2.0-pre%2B20181220020236.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181220020236", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181220020236", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14606735", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14606735/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14606735/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181219035624", "id": 14606735, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NjA2NzM1", "tag_name": "v10.2.0-pre+20181219035624", "target_commitish": "a4c229a0b08cd12737df3e3c205e451964f48615", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-19T03:38:30Z", "published_at": "2018-12-19T04:00:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10218450", "id": 10218450, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMjE4NDUw", "name": "intellij-elixir-10.2.0-pre+20181219035624.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4864633, "download_count": 14, "created_at": "2018-12-19T04:00:10Z", "updated_at": "2018-12-19T04:00:10Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181219035624/intellij-elixir-10.2.0-pre%2B20181219035624.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181219035624", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181219035624", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14562601", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14562601/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14562601/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181217042655", "id": 14562601, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NTYyNjAx", "tag_name": "v10.2.0-pre+20181217042655", "target_commitish": "144d04572a27f940bf7218ba533a85221815c0bb", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-17T04:11:09Z", "published_at": "2018-12-17T04:30:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10183799", "id": 10183799, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMTgzNzk5", "name": "intellij-elixir-10.2.0-pre+20181217042655.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4864837, "download_count": 13, "created_at": "2018-12-17T04:30:44Z", "updated_at": "2018-12-17T04:30:45Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181217042655/intellij-elixir-10.2.0-pre%2B20181217042655.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181217042655", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181217042655", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14529589", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14529589/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14529589/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181214014006", "id": 14529589, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NTI5NTg5", "tag_name": "v10.2.0-pre+20181214014006", "target_commitish": "1e4429590ed1a76f5c7438580b02834b4d48eb3b", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-14T01:23:58Z", "published_at": "2018-12-14T01:44:14Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10142735", "id": 10142735, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMTQyNzM1", "name": "intellij-elixir-10.2.0-pre+20181214014006.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4861122, "download_count": 13, "created_at": "2018-12-14T01:44:13Z", "updated_at": "2018-12-14T01:44:14Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181214014006/intellij-elixir-10.2.0-pre%2B20181214014006.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181214014006", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181214014006", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14506645", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14506645/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14506645/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181213035528", "id": 14506645, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NTA2NjQ1", "tag_name": "v10.2.0-pre+20181213035528", "target_commitish": "34a9861ae44080665b1bd8026e5a626339066ca4", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-13T03:28:45Z", "published_at": "2018-12-13T03:59:30Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10126932", "id": 10126932, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMTI2OTMy", "name": "intellij-elixir-10.2.0-pre+20181213035528.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4861215, "download_count": 13, "created_at": "2018-12-13T03:59:28Z", "updated_at": "2018-12-13T03:59:29Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181213035528/intellij-elixir-10.2.0-pre%2B20181213035528.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181213035528", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181213035528", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14456698", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/14456698/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/14456698/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.2.0-pre%2B20181211035902", "id": 14456698, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NDU2Njk4", "tag_name": "v10.2.0-pre+20181211035902", "target_commitish": "6bde999ac23a6800c61b4398d398c485e8cc888a", "name": null, "draft": false, "prerelease": true, "created_at": "2018-12-11T03:42:07Z", "published_at": "2018-12-11T04:02:54Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/10091969", "id": 10091969, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMDkxOTY5", "name": "intellij-elixir-10.2.0-pre+20181211035902.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4861268, "download_count": 12, "created_at": "2018-12-11T04:02:53Z", "updated_at": "2018-12-11T04:02:53Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.2.0-pre%2B20181211035902/intellij-elixir-10.2.0-pre%2B20181211035902.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.2.0-pre+20181211035902", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.2.0-pre+20181211035902", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13911375", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13911375/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13911375/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.1.0", "id": 13911375, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzOTExMzc1", "tag_name": "v10.1.0", "target_commitish": "master", "name": "v10.1.0", "draft": false, "prerelease": false, "created_at": "2018-11-08T23:51:34Z", "published_at": "2018-11-09T01:28:51Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9619875", "id": 9619875, "node_id": "MDEyOlJlbGVhc2VBc3NldDk2MTk4NzU=", "name": "intellij-elixir-10.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4854048, "download_count": 26, "created_at": "2018-11-09T01:28:35Z", "updated_at": "2018-11-09T01:28:44Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.1.0/intellij-elixir-10.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.1.0", "body": "# Thanks\r\n\r\n* For reporting that `packgePsiFileToDepSet` needed to be wrapped in a read action\r\n  * Abey Onalaja ([@abeyonalaja](https://github.com/abeyonalaja))\r\n* For requesting ExUnit Test New File template\r\n  * Ryan Scheel ([@Havvy](https://github.com/Havvy))\r\n  * Dylan Griffith ([@DylanGriffith](https://github.com/DylanGriffith))\r\n  * Jimmi Fragkos ([@FraDim](https://github.com/FraDim))\r\n  * Robin Kanters ([@robinkanters](https://github.com/robinkanters))\r\n  * Dave Lampton ([@davelampton](https://github.com/davelampton))\r\n* For reporting that `defmodule` one-liner in IEx autocomplete test was being treated as a call definition head in the GoToSymbolContributor.\r\n  * Eugene ([@JohnBat26](https://github.com/JohnBat26))\r\n* For opening a PR to fix deadlinks in the README that led me to auditing all the links in the README and fixing image links that were stale.\r\n  * Francesco Lo Franco ([@kekko1212](https://github.com/kekko1212))\r\n\r\n# Changelog\r\n\r\n## v10.1.0\r\n\r\n### Enhancements\r\n* [#1330](https://github.com/KronicDeth/intellij-elixir/pull/1330) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add IntelliJ Elixir Help to Help menu that opens link in browser using plugin version to link to README.md on GitHub.\r\n\r\n    ![screen shot 2018-11-02 at 12 06 52 pm](https://user-images.githubusercontent.com/298259/47929684-cfa62400-de97-11e8-9542-2d4bc2b3c825.png)\r\n\r\n    The link will work on released versions that have a tag.\r\n* [#1334](https://github.com/KronicDeth/intellij-elixir/pull/1334) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Allow creating `ExUnit.Case` modules from template.  Template contains\r\n     * `use ExUnit.Case`\r\n     * `alias` of the source module\r\n     * `@moduletag :capture_log`\r\n     * `doctest`\r\n     * `test` that checks that the source module exists.\r\n  * Convert `CreateElixirModuleAction` to Kotlin.\r\n  * Drop \"Elixir\" prefix from templates name in Elixir File dialog since you already know you're creating an Elixir File.\r\n\r\n### Bug Fixes\r\n* [#1327](https://github.com/KronicDeth/intellij-elixir/pull/1327) - Fix deadlinks to Run Configurations, which broke when section was renamed Run/Debug Configurations and auto-anchor changed name. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1328](https://github.com/KronicDeth/intellij-elixir/pull/1328) - Fix image links in `README`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1331](https://github.com/KronicDeth/intellij-elixir/pull/1331) - Ensure `defmodule` one-liner isn't mistaken for call definition head in Go To Symbol. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n\r\n## README Updates\r\n\r\nFixed image layout and stale links."}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13767767", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13767767/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13767767/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.1-pre%2B20181031235825", "id": 13767767, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNzY3NzY3", "tag_name": "v10.0.1-pre+20181031235825", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-31T23:54:48Z", "published_at": "2018-11-01T00:03:07Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9500633", "id": 9500633, "node_id": "MDEyOlJlbGVhc2VBc3NldDk1MDA2MzM=", "name": "intellij-elixir-10.0.1-pre+20181031235825.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4815971, "download_count": 15, "created_at": "2018-11-01T00:03:06Z", "updated_at": "2018-11-01T00:03:06Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.1-pre%2B20181031235825/intellij-elixir-10.0.1-pre%2B20181031235825.zip"}, {"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9501016", "id": 9501016, "node_id": "MDEyOlJlbGVhc2VBc3NldDk1MDEwMTY=", "name": "intellij-elixir-10.0.1-pre+20181101003531.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4816153, "download_count": 13, "created_at": "2018-11-01T00:38:47Z", "updated_at": "2018-11-01T00:38:48Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.1-pre%2B20181031235825/intellij-elixir-10.0.1-pre%2B20181101003531.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.1-pre+20181031235825", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.1-pre+20181031235825", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13722394", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13722394/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13722394/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.1", "id": 13722394, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNzIyMzk0", "tag_name": "v10.0.1", "target_commitish": "master", "name": "v10.0.1", "draft": false, "prerelease": false, "created_at": "2018-10-30T02:20:17Z", "published_at": "2018-10-30T02:25:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9467031", "id": 9467031, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0NjcwMzE=", "name": "intellij-elixir-10.0.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4841618, "download_count": 11, "created_at": "2018-10-30T02:25:03Z", "updated_at": "2018-10-30T02:25:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.1/intellij-elixir-10.0.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.1", "body": "# Thanks\r\n\r\n* For reporting that real-world code may produce 10 names for one element.\r\n  * Dmytro Lytovchenko ([@kvakvs](https://github.com/kvakvs))\r\n\r\n# Changelog\r\n\r\n## v10.0.1\r\n\r\n### Bug Fixes\r\n* [#1322](https://github.com/KronicDeth/intellij-elixir/pull/1322) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Eliminate freezes when calculating Module and Library dependencies during project import and dependency updates.\r\n    * Run library syncing in tasks: When importing projects, run sync as a modal task while when `VirtualFileSystem` events occur, run sync as background tasks.  Either style of task is cancellable and importantly, it allows to show what is happening during the syncing.  This converts the unresponsive UI beachball on macOS during import to an updating progress bar.\r\n    * Calculate dep sets iteratively with a work queue instead of recursively to limit the calculation of dep set for a root to 1 time.  Then use normal transitive walk to get complete dep set for module.  Vastly speeds up project import.\r\n    * Cache dep set on package `PsiFile` to allow faster refreshes when indirect dependencies don't change.\r\n* [#1323](https://github.com/KronicDeth/intellij-elixir/pull/1323) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Log `nameSet` when it reaches suspect size (`10`) to allow triaging if it is a real bug or just something with a lot of valid names.\r\n  * Fix inverted condition around when to warn and when to error and use `readAheadLength`.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13720285", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13720285/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13720285/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.1-pre%2B20181029224200", "id": 13720285, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNzIwMjg1", "tag_name": "v10.0.1-pre+20181029224200", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-29T22:01:47Z", "published_at": "2018-10-29T22:46:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9464687", "id": 9464687, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0NjQ2ODc=", "name": "intellij-elixir-10.0.1-pre+20181029224200.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4815629, "download_count": 15, "created_at": "2018-10-29T22:46:20Z", "updated_at": "2018-10-29T22:46:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.1-pre%2B20181029224200/intellij-elixir-10.0.1-pre%2B20181029224200.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.1-pre+20181029224200", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.1-pre+20181029224200", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13668936", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13668936/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13668936/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0", "id": 13668936, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjY4OTM2", "tag_name": "v10.0.0", "target_commitish": "master", "name": "v10.0.0", "draft": false, "prerelease": false, "created_at": "2018-10-26T02:22:09Z", "published_at": "2018-10-26T02:47:27Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9417309", "id": 9417309, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTczMDk=", "name": "intellij-elixir-10.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4820739, "download_count": 21, "created_at": "2018-10-26T02:47:12Z", "updated_at": "2018-10-26T02:47:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0/intellij-elixir-10.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0", "body": "# Thanks\r\n\r\n* For reporting the new for a `runWriteAction` when adding new JDKs in Small IDES\r\n  * Cesar ([@cesarslzr](https://github.com/cesarslzr))\r\n* For reporting that a modular element could become invalid during completion and not have a valid containing file.\r\n  * [@Rxzg](https://github.com/Rxzg)\r\n* For reporting that `:crypto` wasn't in the default module filters even though its NIFs can't be interpreted.\r\n  * Spencer ([@spencerdcarlson](https://github.com/spencerdcarlson))\r\n* For reporting that the redefinition of `defmodule` in [distillery](https://github.com/bitwalker/distillery) broke the GoTo Symbol contributor.\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For reporting \"Test framework quit unexpectedly\" being reported instead of showing the compilation errors during tests, which turned out to be a deprecation in OpenAPI **and** a change in ExUnit output in Elixir 1.7 I missed.\r\n  * Dev Team for [Sparta Science](https://spartascience.com/) ([@sparta-developers](https://github.com/sparta-developers))\r\n* For reporting that Elixir was bigger than Erlang, or at least the icons in IntelliJ 2018.3 EAP :trollface:.  \r\n  * Sergey Ignatov (creator of [IntelliJ Erlang](https://github.com/ignatov/intellij-erlang)) ([@ignatov](https://github.com/ignatov))\r\n* For reporting poor error message when removing module filters\r\n  * Frances Morales ([@fmorales](https://github.com/fmorales))\r\n* For reporting that I can't make the fact that there is no use call a cache dependency\r\n  * Artem Gordinsky ([@ArtemGordinsky](https://github.com/ArtemGordinsky))\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For reporting that completion with nested modules was broken\r\n  * [@nulian](https://github.com/nulian)\r\n* For reporting that `alias __MODULE__, as: Mod` did not work for resolving references through `Mod`.\r\n  * Tomas Dosoudil ([@tomdos](https://github.com/tomdos))\r\n\r\n# Changelog\r\n\r\n## v10.0.0\r\n\r\n### Enhancements\r\n* [#1272](https://github.com/KronicDeth/intellij-elixir/pull/1272) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Go To Symbol and completion will only resolve in project source unless non-project sources are turned on.\r\n    * `deps` are properly marked as Libraries and no longer count as being in the project scope for the Go To tools.\r\n    * In umbrella projects, when `in_umbrella` is used, the Project Module for each `apps/#{APP_NAME}` will be marked a dependency,\r\n    * Library and Modules are properly connected as dependencies, so that only declared dependencies will resolve, lessening false completions and declarations when different OTP app share common Module or function names.\r\n  * `deps` and the `_build/#{MIX_ENV}/lib/#{DEP_NAME}` will be marked as Excluded, so that Libraries appear in External Libraries at the bottom of the Project Pane.\r\n* [#1275](https://github.com/KronicDeth/intellij-elixir/pull/1275) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Go To Class action (Cmd+O) to go to modules separately from all functions as would happen with Go To Symbols (Alt+Cmd+O).\r\n    * New ModuleName index keeps track of only the names of modulars:\r\n      * defmodule\r\n      * defimpl\r\n      * defprotocol\r\n\r\n      It is used to power gotoClassContributor for Go To Class action.\r\n* [#1280](https://github.com/KronicDeth/intellij-elixir/pull/1280) - Handle `commit` and `override` for `Mix.Dep`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1283](https://github.com/KronicDeth/intellij-elixir/pull/1283) - Add `.eex` to `.ex` and `.exs` for accepted file extensions used to hyperlink files in stacktraces. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1285](https://github.com/KronicDeth/intellij-elixir/pull/1285) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Resolve unaliased name when using `alias __MODULE__, as: Mod`\r\n  * Resolve usage of `Mod` in `alias __MODULE__, as Mod`\r\n    1. `Mod`\r\n    2. `__MODULE__` in `alias __MODULE__`\r\n    3. `defmodule MyModule` that is enclosing `__MODULE__`.\r\n  * Disable `ProcessCanceledException` for `runIde` gradle task, to allow for easier manual testing of completion and Go To actions during development.\r\n  * Completion of functions in current module when using `Mod.` after `alias __MODULE__, as: Mod`.\r\n  * Show more context for `alias` calls in presentations, like \"Choose Declaration\" pop up for Go To Declaration.\r\n    * Show resolved `__MODULE__` name (`alias MyModule`) when using `alias __MODULE__`.\r\n    * Show full `alias MyModule, as: Mod` when listing `Mod` in `alias __MODULE__, as Mod`.\r\n* [#1293](https://github.com/KronicDeth/intellij-elixir/pull/1293) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Exclude common directories when importing projects\r\n    * `cover` for test coverage\r\n    *  `doc` for `ex_doc`\r\n    * `logs` for log files\r\n    * `assets/node_modules/phoenix` for `phoenix`\r\n    * `assets/node_modules/phoenix_html` for `phoenix_html`\r\n  * Setup Libraries and Module dependencies when importing projects from Mix.\r\n* [#1299](https://github.com/KronicDeth/intellij-elixir/pull/1299) - Regression test for [#1270](https://github.com/KronicDeth/intellij-elixir/issues/1270). - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1313](https://github.com/KronicDeth/intellij-elixir/pull/1313) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update gradle wrapper to 3.5 to allow for environment variable overrides\r\n  * Setup datetime based pre-release versioning to ensure that correct version of pre-release plugin is used when testing Install Plugin From Disk.\r\n* [#1318](https://github.com/KronicDeth/intellij-elixir/pull/1318) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Canary, pre-release builds (`vMAJOR.MINOR.PATCH-pre+YYYYMMDDHHMMSS`) from `master` branch\r\n    * GitHub pre-release [releases](https://github.com/KronicDeth/intellij-elixir/releases)\r\n    * Release on the [canary channel](https://plugins.jetbrains.com/plugins/list?channel=canary&pluginId=7522) in the [JetBrains Plugin Repository](https://plugins.jetbrains.com/plugin/7522-elixir)\r\n\r\n### Bug Fixes\r\n* [#1277](https://github.com/KronicDeth/intellij-elixir/pull/1277) - Don't include `null` `useCall` as `__MODULE__` dependency. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1279](https://github.com/KronicDeth/intellij-elixir/pull/1279) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Wrap `LibraryTable#removeLibrary` in write action.\r\n  * Wrap `Library#modifiableModule#commit` in write action.\r\n* [#1282](https://github.com/KronicDeth/intellij-elixir/pull/1282) - Check if `Mix.Dep` has already been seen to prevent recursive loops. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1287](https://github.com/KronicDeth/intellij-elixir/pull/1287) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * More closely match [ExUnit.CliFormatter](https://github.com/elixir-lang/elixir/blob/v1.7.3/lib/ex_unit/lib/ex_unit/cli_formatter.ex) output in Test Runner.\r\n    * Don't `inspect` ExUnit failure `reason` as `##teamcity` `message`.\r\n    * Add captured logs to failure\r\n    * Colorize test failures - including diff colorization\r\n  * `.formatter.exs` input globs would not match file paths because it was default that needed `lib` on top and not version-dependent paths used in `resources/exunit`.\r\n* [#1291](https://github.com/KronicDeth/intellij-elixir/pull/1291) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore branch and hex options when finding path of Mix.Dep\r\n  * Map Elixir 1.7 `:excluded` and `:skipped` (added in [elixir-lang/elixir#7245](https://github.com/elixir-lang/elixir/pull/7245)) to `testIgnored` teamcity message, thereby restoring ignored test counts and markers from Elixir 1.6.\r\n* [#1293](https://github.com/KronicDeth/intellij-elixir/pull/1293) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * When the entire deps directory has updated sync the children deps directories and then sync all modules instead of syncing them after each dep.\r\n  *  For an unknown reason, when sync occurs at `initComponent` time in `DepsWatcher` or `mix.Watcher`, the child directories of the project `basedDir` aren't shown in the Project Pane until a change is applied in Project Structure.\r\n  * Use `invokeAndWait` instead of `invokeLater` to ensure order of syncs.\r\n* [#1299](https://github.com/KronicDeth/intellij-elixir/pull/1299) - When finding a `defmodule`, check that it is an ancestor of the entrance of the `ResolveState`, so that nested sibling modules are not scanned for potential call definition clauses, but only the outer module of the entrance. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1300](https://github.com/KronicDeth/intellij-elixir/pull/1300) - Improve error message for `org.elixir_lang.debugger.settings.stepping.module_filter.editor.table.Model.getValueAt`, so we can detect if there is an off-by-1 error. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1304](https://github.com/KronicDeth/intellij-elixir/pull/1304) - Remove `@2x` and `@3x` SVG icons that render wrong size in 2018.3 EAP. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1305](https://github.com/KronicDeth/intellij-elixir/pull/1305) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix unused variables in `TeamCityExUnitFormatting`\r\n    * `reason` was completely unused.\r\n    * `details` should have been used.\r\n* [#1306](https://github.com/KronicDeth/intellij-elixir/pull/1306) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `flushBufferBeforeTerminating` was deprecated and in newer IntelliJ the call to `processStatuses` does not occur unless `flushBufferOnProcessTermination` is also overridden.\r\n  * Treat `== Compilation error` in `STDOUT` as `ERROR` for ExUnit reporter\r\n  * Convert `(CompileError)` of a test file to test failure.  The \"Test framework quit unexpectedly\" is converted to a failed run with a single test with the compilation error as the failure message.\r\n* [#1308](https://github.com/KronicDeth/intellij-elixir/pull/1308) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Don't treat redefinition of `defmodule` macro as module definition (as occurs in [@bitwalker](https://github.com/bitwalker)'s [distillery](https://github.com/bitwalker/distillery)'s `Mix.Tasks.Release.Init.MixMock`\r\n    * Bump `AllName` `VERSION` to re-index and drop bad call definition head from [#1301](https://github.com/KronicDeth/intellij-elixir/issues/1301).\r\n* [#1310](https://github.com/KronicDeth/intellij-elixir/pull/1310) - Don't log compilation errors as test failures unless a test has started.   Test name being called `mix test` does not work, so log those compilation errors as normal build messages instead. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1311](https://github.com/KronicDeth/intellij-elixir/pull/1311) - Don't interpret `:crypto` by default: `:crypto` includes NIFs that can't be reloaded and so kills the debugger. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1312](https://github.com/KronicDeth/intellij-elixir/pull/1312) - Protect from `null` `containingFile` for modular names during completion. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1313](https://github.com/KronicDeth/intellij-elixir/pull/1313) - Wrap `syncPublisher(JDK_TABLE_TOPIC)` in `invokeLater` `runWriteAction`. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Incompatible Changes\r\n* [#1272](https://github.com/KronicDeth/intellij-elixir/pull/1272) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Dependencies are now counted as external to the project, so the Go To tools, like Go To Symbol will no longer include matches for both project sources and dependencies sources together, instead they will follow the more JetBrains native behavior\r\n    * Project sources will be shown by default\r\n    *  If there are no project matches, dependencies will be shown instead.\r\n    * If you want to include dependency (non-project) matches, you can check the box or hit Cmd+O.\r\n* [#1293](https://github.com/KronicDeth/intellij-elixir/pull/1293) - Modules and Libraries won't be automatically setup when a project or module is opened, but instead only when `apps` or `deps` directories or subdirectories change. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n## Installation\r\n\r\n\r\n\r\n### Canary releases\r\n\r\nBuilds on `master` will produce pre-release builds of format `NEXT_VERSION-pre+YYYYMMDDHHMMSS`.\r\n\r\n#### Inside IDE using JetBrains repository\r\n\r\nYou will need to add the `canary` repository once to your IDE:\r\n\r\n1. Preferences\r\n2. Plugins\r\n3. Browse Repositories\r\n4. Manage Repositories\r\n5. Click +\r\n6. Enter the IntelliJ Elixir `canary` URL: `https://plugins.jetbrains.com/plugins/list?channel=canary&pluginId=7522`\r\n7. Click OK\r\n8. Click OK to close the Custom Plugin Repositories dialog.\r\n\r\nWith the `canary` repository setup:\r\n\r\n1. Preferences\r\n2. Plugins\r\n3. Browse Repositories\r\n4. Select Elixir\r\n5. Install plugin\r\n6. Apply\r\n7. Restart the IDE\r\n\r\n#### Inside IDE using Github releases\r\n\r\n##### In browser\r\n\r\n1. Go to [releases](https://github.com/KronicDeth/intellij-elixir/releases).\r\n2. Download the latest pre-release zip.\r\n\r\n##### In IDE\r\n\r\n1. Preferences\r\n2. Plugins\r\n3. Install plugin from disk...\r\n4. Select the downloaded zip.\r\n5. Apply\r\n7. Restart the IDE.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13668099", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13668099/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13668099/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181026005139", "id": 13668099, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjY4MDk5", "tag_name": "v10.0.0-pre+20181026005139", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-26T00:55:24Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9416335", "id": 9416335, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTYzMzU=", "name": "intellij-elixir-10.0.0-pre+20181026005139.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4794846, "download_count": 13, "created_at": "2018-10-26T00:55:23Z", "updated_at": "2018-10-26T00:55:24Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181026005139/intellij-elixir-10.0.0-pre%2B20181026005139.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181026005139", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181026005139", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667659", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667659/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13667659/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025235555", "id": 13667659, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjY3NjU5", "tag_name": "v10.0.0-pre+20181025235555", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-26T00:00:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9415776", "id": 9415776, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTU3NzY=", "name": "intellij-elixir-10.0.0-pre+20181025235555.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795135, "download_count": 13, "created_at": "2018-10-26T00:00:31Z", "updated_at": "2018-10-26T00:00:31Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025235555/intellij-elixir-10.0.0-pre%2B20181025235555.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025235555", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025235555", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667484", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667484/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13667484/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025233115", "id": 13667484, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjY3NDg0", "tag_name": "v10.0.0-pre+20181025233115", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T23:36:53Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9415653", "id": 9415653, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTU2NTM=", "name": "intellij-elixir-10.0.0-pre+20181025233115.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795121, "download_count": 12, "created_at": "2018-10-25T23:36:52Z", "updated_at": "2018-10-25T23:36:52Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025233115/intellij-elixir-10.0.0-pre%2B20181025233115.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025233115", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025233115", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667219", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13667219/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13667219/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025230421", "id": 13667219, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjY3MjE5", "tag_name": "v10.0.0-pre+20181025230421", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T23:09:34Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9415419", "id": 9415419, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTU0MTk=", "name": "intellij-elixir-10.0.0-pre+20181025230421.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795148, "download_count": 13, "created_at": "2018-10-25T23:09:33Z", "updated_at": "2018-10-25T23:09:33Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025230421/intellij-elixir-10.0.0-pre%2B20181025230421.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025230421", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025230421", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13663445", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13663445/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13663445/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025192802", "id": 13663445, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjYzNDQ1", "tag_name": "v10.0.0-pre+20181025192802", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T19:33:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9413254", "id": 9413254, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MTMyNTQ=", "name": "intellij-elixir-10.0.0-pre+20181025192802.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4794789, "download_count": 19, "created_at": "2018-10-25T19:33:19Z", "updated_at": "2018-10-25T19:33:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025192802/intellij-elixir-10.0.0-pre%2B20181025192802.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025192802", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025192802", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645818", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645818/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13645818/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025025704", "id": 13645818, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ1ODE4", "tag_name": "v10.0.0-pre+20181025025704", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T03:01:02Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9401795", "id": 9401795, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDE3OTU=", "name": "intellij-elixir-10.0.0-pre+20181025025704.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4794734, "download_count": 13, "created_at": "2018-10-25T03:01:00Z", "updated_at": "2018-10-25T03:01:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025025704/intellij-elixir-10.0.0-pre%2B20181025025704.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025025704", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025025704", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645699", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645699/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13645699/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025024310", "id": 13645699, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ1Njk5", "tag_name": "v10.0.0-pre+20181025024310", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T02:47:14Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9401677", "id": 9401677, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDE2Nzc=", "name": "intellij-elixir-10.0.0-pre+20181025024310.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795124, "download_count": 13, "created_at": "2018-10-25T02:47:13Z", "updated_at": "2018-10-25T02:47:13Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025024310/intellij-elixir-10.0.0-pre%2B20181025024310.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025024310", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025024310", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645627", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645627/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13645627/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025023243", "id": 13645627, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ1NjI3", "tag_name": "v10.0.0-pre+20181025023243", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T02:37:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9401585", "id": 9401585, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDE1ODU=", "name": "intellij-elixir-10.0.0-pre+20181025023243.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795136, "download_count": 16, "created_at": "2018-10-25T02:37:19Z", "updated_at": "2018-10-25T02:37:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025023243/intellij-elixir-10.0.0-pre%2B20181025023243.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025023243", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025023243", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645525", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645525/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13645525/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025022131", "id": 13645525, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ1NTI1", "tag_name": "v10.0.0-pre+20181025022131", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T02:25:19Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9401408", "id": 9401408, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDE0MDg=", "name": "intellij-elixir-10.0.0-pre+20181025022131.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4794579, "download_count": 10, "created_at": "2018-10-25T02:25:19Z", "updated_at": "2018-10-25T02:25:19Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025022131/intellij-elixir-10.0.0-pre%2B20181025022131.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025022131", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025022131", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645416", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13645416/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13645416/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025020337", "id": 13645416, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ1NDE2", "tag_name": "v10.0.0-pre+20181025020337", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T02:08:01Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9401251", "id": 9401251, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDEyNTE=", "name": "intellij-elixir-10.0.0-pre+20181025020337.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4794607, "download_count": 13, "created_at": "2018-10-25T02:08:00Z", "updated_at": "2018-10-25T02:08:00Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025020337/intellij-elixir-10.0.0-pre%2B20181025020337.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025020337", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025020337", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13644819", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/13644819/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/13644819/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v10.0.0-pre%2B20181025005945", "id": 13644819, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjQ0ODE5", "tag_name": "v10.0.0-pre+20181025005945", "target_commitish": "master", "name": null, "draft": false, "prerelease": true, "created_at": "2018-10-20T22:34:48Z", "published_at": "2018-10-25T01:03:41Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/9400253", "id": 9400253, "node_id": "MDEyOlJlbGVhc2VBc3NldDk0MDAyNTM=", "name": "intellij-elixir-10.0.0-pre+20181025005945.zip", "label": "", "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4795181, "download_count": 15, "created_at": "2018-10-25T01:03:40Z", "updated_at": "2018-10-25T01:03:40Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v10.0.0-pre%2B20181025005945/intellij-elixir-10.0.0-pre%2B20181025005945.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v10.0.0-pre+20181025005945", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v10.0.0-pre+20181025005945", "body": null}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12872511", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12872511/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/12872511/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v9.0.0", "id": 12872511, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyODcyNTEx", "tag_name": "v9.0.0", "target_commitish": "master", "name": "v9.0.0", "draft": false, "prerelease": false, "created_at": "2018-09-13T01:37:30Z", "published_at": "2018-09-13T02:01:56Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/8651199", "id": 8651199, "node_id": "MDEyOlJlbGVhc2VBc3NldDg2NTExOTk=", "name": "intellij-elixir-9.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4784892, "download_count": 49, "created_at": "2018-09-13T01:58:50Z", "updated_at": "2018-09-13T01:58:53Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v9.0.0/intellij-elixir-9.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v9.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v9.0.0", "body": "# Thanks\r\n\r\n* For reporting that renaming variables didn't work on bracket operations, which reminded me I still had the feature open to resolve bracket operation identifiers from 2016(!).\r\n  *  Raz ([@RazgrizHsu](https://github.com/RazgrizHsu))\r\n* For reporting that they wanted Go To Source and Go To Decompiled to be separated\r\n  * Xavier Noria ([@fxn](https://github.com/fxn))\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n  * Anmol Sethi ([@nhooyr](https://github.com/nhooyr))\r\n  * Raffael Krebs ([@kreba](https://github.com/kreba))\r\n  * John Watson ([@jkwatson](https://github.com/jkwatson))\r\n  * Zolt\u00e1n Mari\u0107 ([@zoltanmaric](https://github.com/zoltanmaric))\r\n  * Yordis Prieto ([@yordis](https://github.com/yordis))\r\n  * [@eagle-te](https://github.com/eagle-te)\r\n* For let me know that some users were like me and liked being able to jump to decompiled code, which was the impetus for Go To Related support after Go To Declaration switched to preferring source.\r\n  * Kimberly Milner (at ElixirConf 2018)\r\n* For reporting that I broke completion through imports when I did the Kotlin conversion back in v7.5.0 (released June 5th 2018) \ud83e\udd26\u200d\u2642\ufe0f \r\n  * Miroslav Hettes ([@mirrec](https://github.com/mirrec))\r\n\r\n## v9.0.0\r\n\r\n### Enhancements\r\n* [#1255](https://github.com/KronicDeth/intellij-elixir/pull/1255) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Resolve calls through `use AnAlias` calls\r\n    1. `AnAlias` will be resolved to its modular (module, implementation, or protocol)\r\n    2. The `__using__` macro in the modular is found\r\n    3. The last call in `__using__` is checked\r\n      * If it is a `quote` block, check for call definitions recursively inside the block\r\n      * If it is an `apply/3` call\r\n        1. Resolve the first argument as a modular\r\n        2. Scan for each function in `modular`\r\n        3. In each function Goto Step 3 above\r\n\r\n        This handling is what specifically makes `use MyAppWeb, :controller` in Phoenix apps now work.\r\n      * If it is a general call\r\n        1. Resolve the call to its definition\r\n        2. Goto Step 3 above\r\n* [#1259](https://github.com/KronicDeth/intellij-elixir/pull/1259) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Go To Related (`Ctrl+Cmd+Up`) can be used to Go To the decompiled Module or call definitions when on a source modular (`defimpl`, `defmodule`, or `defprotocol`) or callable (`def`, `defp`, `defmacro`, `defmacrop`).  This somewhat restores the ability to go to both source and decompiled module and calls before 9.0.0, but now the source is preferred for Go To Declaration and the decompiled will only be available if there is no source and if you definitely want decompiled, you'll need to use Go To Related.\r\n\r\n### Bug Fixes\r\n* [#1245](https://github.com/KronicDeth/intellij-elixir/pull/1245) - Specify that Kotlin Plugin is needed in `CONTRIBUTING.md`, so IntelliJ plays nice. - [@sfat](https://github.com/sfat)\r\n* [#1246](https://github.com/KronicDeth/intellij-elixir/pull/1246) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Resolve unqualified bracket operation identifiers (`var` in `var[key]`) to variables or `0`-arity calls.\r\n    * Fixes renames of variables not renaming usage of variables for Access lookups (i.e. `var[key]`).\r\n* [#1248](https://github.com/KronicDeth/intellij-elixir/pull/1248) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Go To Symbol will no longer show redundant entries\r\n    * Call Definitions (`name/arity`) is no longer shown if the Call Definition Clause is also included.  This isn't a large loss because the `/arity` was not searchable and only part of the presentation.\r\n    * If there is a decompiled and a source version of a symbol, only the source version will be shown.\r\n      * The source Implementation will be shown and not the decompiled Module with the same fully-qualified name (`<protocol>.<for>`).\r\n    * Items will be deduped if they point to the same element, such as function clauses with default arguments because when presented they look the same even if internally one is representing `/1` and `/2`, for example.\r\n* [#1249](https://github.com/KronicDeth/intellij-elixir/pull/1249) - Ensure that Go To Declaration for qualified calls such as `Module.function(...)` where `Module` is an alias does not return the decompiled version of `Module` when the source is available. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1256](https://github.com/KronicDeth/intellij-elixir/pull/1256) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Fix completion not working for unqualified functions from `import`s.\r\n    * When I switched to using `?.let` I accidentally hid the `if` from running when there was no `ENTRANCE_CALL_DEFINITION_CLAUSE`, so the correct form is add if there is no entrance or if there is a non-equivalent entrance.\r\n    *  I just straight up forgot an ! on a contains check. I moved to computeIfAbsent, so it is more obvious what the intent is.\r\n\r\n### Incompatible Changs\r\n* [#1248](https://github.com/KronicDeth/intellij-elixir/pull/1248) Go To Symbol and Go To Declaration will no longer suggest decompiled modules or functions if source modules or functions of the same name or module/name/arity exists. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README updates\r\n\r\n## Features\r\n\r\n### Go To Related\r\n\r\nGo To Related is like Go To Declaration, but more general, for anything that is related to an element, but not its declaration.\r\n\r\nIn IntelliJ Elixir, Go To Related can be used to go to the decompiled version of a modular (`defimpl`, `defprotocol`, or `defmodule`) or a callable (`def`, `defp`, `defmacro`, `defmacrop`) definition.\r\n\r\n#### Decompiled Module\r\n\r\n1. Place the cursor on the name of the modular, such as `EExTest.Accounts` in `defmodule EExTest.Accounts do`\r\n2. Go To Related\r\n   * Navigate > Related Symbol\r\n   * `Ctrl+Cmd+Up`\r\n3. Select a \"Decompiled BEAM\" target from the \"Choose Target\" context menu\r\n   ![Choose Target.png](screenshots/features/go_to_related/module/Choose%20Target.png?raw=true)\r\n4. You will be taken to the decompiled module\r\n   ![Decompiled.png](screenshots/features/go_to_related/module/Decompiled.png?raw=true)\r\n\r\n#### Decompiled Call Definition\r\n\r\n1. Place the cursor on the name of the call, such as `get_user!` in `def get_user!(id)`\r\n2. Go To Related\r\n   * Navigate > Related Symbol\r\n   * `Ctrl+Cmd+Up`\r\n3. Select a \"Decompiled BEAM\" target from the \"Choose Target\" context menu\r\n   ![Choose Target.png](screenshots/features/go_to_related/call/Choose%20Target.png?raw=true)\r\n4. You will be taken to the decompiled module\r\n   ![Decompiled.png](screenshots/features/go_to_related/call/Decompiled.png?raw=true)"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12577090", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12577090/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/12577090/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v8.1.0", "id": 12577090, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNTc3MDkw", "tag_name": "v8.1.0", "target_commitish": "master", "name": "v8.1.0", "draft": false, "prerelease": false, "created_at": "2018-09-01T00:56:31Z", "published_at": "2018-09-01T01:05:35Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/8476033", "id": 8476033, "node_id": "MDEyOlJlbGVhc2VBc3NldDg0NzYwMzM=", "name": "intellij-elixir-8.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 4724364, "download_count": 21, "created_at": "2018-09-01T00:59:08Z", "updated_at": "2018-09-01T00:59:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v8.1.0/intellij-elixir-8.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v8.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v8.1.0", "body": "# Thanks\r\n\r\n* For consulting on the design of the new flat icons to match IntelliJ IDEA 2018.2's design guidelines and showing me how to use Figma.\r\n  * Narek Khachatryan ([@nk8](https://github.com/nk8))\r\n* For reporting that `Decimal.base10?` could not resolve its enclosing modular\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For reporting that completion of SDK files was broken in Small IDEs, which led to discovering the External Libraries were needed in Small IDEs for SDK indexing to occur.  (Indexing of SDKs is automatic in IntelliJ IDEA.)\r\n  * [@JerryBels](https://github.com/JerryBels)\r\n* For [explaining IntelliJ IDEA 2018.2's design guidlines](https://blog.jetbrains.com/blog/2018/06/26/new-icons-in-intellij-platform-2018-2/)\r\n  * Alina Mishna\r\n* For providing the SVG version of the Elixir icon\r\n  * Alina Mishna\r\n* For providing the Elixir icon made by Alina Mishna\r\n  * Lidiya Chernigovskaya ([LChernigovskaya](https://github.com/LChernigovskaya))\r\n\r\n# Changelog\r\n\r\n## v8.1.0\r\n\r\n### Enhancements\r\n* [#1226](https://github.com/KronicDeth/intellij-elixir/pull/1226) - Flat icons to match [IntelliJ IDEA 2018.2 design rules](https://blog.jetbrains.com/blog/2018/06/26/new-icons-in-intellij-platform-2018-2/).  Thanks to [@nk8](https://github.com/nk8) for consulting on the design and showing me how to use Figma. - [@KronicDeth](https://github.com/KronicDeth), [@nk8](https://github.com/nk8)\r\n* [#1233](https://github.com/KronicDeth/intellij-elixir/pull/1233) - Regression test for [#1228](https://github.com/KronicDeth/intellij-elixir/issues/1228) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1239](https://github.com/KronicDeth/intellij-elixir/pull/1239) - Use icon provided by Lidiya Chernigovskaya ([@LChernigovskaya](https://github.com/LChernigovskaya)) and created by JetBrains UX (Alina Mishina) for `pluginIcon` compatibility with IntelliJ IDEA 2018.3. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1233](https://github.com/KronicDeth/intellij-elixir/pull/1233) - Look above `Enum.reduce` for enclosing macro call. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1234](https://github.com/KronicDeth/intellij-elixir/pull/1234) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add Facet SDK as External Library to re-enable indexing.  When the External Library was removed in [4297287](https://github.com/KronicDeth/intellij-elixir/commit/42972876c219e9da7283513bc5677e5121b5e0fe) in favor of a real SDK, completion for SDK `.beam` modules was lost because Small IDEs don't index SDKs, but only External Libraries, so add Application-wide External Libraries for SDKs when they are created (and update, remove on edit or delete), which are then added as a Dependency for the facet's module when the SDK is set for the Small IDE project.\r\n    * Convert old modules with Elixir facets to also have External Library, so that users don't need to remove and add the SDKs to get the External Library.\r\n* [#1237](https://github.com/KronicDeth/intellij-elixir/pull/1237) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Use #AEB9C0 for JetBrains Default/Light Gray.  Use #87939A for JetBrains Darcula Gray.  Colors based on IntelliJ's color picker picking its own colors.\r\n\r\n    Icon matching testing done under both themes in 2018.2.1.  Weirdly, the colors are different in the SVGs in my intellij-community@master.  Hopefully, this doesn't mean the colors change again in 2018.3.\r\n* [#1244](https://github.com/KronicDeth/intellij-elixir/pull/1244) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Run `createLibrary` inside `runWriteAction`.\r\n  * Remove test that leaks threads and so causes builds to fail.\r\n\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12447531", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/12447531/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/12447531/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v8.0.0", "id": 12447531, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNDQ3NTMx", "tag_name": "v8.0.0", "target_commitish": "master", "name": "v8.0.0", "draft": false, "prerelease": false, "created_at": "2018-08-17T02:31:01Z", "published_at": "2018-08-17T03:16:00Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/8286698", "id": 8286698, "node_id": "MDEyOlJlbGVhc2VBc3NldDgyODY2OTg=", "name": "intellij-elixir-8.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 3703172, "download_count": 18, "created_at": "2018-08-17T03:13:39Z", "updated_at": "2018-08-17T03:13:41Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v8.0.0/intellij-elixir-8.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v8.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v8.0.0", "body": "# Thanks\r\n\r\n* For reporting NPE in the improved version of the `getPresentation`\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Everett Griffiths ([@fireproofsocks](https://github.com/fireproofsocks))\r\n  * Daniel Ashton ([@jdashton](https://github.com/jdashton))\r\n  * Rostyslav Melnychuk ([@iKethavel](https://github.com/iKethavel))\r\n  * Simon Struck ([@AnyTimeTraveler](https://github.com/AnyTimeTraveler))\r\n  * \u041e\u043b\u0435\u0433 \u0414\u0443\u043b\u0435\u0446\u043a\u0438\u0439 ([@dog-64](https://github.com/dog-64))\r\n  * lee eggebroten ([@leggebroten](https://github.com/leggebroten))\r\n  * [@j-m-hoffmann](https://github.com/j-m-hoffmann)\r\n  * Ram Kumar ([@ramka001](https://github.com/ramka001))\r\n  * Eric des Courtis ([@edescourtis](https://github.com/edescourtis))\r\n  * Adam Phillips ([@aadam21](https://github.com/aadam21))\r\n  * Hammad Ur Rahman ([@hammadurrahman](https://github.com/hammadurrahman))\r\n* For reporting that the safe cast for quote bound variables wasn't so safe\r\n  * Gary Cox ([@GaryLCoxJr](https://github.com/GaryLCoxJr))\r\n  * Eugene ([@JohnBat26](https://github.com/JohnBat26))\r\n  * \u041e\u043b\u0435\u0433 \u0414\u0443\u043b\u0435\u0446\u043a\u0438\u0439 ([@dog-64](https://github.com/dog-64))\r\n  * Venelin Petkov ([@vmptk](https://github.com/vmptk))\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n  * Sylvain Corsini ([@scorsi](https://github.com/scorsi))\r\n  * Zolt\u00e1n Mari\u0107 ([@zoltanmaric](https://github.com/zoltanmaric))\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * [@heldermartins-tdesk](https://github.com/heldermartins-tdesk)\r\n  * Jeff Morgan ([@cheezy](https://github.com/cheezy))\r\n  * Austin Morris ([@austinsmorris](https://github.com/austinsmorris))\r\n  * Alexandre Audebeau ([@azuken](https://github.com/azuken))\r\n  * Lemon Lyu ([@lv12312](https://github.com/lv12312))\r\n  * Klevison Matias ([@klevison](https://github.com/klevison))\r\n* For reporting the disassembler did not support all OTP 21 opcodes\r\n  * lijianfeng ([@jxljf](https://github.com/jxljf))\r\n* For requesting spellchecking\r\n  * [@eagle-te](https://github.com/eagle-te)\r\n* For reporting that Phoenix's use of `quote` inside a literal `[head | tail]` list code not be parsed to find the parent modular.\r\n  * Neftaly Luis ([@neftalyluis](https://github.com/neftalyluis))\r\n* For reporting that the missing Erlang SDK message wasn't clear clicking OK would take you through the setup and cancel would stop Elixir+Erlang SDK confirmation.\r\n  * [@bbtdev](https://github.com/bbtdev)\r\n* For reporting that variables use scope could not be calculated in EEx tags.\r\n  * [@simapetr85](https://github.com/simapetr85)\r\n* For reporting that `@` was allowed in atoms, but not atom keyword keys.\r\n  * Eric Hagman ([@emhagman](https://github.com/emhagman))\r\n* For reporting that `eachEbinPath` did not restrict itself to directories and blow up on files.\r\n  * Tomoki Odaka ([@odk211](https://github.com/odk211))\r\n* For reporting that `Module.aliasedName` still contained `assert` even though it uses `Normalized` to protect from `PsiError`s.\r\n  * Rostyslav Melnychuk ([@iKethavel](https://github.com/iKethavel))\r\n* For reporting that `Unaliased.down` did not have a useful error message\r\n  * Eric des Courtis ([@edescourtis](https://github.com/edescourtis))\r\n\r\n# Changelog\r\n\r\n## v8.0.0\r\n\r\n### Enhancements\r\n* [#1175](https://github.com/KronicDeth/intellij-elixir/pull/1175) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * New and improved Run/Debug Configurations\r\n    * Distillery Release CLIs for running `console`, `foreground`, etc\r\n      Options for configuring each part of the command line\r\n      * Path to Release CLI\r\n      * Release CLI arguments (like a command `console`)\r\n      * Settings that are normally hidden in environment variables\r\n        * `erl` arguments (`ERL_OPTS`)\r\n        * `elixir -extra` arguments (`EXTRA_OPTS`)\r\n        * Code Loading Mode (`CODE_LOADING_MODE`)\r\n        * Log Directory (`RUNNER_LOG_DIR`)\r\n        * Replace OS Vars (`REPLACE_OS_VARS`)\r\n        * `sys.config` file (`SYS_CONFIG_PATH`)\r\n        * Release Config Directory (`RELEASE_CONFIG_DIR`)\r\n        * Pipe directory (`PIPE_DIR`)\r\n      * Use  Pseudo-Terminal (PTY) to allow overriding console type when it can't be inferred from the Release CLI arguments, such as using PTY for `console` because it uses an `iex`-like shell.\r\n      * Working Directory\r\n      * Environment Variables\r\n    * `iex` console with proper PTY support (colors, tab completion, history)\r\n      Options for configuring each part of the command line\r\n      * `iex` arguments\r\n      * `erl` arguments\r\n      * Working Directory\r\n      * Environment Variables\r\n    * `elixir` with colors\r\n      Options for configuring each part of the command line\r\n      * `elixir` arguments\r\n      * `erl` arguments\r\n      * Working Directory\r\n      * Environment Variables\r\n    * `mix` tasks getting expanded options to match the new configurations\r\n      * `mix` arguments, which used to be called \"Program Arguments\" (I figured out how to customize that name. \ud83d\ude09)\r\n      * `elixir` arguments\r\n      * `erl` arguments\r\n      * Working Directory\r\n      * Environment Variables\r\n    * `iex -S mix`\r\n      Options for configuring each part of the command line\r\n      * `mix` arguments\r\n      * `iex` arguments\r\n      * `erl` arguments\r\n      * Working Directory\r\n      * Environment Variables\r\n    * `mix test`\r\n      * `mix test` arguments, which used to be called \"Program Arguments\"\r\n      * `elixir` arguments\r\n      * `erl` arguments\r\n      * Working Directory\r\n      * Environment Variables\r\n  * Debugger enhancements\r\n    * All the above configurations can be debugged using the debugger.  It is no longer restricted to only working with `mix`-based configurations.\r\n    * Filter more common dependency modules from being interpreted by default.\r\n      * `credo`\r\n      * `inch_ex`\r\n      * `earmark`\r\n      * `ex_doc`\r\n    * More ways to filter interpreted modules\r\n      * Run Configurations now have an Interpreted Modules tab, next to Configuration, which by default imports the Application-wide settings, but allows\r\n        * Disabling inherited filters\r\n        * Adding configuration-specific filters\r\n        * Remove configuration-specific filters\r\n      * Allow interpreted modules to be uninterpreted when the debugger is running, using the \"Interpreted Modules\" tab.\r\n    * Improved Variables pane by showing the Elixir name of variables instead of Erlang names\r\n    * Evaluate can evaluate an Elixir expression in any stack frame.\r\n* [#1192](https://github.com/KronicDeth/intellij-elixir/pull/1192) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add all OTP 21 opcodes to disassembler. Previous opcode set was\r\n    frozen prior to OTP 21 release and missed some later additions.\r\n\r\n     | number |        name        |         Added         |\r\n     |:-------|:-------------------|:----------------------|\r\n     | `160`  | `build_stacktrace` | Before OTP 21 release |\r\n     | `161`  | `raw_raise`        | Now                   |\r\n     | `162`  | `get_hd`           | Now                   |\r\n     | `163`  | `get_tl`           | Now                   |\r\n* [#1196](https://github.com/KronicDeth/intellij-elixir/pull/1196) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Spell checking for identifiers, aliases, comments, and literals (charlists, strings, and sigils).\r\n    * Dictionaries for common dependencies\r\n      * Elixir\r\n      * Ecto\r\n* [#1203](https://github.com/KronicDeth/intellij-elixir/pull/1203) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Elixir 1.7 debugger Variables and Evaluate compatibility\r\n    * Elixir 1.7 names Erlang variables like `_<elixirVariableName>@<counter>` while Elixir 1.6 used `V<elixirVariableName>@<counter>`\r\n    * Elixir 1.7 changed `elixir_erl` record and `%Macro.Env{}`, which changed how `:elixir.quoted_to_erl` needed to be called.\r\n* [#1208](https://github.com/KronicDeth/intellij-elixir/pull/1208) - Update `2018.2` to `2018.2.1` in build matrix. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1210](https://github.com/KronicDeth/intellij-elixir/pull/1210) - Regression test for [#1141](https://github.com/KronicDeth/intellij-elixir/issues/1141) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1212](https://github.com/KronicDeth/intellij-elixir/pull/1212) - Improve Cannot Create SDK error message (additions in **bold**): \"You need to configure an Erlang SDK for Elixir SDK. **Click OK to be take through the Erlang SDK configuration.  Click Cancel to stop configuring this SDK AND the Erlang SDK.**\" - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1223](https://github.com/KronicDeth/intellij-elixir/pull/1223) - Convert mix and mix test run configurations to new format. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1188](https://github.com/KronicDeth/intellij-elixir/pull/1188) - Show `...` for module name when `Dbgi` has no module name as happens for instrumented modules from `IEx.break/4`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1189](https://github.com/KronicDeth/intellij-elixir/pull/1189) - Don't assume `callDefinitionClause` is non-`null`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1190](https://github.com/KronicDeth/intellij-elixir/pull/1190) - Don't assume parent of list access expression is `QuotableKeywordPair`- [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1191](https://github.com/KronicDeth/intellij-elixir/pull/1191) - Don't assume parent of keywords is a list. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1208](https://github.com/KronicDeth/intellij-elixir/pull/1208) - `TerminalExecutionConsole` itself echos input in `2018.2` and `2018.2.1`, which was introduced in https://github.com/JetBrains/intellij-community/commit/fd7bbd0cb7f3c2a5add8872e0e6c5172be5f074a#diff-5acc2eb2e78fe52d7458d4a48b0eac9f, but it was reverted in JetBrains/intellij-community@5f4465b, so this uses that version to maintain compatibility across supported versions. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1210](https://github.com/KronicDeth/intellij-elixir/pull/1210) - In `Phoenix.Router.Helpers`, a `quote` block appears as the head of `[head | tail]` list, so add support for search for enclosing macro call above `|`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1213](https://github.com/KronicDeth/intellij-elixir/pull/1213) - Treat EEx tag the same as `StabBody` for use scope. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1214](https://github.com/KronicDeth/intellij-elixir/pull/1214) - Use `ATOM` for keyword keys instead of `IDENTIFIER_TOKEN` as `ATOM` allows for `@`, which is needed for correctness. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1215](https://github.com/KronicDeth/intellij-elixir/pull/1215) - In `eachEbinPath`, the ebin directories were found by iterating `<SDK_HOME_PATH>/lib` and then iterating grandchild of that, so that all paths matching `<SDK_HOME_PATH>/lib/<APP>/ebin` would be added, but for some installs from source, like SDK, there are non-OTP-app files in `<SDK_HOME_PATH>/lib`, so filter `<SDK_HOME_PATH>/lib/<APP>` to only directories. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1216](https://github.com/KronicDeth/intellij-elixir/pull/1216) - `org.elixir.lang.psi.scope.Module.aliasedName(QualifiedAlias)` was already converted to use `org.elixir_lang.psi.operation.Normalized` and `org.elixir_lang.psi.infix.Normalized`, which makes it work with errors in the PSI tree, so there's no need protect with an assert and that assert would be wrong in times of errors handled by `Normalized`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1217](https://github.com/KronicDeth/intellij-elixir/pull/1217) - `org.elixir_lang.reference.module.UnaliasedName.down(PsiElement)` only expects `ElixirAccessExpression` or `QualifiableAlias`, but for unexpected classes of elements, it was a simple Kotlin `TODO()`, which didn't log anything useful for enhancements.  Replace the `TODO()` with an `org.elixir_lang.errorreport.Logger.error`, so that the element's class and content can be reported when this happens again. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1164](https://github.com/KronicDeth/intellij-elixir/pull/1168) - Use `/` in paths passed to Erlang, even on Windows - [@notriddle](https://github.com/notriddle)\r\n\r\n### Incompatible Changes\r\n* [#1175](https://github.com/KronicDeth/intellij-elixir/pull/1175) - Drop support for IntelliJ IDEA before 2017.3 as they lack the `TerminalExecutionConsole` used to run `iex` in a PTY. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n## Features\r\n\r\n### Debugger\r\n\r\n#### Steps\r\n\r\n1. Define a [run/debug configuration](#run-configurations)\r\n2. [Create breakpoints](#creating-line-breakpoints) in the `*.ex` files\r\n3. [Launch](#starting-the-debugger-session) a debugging session\r\n4. During the debugger session, [step through the breakpoints](#stepping), [examine suspended program](#examining-suspended-program), [explore frames](#frames), and [evaluate code when suspended](#evaluate).\r\n\r\n#### Starting the Debugger Session\r\n\r\nIt takes awhile, once the debugged process is started to configure the [debugger in BEAM](http://erlang.org/doc/man/int.html).  To ensure that breakpoints are setup before allow the debugged code to run, the debugger blocks until setup is complete.\r\n\r\n1. The debugged process will wait for the debugger to attach\r\n   ![Waiting for debugger to attach.png](screenshots/debugger/starting/Waiting%20for%20debugger%20to%20attach.png?raw=true)\r\n2. Breakpoints will be set\r\n3. The debugger will mark modules to be [interpreted](http://erlang.org/doc/man/int.html#ni-1)\r\n   1. The [code paths](http://erlang.org/doc/man/code.html#get_path-0) will be scanned for `.beam` files\r\n      * Code paths from the Elixir SDK will be skipped\r\n        ![Skipped.png](screenshots/debugger/starting/Skipped.png?raw=true)\r\n      * `.beam` files will be interpreted unless they match the Module Filter Pattern\r\n        ![Completed.png](screenshots/debugger/starting/Completed.png?raw=true)\r\n4. The debugger [attaches](http://erlang.org/doc/man/int.html#auto_attach-2) (so it can receive breakpoint events) and allows the debugged process to continue.\r\n   ![Attached.png](screenshots/debugger/starting/Attached.png?raw=true)\r\n\r\n#### Examining Suspended Program\r\n\r\n\r\n##### Variables\r\n\r\n![Binary.png](screenshots/debugger/variables/Binary.png?raw=true)\r\n\r\nBinaries show each byte at the byte's offset.\r\n\r\n![Bitstring.png](screenshots/debugger/variables/Bitstring.png?raw=true)\r\n\r\nBitstrings show each byte with any partial byte annotated with its bitwidth.\r\n\r\n![Boolean.png](screenshots/debugger/variables/Boolean.png?raw=true)\r\n\r\nBoolean variables are rendered as their value.\r\n\r\n![Charlist.png](screenshots/debugger/variables/Charlist.png?raw=true)\r\n\r\nCharlists show the integer values because they're treated as lists\r\n\r\n![Functions.png](screenshots/debugger/variables/Functions.png?raw=true)\r\n\r\nFunctions don't have literal representation, so the inspect form starting with `#Fun<...>` is shown\r\n\r\n![Lists.png](screenshots/debugger/variables/Lists.png?raw=true)\r\n\r\nLists render differently based on whether the list is improper or not.  Improper lists show the head and tail while proper lists show their element by offset.\r\n\r\n![Maps.png](screenshots/debugger/variables/Maps.png?raw=true)\r\n\r\nMaps render differently based on the key type.  If the map uses all `atom` keys, the key will equal the value in the nested children while non-atom keys are shown as entries at a specific offset with the key and value.   This is done, so that complex keys that have subterms can be expanded or collapsed, which is not possible for the simpler atom rendering.\r\n\r\n![Numbers.png](screenshots/debugger/variables/Numbers.png?raw=true)\r\n\r\nFloats and integers are rendered as literals.\r\n\r\n![Pid.png](screenshots/debugger/variables/Pid.png?raw=true)\r\n\r\nPids are broken up into their hidden `node, `id`, and `serial`.\r\n\r\n![String.png](screenshots/debugger/variables/String.png?raw=true)\r\n\r\nStrings show their literal value and unicode is fully supported.\r\n\r\n![Tuple.png](screenshots/debugger/variables/Tuple.png?raw=true)\r\n\r\nTuples show their elements at their offsets.\r\n\r\n![Rebound.png](screenshots/debugger/variables/Rebound.png?raw=true)\r\n\r\nWhile Elixir allows rebinding variable names, Erlang does not, so when viewed in the Variables pane, rebound variables will have an `@VERSION` after their name indicating which rebinding of a the variable is.\r\n\r\n#### Evaluate\r\n\r\nWhen stopped at a breakpoint, you can use the Evaluate button (it looks like a simple pocket calculator) to open an editor to type code to be executed in the current stack frame.\r\n\r\n![Evaluate.png](screenshots/debugger/Evaluate.png?raw=true)\r\n\r\nThe evaluator supports the full syntax.\r\n\r\n![Result.png](screenshots/debugger/evaluate/Result.png)\r\n\r\nThe result of evaluating the code with be shown as the value of `result` below the entered \"Expression\".\r\n\r\n![Exception.png](screenshots/debugger/evaluate/Exception.png?raw=true)\r\n\r\n![Typo.png](screenshots/debugger/evaluate/Typo.png?raw=true)\r\n\r\nErrors in the code will report back as a `result` tuple with an `:EXIT` tag.  This reflects that the error has crashed the process that was evaluating the code.  Thankfully, due to how how the interpreter is written, this does not lose the current stack frame and stepping or other evaluation can continue.\r\n\r\n### Run/Debug Configurations\r\n\r\n#### Distillery Release CLI ![Elixir Mix Icon with tapered neck to make a retort as used in distilleries](resources/icons/distillery-16.png?tra=true \"Distillery Release CLI Icon\")\r\n\r\n[Distillery](https://github.com/bitwalker/distillery)'s `mix release` produces a [CLI](https://en.wikipedia.org/wiki/Command-line_interface) for running the release.\r\n\r\n1. Build the release: `mix release`\r\n   ```shell\r\n   ==> Release successfully built!\r\n       You can run it in one of the following ways:\r\n         Interactive: _build/ENV/rel/NAME/bin/NAME console\r\n         Foreground: _build/ENV/rel/NAME/bin/NAME foreground\r\n         Daemon: _build/ENV/rel/NAME/bin/NAME start\r\n   ```\r\n2. Run > Edit Configurations...\r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n3. Click +\r\n4. Select \"Distillery Release CLI\"\r\n   ![Add New Distillery Release CLI](screenshots/features/run_debug_configurations/distillery_release_cli/Add%20New.png)\r\n5. Fill in the \"Release CLI Path\" with the full path to the `_build/ENV/rel/NAME/bin/NAME` path produed by `mix release` above.\r\n6. Fill in the \"Release CLI arguments\".\r\n   * `console` runs a shell with the release loaded similar to `iex -S mix`.\r\n   * `foreground` to runs the release without a shell, like `mix` or `mix run`.\r\n   The available commands are controlled by your release config `rel/config.exs` that Distillery uses.\r\n7. (Optionally) fill in \"`erl` arguments\" with arguments to `erl` before it runs `elixir`.  \r\n   This is the same as the `ERL_OPTS` environment variable supported by Distillery.\r\n8. (Optionally) fill in \"`elixir -extra` arguments\" with arguments to pass to `elixir` before it run the release.\r\n   This is the same as the `EXTRA_OPTS` environment variable supported by Distillery.\r\n9. (Optionally) change the Code Loading Mode\r\n   This is the same as the `CODE_LOADING_MODE` environment variable supported by Distillery.\r\n   * Use Default - use whatever is configured in `rel/config.exs`.  Don't set `CODE_LOADING_MODE` environment variable.\r\n   * `embedded` - load all code immediately on boot.  Set `CODE_LOADING_MODE=embedded`.\r\n   * `interactive` - load code on-demand as it is needed/referenced.  Set `CODE_LOADING_MODE=interactive`.\r\n10. (Optionally) set the \"Log Directory\"\r\n    This is the same as the `RUNNER_LOG_DIR` environment variable supported by Distillery.\r\n11. (Optionally) change \"Replace OS Vars\"\r\n    This is the same as the `REPLACE_OS_VARS` environment variable supported by Distillery.\r\n    * Use Default - use whatever is configured in `rel/config.exs`.  Don't set `REPLACE_OS_VARS` environment variable.\r\n    * `false` - don't replace \"${A_VAR_NAME}\" in the generated configuration with `A_VAR` environment variable at runtime.  Set `REPLACE_OS_VARS=false`.\r\n    * `true` - replace \"${A_VAR_NAME}\" in the generated configuration with `A_VAR` environment variable at runtime.  Set `REPLACE_OS_VARS=true`.\r\n12. (Optionally) set \"`sys.config` File\"\r\n    This is the same the `SYS_CONFIG_PATH` environment variable supported by Distillery.\r\n13. (Optionally) set \"Release Config Directory\".\r\n    This is the same as the `RELEASE_CONFIG_DIR` environment variable supported by Distillery.\r\n14. (Optionally) set \"Pipe directory\".\r\n    This is the same as the `PIPE_DIR` environment variable supported by Distillery.\r\n15. (Optionally) set \"Use Pseudo-terminal (PTY).\r\n    If checked use PTY for interactive shells.  Automatically on when \"Release CLI Arguments\" starts with one of the known interactive commands (`attach`, `console`, `console_boot`, `console_clean`, or `remote_console`).\r\n16. Fill in the \"Working directory.\r\n    * Type the absolute path to the directory.\r\n    * Select the path using directory picker by clicking the `...` button\r\n17. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n18. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\n##### Running\r\n\r\n1. Click the Run Arrow in the Toolbar to run the `_build/ENV/rel/NAME/bin/NAME`\r\n2. The Run pane will open\r\n   * If the either \"Use Pseduo-terminal (PTY)\" is checked of the \"Release CLI Arguments\" are known to need a PTY, an interactive shell will appear in the Run pane where you can enter `iex` commands.\r\n   * Otherwise, the output of running the command will be shown.\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. Add the `:debugger` application to your release\r\n   1. Open `rel/config.exs`\r\n   2. In the `release NAME` block, in the `set :applications` block add `:debugger`:\r\n      ```diff\r\n      --- a/rel/config.exs\r\n      +++ b/rel/config.exs\r\n      @@ -41,6 +41,8 @@ end\r\n       release :intellij_elixir do\r\n         set version: current_version(:intellij_elixir)\r\n         set applications: [\r\n      +    # needed for IntelliJ Elixir debugger\r\n      +    :debugger,\r\n           :runtime_tools\r\n         ]\r\n       end\r\n      ```\r\n3. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n4. Click the Debug bug in the Toolbar to debug the `mix test`s\r\n\r\n#### Elixir ![Elixir Drop](resources/icons/elixir-16.png \"Elixir Icon\")\r\n\r\nAlthough it is exceedingly rare, as most Elixir projects use `mix`, it is supported to run/debug `elixir` directly, such as when doing `elixir script.exs`.\r\n\r\n1. Run > Edit Configuations...  \r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"Elixir\"\r\n   ![Add New Elixir](screenshots/features/run_debug_configurations/elixir/Add%20New.png?raw=true \"Add New Elixir Run Configuration\")\r\n4. Fill in the \"`elixir` arguments\".\r\n5. (Optionally) fill in \"`erl` arguments\" with arguments to `erl` before it runs `elixir`.\r\n6. Fill in the \"Working directory\"\r\n  * Type the absolute path to the directory.\r\n  * Select the path using directory picker by clicking the `...` button\r\n7. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n8. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWith the Run Configuration defined, you can either Run or Debug `elixir`\r\n\r\n##### Running\r\n\r\n1. Click the Run arrow in the Toolbar to run `elixir`.\r\n   ![Run](screenshots/features/run_debug_configurations/elixir/running/Toolbar%20Button.png?raw=true \"Run Elixir Run Configuration\")\r\n2. The Run pane will open, showing the results of `elixir`.\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug `elixir`\r\n\r\n#### IEx (Interactive Elixir)\r\n\r\n`iex` run configurations allow you to run `iex` with IntelliJ Elixir attached.  It is most useful when debugging, but it also allows you save customizations in the configuration when it is more complicated than just `iex`.\r\n\r\n1. Run > Edit Configurations...\r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"IEx\"\r\n   ![Elixir Drop inside round-bottom flask](screenshots/features/run_debug_configurations/iex/Add%20New.png \"Add New IEx Configuration\")\r\n4. (Optionally) fill in \"`iex` arguments\" with arguments to `iex`.\r\n5. (Optionally) full in \"`erl` arguments\" with arguments to `erl` before it runs `iex`.\r\n6. Fill in the \"Working directory\"\r\n  * Type the absolute path to the directory.\r\n  * Select the path using directory picker by clicking the `...` button\r\n7. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n8. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWith the Run Configuration defined, you can either Run or Debug the `iex` configuration.\r\n\r\n##### Running\r\n\r\n1. Click the Run arrow in the Toolbar to run `iex`\r\n   ![Run](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/iex/running/Toolbar%20Button.png?raw=true \"Run Elixir Mix Run Configuration\")\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug `iex`.\r\n\r\n#### Mix Tasks ![Elixir Drop mixed in a round-bottom flask](resources/icons/mix-16.png?raw=true \"Mix Icon\")\r\n\r\nMuch like `rake` tasks in Rubymine, this plugin can run `mix` tasks.\r\n\r\n1. Run > Edit Configurations...\r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"Elixir Mix\"\r\n   ![Add New Elixir Mix](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_tasks/Add%20New.png?raw=true \"Add New Elixir Mix Run Configuration\")\r\n4. Fill in the \"`mix` arguments\" starting with the name of the `mix` task followed by any arguments to that task.\r\n5. (Optionally) fill in \"`elixir` arguments\" with arguments to `elixir` before it runs `mix`.\r\n6. (Optionally) fill in \"`erl` arguments\" with arguments to `erl` before it runs `elixir`.\r\n7. Fill in the \"Working directory\"\r\n  * Type the absolute path to the directory.\r\n  * Select the path using directory picker by clicking the `...` button\r\n8. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n9. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWith the Run Configuration defined, you can either Run or Debug the Mix Task\r\n\r\n##### Running\r\n\r\n1. Click the Run arrow in the Toolbar to run the `mix` task\r\n   ![Run](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_tasks/running/Toolbar%20Button.png?raw=true \"Run Elixir Mix Run Configuration\")\r\n2. The Run pane will open, showing the results of the `mix` task.\r\n    * If there is an error with a FILE:LINE stack stack_frame, it will be a clickable link that will take you to that location\r\n      ![Error link](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_tasks/running/Error%20Link.png?raw=true \"Clickable Error Link\")\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug the `mix` task\r\n\r\n#### IEx Mix\r\n\r\nIf you want to run `iex` in the context of the project, you need to run `iex -S mix`, but if you don't want to have to worry about forgetting whether it's `-s` or `-S` or if it is `mix -S iex` or `iex -S mix`, you can use an IEx Mix configuration.\r\n\r\n1. Run > Edit Configurations...\r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"IEx Mix\"\r\n   ![The Mix Icon with \"&gt;\" to indicate the IEX prompt](screenshots/features/run_debug_configurations/iex/mix/Add%20New.png?raw=true)\r\n4. (Optionally) fill in \"`mix` arguments\", such as `phx.server` if you want to launch [Phoenix](https://github.com/phoenixframework/phoenix) inside of `iex`.\r\n5. (Optionally) fill in \"`iex` arguments\" with arguments to `iex` before `-S mix`.\r\n6. (Optionally) full in \"`erl` arguments\" with arguments to `erl` before it runs `iex`.\r\n7. Fill in the \"Working directory\"\r\n  * Type the absolute path to the directory.\r\n  * Select the path using directory picker by clicking the `...` button\r\n8. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n9. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWih the Run Configuration defined, you can either Run or Debug `iex -S mix`\r\n\r\n##### Running\r\n\r\n1. Click the Run Arrow in the Toolbar to run `iex -S mix`\r\n\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug `iex -S mix`.\r\n\r\n#### `mix test`\r\n\r\nThe `mix test` task gets a special type of Run Configuration, `Elixir Mix ExUnit`.  Using this Run Configuration type instead, of the basic `Elixir Mix` Run Configuration will cause the IDE to attach a special formatter to `mix test`, so that you get the standard graphical tree of Test Results\r\n\r\nThe Run pane will show Test Results.  If there is a compilation error before or during `mix test`, it will be shown as a test failure.  If the compilation failure is in a `_test.exs` file can it can be inferred from the stacktrace, the compilation error will show up as a test failure in that specific module.\r\n\r\n`doctest` names are rearranged to emphasize the function being tested: `\"test doc at MODULE.FUNCTION/ARITY (COUNT)\"` becomes `\"MODULE.FUNCTION/ARITY doc (COUNT)\"`.  If `MODULE` is the same as the test case without the `Test` suffix, then `MODULE` is stripped too and the test name becomes only `FUNCTION/ARITY doc (COUNT)`.\r\n\r\n##### Creating `mix test` Run Configurations Manually\r\n\r\n1. Run > Edit Configurations...\r\n   ![Edit Run Configurations](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/Edit%20Configurations.png?raw=true \"Edit Run Configurations\")\r\n2. Click +\r\n3. Select \"Elixir Mix ExUnit\"\r\n   ![Add New Elixir Mix ExUnit](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/Add%20New.png?raw=true \"Add New Elixir Mix ExUnit Run Configuration\")\r\n4. Fill in the \"`mix test` arguments\" with the argument(s) to pass to `mix test`.  Normally, this will be a directory like `test`, relative to the \"Working directory\"\r\n5. (Optionally) fill in \"`elixir` arguments\" with the arguments to `elixir` before it runs `mix test`.\r\n6. (Optionally) fill in \"`erl` arguments\"` with the arguments to `erl` before it runs `elixir`.\r\n7. Fill in the \"Working directory\"\r\n  * Type the absolute path to the directory.\r\n  * Select the path using directory picker by clicking the `...` button\r\n8. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\r\n9. Click \"OK\" to save the Run Configuration and close the dialog\r\n\r\nWith the Run Configuration defined you can either Run or Debug the `mix test`s\r\n\r\n##### Running\r\n\r\n1. Click the Run arrow in the Toolbar to run the `mix test` task\r\n2. The Run pane will open showing the Test Results\r\n   ![Test Results](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/Test%20Results.png?raw=true \"Full Green Test Results\")\r\n\r\n##### Debugging\r\n\r\n1. (Optionally) before debugging, customize the modules that will be interpreted.\r\n   1. Run > Edit Configurations...\r\n   2. Click the \"Interpreted Modules\" tab next to default \"Configuration\" tab.\r\n   3. Enable/Disable \"Inherit Application Module Filters\".  Will change the Module Filters show in the below \"Do not interpreter modules matching patterns\" list.\r\n   4. Uncheck any inherited module filters that you would rather be interpreted and therefore debuggable\r\n   5. Click + to add module filters that are specific to this configuration.  This can be useful if you know interpreting a specific module in your project's dependencies or project leads to too much slowdown when debugging or causes the debugger to hang/crash.\r\n   6. Click - to remove configuration-specific module filters added with +.  Inherited module filters cannot be removed with -, they can only be disabled by unchecking.\r\n2. For how to use the debugger, including how to set breakpoints see the [Debugger](#debugger) section.\r\n3. Click the Debug bug in the Toolbar to debug the `mix test`s\r\n\r\nWhile you can create `Elixir Mix ExUnit` run configurations manually using the `Run > Edit Configurations...` menu, it is probably more convenient to use the context menu.\r\n\r\n##### Creating `mix test` Run Configurations from context\r\n\r\nThe context menu must know that the the directory, file, or line you are right-clicking is a test.  It does this by checking if the current directory or an ancestor is marked as a Test Sources Root.\r\n\r\n1. In the Project pane, ensure your OTP application's `test` directory is marked as a Test Sources Root\r\n  1. Check if the `test` directory is green.  If it is, it is likely a Test Sources Root.  This color may differ in different themes, so to be sure you can check the context menu\r\n  2. Right-click the `test` directory.\r\n  3. Hover over \"Mark Directory As &gt;\"\r\n    * If \"Unmark as Test Sources Root\" is shown, then the directory is already configured correctly, and create from context will work.\r\n      ![Mark Directory As &gt; Unmark as Test Sources Root](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/mark_directory_as/Unmark%20as%20Test%20Sources%20Root.png?raw=true \"Unmark Directory as Test Sources Root\")\r\n    * If \"Test Sources Root\" is shown, then the directory need to be configured by clicking that entry\r\n      ![Mark Directory As &gt; Test Sources Root](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/mark_directory_as/Test%20Sources%20Root.png?raw=true \"Mark Directory as Test Sources Root\")\r\n\r\n###### Creating/Running `mix test` Run Configurations from directory\r\n\r\n1. Right-click the directory in the Project pane\r\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\r\n  ![Run Mix ExUnit](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/context/directory/Run%20Mix%20ExUnit.png?raw=true \"Run Mix ExUnit from right-clicking directory\")\r\n  * If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Select the directory in the Project pane.\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\r\n\r\n###### Creating/Running `mix test` Run Configurations from file\r\n\r\n1. Right-click the file in the Project pane\r\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\r\n  * If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Select the directory in the Project pane.\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\r\n\r\nFinally, you can use the editor tabs\r\n\r\n1. Right-click the editor tab for the test file you want to run\r\n  ![Run Mix ExUnit](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/context/file/Run%20Mix%20ExUnit.png?raw=true \"Run Mix ExUnit from right-clicking file editor tab\")\r\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\r\n  * If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\r\n\r\n###### Creating/Running `mix test` Run Configurations from line\r\n\r\nIf you want to be able to run a single test, you can create a Run Configuration for a line in that test\r\n\r\n1. Right-click a line in the test file\r\n  ![Run Mix ExUnit](https://github.com/KronicDeth/intellij-elixir/blob/v8.0.0/screenshots/features/run_debug_configurations/mix_test/context/line/Run%20Mix%20ExUnit.png?raw=true \"Run Mix ExUnit from right-clicking line in editor\")\r\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\r\n  * If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\r\n\r\nAlternatively, you can use keyboard shortcuts\r\n\r\n1. Place the cursor on the line you want to test\r\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/11298459", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/11298459/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/11298459/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.5.0", "id": 11298459, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExMjk4NDU5", "tag_name": "v7.5.0", "target_commitish": "master", "name": "v7.5.0", "draft": false, "prerelease": false, "created_at": "2018-06-03T15:26:23Z", "published_at": "2018-06-03T16:13:34Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/7392007", "id": 7392007, "node_id": "MDEyOlJlbGVhc2VBc3NldDczOTIwMDc=", "name": "intellij-elixir-7.5.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 3403319, "download_count": 54, "created_at": "2018-06-03T16:13:05Z", "updated_at": "2018-06-03T16:13:09Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.5.0/intellij-elixir-7.5.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.5.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.5.0", "body": "# Thanks\r\n\r\n* For reporting that `true:` and `false:` did not work as keyword keys\r\n  * Wes Oldenbeuving ([@Narnach](https://github.com/Narnach))\r\n* For reporting that creating the editor panel for the BEAM Chunks Code editor at boot raised an \"Access is allowed from event dispatch thread only.\" error.\r\n  * [@mgom](https://github.com/mgom)\r\n  * Anton Medvedev ([@antonmedv](https://github.com/antonmedv))\r\n  * Bryan Clark ([@moenzuel](https://github.com/moenzuel))\r\n  * David ([@davit555](https://github.com/davit555))\r\n  * Stephan K\u00e4mper ([@s2k](https://github.com/s2k))\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n  * Tomasz Wi\u015bniewski ([@quaint](https://github.com/quaint))\r\n  * \u041e\u043b\u0435\u0433 \u0414\u0443\u043b\u0435\u0446\u043a\u0438\u0439 ([@dog-64](https://github.com/dog-64))\r\n  * Carlos Brito Lage ([@cblage](https://github.com/cblage))\r\n  * Markus Lervik ([@horros](https://github.com/horros))\r\n  * [@simapetr85](https://github.com/simapetr85)\r\n  * [@kevinhagel](https://github.com/kevinhagel)\r\n  * Yarik ([@yarikc](https://github.com/yarikc))\r\n  * Tomislav ([@trajakovic](https://github.com/trajakovic))\r\n* For reporting that creating the editor panel for the BEAM Chunks Documentation editor at boot raised an \"Access is allowed from event dispatch thread only.\" error.\r\n  * Ram Kumar ([@ramka001](https://github.com/ramka001))\r\n  * [@aby2503](https://github.com/aby2503)\r\n  * Zolt\u00e1n Mari\u0107 ([@zoltanmaric](https://github.com/zoltanmaric))\r\n  * David ([@davit555](https://github.com/davit555))\r\n* For requesting that `#{` auto-close with `}`\r\n  * Matt Briggs ([@mbriggs](https://github.com/mbriggs))\r\n* For reporting a potential race-condition that led to pre-maturely decompiling an incomplete `.beam` file when it is being rebuilt.\r\n  * Callum Dempsey Leach ([@mmacheerpuppy](https://github.com/mmacheerpuppy))\r\n  * Kevin Kaland ([@wizonesolutions](https://github.com/wizonesolutions))\r\n  * Iuri L. Machado ([@imetallica](https://github.com/imetallica))\r\n  * Fabian Sosa Escalada ([@zurcacielos](https://github.com/zurcacielos))\r\n* For reporting that the bad `.beam` files that are test cases in Erlang's `:kernel` test code were correctly caught by the bug reporter, but they should be ignored since they're a known failure.\r\n  * S. M. AMRAN ([@netcse](https://github.com/netcse))\r\n* For reporting the null argument being passed for `startingReference` in `ElixirPsiImplUtil.aliasToModular`.\r\n  * Szymon Je\u017c ([@szymon-jez](https://github.com/szymon-jez))\r\n  * Josh Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n  * Markus Lervik ([@horros](https://github.com/horros))\r\n\r\n# Changelog\r\n\r\n## v7.5.0\r\n\r\n### Enhancements\r\n* [#1055](https://github.com/KronicDeth/intellij-elixir/pull/1055) - Refactor `ElixirPsiImplUtil` into separate files tied to specific classes or interfaces to shrink its size. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1073](https://github.com/KronicDeth/intellij-elixir/pull/1073) - Complete `#{` with `}`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1109](https://github.com/KronicDeth/intellij-elixir/pull/1109) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Read Write Accessor Detector\r\n    * Variable/Parameter declarations/rebindings are highlighted as writes while other usages are highlighted as reads.\r\n  * Improved Find & Show Usages\r\n    * Added Find & Show Usages for Functions at declaration and usage site\r\n      * Multi-clause functions use all clauses as targets and find usages of all clauses.\r\n    * Improved Find & Show Usages for Modules/Aliases\r\n  * Improved Element Descriptions\r\n    * It is easier to distinguish `alias`es and the `defmodule` that is being aliased because element description now include `alias` or `defmodule` before the Alias name based on how the Alias is defined in the scope.\r\n    * Call definitions use the same presentation for Structure View and Find Usages, so that Compile/Runtime time icons, and visibility are the same in both.\r\n* [#1111](https://github.com/KronicDeth/intellij-elixir/pull/1111) - Regression test for [#1091](https://github.com/KronicDeth/intellij-elixir/issues/1091) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1120](https://github.com/KronicDeth/intellij-elixir/pull/1120) - Add regression tests for [#1116](https:/github.com/KronicDeth/intellij-elixir/issues/1116) that test that parameter and variables can be renamed. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1124](https://github.com/KronicDeth/intellij-elixir/pull/1124) - Update IntelliJ versions in build matrix to include `2018.1` and latest patch version of other versions. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1126](https://github.com/KronicDeth/intellij-elixir/pull/1126) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add Elixir 1.6.X to build matrix\r\n  * Update grammar and quoter to match native 1.6 behavior when SDK is >= 1.6.\r\n  * New default SDK level is 1.7 to handle builds from `master`.\r\n* [#1127](https://github.com/KronicDeth/intellij-elixir/pull/1127) - Regression test for [#1105](https://github.com/KronicDeth/intellij-elixir/issues/1105) - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#1056](https://github.com/KronicDeth/intellij-elixir/pull/1056) - Certain `.beam` files in the OTP source are purposely invalid, so ignore them when trying to parse and don't log the expected error. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1060](https://github.com/KronicDeth/intellij-elixir/pull/1060) - Log available bytes and total size when header is not `FOR1`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1071](https://github.com/KronicDeth/intellij-elixir/pull/1071) - `erl_abstract_code` format `Dbgi` chunks can now be navigated similar to how `elixir_erl` format Dbgi chunks can be navigated.  Instead of converting the [Erlang Abstract Code](http://erlang.org/doc/apps/erts/absform.html) back to Erlang, which would not be highlighted if [intellij-erlang](https://github.com/ignatov/intellij-erlang) and requires the user to know Erlang, the Erlang Abstract Code is translated back to Elixir source, so you can use the Dbgi chunk view to translate Erlang to Elixir. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1111](https://github.com/KronicDeth/intellij-elixir/pull/1111) - Allow zero or more new lines after the struct name before the opening curly brace (`{`). - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1112](https://github.com/KronicDeth/intellij-elixir/pull/1112) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * In order to prevent `Access is allowed from event dispatch thread only` errors when creating read-only code editor in subtabs of the BEAM Chunks editor, only create those editors when their parent tab is selected.\r\n\r\n    Affected tabs:\r\n    * Code (Elixir & Erlang)\r\n    * ExDc\r\n    * Dbgi (Elixir & Erlang)\r\n* [#1114](https://github.com/KronicDeth/intellij-elixir/pull/1114) - Check for suffix instead of full match to detect predefined macros when annotating.  Location strings have become more complex, such as including the file path for root level modules, so the old exact matching on the module name no longer works. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1120](https://github.com/KronicDeth/intellij-elixir/pull/1120) - Restore parameter and variable rename.  It broke because the changes to make Find Usages work and have Go To Declaration default to Find Usage when there is only one target disabled the default selected element code that the `VariableInplaceRenameHandler` used. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1121](https://github.com/KronicDeth/intellij-elixir/pull/1121) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Allow module attribute declaration to resolve to itself, so that unused module attributes don't say they can't find the declaration.\r\n  * Restore rename module attributes.\r\n* [#1127](https://github.com/KronicDeth/intellij-elixir/pull/1127) - Allow `true` and `false` to be keyword keys. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n## Features\r\n\r\n### `.beam` Files\r\n\r\n#### BEAM Chunks\r\n\r\n##### `Dbgi`\r\n\r\n###### Tab\r\n\r\nThe `Dbgi` tab appearance varies based on whether it was created with Erlang or Elixir, reflecting the fact that the Dbgi format is dependent on the backend that wrote it.\r\n\r\n####### Elixir (`:elixir_erl` backend)\r\n\r\nThe `Dbgi` tab show the single value map entries: `:file`, `:line`, and `:module`.\r\n\r\n![Singletons](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/Singletons.png?raw=true)\r\n\r\nFor the multi-value keys: `:attributes`, `:compile_opts`, and `:definitions`, there are individual tabs.\r\n\r\n![Multivalue Tabs](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/Multivalue%20Tabs.png?raw=true)\r\n\r\n######## Attributes\r\n\r\nThe Attributes tab has the same format as the `Attr`s chunk.\r\n\r\n![Dbgi Attributes Table](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/attributes/Table.png?raw=true)\r\n\r\n######## Compile Options\r\n\r\nThe Compile Options tab is usually empty, much like the `CInf` `options` key for Erlang.\r\n\r\n![Table](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/compile_options/Table.png?raw=true)\r\n\r\n######## Definitions\r\n\r\nThe Definitions tab is split between a tree of Module, Function/Arity and clauses.\r\n\r\n![Tree](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Tree.png?raw=true)\r\n\r\nClicking on a clause will show only that clause, but clicking on a higher level in the tree will show all clauses in the function or the entire Module.\r\n\r\n![Clause](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Clause.png?raw=true)\r\n![Function](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Function.png?raw=true)\r\n![Module](screenshots/features/beam_files/beam_chunks/dbgi/tab/elixir_erl/definitions/Module.png?raw=true)\r\n\r\nThe AST stored in the `definitions` tab and the process of converting it back to code is not format preserves, so it will not look precisely like the source code as the AST has undergone some macro expansion before its put in the `Dbgi` chunk.  *As common idioms are understood, reversals will be add to the renderer.*\r\n\r\n####### Erlang (`:erlang_abstract_code` backend)\r\n\r\nThe `Dbgi` tab has Abstract Code and Compile Options tabs.\r\n\r\n![Dbgi Tabs](screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/Tabs.png?raw=true)\r\n\r\n######## Abstract Code\r\n\r\nThe Abstract Code tab is split between a tree of Attributes, Functions, Function/Arity, and clauses.\r\n\r\n![Tree](screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/Tree.png?raw=true)\r\n\r\nClicking on a clause will show only that clause, but clicking on a higher level in the tree will show all clauses in the function or the entire Module.\r\n\r\n![Clause](screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Clause.png?raw=true)\r\n![Function](screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Function.png?raw=true)\r\n![Module](screenshots/features/beam_files/beam_chunks/dbgi/tab/erlang_abstract_code/abstract_code/functions/Module.png?raw=true)\r\n\r\nThe abstract code stored in the `:erlang_abstract_code` backend format is the [Erlang Abstract Format](http://erlang.org/doc/apps/erts/absform.html#id95337).  Instead of converting the Erlang Abstract Format back to Erlang, which would require [IntelliJ Erlang](https://github.com/ignatov/intellij-erlang) to highlight and annotate and for you to be used to reading Erlang, the Erlang Abstract Format is translated back to Elixir. **Using the BEAM Chunk Dbgi viewer can be a way to convert compiled Erlang code to Elixir source automatically.**\r\n\r\n### Find Usages and Show Usages\r\n\r\nFind Usages is a feature of JetBrains IDEs.  It is the dual of Go To Declaration.  While Go To Declaration jumps from a usage to the declaration, Find Usages finds all usages that could jump to a declaration.  When used on a usage, Find Usage first finds the declaration(s) and then finds usages of those declaration(s).\r\n\r\nFind Usages will open all the found usages in the Find Tool Window (unless you have it configured to not open and jump direct if only one usage is found).  If you want to jump to usages quickly, Show Usages, which opens a lookup dialog at the cursor and allows you to select a usage to jump to in the lookup dialog with the arrow keys may be more useful.\r\n\r\n#### Function\r\n\r\n1. Place the cursor over the name of a function, such as `hd` in the definition `def hd([h | t]]) do` or `hd` in a usage `hd(list)`.\r\n2. Active the Find Usages action with one of the following:\r\n   * `Alt+F7`\r\n   * Select Edit &gt; Find &gt; Find Usages from the menu.\r\n3. A Find Usages dialog will appear in the Find Tool Window.\r\n\r\nIf a function has multiple clauses, all clauses for the function will be resolved and used as targets.\r\n\r\n![Multiple Clauses.png](screenshots/find_usages/Multiple%20Clauses.png?raw=true)\r\n\r\nYou can be sure that all clauses were correctly identified as targets because of the multiple entries in the top \"Functions\" target grouping.\r\n\r\n![Multiple Functions.png](screenshots/find_usages/Multiple%20Functions.png?raw=true)\r\n\r\nIf instead of bringing up the Find Tool Window, you'd like a lookup dialog above the cursor, you can use Show Usages.\r\n\r\n1. Place the cursor over the name of a function, such as `hd` in `def hd([h | t]]) do`\r\n2. Active the Show Usages action with one of the following:\r\n   * `Alt+Cmd+F7`\r\n   * Select Edit &gt; Find &gt; Show Usages from the menu.\r\n3. A Usages lookup will appear above the cursor.\r\n4. Select an element from the lookup to jump to that usage\r\n\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9991199", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9991199/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/9991199/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.4.0", "id": 9991199, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTk5OTExOTk=", "tag_name": "v7.4.0", "target_commitish": "master", "name": "v7.4.0", "draft": false, "prerelease": false, "created_at": "2018-03-07T22:00:21Z", "published_at": "2018-03-08T03:13:41Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/6441734", "id": 6441734, "node_id": "MDEyOlJlbGVhc2VBc3NldDY0NDE3MzQ=", "name": "intellij-elixir-7.4.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2817594, "download_count": 49, "created_at": "2018-03-08T02:59:33Z", "updated_at": "2018-03-08T02:59:40Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.4.0/intellij-elixir-7.4.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.4.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.4.0", "body": "# Thanks\r\n\r\n* For reporting `bcrypt` killed the debugger\r\n  * Dominik Guzei ([@DominikGuzei](https://github.com/DominikGuzei))\r\n  * [@SyedWasiHaider](https://github.com/SyedWasiHaider)\r\n  * Alastair Surin ([@asurin](https://github.com/asurin))\r\n* For reporting `lz4` and `re2` killed the debugger\r\n  * Samir Sabri ([@hopewise](https://github.com/hopewise))\r\n* For reporting `asdf` SDK incompatibilities and correct configuration\r\n  * [@vheathen](https://github.com/vheathen)\r\n  * C\u00e9sar Izurieta ([@cesarizu](https://github.com/cesarizu))\r\n  * Marcos Benatti Lauer ([@mbenatti](https://github.com/mbenatti))\r\n  * Tim Gilbert ([@timgilbert](https://github.com/timgilbert))\r\n  * Kevin Kaland ([@wizonesolutions](https://github.com/wizonesolutions))\r\n  * Rodney Folz ([@folz](https://github.com/folz))\r\n  * Tsuharesu ([@tsuharesu](https://github.com/tsuharesu))\r\n  * Jefferson Queiroz Venerando ([@shamanime](https://github.com/shamanime))\r\n  * Nils Ivanson ([@nivanson](https://github.com/nivanson))\r\n  * Percy Grunwald ([@pgrunwald](https://github.com/pgrunwald))\r\n* For finally forcing me to need to use ASDF for [his Nerves training](https://github.com/GregMefford/presentations/blob/master/2018-02-22_less-pain-embedded-systems-with-elixir-and-nerves/README.md), so I had to install and make it as an SDK \ud83d\ude00 \r\n  * Greg Mefford ([@GregMefford](https://github.com/GregMefford))\r\n\r\n# Changelog\r\n\r\n## v7.4.0\r\n\r\n### Enhancements\r\n* [#1036](https://github.com/KronicDeth/intellij-elixir/pull/1036) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Clean up debugger\r\n    * `mix format` debugger\r\n    * Restructure debugger.\r\n    * Convert IDE-side to Kotlin\r\n  * Allow files to skip interpreting in the debugger to be configured in Preferences > Build, Execution, Deployment > Debugger > Stepping.  It is recommended to customize these settings instead of using `INTELLIJ_ELIXIR_DEBUG_BLACKLIST` environment variable.  `INTELLIJ_ELIXIR_DEBUG_BLACKLIST` should be reserved to additional modules that need to not be interpreted only for specific runs.\r\n    * Ship a set of patterns that excludes Elixir standard library by default and most `mix phx.new` dependencies, so that debugger boots faster for most users.\r\n  * Support debugging `.eex` templates\r\n    * Detect MFAs that refer to template functions in Phoenix view modules derived from `.eex` template files, to allow stepping through Elixir tags in those templates.\r\n    * Allow setting breakpoints in `.eex` files when a `.beam` file using the template's relative can be found.  **This means that the Phoenix view module `.beam` file must exist in `_build` prior to setting a breakpoint.  Run the Run Configuration once, before debugging to complete the build if setting a breakpoint does not work.**\r\n      * `.beam` files are now indexed by their `Line` chunk `filenames` subsection to power this feature.\r\n  * Cache `.beam` `Beam` `Cache` on `VirtualFile`.  Cache is invalidated and refreshed on modification of the `VirtualFile`.  Cache is used for both BEAM Chunks read-only editors and `Line` chunk file name index.\r\n* [#1037](https://github.com/KronicDeth/intellij-elixir/pull/1037) - Each package manager uses a different root path and which directory to pick above the ebins varies by package manager, so document package manager install paths. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1041](https://github.com/KronicDeth/intellij-elixir/pull/1041) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Restructure JPS code to remove  prefixes and suffixes in class names that redundant with package names.\r\n  * Show warnings-as-errors checkbox as [original blocker](https://github.com/elixir-lang/elixir/issues/3116#issuecomment-87316125) has been fixed for awhile and `ProcessAdapter` turns warning text into errors that IDE understands.\r\n* [#1045](https://github.com/KronicDeth/intellij-elixir/pull/1045) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * When importing Mix projects, don't exclude compiler output from indexing because it is needed to resolve Elixir Line Breakpoints in EEx files.\r\n    * For pre-existing Elixir modules, they will be converted to not exclude compiler output.\r\n* [#1047](https://github.com/KronicDeth/intellij-elixir/pull/1047) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Exclude known uninterpretable modules\r\n    * `Bcrypt.Base`\r\n    * `:erocksdb`\r\n    * `:lz4`\r\n    * `:re2`\r\n\r\n### Bug Fixes\r\n* [#1036](https://github.com/KronicDeth/intellij-elixir/pull/1036) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Turn off `dbeug` flag when starting `IntelliJElixir.DebugServer`, which removes the `*DBG*` statements that kept printing in the ExUnit output when using the debugger.\r\n  * Fix conversion of Elixir module names to Erlang module names for `INTELLIJ_ELIXIR_DEBUG_BLACKLIST` environment variable.\r\n  * Cache `null` SDK `Release`, so that when Elixir is configured, but the Erlang path is broken (such as after a `brew unlink erlang`, the `Release` calculating using `elixir`\r\n  * Implement `Macro.atomToString`\r\n  * Properly render improper lists\r\n    * Show improper list with explicit `|` for presenation\r\n    * Children of improper lists show `head` and `tail` instead of index.\r\n  * Show Elixir indices (`0`-based) instead of Erlang indices (`1`-based`) for lists and tuples.\r\n* [#1037](https://github.com/KronicDeth/intellij-elixir/pull/1037) - Loosen check on the path suffix by looking for only `lib` and not `lib/erlang/lib`, so that it works for both Homebrew's `ebin` paths and ASDF's `ebin` paths. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#1041](https://github.com/KronicDeth/intellij-elixir/pull/1041) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove unused `MixBuilder` because building with `mix` is just an option in `ElixirBuilder`.\r\n  * Harmonize JPS compile server's invoking of `mix` to pattern used in Run Configuration runners.\r\n    * Use `mix` path from SDK\r\n  * No longer say the build succeeded when there are obvious `mix` errors\r\n    * Parse `mix compile` output for compilation errors and warnings\r\n      * When \"warnings-as-errors\" is enabled in \"Elixir compiler\" settings, IDE also shows warnings as errors.\r\n      * IDE will know build failed if there are errors (or warnings treated as errors) and properly allow rebuild.\r\n* [#1045](https://github.com/KronicDeth/intellij-elixir/pull/1045) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Group alternatives in `erlang_module_name_patterns_to_regex` before pinning: I always forget that the `|` swallows the `^` and `$` in regexes.\r\n  * Reject vs filter accumulation got flipped when switching to `Enum.reduce` to track rejections.\r\n* [#1047](https://github.com/KronicDeth/intellij-elixir/pull/1047) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Some modules, like NIF modules, can't be loaded into the debugger. Individual modules not being debuggable shouldn't kill the debugger task, so rescue the known error and record it for later debugging of the debugger.\r\n  * Add `:` to start of Erlang module names for included debugger excludes\r\n\r\n# README updates\r\n\r\n### Debugger\r\n\r\n#### Basics\r\n\r\n##### Excluding Modules\r\n\r\nBy default, the debugger will scan all the [load paths](https://hexdocs.pm/mix/Mix.Project.html#load_paths/1) and [build path](https://hexdocs.pm/mix/Mix.Project.html#build_path/1) for `.beam` files and the corresponding modules will be [interpreted](http://erlang.org/doc/man/int.html#ni-1) which causes the Module's [Erlang abstract code chunk](http://beam-wisdoms.clau.se/en/latest/indepth-beam-file.html#abst-abstract-syntax-tree) to be interpreted in Erlang instead of the [bytecode chunk](#code) being executed in the C parts of the BEAM.  This interpretation is **much** slower than execution, so by default all of the Elixir standard library and the common modules installed in Phoenix projects are excluded from being interpreted when the debugger starts.  The modules can be still be stepped into or have breakpoints explicitly set.\r\n\r\n1. Preferences > Build, Execution, Deployment > Debugger > Stepping\r\n2. Scroll to Elixir\r\n\r\n![Do Not Step Into The Modules](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Do%20Not%20Step%20Into%20The%20Modules.png?raw=true)\r\n\r\nYou can customize these module patterns as an application setting.\r\n\r\n###### Disabling Existing Module Patterns\r\n\r\n1. Preferences > Build, Execution, Deployment > Debugger > Stepping\r\n2. Scroll to Elixir\r\n3. Click the Checkbox next to the pattern you want to disable\r\n4. Click Apply to save or OK to save and close Preferences\r\n\r\n![Disable](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Disable.png)\r\n\r\n###### Editing Existing Module Patterns\r\n\r\n1. Preferences > Build, Execution, Deployment > Debugger > Stepping\r\n2. Scroll to Elixir\r\n3. Click the pattern text box\r\n4. Click Apply to save or OK to save and close Preferences\r\n\r\n![Edit](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Edit.png?raw=true)\r\n\r\n###### Removing Existing Module Patterns\r\n\r\n1. Preferences > Build, Execution, Deployment > Debugger > Stepping\r\n2. Scroll to Elixir\r\n3. Click the row of the pattern you want to remove\r\n4. Click the \"-\" Remove button.\r\n5. Click Apply to save or OK to save and close Preferences\r\n\r\n![Remove](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Remove.png?raw=true)\r\n\r\n![Removed](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Removed.png?raw=true)\r\n\r\n###### Adding New Module Patterns\r\n\r\n1. Preferences > Build, Execution, Deployment > Debugger > Stepping\r\n2. Scroll to Elixir\r\n3. Click the \"+\" Add button\r\n4. Click the default \"*\" pattern to edit it\r\n5. Click Apply to save or OK to save and close Preferences\r\n\r\n![Add](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Add.png?raw=true)\r\n\r\n![Added](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/excluding_modules/Added.png?raw=true)\r\n\r\n##### Environment Variables\r\n\r\nIf you want to customize the modules to ignore on a per-Run-Configuration basis, you can set an environment variable in the Run Configuration.\r\n\r\n| Variable                           | Example    | Description                     |\r\n| -----------------------------------|------------| --------------------------------|\r\n| INTELLIJ\\_ELIXIR\\_DEBUG\\_BLACKLIST | iconv,some | Excluding modules from debugger |\r\n\r\n*Notice: If you want non `Elixir.` module in blacklist, write it with: `:`. This rule applies only to module atoms.*\r\n\r\n#### Breakpoints\r\n\r\n##### Creating Line Breakpoints\r\n\r\nA line breakpoint is a breakpoint assigned to a specific line in the source code.\r\n\r\nLine breakpoints can be set on executable lines. Comments, declarations and empty lines are not valid locations for the line breakpoints.  Line break points can be set in `.ex` and `.eex` files.\r\n\r\n![ex](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/breakpoints/creating/ex.png?raw=true)\r\n\r\n`.eex` line breaks will only work on Elixir code that is used in Phoenix view modules.\r\n\r\n![eex](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/debugger/breakpoints/creating/eex.png?raw=true)\r\n\r\n`.eex` breakpoints only work if a `.beam` file using the template's relative can be found.  **This means that the Phoenix view module `.beam` file must exist in `_build` prior to setting a breakpoint.  Run the Run Configuration once, before debugging to complete the build if setting a breakpoint does not work.**\r\n\r\n1. Place the caret on the desired line of the source code.\r\n2. Do one of the following:\r\n   * Click the left gutter area at a line where you want to toggle a breakpoint\r\n   * Run > Toggle Line Breakpoint\r\n   * `Cmd+F8`\r\n\r\n\r\n### Building/Compiling\r\n\r\n#### Settings\r\n\r\n![Build, Execution, Deployment > Compiler > Elixir Compiler](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/Settings.png?raw=true \"Elixir Compiler Settings\")\r\n\r\n* Compile project with mix (use `mix compile` instead of `elixirc` directly)\r\n* Attach docs (don't use `--no-docs` `elixirc` flag)\r\n* Attach debug info (don't use `--no-debug-info` `elixirc` flag)\r\n* Warnings as errors (use `--warnings-as-errors` `elixirc` flag)\r\n* Ignore module conflict (use `--ignore-module-conflict` `elixirc` flag)\r\n\r\n#### Build Messages\r\n\r\n![Source](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/errors_and_warnings/Source.png?raw=true)\r\n\r\nIf a file has errors and warnings, they are group together in Build Messages under that file.\r\n\r\n![Errors and Warnings](https://kronicdeth.github.com/KronicDeth/intellij-elixir/raw/master/screenshots/features/building/messages/errors_and_warnings/Errors%20and%20Warnings.png)\r\n\r\n##### Jump To Source\r\n\r\nYou can jump to errors and warnings in the Build Messages\r\n\r\n1. Highlight the error or warning you want to jump to source\r\n2. Do one of the following\r\n\r\n   1. Right-Click the error or warning\r\n   2. Select Jump to Source from the context menu\r\n\r\n      ![Jump to Source](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/Jump%20to%20Source.png?raw=true)\r\n\r\n   OR\r\n\r\n   1. Click the error or warning\r\n   2. Press Cmd+Down\r\n\r\nYou can also turn on Autoscroll to Source, which will Jump To Source whenever you Click or select an error or warning.\r\n\r\n![Autoscroll to Source](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/Autoscroll%20to%20Source.png?raw=true)\r\n\r\n##### Warnings as Errors\r\n\r\n![Setting](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/warnings_as_errors/Setting.png?raw=true)\r\n\r\nIf you enable Warnings as Errors in the settings, then the Warnings will be treated as Errors by `elixirc` and `mix` and the Build Messages will show the Warnings as Errors.\r\n\r\n![Messages](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/warnings_as_errors/Messages.png?raw=true)\r\n\r\nIf only warnings remain in the source.\r\n\r\n![Source](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/warnings_as_errors/warnings_only/Source.png?raw=true)\r\n\r\nWith Warnings as Errors On, all the Warnings will appear as Errors and still fail the build\r\n\r\n![Errors](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/warnings_as_errors/warnings_only/Errors.png?raw=true)\r\n\r\nWith Warnings as Errors Off, the Warnings will appear as Warnings and the build will succeed\r\n\r\n![Warnings](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/building/messages/warnings_as_errors/warnings_only/Warnings.png?raw=true)\r\n\r\n### SDK\r\n\r\n#### Package Manager Install Locations\r\n\r\nWhen configuring an SDK, if you don't want to use the suggested SDK home path, you'll need to know where each package manager puts Elixir and Erlang.\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Package Manager</th>\r\n      <th>SDK Type</th>\r\n      <th>Directory</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td rowspan=\"3\">\r\n        <a href=\"https://github.com/asdf-vm/asdf\">ASDF</a>\r\n      </td>\r\n      <td>Elixir SDK</td>\r\n      <td>\r\n        <code>~/.asdf/installs/elixir/VERSION</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang SDK</td>\r\n      <td rowspan=\"2\">\r\n        <code>~/.asdf/installs/erlang/VERSION</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang for Elixir SDK</td>\r\n    </tr>\r\n    <tr>\r\n      <td rowspan=\"3\">\r\n        <a href=\"https://brew.sh/\">Homebrew</a>\r\n      </td>\r\n      <td>Elixir SDK</td>\r\n      <td>\r\n         <code>/usr/local/Cellar/elixir/VERSION</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang SDK</td>\r\n      <td rowspan=\"2\">\r\n        <code>/usr/local/Cellar/erlang/VERSION/lib/erlang</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang for Elixir SDK</td>\r\n    </tr>\r\n    <tr>\r\n      <td rowspan=\"3\">\r\n        <a href=\"https://nixos.org/nix/download.html\">Nix</a>\r\n      </td>\r\n      <td>Elixir SDK</td>\r\n      <td>\r\n         <code>/nix/store/SHA256-elixir-VERSION/lib/elixir</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang SDK</td>\r\n      <td rowspan=\"2\">\r\n        <code>/nix/store/SHA256-erlang-VERSION/lib/erlang</code>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>Erlang for Elixir SDK</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nIf you can can't see hidden files, such as `.asdf` in your home directory (`~`), or system directories, such as `/usr`, you will need to enable Show Hidden Files in the Home Path dialog.\r\n\r\nIf your dialog looks like this, click the Show Hidden Files button\r\n\r\n![IntelliJ](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.4.0/screenshots/features/sdk/show_hidden_files_and_directories/IntelliJ.png?raw=true)\r\n\r\nIf you're using the macOS native File Picker, use the keyboard shortcut \u2318\u21e7. (Command+Shift+Period)."}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9565352", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9565352/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/9565352/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.3.0", "id": 9565352, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTk1NjUzNTI=", "tag_name": "v7.3.0", "target_commitish": "master", "name": "v7.3.0", "draft": false, "prerelease": false, "created_at": "2018-02-07T03:28:49Z", "published_at": "2018-02-07T03:46:02Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/6127876", "id": 6127876, "node_id": "MDEyOlJlbGVhc2VBc3NldDYxMjc4NzY=", "name": "intellij-elixir-7.3.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2727074, "download_count": 25, "created_at": "2018-02-07T03:45:53Z", "updated_at": "2018-02-07T03:45:56Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.3.0/intellij-elixir-7.3.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.3.0", "body": "# Thanks\r\n* For reporting `StreamEx` is missing `nonNull` on some IDEs/versions\r\n  * [@runflowcode](https://github.com/runflowcode)\r\n  * Steve Morin ([@smorin](https://github.com/smorin))\r\n  * IgoR Taskovski ([@igortaskovski](https://github.com/igortaskovski))\r\n  * Jo\u00e3o Veiga ([@jveiga](https://github.com/jveiga))\r\n  * [@JohnConnor1969](https://github.com/JohnConnor1969)\r\n  * Kalpa Vrikcha ([@kalpabarbosa](https://github.com/kalpabarbosa))\r\n  * \u957f\u6bdb\u662f\u72d7 ([@www3838438](https://github.com/www3838438))\r\n  * [@VladRose](https://github.com/VladRose)\r\n  * Pavel ([@birladeanuPavel](https://github.com/birladeanuPavel))\r\n  * Dmitry Zakharov ([@zakharov-dy](https://github.com/zakharov-dy))\r\n  * Nick Gravel ([@nickgravel](https://github.com/nickgravel))\r\n  * Carlo Pati ([@deemaxx](https://github.com/deemaxx))\r\n  * [@MortadaAK](https://github.com/MortadaAK)\r\n\r\n#  Changelog\r\n\r\n## v7.3.0\r\n\r\n### Enhancements\r\n* [#988](https://github.com/KronicDeth/intellij-elixir/pull/988) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update build matrix\r\n    * Update IntelliJ IDEA version `2017.3` to `2017.3.2`\r\n    * Update Elixir version `1.5.2` to `1.5.3`\r\n* [#1015](https://github.com/KronicDeth/intellij-elixir/pull/1015) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add supplemental file editor for `.beam` files: \"BEAM Chunks\".  The decompiled binary file will continue to be shown on the default \"Text\" editor tab.\r\n    ![screen shot 2018-02-01 at 6 38 07 pm](https://user-images.githubusercontent.com/298259/35710803-17198a52-077f-11e8-8991-2aebe7f3eb38.png)\r\n    The BEAM Chunks editor is subdivided into further tabs, one for each chunk in the `.beam` file.\r\n    ![screen shot 2018-02-01 at 6 45 23 pm](https://user-images.githubusercontent.com/298259/35710979-1d367930-0780-11e8-8a40-acaef92e621c.png)\r\n    The tabs are listed in the order that the chunks occur in the `.beam` file.\r\n    * The `Atom` chunk holds `LATIN-1` atoms while `AtU8` holds `UTF8` atoms.  There will only be one of these atom-related chunks in any given `.beam` file.  `AtU8` is used in newer versions of OTP that support UTF8 atoms.\r\n\r\n      The `Atom`/`AtU8` tab shows a table with the columns\r\n\r\n      | Column     | Description                                                                                                           | Source  |\r\n      |:-----------|:----------------------------------------------------------------------------------------------------------------------|:--------|\r\n      | Index      | Which is 1-based to match Erlang convention.  In the `Code` chunk, `atom(0)` is reserved to always translate to `nil` | Derived |\r\n      | Byte Count | The byte count for the atom's bytes                                                                                   | Raw     |\r\n      | Characters | From encoding the bytes as LATIN-1 for `Atom` chunk or UTF-8 for `AtU8` chunk                                         | Derived |\r\n\r\n      ![screen shot 2018-02-01 at 7 01 43 pm](https://user-images.githubusercontent.com/298259/35711460-9aeea9ae-0782-11e8-9d3f-074c05326b4c.png)\r\n\r\n      Index 1 is always the module name for the `.beam` file.  Since `.beam` is originally an Erlang format, for Elixir modules, you'll see the full atom name of with the `Elixir.` prefix instead of the Alias name used in Elixir source.\r\n    * The `Attr` chunk holds the module attributes, but only those that are persisted.\r\n\r\n      The `Attr` tab shows a table with the columns\r\n\r\n      | Column | Description                                                                                                      | Source |\r\n      |:-------|:-----------------------------------------------------------------------------------------------------------------|:-------|\r\n      | Key    | Attribute name                                                                                                   | Raw    |\r\n      | Value  | Attribute value. **Note: The value always appears as a list as read from the binary format.  I don't know why.** | Raw    |\r\n\r\n      ![screen shot 2018-02-02 at 2 34 22 pm](https://user-images.githubusercontent.com/298259/35753689-576eaf18-0826-11e8-838c-f00fc93fd667.png)\r\n\r\n      All modules will have a `:vsn` attribute that is either set explicitly or defaults to the MD5 of the module.\r\n    * The `CInf` chunk is the Compilation Information for the Erlang or Erlang Core compiler.  Even Elixir modules have it because Elixir code passes through this part of the Erlang Core compiler.\r\n\r\n      The `CInf` tab shows a table with the columns\r\n\r\n      | Column | Description     | Source |\r\n      |:-------|:----------------|:-------|\r\n      | Key    | Option name     | Raw    |\r\n      | Value  | Inspected value | Raw    |\r\n\r\n      ![screen shot 2018-02-02 at 3 19 50 pm](https://user-images.githubusercontent.com/298259/35755542-4d769c76-082d-11e8-84d9-ef04ff45b346.png)\r\n    * The `Code` chunk contains the byte code for the module.  It is encoded in [BEAM Compact Term Encoding](http://beam-wisdoms.clau.se/en/latest/indepth-beam-file.html#beam-compact-term-encoding), which differs from the binary format produced by `term_to_binary`.\r\n\r\n      The `Code` tab shows a read-only editor with one byte code operation on each line.  For ease of reading, operations are grouped by function and then label block with indentation indicating scope.\r\n\r\n      ![screen shot 2018-02-02 at 9 35 59 pm](https://user-images.githubusercontent.com/298259/35762701-18b0882e-0861-11e8-9d3d-675811bd45dd.png)\r\n\r\n      By default as many references to other chunks and references to other parts of `Code` chunk are inlined to ease understanding.  If you want to see the raw byte code operations, you can turn off the various inliners.\r\n    * The `Dbgi` chunk contains Debug Info.  It was [introduced](https://github.com/erlang/otp/pull/1367) in OTP 20 as a replacement for the `Abst` chunk.  While the `Abst` chunk was required to contain the Erlang AST, the `Dbgi` format can contain the debug info for other languages, such as Elixir `quoted` form AST.\r\n\r\n      Because the format is language neutral, the format is a set of nested, versioned formats.  The outer most layer is\r\n\r\n      ```elixir\r\n      {:debug_info_v1, backend, metadata | :none}\r\n      ```\r\n\r\n      For `:debug_info_v1`, Elixir's `backend` is `:elixir_erl`.  The `metadata` for `:elixir_erl` is further versioned: `{:elixir_v1, map, specs}`.\r\n\r\n      `map` contains the bulk of the data.\r\n\r\n      | Key             | Value                                                                                                                                                                                                          |\r\n      |:----------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n      | `:attributes`   | Attributes similar to the `Attr` chunk, but at the Elixir, instead of Core Erlang level.  Usually they match with the exception that `attributes` doesn't contain `vsn` when `Attr` contains the `MD5` version |\r\n      | `:compile_opts` | Compilation options similar to `CInf` chunk's `options` key, but at for Elixir, instead of Core Erlang level.                                                                                                  |\r\n      | `:definitions`  | The Elixir `quoted` AST for reach function clause.                                                                                                                                                             |\r\n      | `:file`         | The name of the file the module was generated from.                                                                                                                                                            |\r\n      | `:line`         | The line in `:file` where the module was defined, such as the line `defmodule` occurred.                                                                                                                       |\r\n      | `:module`       | The name of the module as an `atom`                                                                                                                                                                            |\r\n      | `:unreachable`  | Unreachable functions                                                                                                                                                                                          |\r\n\r\n      The `Dbgi` tag show the single value map entries: `:file`, `:line`, and `:module`\r\n\r\n      ![screen shot 2018-02-02 at 5 26 04 pm](https://user-images.githubusercontent.com/298259/35759265-33c33742-083e-11e8-9a4f-97cfd52bbe8e.png)\r\n\r\n      For the multi-value keys: `:attributes`, `:compile_opts`, and `:definitions`, there are individual tabs.\r\n\r\n      ![screen shot 2018-02-02 at 5 27 29 pm](https://user-images.githubusercontent.com/298259/35759293-6117c83e-083e-11e8-8327-ec7c66cade69.png)\r\n\r\n      The Attributes tab has the same format as the `Attr`s chunk\r\n\r\n      ![screen shot 2018-02-02 at 6 47 49 pm](https://user-images.githubusercontent.com/298259/35760967-9c7e0914-0849-11e8-8d53-e402653b70fa.png)\r\n\r\n      The Compile Options tab is usually empty, much like the `CInf` `options` key for Erlang.\r\n\r\n      ![screen shot 2018-02-02 at 6 48 34 pm](https://user-images.githubusercontent.com/298259/35760988-c3ef0f52-0849-11e8-9ca6-2cbeba8eda23.png)\r\n\r\n      The Definitions tab is split between a tree of Module, Function/Arity and clauses.\r\n\r\n      ![screen shot 2018-02-02 at 6 50 14 pm](https://user-images.githubusercontent.com/298259/35761058-3710d04c-084a-11e8-99e3-0f2aa4f8837d.png)\r\n\r\n      Clicking on a clause will show only that clause, but clicking on a higher level in the tree will show all clauses in the function or the entire Module.\r\n\r\n      ![screen shot 2018-02-02 at 6 53 17 pm](https://user-images.githubusercontent.com/298259/35761087-7a6e0b8e-084a-11e8-9f86-6e4840eab25d.png)\r\n\r\n      ![screen shot 2018-02-02 at 8 47 05 pm](https://user-images.githubusercontent.com/298259/35762314-55fb0dd2-085a-11e8-8381-faacc880d29e.png)\r\n\r\n      ![screen shot 2018-02-02 at 8 47 20 pm](https://user-images.githubusercontent.com/298259/35762317-5b9f9136-085a-11e8-8b53-03be16b7a06c.png)\r\n\r\n      The AST stored in the `definitions` tab and the process of converting it back to code is not format preserves, so it will not look precisely like the source code as the AST has undergone some macro expansion before its put in the Dbgi chunk.  *As common idioms are understood, reversals will be add to the renderer.*\r\n    * The `ExDc` chunk stores ExDoc.  Not the rendered HTML from the `ex_doc` package, but the the `@doc`, `@moduledoc`, and `@typedoc` attribute values that work even without `ex_doc` installed.  This chunk is what is consulted when the `h` helper is used in `iex`.\r\n\r\n      The `ExDc` binary format is from `term_to_binary`, so it can be reversed with `binary_to_term`.  The term format is a versioned as `{version, versioned_format}`.  The current `version` tag is `:elixir_docs_v1` and the `versioned_format` is a [Keyword.t](https://hexdocs.pm/elixir/Keyword.html#t:t/0) with `:callback_docs`, `:docs`, `:moduledoc`, and `:type_docs` keys.\r\n\r\n      Like `Dbgi`, the `ExDc` tab is split between a tree to navigate and an editor to show the decompiled value.\r\n\r\n      ![screen shot 2018-02-02 at 8 58 38 pm](https://user-images.githubusercontent.com/298259/35762423-024913d0-085c-11e8-88ee-c794474a5da5.png)\r\n\r\n      ![screen shot 2018-02-02 at 9 07 03 pm](https://user-images.githubusercontent.com/298259/35762502-139d2b8e-085d-11e8-97a6-4b16d19dfccb.png)\r\n\r\n      | Node                     | Description                        |\r\n      |:-------------------------|:-----------------------------------|\r\n      | *Root*                   | All docs                           |\r\n      | Module                   | `@moduledoc`                       |\r\n      | Types                    | All `@typedoc`s                    |\r\n      | Types *child*            | A specific `@typedoc`              |\r\n      | Callbacks                | All `@callback` `@doc`s            |\r\n      | Callbacks *child*        | A specific `@callback`'s `@doc`    |\r\n      | Functions/Macros         | All `@doc`s for functions/macros   |\r\n      | Functions/Macros *child* | A specific function/macro's `@doc` |\r\n\r\n    * The `ExpT` chunk is the Export Table.  The name \"Export\" derives from the `Erlang` module attribute `-export`, which is used to \"export\" functions from a module.  It is the equivalent of making a function or macro public with `def` and `defmacro` as opposed to making it private with `defp` and `defmacrop` in Elixir.\r\n\r\n      The `ExpT` tab shows a table with the columns\r\n\r\n      | Column     | Description                                                                                                                                                                             | Source  |\r\n      |:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------|\r\n      | Atom Index | Index into the `Atom` or `AtU8` chunk for the function's name                                                                                                                           | Raw     |\r\n      | Name       | The atom referenced by \"Atom Index\"                                                                                                                                                     | Derived |\r\n      | Arity      | The arity (argument count) of the function                                                                                                                                              | Raw     |\r\n      | Label      | Label index in the `Code` chunk where the function is defined. This label is usually immediately after the `func_info` operation and before the first pattern match or guard operation. | Raw     |\r\n\r\n      ![screen shot 2018-02-01 at 8 21 13 pm](https://user-images.githubusercontent.com/298259/35713581-b36f17ba-078d-11e8-87e3-0c50b2624676.png)\r\n\r\n      You'll notice the first entry starts with `MACRO-`.  This is because the BEAM, being made for Erlang has no concept of macros. It only understands functions, so Elixir macros, like `__using__/1` called by `use` are compiled to plain Erlang functions with `MACRO-` prefixed to their name and an extra argument (the `__CALLER__` environment) as the first argument, which increases the arity, yielding a full MFA of `MACRO-__using__/2` as seen above.\r\n\r\n    * The `ImpT` chunk is the Import Table.  It **DOES NOT** encode just the Erlang `-import` attributes or Elixir `import` macro calls: it tracks any external function or macro called from another module.  `call_ext_*` operations in the `Code` chunk don't store the Module and Function (MF) of the function they will call directly in the bytecode, instead, one of the arguments is an index into the `ImpT` chunk.   This way, all external calls are normalized into the `ImpT` chunk instead of being denormalized to the call site.  The arity still appears at the call site to help with checking the argument count.\r\n\r\n      The `ImpT` tab shows a table with the columns\r\n\r\n      | Column              | Description                                                  | Source  |\r\n      |:--------------------|:-------------------------------------------------------------|:--------|\r\n      | Index               | 0-based index used by references in the `Code` chunk.        | Derived |\r\n      | Module Atom Index   | Index into the `Atom` or `AtU8` chunk for the Module's name  | Raw     |\r\n      | Module Atom         | The atom referenced by \"Module Atom Index\".                  | Derived |\r\n      | Function Atom Index | Index into the `Atom` or `AtU8` chunk for the functon's name | Raw     |\r\n      | Function Atom       | The atom referened by \"Function Atom Index\".                 | Derived |\r\n\r\n      ![screen shot 2018-02-01 at 8 07 15 pm](https://user-images.githubusercontent.com/298259/35713189-93432ff0-078b-11e8-8856-df067459adf9.png)\r\n\r\n      You may notice that `erlang.byte_size/1` is included in the table.  This is because even bifs are referenced by MFA and not a pre-assigned number as would be the case for system calls in operating systems like Linux.  BEAM is like an Operation System, but not in all ways.\r\n    * The `LitT` chunk contains literals loaded as arguments in `Code` chunk.  Confusingly, in the `Code` chunk sometimes the `literal(N)` term is used to encode integer `N`, an index into another chunk, or an actual `index` into the `LitT`.  How `literal` terms are handled is completely dependent on the specific operation, so without having outside knowledge about the bytecode operation arguments for BEAM, the best way to figure out if `literal` terms are an integer or an index is to toggle the various controls in the `Code` tab to see if `literal` with no inlining turns into a `LitT` literal, `FunT` function reference, `ImpT` function reference, or integer.\r\n\r\n      The `LitT` tab shows a table with the columns\r\n\r\n      | Column | Description                                              | Source  |\r\n      |:-------|:---------------------------------------------------------|:--------|\r\n      | #      | 0-based index used by references in the `Code` chunk.    | Derived |\r\n      | Term   | The equivalent of `raw |> binary_to_term() |> inspect()` | Raw     |\r\n\r\n      ![screen shot 2018-02-01 at 9 25 07 pm](https://user-images.githubusercontent.com/298259/35715153-674f088c-0796-11e8-89e8-fd3c6c083a45.png)\r\n    * The `LocT` chunk is the dual to the `ExpT` chunk: it contains all private functions and macros.\r\n\r\n      The `LocT` tab shows a table with the columns\r\n\r\n      | Column     | Description                                                                                                                                                                             | Source  |\r\n      |:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------|\r\n      | Atom Index | Index into the `Atom` or `AtU8` chunk for the function's name                                                                                                                           | Raw     |\r\n      | Name       | The atom referenced by \"Atom Index\"                                                                                                                                                     | Derived |\r\n      | Arity      | The arity (argument count) of the function                                                                                                                                              | Raw     |\r\n      | Label      | Label index in the `Code` chunk where the function is defined. This label is usually immediately after the `func_info` operation and before the first pattern match or guard operation. | Raw     |\r\n\r\n      ![screen shot 2018-02-01 at 9 27 49 pm](https://user-images.githubusercontent.com/298259/35715229-ca135b1c-0796-11e8-80a4-971470f1c6d2.png)\r\n\r\n      You'll notice the first entry `-__struct__/1-fun-0-`, starts with `-` and have a `/` suffix with `fun` in it. This naming scheme is used for anonymous functions such as those defined with `fn` or the capture operator (`&`) in Elixir.  Much like how macros don't really exist and use a `MACRO-` suffix, anonymous functions/lambdas don't exist, and instead use a distinct naming scheme `-<PARENT_FUNCTION>/*fun*`.  Unlike `MACRO-`, which is an Elixir invention, anonymous functions/lambdas really being local named functions with derived names is also done in pure Erlang modules.  Erlang's anonymous functions are defined with `fun`, which is where the `fun` part of the naming scheme comes from.\r\n    * The `StrT` chunk contains a single contiguous pool of all Erlang strings (that is, Elixir charlists) used in the `Code` chunk.  These strings are used for byte code operations like `bs_put_string`.  Not all strings appear in `StrT`.  Some strings, including most Elixir strings (Erlang binaries) appear in the `LitT` chunk that holds literals.\r\n\r\n      ![screen shot 2018-02-01 at 7 56 15 pm](https://user-images.githubusercontent.com/298259/35712876-040796d8-078a-11e8-8eb6-6b7f203bbd4a.png)\r\n\r\n      The `StrT` is contiguous with no separation of strings.  Instead of encoding the start and length of each string in the chunk itself, the start and length for any given string is passed as arguments to the byte code operations in the `Code` chunk. By doing this, shared substrings can be efficiently encoded in `StrT`.\r\n* [#1021](https://github.com/KronicDeth/intellij-elixir/pull/1021) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Support for https://github.com/elixir-lang/elixir/commit/23c7542d95683a497a7b93071b9ccbbeb9e45d2f\r\n\r\n    | Version  | Struct               | Started Event     | Finished Event     | `%ExUnit.Test{}` field |\r\n    |----------|----------------------|-------------------|--------------------|------------------------|\r\n    | < 1.6.0  | `%ExUnit.TestCase{}` | `:case_started`   | `:case_finished`   | `case`                 |\r\n    | >= 1.6.0 | `%ExUnit.TestCase{}` | `:module_started` | `:module_finished` | `module`               |\r\n\r\n    Because Elixir 1.6.0 could not introduce a breaking change, the `< 1.6.0` events are fired, but `resources/exunit/1.6.0/team_city_ex_unit_formatting.ex` will ignore them and only convert the `>= 1.6.0` events to TeamCity event used in the JetBrains Test Runner UI.\r\n* [#1018](https://github.com/KronicDeth/intellij-elixir/pull/1018) - Expose Declarations > Functions and Declarations > Macros in Color Settings - [@dimcha](https://github.com/dimcha)\r\n\r\n### Bug Fixes\r\n* [#1019](https://github.com/KronicDeth/intellij-elixir/pull/1019) - Don't use `StreamEx` because support is inconsistent across IDEs - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#999](https://github.com/KronicDeth/intellij-elixir/pull/999) - [@ronanboiteau](https://github.com/ronanboiteau)\r\n  * Jetbrains' Gogland is now named GoLand, updated README accordingly\r\n  * In donors list, Garrett Hart had his GitHub URL (`@https://github.com/thirdshift`) shown instead of his GitHub username (`@thirdshift`)\r\n\r\n# `README.md` Updates\r\n\r\n### `.beam` Files\r\n\r\n`.beam` files are the compiled version of modules on the BEAM virtual machine used by Elixir and Erlang.  They are the equivalent of `.class` files in Java.\r\n\r\n`.beam` files are not detected purely by their file extension: the BEAM file format starts with a magic number, `FOR1`, that is checked for before decompiling.\r\n\r\n`.beam` files have 2 editors registered: [decompiled Text](#decompilation-text) and [BEAM Chunks](#beam-chunks)\r\n\r\n![`.beam` file Editor Tabs](/screenshots/features/beam_files/Editor%20Tabs.png?raw=true \".beam file Editor Tabs\")\r\n\r\n#### Decompression\r\n\r\nIf the `.beam` module was compiled with the `compressed` compiler directive, which in Erlang looks like\r\n\r\n```erlang\r\n-compile([compressed])\r\n```\r\n\r\nand in Elixir looks like\r\n\r\n```elixir\r\n@compile [:compressed]\r\n```\r\n\r\nthen the outer file format is [GZip](https://en.wikipedia.org/wiki/Gzip) (which is detected by checking for the gzip magic number, `1f 8b`, at the start of the file) and the `.beam` will be (stream) decompressed before the `.beam` header is checked and the chunks decoded.\r\n\r\n#### BEAM Chunks\r\n\r\n`.beam` files are composed of binary chunks.  Each chunk is formatted\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Offset</th>\r\n      <th>+0</th>\r\n      <th>+1</th>\r\n      <th>+2</th>\r\n      <th>+3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td colspan=\"4\">Name (ASCII Characters)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4</th>\r\n      <td colspan=\"4\">Length (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>8+</th>\r\n      <td colspan=\"4\">Chunk-Specific</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nThis format is generically referred to as [Type-Length-Value](https://en.wikipedia.org/wiki/Type-length-value)\r\n\r\nThe BEAM Chunks editor tab is subdivided into further tabs, one for each chunk in the `.beam` file.\r\n\r\n![BEAM Chunks editor chunk tabs](/screenshots/features/beam_files/beam_chunks/Chunk%20Tabs.png?raw=true \"BEAM Chunks editor chunk tabs\")\r\n\r\nThe tabs are listed in the order that the chunks occur in the .beam file.\r\n\r\n##### `Atom` / `AtU8`\r\n\r\nThe `Atom `chunk holds [LATIN-1](https://en.wikipedia.org/wiki/ISO/IEC_8859-1) encoded atoms while `AtU8` chunk holds [UTF-8](https://en.wikipedia.org/wiki/UTF-8) atoms. There will only be one of these atom-related chunks in any given `.beam` file. `AtU8` is used in newer versions of OTP that support UTF-8 atoms.  `AtU8` was [introduced](https://github.com/erlang/otp/pull/1078) in OTP 20.\r\n\r\n###### Format\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Offset</th>\r\n      <th>+0</th>\r\n      <th>+1</th>\r\n      <th>+2</th>\r\n      <th>+3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td colspan=\"4\">atom count (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4</th>\r\n      <td>length<sub>1</sub> (`unsigned-byte`)</td>\r\n      <td colspan=\"3\">bytes (for length<sub>1</sub>)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4+length<sub>1</sub>+...+length<sub>n-1</sub></th>\r\n      <td>length<sub>n</sub> (`unsigned-byte`)</td>\r\n      <td colspan=\"3\">bytes (for length<sub>n</sub>)</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n###### Tab\r\n\r\nThe `Atom`/`AtU8` tab shows a table with the columns\r\n\r\n| Column     | Description                                                                                                  | Source  |\r\n|:-----------|:-------------------------------------------------------------------------------------------------------------|:--------|\r\n| Index      | 1-based to match Erlang convention.  In the `Code` chunk, `atom(0)` is reserved to always translate to `nil` | Derived |\r\n| Byte Count | The byte count for the atom's bytes                                                                          | Raw     |\r\n| Characters | From encoding the bytes as LATIN-1 for `Atom` chunk or UTF-8 for `AtU8` chunk                                | Derived |\r\n\r\n![AtU8 Table](screenshots/features/beam_files/beam_chunks/atu8/tab/Table.png?raw=true)\r\n\r\n##### `Attr`\r\n\r\nThe `Attr` chunk holds the module attributes, but only those that are persisted.  Erlang module attributes are persisted by default, but in Elixir module attributes need to be marked as persisted with [`Module.register_attribute/3`](https://hexdocs.pm/elixir/Module.html#register_attribute/3)\r\n\r\n###### Format\r\n\r\nThe `Attr` chunk uses External Term Format (`term_to_binary`'s output) to encode a [proplist](http://erlang.org/doc/man/proplists.html), which is similar to, but not quite the same an Elixir [Keyword list](https://hexdocs.pm/elixir/Keyword.html#t:t/0)\r\n\r\nAll modules will have a `:vsn` attribute that is either set explicitly or defaults to the MD5 of the module.\r\n\r\n###### Tab\r\n\r\nThe `Attr` tab shows a table with the columns\r\n\r\n| Column | Description                                                                                                      | Source |\r\n|:-------|:-----------------------------------------------------------------------------------------------------------------|:-------|\r\n| Key    | Attribute name                                                                                                   | Raw    |\r\n| Value  | Attribute value. **Note: The value always appears as a list as read from the binary format.  I don't know why.** | Raw    |\r\n\r\n![Attr Table](screenshots/features/beam_files/beam_chunks/attr/tab/Table.png?raw=true)\r\n\r\n##### `CInf`\r\n\r\nThe `CInf` chunk is the Compilation Information for the Erlang or Erlang Core compiler.  Even Elixir modules have it because Elixir code passes through this part of the Erlang Core compiler\r\n\r\n###### Format\r\n\r\nThe `CInf` chunk uses External Term Format (`term_to_binary`'s output) to encode a [proplist](http://erlang.org/doc/man/proplists.html), which is similar to, but not quite the same an Elixir [Keyword list](https://hexdocs.pm/elixir/Keyword.html#t:t/0)\r\n\r\n###### Tab\r\n\r\nThe `CInf` tab shows a table with the columns\r\n\r\n| Column | Description     | Source |\r\n|:-------|:----------------|:-------|\r\n| Key    | Option name     | Raw    |\r\n| Value  | Inspected value | Raw    |\r\n\r\n![CInf Table](screenshots/features/beam_files/beam_chunks/cinf/tab/Table.png?raw=true)\r\n\r\n##### `Code`\r\n\r\nThe `Code` chunk contains the byte code for the module.\r\n\r\n###### Format\r\n\r\nIt is encoded in [BEAM Compact Term Encoding](http://beam-wisdoms.clau.se/en/latest/indepth-beam-file.html#beam-compact-term-encoding), which differs from the binary format produced by `term_to_binary`.\r\n\r\n###### Tab\r\n\r\nThe `Code` tab shows a read-only editor with one byte code operation on each line.  For ease of reading, operations are grouped by function and then label block with indentation indicating scope.\r\n\r\n![Code Chunk Read-Only Editor](screenshots/features/beam_files/beam_chunks/code/tab/Editor.png?raw=true)\r\n\r\nBy default as many references to other chunks and references to other parts of `Code` chunk are inlined to ease understanding.  If you want to see the raw byte code operations, you can turn off the various inliners.\r\n\r\n####### Controls\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Control</th>\r\n      <th>On</th>\r\n      <th>Off</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td rowspan=\"2\">Inline Atoms</td>\r\n      <td>\r\n        <code>atom(0)</code> is inlined as <code>nil</code>\r\n      </td>\r\n      <td>\r\n        <code>atom(N)</code> if \"Inline Integers\" is Off\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <code>atom(n)</code> looks up index `n` in `Atom`/`AtU8` chunk and inlines its `inspect`ed version\r\n      </td>\r\n      <td>\r\n        <code>N</code> if \"Inline Integers\" is On and the argument supports \"Inline Integers\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td rowspan=\"2\">Inline Functions</td>\r\n      <td rowspan=\"2\">\r\n        <code>literal(n)</code> looks up index <code>n</code> in <code>FunT</code> chunk and inlines the name if the argument supports \"Inline Functions\"\r\n      </td>\r\n      <td>\r\n        <code>literal(n)</code> if \"Inline Integers\" is Off\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <code>n</code> if \"Inline Integers\" is On and the argument supports \"Inline Integers\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td rowspan=\"2\">\r\n        Inline Imports\r\n      </td>\r\n      <td rowspan=\"2\">\r\n        <code>literal(n)</code> looks up index <code>n</code> in <code>ImpT</code> and inlines it as a function reference: <code>&amp;module.name/arity</code> if argument supports \"Inline Functions\"\r\n      </td>\r\n      <td>\r\n        <code>literal(n)</code> if \"Inline Integers\" Is Off\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <code>n</code> if \"Inline Integers\" is On and the argument supports \"Inline Integers\"\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td rowspan=\"2\">Inline Integers</td>\r\n      <td><code>atom(n)</code> and <code>literal(n)</code> inline as <code>n</code> if argument supports \"Inline Integers\"</td>\r\n      <td rowspan=\"2\"><code>atom(n)</code>, <code>integer(n)</code>, and <code>literal(n)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>integer(n)</code> inlines as <code>n</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>Inline Labels</td>\r\n      <td><code>label(n)</code> inlines as <code>n</code> if argument supports \"Inline Labels\"</td>\r\n      <td><code>label(n)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>Inline Lines</td>\r\n      <td><code>line(literal(n))</code> looks up index `n` in the \"Line Reference\" table in the `Lines` chunk.  The Line Reference contains a file name index and line.  The file name index is looked up in the \"File Name\" table in the `Lines` chunk.  The line from the Line Reference and the File name from the \"File Name\" table are inlined as `line(file_name: file_name, line: line)`.</td>\r\n      <td><code>line</code> operations are left as is</td>\r\n    </tr>\r\n    <tr>\r\n      <td>Inline Literals</td>\r\n      <td><code>literal(n)</code> looks up index <code>n</code> in <code>LitT</code> chunk and inlines its `inspect`ed version if the argument supports \"Inline Literals\"</td>\r\n      <td><code>literal(n)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>Inline Local Calls</td>\r\n      <td><code>label(n)</code> finds <code>label(n)</code> in <code>Code</code> chunk, then searches back for the previous <code>func_info</code> operation, then inlines it as a function reference: <code>&amp;module.name/arity</code> if argument supports \"Inline Local Calls\"</td>\r\n      <td><code>label(n)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>Inline Strings</td>\r\n      <td>Looks up <code>bit_length<code> and <code>byte_offset</code> into `StrT` chunk as their CharList value if supported by operation as value to <code>string</code> argument name</td>\r\n      <td><code>bit_length<code> and <code>byte_offset</code>arguments are left as is</td>\r\n    </tr>\r\n    <tr>\r\n      <td>Show Argument Names</td>\r\n      <td>Adds keyword argument names before each argument value</td>\r\n      <td>Leaves values as positional arguments</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nIf any of the inliners are incorrect or you have an argument name that makes more sense, please open an [issue](https://github.com/KronicDeth/intellij-elixir/issues).\r\n\r\n##### `Dbgi`\r\n\r\nThe `Dbgi` chunk contains Debug Info.  It was [introduced](https://github.com/erlang/otp/pull/1367) in OTP 20 as a replacement for the `Abst` chunk.  While the `Abst` chunk was required to contain the Erlang AST, the `Dbgi` format can contain the debug info for other languages, such as Elixir `quoted` form AST.\r\n\r\n###### Format\r\n\r\nBecause the format is language neutral, the format is a set of nested, versioned formats.  The outer most layer is\r\n\r\n```elixir\r\n{:debug_info_v1, backend, metadata | :none}\r\n```\r\n\r\nFor `:debug_info_v1`, Elixir's `backend` is `:elixir_erl`.  The `metadata` for `:elixir_erl` is further versioned: `{:elixir_v1, map, specs}`.\r\n\r\n`map` contains the bulk of the data.\r\n\r\n| Key             | Value                                                                                                                                                                                                          |\r\n|:----------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| `:attributes`   | Attributes similar to the `Attr` chunk, but at the Elixir, instead of Core Erlang level.  Usually they match with the exception that `attributes` doesn't contain `vsn` when `Attr` contains the `MD5` version |\r\n| `:compile_opts` | Compilation options similar to `CInf` chunk's `options` key, but at for Elixir, instead of Core Erlang level.                                                                                                  |\r\n| `:definitions`  | The Elixir `quoted` AST for reach function clause.                                                                                                                                                             |\r\n| `:file`         | The name of the file the module was generated from.                                                                                                                                                            |\r\n| `:line`         | The line in `:file` where the module was defined, such as the line `defmodule` occurred.                                                                                                                       |\r\n| `:module`       | The name of the module as an `atom`                                                                                                                                                                            |\r\n| `:unreachable`  | Unreachable functions                                                                                                                                                                                          |\r\n\r\n###### Tab\r\n\r\nThe `Dbgi` tag show the single value map entries: `:file`, `:line`, and `:module`.\r\n\r\n![Singletons](screenshots/features/beam_files/beam_chunks/dbgi/tab/Singletons.png?raw=true)\r\n\r\nFor the multi-value keys: `:attributes`, `:compile_opts`, and `:definitions`, there are individual tabs.\r\n\r\n![Multivalue Tabs](screenshots/features/beam_files/beam_chunks/dbgi/tab/Multivalue%20Tabs.png?raw=true)\r\n\r\n####### Attributes\r\n\r\nThe Attributes tab has the same format as the `Attr`s chunk.\r\n\r\n![Dbgi Attributes Table](screenshots/features/beam_files/beam_chunks/dbgi/tab/attributes/Table.png?raw=true)\r\n\r\n####### Compile Options\r\n\r\nThe Compile Options tab is usually empty, much like the `CInf` `options` key for Erlang.\r\n\r\n![Table](screenshots/features/beam_files/beam_chunks/dbgi/tab/compile_options/Table.png?raw=true)\r\n\r\n####### Definitions\r\n\r\nThe Definitions tab is split between a tree of Module, Function/Arity and clauses.\r\n\r\n![Tree](screenshots/features/beam_files/beam_chunks/dbgi/tab/definitions/Tree.png?raw=true)\r\n\r\nClicking on a clause will show only that clause, but clicking on a higher level in the tree will show all clauses in the function or the entire Module.\r\n\r\n![Clause](screenshots/features/beam_files/beam_chunks/dbgi/tab/definitions/Clause.png?raw=true)\r\n![Function](screenshots/features/beam_files/beam_chunks/dbgi/tab/definitions/Function.png?raw=true)\r\n![Module](screenshots/features/beam_files/beam_chunks/dbgi/tab/definitions/Module.png?raw=true)\r\n\r\nThe AST stored in the `definitions` tab and the process of converting it back to code is not format preserves, so it will not look precisely like the source code as the AST has undergone some macro expansion before its put in the `Dbgi` chunk.  *As common idioms are understood, reversals will be add to the renderer.*\r\n\r\n##### `ExDc`\r\n\r\nThe `ExDc` chunk stores ExDoc.  Not the rendered HTML from the `ex_doc` package, but the the `@doc`, `@moduledoc`, and `@typedoc` attribute values that work even without `ex_doc` installed.  This chunk is what is consulted when the `h` helper is used in `iex`.\r\n\r\n###### Format\r\n\r\nThe `ExDc` chunk is the encoded with `term_to_binary`.  The term format is a versioned as `{version, versioned_format}`.  The current `version` tag is `:elixir_docs_v1` and the `versioned_format` is a [Keyword.t](https://hexdocs.pm/elixir/Keyword.html#t:t/0) with keys matching the [`Code.get_docs/2`](https://hexdocs.pm/elixir/Code.html#get_docs/2) tags `:callback_docs`, `:docs`, `:moduledoc`, and `:type_docs` keys.\r\n\r\n###### Tab\r\n\r\nLike `Dbgi`, the `ExDc` tab is split between a tree to navigate and an editor to show the decompiled value.\r\n\r\n![ExDc Tree](screenshots/features/beam_files/beam_chunks/exdc/tab/Tree.png?raw=true)\r\n![Function selected in ExDc tree](screenshots/features/beam_files/beam_chunks/exdc/tab/Function.png?raw=true)\r\n\r\nClick on a node in the tree will show all docs at that level and any descendants.\r\n\r\n| Node                     | Description                        |\r\n|:-------------------------|:-----------------------------------|\r\n| *Root*                   | All docs                           |\r\n| Module                   | `@moduledoc`                       |\r\n| Types                    | All `@typedoc`s                    |\r\n| Types *child*            | A specific `@typedoc`              |\r\n| Callbacks                | All `@callback` `@doc`s            |\r\n| Callbacks *child*        | A specific `@callback`'s `@doc`    |\r\n| Functions/Macros         | All `@doc`s for functions/macros   |\r\n| Functions/Macros *child* | A specific function/macro's `@doc` |\r\n\r\n##### `ExpT`\r\n\r\nThe `ExpT` chunk is the Export Table.  The name \"Export\" derives from the `Erlang` module attribute `-export`, which is used to \"export\" functions from a module.  It is the equivalent of making a function or macro public with `def` and `defmacro` as opposed to making it private with `defp` and `defmacrop` in Elixir.\r\n\r\n###### Format\r\n\r\nThe BEAM format and the `ExpT` chunk, being made for Erlang, has no concept of macros. It only understands functions, so Elixir macros, like `__using__/1` called by `use` are compiled to plain Erlang functions with `MACRO-` prefixed to their name and an extra argument (the `__CALLER__` environment) as the first argument, which increases the arity, yielding a full MFA of `MACRO-__using__/2` as seen above.\r\n\r\n###### Tab\r\n\r\nThe `ExpT` tab shows a table with the columns\r\n\r\n| Column     | Description                                                                                                                                                                             | Source  |\r\n|:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------|\r\n| Atom Index | Index into the `Atom` or `AtU8` chunk for the function's name                                                                                                                           | Raw     |\r\n| Name       | The atom referenced by \"Atom Index\"                                                                                                                                                     | Derived |\r\n| Arity      | The arity (argument count) of the function                                                                                                                                              | Raw     |\r\n| Label      | Label index in the `Code` chunk where the function is defined. This label is usually immediately after the `func_info` operation and before the first pattern match or guard operation. | Raw     |\r\n\r\n![ExpT Table](screenshots/features/beam_files/beam_chunks/expt/tab/Table.png?raw=true)\r\n\r\n##### `ImpT`\r\n\r\nThe `ImpT` chunk is the Import Table.  It **DOES NOT** encode just the Erlang `-import` attributes or Elixir `import` macro calls: it tracks any external function or macro called from another module.  `call_ext_*` operations in the `Code` chunk don't store the Module and Function (MF) of the function they will call directly in the bytecode, instead, one of the arguments is an index into the `ImpT` chunk.   This way, all external calls are normalized into the `ImpT` chunk instead of being denormalized to the call site.  The arity still appears at the call site to help with checking the argument count.\r\n\r\n###### Format\r\n\r\nYou may notice that `erlang.byte_size/1` is included in the table.  This is because even BIFs are referenced by MFA and not a pre-assigned number as would be the case for system calls in operating systems like Linux.  BEAM is like an Operation System, but not in all ways.\r\n\r\n###### Tab\r\n\r\nThe `ImpT` tab shows a table with the columns\r\n\r\n| Column              | Description                                                  | Source  |\r\n|:--------------------|:-------------------------------------------------------------|:--------|\r\n| Index               | 0-based index used by references in the `Code` chunk.        | Derived |\r\n| Module Atom Index   | Index into the `Atom` or `AtU8` chunk for the Module's name  | Raw     |\r\n| Module Atom         | The atom referenced by \"Module Atom Index\".                  | Derived |\r\n| Function Atom Index | Index into the `Atom` or `AtU8` chunk for the functon's name | Raw     |\r\n| Function Atom       | The atom referened by \"Function Atom Index\".                 | Derived |\r\n\r\n![ImpT Table](screenshots/features/beam_files/beam_chunks/impt/tab/Table.png?raw=true)\r\n\r\n##### `LitT`\r\n\r\nThe `LitT` chunk contains literals loaded as arguments in `Code` chunk.\r\n\r\n###### Format\r\n\r\nConfusingly, in the `Code` chunk sometimes the `literal(N)` term is used to encode integer `N`, an index into another chunk, or an actual `index` into the `LitT`.  How `literal` terms are handled is completely dependent on the specific operation, so without having outside knowledge about the bytecode operation arguments for BEAM, the best way to figure out if `literal` terms are an integer or an index is to toggle the various controls in the `Code` tab to see if `literal` with no inlining turns into a `LitT` literal, `FunT` function reference, `ImpT` function reference, or integer.\r\n\r\n###### Tab\r\n\r\nThe `LitT` tab shows a table with the columns\r\n\r\n| Column | Description                                                    | Source  |\r\n|:-------|:---------------------------------------------------------------|:--------|\r\n| #      | 0-based index used by references in the `Code` chunk.          | Derived |\r\n| Term   | The equivalent of `raw |&gt; binary_to_term() |&gt; inspect()` | Raw     |\r\n\r\n![LitT Table](screenshots/features/beam_files/beam_chunks/litt/tab/Table.png?raw=true)\r\n\r\n##### `Line`\r\n\r\nThe `Line` chunk encodes both the file name and line number for each `line(literal(n))` operation in the `Code` chunk.  The `n` in `line(literal(n))` is an index in to the Line References table in the `Line` chunk.  This is used in Phoenix view modules to show where code from templates comes from.\r\n\r\n###### Format\r\n\r\nThe `Line` chunk is composed of 2 subsections: (1) Line References and (2) File Names.  First there is a header setting up the number of each entry to expect.\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Offset</th>\r\n      <th>+0</th>\r\n      <th>+1</th>\r\n      <th>+2</th>\r\n      <th>+3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td colspan=\"4\">emulator version (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4</th>\r\n      <td colspan=\"4\">flags (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>8</th>\r\n      <td colspan=\"4\">Line Instruction Count (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>12</th>\r\n      <td colspan=\"4\">Line Reference Count (`unsigned-big-integer`)</td>\r\n    </tr>\r\n    <tr>\r\n      <th>16</th>\r\n      <td colspan=\"4\">File Name Count (`unsigned-big-integer`)</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n####### Line References\r\n\r\nThis uses the Compact Term Format used for the `Code` chunk.  The format ends up producing `{file_name_index, line}` pairs using the following algorithm:\r\n\r\n| Term         | Interpretation                                       |\r\n|:-------------|:-----------------------------------------------------|\r\n| `atom(n)`    | Change `file_name_index` to `n`                      |\r\n| `integer(n)` | Add `{file_name_index, n}` to end of Line References |\r\n\r\n####### File Names\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Offset</th>\r\n      <th>+0</th>\r\n      <th>+1</th>\r\n      <th>+2</th>\r\n      <th>+3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td colspan=\"2\">Byte Count (`unsigned-big-integer`)</td>\r\n      <td colspan=\"2\">Bytes</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n###### Tab\r\n\r\nThe `Line` tab has one subtab for each subsection in the tab.  Each subsection has its own table.\r\n\r\n![Line References Table](screenshots/features/beam_files/beam_chunks/line/tab/line_references/Table.png?raw=true)\r\n![File Names TableTable](screenshots/features/beam_files/beam_chunks/line/tab/file_names/Table.png?raw=true)\r\n\r\n##### `LocT`\r\n\r\nThe `LocT` chunk is the dual to the `ExpT` chunk: it contains all private functions and macros.\r\n\r\n###### Format\r\n\r\nYou'll notice entries like `-__struct__/1-fun-0-`, starts with `-` and have a `/` suffix with `fun` in it. This naming scheme is used for anonymous functions such as those defined with `fn` or the capture operator (`&`) in Elixir.  Much like how macros don't really exist and use a `MACRO-` suffix, anonymous functions/lambdas don't exist, and instead use a distinct naming scheme `-<PARENT_FUNCTION>/*fun*`.  Unlike `MACRO-`, which is an Elixir invention, anonymous functions/lambdas really being local named functions with derived names is also done in pure Erlang modules.  Erlang's anonymous functions are defined with `fun`, which is where the `fun` part of the naming scheme comes from.\r\n\r\n###### Tab\r\n\r\nThe `LocT` tab shows a table with the columns\r\n\r\n| Column     | Description                                                                                                                                                                             | Source  |\r\n|:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------|\r\n| Atom Index | Index into the `Atom` or `AtU8` chunk for the function's name                                                                                                                           | Raw     |\r\n| Name       | The atom referenced by \"Atom Index\"                                                                                                                                                     | Derived |\r\n| Arity      | The arity (argument count) of the function                                                                                                                                              | Raw     |\r\n| Label      | Label index in the `Code` chunk where the function is defined. This label is usually immediately after the `func_info` operation and before the first pattern match or guard operation. | Raw     |\r\n\r\n![LocT Table](screenshots/features/beam_files/beam_chunks/loct/tab/Table.png?raw=true)\r\n\r\n##### `StrT`\r\n\r\nThe `StrT` chunk contains all Erlang strings (that is, Elixir charlists) used in the `Code` chunk.\r\n\r\n###### Format\r\n\r\nThe `StrT` chunk contains a single contiguous pool.  These strings are used for byte code operations like `bs_put_string`.  Not all strings appear in `StrT`.  Some strings, including most Elixir strings (Erlang binaries) appear in the `LitT` chunk that holds literals. *I'm not sure how the compiler determines whether to use `StrT` or `LitT`.  I think it all depends on the byte code operation.*\r\n\r\nInstead of encoding the start and length of each string in the chunk itself, the start and length for any given string is passed as arguments to the byte code operations in the `Code` chunk. By doing this, shared substrings can be efficiently encoded in `StrT`.\r\n\r\n###### Tab\r\n\r\n![StrT Pool](screenshots/features/beam_files/beam_chunks/strt/tab/Pool.png?raw=true)\r\n  "}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9137905", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9137905/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/9137905/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.2.1", "id": 9137905, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTkxMzc5MDU=", "tag_name": "v7.2.1", "target_commitish": "master", "name": "v7.2.1", "draft": false, "prerelease": false, "created_at": "2018-01-07T17:27:34Z", "published_at": "2018-01-07T18:09:58Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5804286", "id": 5804286, "node_id": "MDEyOlJlbGVhc2VBc3NldDU4MDQyODY=", "name": "intellij-elixir-7.2.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2285761, "download_count": 37, "created_at": "2018-01-07T18:09:50Z", "updated_at": "2018-01-07T18:09:51Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.2.1/intellij-elixir-7.2.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.2.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.2.1", "body": "# Thanks\r\n\r\n* For reporting that `.bat` was no longer needed on WIndows\r\n  * Huabin Zhang ([@zhanghuabin](https://github.com/zhanghuabin))\r\n* For reporting that Credo annotator broke on Elixir scratch files\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n* For reporting that another read action wrapper was needed in the Mix project importer\r\n  * Doston Turgunov ([@doston9471](https://github.com/doston9471))\r\n* For reporting `ExternalLanguageAnnotators.allForFile` was being called with a `null` `PsiFile`\r\n  * S\u0142awomir Stec ([@stokilo](https://github.com/stokilo))\r\n* For reporting the Credo annotator, in certain projects, severely slows down the responsiveness of the editor.\r\n  * Bartosz Nowak ([@sztosz](https://github.com/sztosz))\r\n  * Joseph Miller ([@joffotron](https://github.com/joffotron))\r\n  * Benjamin Piouffle ([@Betree](https://github.com/Betree))\r\n  * Thomas Schmidleithner ([@tschmidleithner](https://github.com/tschmidleithner))\r\n  * Georgy ([@gazoon](https://github.com/gazoon))\r\n  * Josh Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n* For pairing with me to demonstrate the responsiveness problems\r\n  * Yordis Prieto ([@yordis](https://github.com/yordis))\r\n  * Phillipp Ohlandt ([@phillippohlandt](https://github.com/phillippohlandt))\r\n* For reporting that configuring Erlang SDK for Elixir SDK failed when more than `CLASSES` and `SOURCES` Root Types are installed\r\n  * Valentin Nazarov ([@kozlice](https://github.com/kozlice))\r\n\r\n# Changelog\r\n\r\n## v7.2.1\r\n\r\n### Bug Fixes\r\n* [#980](https://github.com/KronicDeth/intellij-elixir/pull/980) - Use `documentionRootType` to indirectly get the documentation `OrderRootType` in the Erlang SDK Type, so that it works in Small IDEs that have more than `CLASSES` and `SOURCES` root types installed. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#981](https://github.com/KronicDeth/intellij-elixir/pull/981) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * The [`credo`](https://github.com/rrrene/credo) annotator is disabled by default as numerous users find running `mix credo` in the background has a negative impact on their system performance.  If you like to try enabling the annotation, you can turn it on using the configuration.\r\n\r\n    1. Preferences > Editor > Inspections > Elixir\r\n    2. Check \"Credo\"\r\n    3. Click OK to save and close Preferences\r\n\r\n    If you notice a degradation the in the responsiveness of the editor, it is recommended you disable the annotator again.\r\n\r\n    1. Preferences > Editor > Inspections > Elixir\r\n    2. Uncheck \"Credo\"\r\n    3. Click OK to save and close Preferences\r\n* [#982](https://github.com/KronicDeth/intellij-elixir/pull/982) - Protect from `PsiFile` being `null` in `Local` credo inspector - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#983](https://github.com/KronicDeth/intellij-elixir/pull/983) - Run `Qualified#moduleName` `getText` in Read Action. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#985](https://github.com/KronicDeth/intellij-elixir/pull/985) - Scratch Files have a `Project`, but not a `Module`, so change flow to use `Project` when `Module` is `null` in credo annotator. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#986](https://github.com/KronicDeth/intellij-elixir/pull/986) - Don't add `.bat` to `mix` on Windows. `mix` is never run as an executable.  It is either run as a script to `elixir.bat` OR as an argument to `erl.exe` when `erl.exe` is running `elixir`. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n### Credo\r\n\r\n#### Annotator\r\n\r\nWhen enabled, if [`credo`](https://github.com/rrrene/credo) is not installed as a project dependency, nothing will happen, but if it is installed, `mix credo PATH` will be called on any files after updates have quieted.  Any `credo` check failures will show up as warning annotations\r\n\r\n![Warning Annotations](/screenshots/features/credo/external_annotator/Warning%20Annotations.png?raw=true \"Warning Annotations\")\r\n\r\nIndividual check failures will show the explanation (from `mix credo PATH:LINE(:COLUMN)`) if you hover over the annotation\r\n\r\n![Explanation](/screenshots/features/credo/external_annotator/Explanation.png?raw=true \"Credo Check Failure Explanation\")\r\n\r\nYou can hover over the explanation and click the embedded links to jump to the line (and column) where the failure occurred.\r\n\r\n##### Enable\r\n\r\nThe [`credo`](https://github.com/rrrene/credo) annotator is disabled by default as numerous users find running `mix credo` in the background has a negative impact on their system performance.  If you like to try enabling the annotation, you can turn it on using the [configuration](#configuration).\r\n\r\n1. Preferences > Editor > Inspections > Elixir\r\n2. Check \"Credo\"\r\n\r\n##### Disable\r\n\r\nIf you notice a degradation the in the responsiveness of the editor, it is recommended you disable the annotator again.\r\n\r\n1. Preferences > Editor > Inspections > Elixir\r\n2. Uncheck \"Credo\"\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9070286", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9070286/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/9070286/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.2.0", "id": 9070286, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTkwNzAyODY=", "tag_name": "v7.2.0", "target_commitish": "master", "name": "v7.2.0", "draft": false, "prerelease": false, "created_at": "2017-12-31T17:37:16Z", "published_at": "2017-12-31T17:53:52Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5750062", "id": 5750062, "node_id": "MDEyOlJlbGVhc2VBc3NldDU3NTAwNjI=", "name": "intellij-elixir-7.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2284555, "download_count": 22, "created_at": "2017-12-31T17:51:49Z", "updated_at": "2017-12-31T17:51:51Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.2.0/intellij-elixir-7.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.2.0", "body": "# Thanks\r\n* For reporting that `OrderRootType.getOrderRootType` now has a `@NotNull` annotation, which causes newer Small IDE releases to  break when trying to access `JavaDocRootType.getInstance()`.\r\n  * Vladimir Guguiev ([@wzrdzl](https://github.com/wzrdzl))\r\n  * Nitin Gupta ([@nitingupta910](https://github.com/nitingupta910))\r\n* For reporting \"invokeAndWait from read-action leads to possible deadlock\" warning\r\n  * Josh Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n\r\n\r\n# Changelog\r\n\r\n## v7.2.0\r\n\r\n### Enhancements\r\n* [#963](https://github.com/KronicDeth/intellij-elixir/pull/963) - `mix` runs will be faster as they will no longer check to see if the SDK is updated. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#963](https://github.com/KronicDeth/intellij-elixir/pull/963) - Avoid problems with read and write locks when updating Elixir SDK on-demand by instead updating them when any project is open using a project converter. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#964](https://github.com/KronicDeth/intellij-elixir/pull/964) - [JetBrains/intellij-community@9adbba0](https://github.com/JetBrains/intellij-community/commit/9adbba0b6fe279bcc65ad96ab7332d7bf5b59a83) added `@NotNull` to `OrderRootType.getOrderRootType`, which `JavaDocRootType.getInstance` calls, which means any Small IDE using `intellij-community` since 4 months ago, including the newest CLion cannot have `JavadocOrderRootType.getInstance` safely called. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#966](https://github.com/KronicDeth/intellij-elixir/pull/966) - Path changes were not being written back to disk because the `projectSdksModel.apply()` was being called before the `editor.apply()`, which would have copied to the `editor'`s path changes to the `projectSdksModel`. - [@KronicDeth](https://github.com/KronicDeth)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9063810", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/9063810/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/9063810/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.1.0", "id": 9063810, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTkwNjM4MTA=", "tag_name": "v7.1.0", "target_commitish": "master", "name": "v7.1.0", "draft": false, "prerelease": false, "created_at": "2017-12-30T02:02:16Z", "published_at": "2017-12-30T02:10:52Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5741880", "id": 5741880, "node_id": "MDEyOlJlbGVhc2VBc3NldDU3NDE4ODA=", "name": "intellij-elixir-7.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2276002, "download_count": 17, "created_at": "2017-12-30T02:10:40Z", "updated_at": "2017-12-30T02:10:42Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.1.0/intellij-elixir-7.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.1.0", "body": "# Changelog\r\n\r\n## v7.1.0\r\n\r\n### Enhancements\r\n* [#955](https://github.com/KronicDeth/intellij-elixir/pull/955) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Start using Kotlin for new development.\r\n  * Elixir Facet in Small IDEs\r\n    * Preferences > Languages & Frameworks > Elixir can set the Elixir Facet SDK for the Project Module used in Small IDEs as a per-project settings.\r\n    * Preferences > Languages & Frameworks > Elixir> SDKs can add, delete, and configure Elixir SDKs as per-application settings.\r\n    * Preferences > Languages * Frameworks > Elixir > Internal SDKs can add, delete, and configure Erlang SDK for Elixir SDKs as per-application settings.\r\n  * Configure SDK before running `mix` when importing mix projects, so that the `mix` path does not need to be configured separately from the SDK path.\r\n    * The `mix` path no longer needs to be setup independently from the Elixir SDK.\r\n* [#957](https://github.com/KronicDeth/intellij-elixir/pull/957) - Add Local shared `credo` inspection, so the the `credo` inspection works for Code > Code Cleanup. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#958](https://github.com/KronicDeth/intellij-elixir/pull/958) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Show Mix ExUnit in context menu in Elixir Facets, so that\r\n      * Run 'Mix ExUnit ...'\r\n      * Debug 'Mix ExUnit ...'\r\n      * \"Create \"Mix ExUnit ...'\"\r\n\r\n    appear in Rubymine when you right-click the `test` directory and it is Marked as a Test Sources Root.  It will appear green in Rubymine if already marked.  To mark it, do the following:\r\n\r\n    1. Right-Click `test` directory\r\n    2. Select \"Mark Directory as > Test Sources Root\"\r\n\r\n### Bug Fixes\r\n* [#955](https://github.com/KronicDeth/intellij-elixir/pull/955) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Protect access to `JavadocOrderRootType.getInstance()` so that it doesn't cause an error in Small IDEs where its Extension Point is not defined.\r\n  * If the explanation tooltip is empty, fallback to the message for the credo annotator instead.\r\n* [#956](https://github.com/KronicDeth/intellij-elixir/pull/956) - Check if `SdkAdditionalData` is `null` before getting `ErlangSDK` as it can be `null` in certain scenarios in Rubymine. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#958](https://github.com/KronicDeth/intellij-elixir/pull/958) - [@KronicDeth](https://github.com/KronicDeth)\r\n  Fix `isConfigurationFromContext`, so that it works on Mix ExUnit Run Configurations generated from directories.  Check if the `programParameters` and `workingDirectory` match by just\r\n  generating another configuration from the context as this ensures the logic matches and includes support for `PsiDirectory`.\r\n\r\n# README Updates\r\n\r\n#### From Existing Sources\r\n\r\n##### Import project from external model\r\nIf you've already created a `mix` project, you can load it as an Elixir project into the plugin.\r\n\r\n1. File > New > Project From Existing Sources...\r\n2. Select the root directory of your project.\r\n3. Select \"Import project from external model\"\r\n4. Select Mix\r\n   ![File > New Project > From Existing Sources > Import project from external model > Mix](/screenshots/features/project/from_existing_sources/import_project_from_external_model/Mix.png?raw=true \"Import Mix Project\")\r\n5. Click Next\r\n6. Select a Project SDK directory by clicking Configure.\r\n7. The plugin will automatically find the newest version of Elixir installed. (**NOTE: SDK detection only works for\r\n   Linux, homebrew installs on OSX, and Windows.  [Open an issue](https://github.com/KronicDeth/intellij-elixir/issues)\r\n   with information about Elixir install locations on your operating system and package manager to have SDK detection\r\n   added for it.**)\r\n8. If the automatic detection doesn't find your Elixir SDK or you want to use an older version, manually select select\r\n   the directory above the `bin` directory containing `elixir`, `elixirc`, `iex`, and `mix`. (On Windows it is the\r\n   directory containing `elixir.bat`, `elixirc.bat`, `iex.bat`, and `mix.bat`.)\r\n9. Click Finish after you select SDK name from the Project SDK list.\r\n10. The \"Mix project root\" will be filled in with the selected directory.\r\n11. (Optional) Uncheck \"Fetch dependencies with mix\" if you don't want to run `mix deps.get` when importing the project\r\n   * If \"Fetch dependencies with mix\" is checked both `mix local.hex --force` and `mix deps.get` will be run.\r\n12. Click Next\r\n13. All directories with `mix.exs` files will be selected as \"Mix projects to import\".  To import just the main project and not its dependencies, click Unselect All.\r\n14. Check the box next to the project root to use only its `mix.exs`.  (It will likely be the first checkbox at the top.)\r\n15. Click Finish\r\n\r\n### SDK\r\n\r\nBecause Elixir is built on top of Erlang, Elixir command line commands don't have OS native binaries, instead the OS native binaries from Erlang are used.  In order to reliably find the Erlang OS native binaries, like `erl` and `erl.exe`, the path to BOTH the Erlang SDK and the Elixir SDK must be configured.  This allows you to install Erlang and Elixir with completely different package managers too: you can install Erlang with `kerl` and Elixir with `kiex` and you don't have to worry about IntelliJ not seeing the environment variables set by `kerl` when launching IntelliJ from an application launchers instead of a terminal.\r\n\r\nSince JetBrains' OpenAPI only supports one SDK per Project or Module, to support Elixir and Erlang SDK at the same time, the Elixir SDK keeps track of an Internal Erlang SDK.  When setting up your first Elixir SDK, you will be prompted to create an Erlang SDK (if you have the [`intellij-erlang`](https://github.com/ignatov/intellij-erlang) plugin [installed](https://plugins.jetbrains.com/plugin/7083-erlang)) or and Erlang for Elixir SDK (if you don't have `intellij-erlang` installed and you need to use the minimal Erlang for Elixir SDK supplied by this plugin).\r\n\r\n#### Rich IDEs\r\n\r\nRich IDEs can use the Project Structure system to configure Elixir and Erlang SDKs and select the Project/Module SDK.\r\n\r\n...\r\n\r\n#### Small IDEs\r\n\r\nBecause Small IDEs like Rubymine do not have Project Structure, the Elixir SDK, Erlang SDK, and selected SDK must be configured in Preferences.\r\n\r\n##### Elixir Facet SDK\r\n\r\nFacets are a feature of JetBrains OpenAPI that allow additional languages and frameworks to be added to a Module.  In Small IDEs, each Project has only one Module and its SDK **MUST** match the Small IDE's language, such as a Ruby SDK in Rubymine, so to allow an Elixir SDK to be selected, an Elixir Facet is added to the Module in Small IDEs.\r\n\r\nTo configure the Elixir Facet SDK\r\n\r\n1. Open Preferences > Languages & Frameworks > Elixir\r\n2. Select a previously created Elixir SDK from the SDK combo box.\r\n  * If there is no Elixir SDK, you can [create one](#elixir-sdks) first.\r\n3. Click Apply to save the Preferences changes or OK to save and close.\r\n\r\n##### Elixir SDKs\r\n\r\nIn Small IDEs, Elixir SDKs are tracked as Application Preferences, so any Elixir SDK you create in one project will be usable in another and you won't have to create the SDK in each project, just [select it](#elixir-facet-sdk).\r\n\r\n1. Open Preferences > Languages & Frameworks > Elixir > SDKs\r\n2. Click `+` to add a new Elixir SDK\r\n\r\n   ![Add SDK](/screenshots/features/sdk/small_ides/Add%20SDK.png?raw=true \"Add SDK\")\r\n3. If you don't already have an Erlang SDK for Elixir SDK setup, you'll need to create one first.\r\n\r\n   ![Cannot Create SDK](/screenshots/features/sdk/small_ides/Cannot%20Create%20SDK.png?raw=true \"Cannot Create SDK\")\r\n4. You'll be prompted with the default path for the most recent version of Erlang installed.\r\n\r\n   ![Select Home Directory for Erlang SDK for Elixir SDK](/screenshots/features/sdk/small_ides/Select%20Home%20Directory%20for%20Erlang%20SDK%20for%20Elixir%20SDK.png?raw=true \"Select Home Directory for Erlang SDK for Elixir SDK\")\r\n\r\n   You can change directory to a select a different version.  The home directory for \"Erlang SDK for Elixir SDK\" for Homebrew is **NOT** `/usr/local/Cellar/erlang/VERSION`, but `/usr/local/Cellar/erlang/VERSION/lib/erlang` due to where the OTP app `ebin` directories are located.\r\n5. Click OK to create the Erlang SDK for Elixir SDK.\r\n6. With at least one Erlang SDK for Elixir SDK setup, you'll be prompted with the default path for the most recent version of Elixir installed.\r\n\r\n   ![Select Home Directory for Elixir SDK](/screenshots/features/sdk/small_ides/Select%20Home%20Directory%20for%20Elixir%20SDK.png?raw=true \"Select Home Directory for Elixir SDK\")\r\n7. Click OK to create the Elixir SDK.\r\n8. Click Apply to save the Preferences changes or OK to save and close.\r\n\r\nYou can further customize the Elixir SDK by selecting its name from the left list.\r\n\r\n![SDK](/screenshots/features/sdk/small_ides/SDK.png?raw=true \"SDK\")\r\n\r\n* Change Home Path\r\n* Change Internal Erlang SDK\r\n* Change `ebin` directories on the Classpath tab\r\n\r\n##### Internal Erlang SDK\r\n\r\nIf you want to change the Internal Erlang SDK, you'll need to create a new Erlang SDK for Elixir SDK.\r\n\r\n1. Open Preferences > Languages & Frameworks > Elixir > Internal SDKs\r\n\r\n   ![Internal Erlang SDK](/screenshots/features/sdk/small_ides/Internal%20Erlang%20SDK.png?raw=true \"Internal Erlang SDK\")\r\n2. Follow the same steps as above to create an SDK\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8930773", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8930773/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8930773/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v7.0.0", "id": 8930773, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg5MzA3NzM=", "tag_name": "v7.0.0", "target_commitish": "master", "name": "v7.0.0", "draft": false, "prerelease": false, "created_at": "2017-12-16T04:52:56Z", "published_at": "2017-12-16T04:56:08Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5640084", "id": 5640084, "node_id": "MDEyOlJlbGVhc2VBc3NldDU2NDAwODQ=", "name": "intellij-elixir-7.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2189382, "download_count": 26, "created_at": "2017-12-16T04:55:47Z", "updated_at": "2017-12-16T04:55:58Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v7.0.0/intellij-elixir-7.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v7.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v7.0.0", "body": "# Thanks\r\n* For reporting that `mix credo` spiking the CPU can make IntelliJ appear sluggish while its using `mix credo` for annotations.\r\n  * [@dKrishtal](https://github.com/dKrishtal)\r\n* For explaining how to properly switch invalidate the parsed files when the Elixir level changes when the SDK changes\r\n  * Dennis Ushakov ([@denofevil](https://github.com/denofevil))\r\n\r\n# Changelog\r\n\r\n## v7.0.0\r\n\r\n### Enhancements\r\n* [#944](https://github.com/KronicDeth/intellij-elixir/pull/944) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Eliminate the majority of the `eolStar` parser rules around operators where they do not matter leaving only the `eolStar` after `COMMA` and the the ones that help differentiate unary and binary `+`/`-`.  This simplifies the parser and under certain conditions should prevent reparsing when only `WHITE_SPACE` changes in size.\r\n    * Look-ahead in the lexer, where it's cheaper than the parser to see if the next token does not care if there's an `EOL` or normal `WHITE_SPACE`.\r\n    * After operators that don't care if they are followed by `EOL`, try to match all following `WHITE_SPACE`, `ESCAPED_EOL` and `EOL`.\r\n* [#950](https://github.com/KronicDeth/intellij-elixir/pull/950) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * If you want to limit the performance impact of the credo annotator because `mix credo` spikes your CPU, you can limit the number of `mix credo` runs to 1 per open file by disabling the Explanation tooltip\r\n\r\n    1. Preferences > Editor > Inspections > Credo\r\n    2. Uncheck \"Include Explanation\"\r\n\r\n    If you don't want the annotator to run at all on open editors, then you can disable the paired\r\n    inspection\r\n\r\n    1. Preferences > Editor > Inspections\r\n    2. Uncheck Elixir > Credo\r\n\r\n    If you've unchecked the inspection, it disables both the annotation and the pair inspection when Analyze > Inspect Code... is run.  You can still run the Credo inspection by name.\r\n\r\n    1. Analyze > Run Inspection By Name... (\u2325\u21e7\u2318I)\r\n    2. Type \"Credo\"\r\n    3. Select \"Credo\" from the shortened list\r\n    4. Hit Enter.\r\n\r\n    You'll be presented with a \"Run 'Credo'\" dialog\r\n\r\n    1. Change the \"Inspection scope\" from \"Whole project\", which would include the `deps` to \"Custom scope\"\r\n    2. Select \"Project Production Files\" from the \"Custom scope\" dropdown\r\n    3. Click \"OK\"\r\n* [#951](https://github.com/KronicDeth/intellij-elixir/pull/951) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Setup `VirtualFilePointerManager` during `ParsingTestCase`\r\n  * Put `LineMarkerInfo` on leaf elements for Method (Call Definition) Separators for a performance improvement.\r\n  * Add IntelliJ IDEA 2017.3 to the build matrix\r\n\r\n### Bug Fixes\r\n* [#947](https://github.com/KronicDeth/intellij-elixir/pull/947) - When the SDK changes, record what `Release` of Elixir is used indirectly, using a `Level` `enum` that only cares about the major and minor version. Changing the `Level`, will mark the open files and .beam files as invalidated, so that if the SDK is changed, the stubs and code `Level` will agree, so there isn't a stub incompatibility with the PSI. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#950](https://github.com/KronicDeth/intellij-elixir/pull/950) - Allow credo section to be empty when processing credo explanations - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#951](https://github.com/KronicDeth/intellij-elixir/pull/951) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Prevent negative indent, not supported in 2017.3\r\n  * Cleanup SDKs from MixProjectImportBuilderTest\r\n\r\n## Incompatible Changes\r\n* [#951](https://github.com/KronicDeth/intellij-elixir/pull/951) - Drop support for IntelliJ IDEA before 2016.3 - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n### Credo\r\n\r\n#### Annotator\r\n\r\nIf [`credo`](https://github.com/rrrene/credo) is not installed as a project dependency, nothing will happen, but if it is installed, `mix credo PATH` will be called on any files after updates have quieted.  Any `credo` check failures will show up as warning annotations\r\n\r\n![Warning Annotations](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/external_annotator/Warning%20Annotations.png \"Warning Annotations\")\r\n\r\nIndividual check failures will show the explanation (from `mix credo PATH:LINE(:COLUMN)`) if you hover over the annotation\r\n\r\n![Explanation](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/external_annotator/Explanation.png \"Credo Check Failure Explanation\")\r\n\r\nYou can hover over the explanation and click the embedded links to jump to the line (and column) where the failure occurred.\r\n\r\n#### Inspection\r\n\r\n##### Batch Mode\r\n\r\nIf you'd like to run the `mix credo` external annotator when it is disabled, you can run it using the inspection name.\r\n\r\n1. Analyze > Run Inspection By Name... (\u2325\u21e7\u2318I)\r\n2. Type \"Credo\"\r\n3. Select \"Credo\" from the shortened list\r\n4. Hit Enter.\r\n\r\nYou'll be presented with a \"Run 'Credo'\" dialog\r\n\r\n![Run 'Credo'](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/inspection/batch_mode/Run%20Credo%20Custom%20Scope%20Project%20Production%20Files.png)\r\n\r\n1. Change the \"Inspection scope\" from \"Whole project\", which would include the `deps` to \"Custom scope\"\r\n2. Select \"Project Production Files\" from the \"Custom scope\" dropdown\r\n3. Click \"OK\"\r\n\r\nThe Inspections Result Tool Pane will open and show results as each file is processed.\r\n\r\n1. Click the \u25b6 to expand the Credo section to show all warnings\r\n\r\n   ![Individual Entry](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/inspection/batch_mode/Individual%20Entry.png)\r\n2. Click an entry for the details of an individual warning with a code highlighting.\r\n\r\n   ![Code Highlighting](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/inspection/batch_mode/Code%20Highlighting.png)\r\n\r\n   The view will show the parts of the file that aren't annotated as collapsed with the discontinuous line number indicating the jumps.\r\n\r\n   If you click on + collapse markers, you can expand the collapsed sections to see the full context\r\n\r\n   ![Expansion](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/inspection/credo/batch_mode/Expansion.png)\r\n\r\n   Or you can hover over the collapsed section to see a tooltip preview of the expansion\r\n\r\n   ![Expansion Preview](https://raw.githubusercontent.com/KronicDeth/intellij-elixir/v7.0.0/screenshots/features/credo/inspection/batch_mode/Expansion%20Preview.png)\r\n\r\n#### Configuration\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>\r\n        Preferences > Editor > Inspections\r\n      </th>\r\n      <th>\r\n        Preferences > Editor > Inspections > Credo\r\n      </th>\r\n      <th colspan=\"5\">\r\n        Editor\r\n      </th>\r\n      <th colspan=\"5\">\r\n        Inspections\r\n      </th>\r\n    </tr>\r\n    <tr>\r\n      <th rowspan=\"2\">\r\n        Elixir > Credo\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Include Explanation\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Highlight\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Message\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Explanation in tooltip\r\n      </th>\r\n      <th colspan=\"2\">\r\n        <code>mix credo</code> Runs\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Highlight\r\n      </th>\r\n      <th rowspan=\"2\">\r\n        Message\r\n      </th>\r\n      <th>\r\n        <code>mix credo</code> Runs\r\n      </th>\r\n      <th colspan=\"2\">\r\n        Action\r\n      </th>\r\n    </tr>\r\n    <tr>\r\n      <th>\r\n        Per File\r\n      </th>\r\n      <th>\r\n        Per Issue\r\n      </th>\r\n      <th>\r\n        Working Directory\r\n      </th>\r\n      <th>\r\n        Inspect Code\r\n      </th>\r\n      <th>\r\n        Run Inspection By Name\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>\r\n        \u2611\r\n      </td>\r\n      <td>\r\n        \u2611\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        \u2611\r\n      </td>\r\n      <td>\r\n        \u2610\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        No\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        0\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        \u2610\r\n      </td>\r\n      <td>\r\n        \u207f/\u2090\r\n      </td>\r\n      <td>\r\n        No\r\n      </td>\r\n      <td>\r\n        No\r\n      </td>\r\n      <td>\r\n        No\r\n      </td>\r\n      <td>\r\n        0\r\n      </td>\r\n      <td>\r\n        0\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n      <td>\r\n        1\r\n      </td>\r\n      <td>\r\n        No\r\n      </td>\r\n      <td>\r\n        Yes\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nIf you want to limit the performance impact of the credo annotator because `mix credo` spikes your CPU, you can limit the number of `mix credo` runs to 1 per open file by disabling the Explanation tooltip\r\n\r\n1. Preferences > Editor > Inspections > Credo\r\n2. Uncheck \"Include Explanation\"\r\n\r\nIf you don't want the annotator to run at all on open editors, then you can disable the paired inspection\r\n\r\n1. Preferences > Editor > Inspections\r\n2. Uncheck Elixir > Credo\r\n\r\nOnce the annotator is disabled, you can still run the inspection in [batch mode](#batch-mode)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8784129", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8784129/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8784129/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.7.0", "id": 8784129, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg3ODQxMjk=", "tag_name": "v6.7.0", "target_commitish": "master", "name": "v6.7.0", "draft": false, "prerelease": false, "created_at": "2017-12-05T19:54:42Z", "published_at": "2017-12-05T19:58:35Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5536404", "id": 5536404, "node_id": "MDEyOlJlbGVhc2VBc3NldDU1MzY0MDQ=", "name": "intellij-elixir-6.7.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2061445, "download_count": 23, "created_at": "2017-12-05T19:58:28Z", "updated_at": "2017-12-05T19:58:30Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.7.0/intellij-elixir-6.7.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.7.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.7.0", "body": "# Thanks\r\n* For reporting performance issues with nesting anonymous functions\r\n  * Michiel Karnebeek ([@mkarnebeek](https://github.com/mkarnebeek))\r\n* For helping with parser change ideas\r\n  * Robert Ekendahl ([@rekendahl](https://github.com/rekendahl))\r\n  * Patrick Scheibe ([@halirutan](https://github.com/halirutan))\r\n* For reporting general performance issues\r\n  * Nikolai Shikov ([@nikshik](https://github.com/nikshik))\r\n  * Alexey Mihaylov ([@take-five](https://github.com/take-five))\r\n  * [@andshape](https://github.com/andshape)\r\n\r\n# Changelog\r\n\r\n## v6.7.0\r\n\r\n### Enhancements\r\n* [#943](https://github.com/KronicDeth/intellij-elixir/pull/943) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Regression test for #580\r\n  * `{EOL}|.` -> `{ANY}` in `Elixir.flex`\r\n  * Convert (some) unimportant newlines from `EOL` to `WHITE_SPACE` token, as GrammarKit is smarter about reparsing when only `WHITE_SPACE` changes in size.\r\n    * After\r\n      * `fn`\r\n      * `do`\r\n      * `->`\r\n      * block identifier (`after`, `catch`, `else`, and `rescue`)\r\n      * keyword pair colon\r\n      * `(`\r\n    * Before\r\n      * Comments\r\n\r\n### Bug Fixes\r\n* [#943](https://github.com/KronicDeth/intellij-elixir/pull/943) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Remove `!stabOperationPrefix` before `expression`, since `stabOperationPrefix` itself starts with `expression` and instead put a negative look-ahead, `!(infixComma | stabInfixOperator)` after `expression`.  This now works when it previously didn't because `COMMA` was added to `expressionRecoverUntil`, which means both `COMMA` and `STAB_OPERATOR` are now in both not eaten by `expression`'s error recovery.\r\n\r\n    This drops Fn1 through Fn8 to ~176ms instead of the previous time of the last optimization of 13 seconds for Fn8.  It started at 26 seconds and now it appears that the time no longer grows with the number of `fn`.  It also eliminates the pause when hitting entering inside the `fn` nesting.\r\n\r\n    [Data and Chart](https://docs.google.com/spreadsheets/d/1mASN4BB3IAd5ZLQR5dz0Tzx2Yl-w4g5VUjz3bgd5kD4/edit?usp=sharing)"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8746883", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8746883/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8746883/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.6.0", "id": 8746883, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg3NDY4ODM=", "tag_name": "v6.6.0", "target_commitish": "master", "name": "v6.6.0", "draft": false, "prerelease": false, "created_at": "2017-12-02T20:18:14Z", "published_at": "2017-12-02T20:41:49Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5511170", "id": 5511170, "node_id": "MDEyOlJlbGVhc2VBc3NldDU1MTExNzA=", "name": "intellij-elixir-6.6.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2058763, "download_count": 11, "created_at": "2017-12-02T20:41:44Z", "updated_at": "2017-12-02T20:41:45Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.6.0/intellij-elixir-6.6.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.6.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.6.0", "body": "# Thanks\r\n* For reporting that `HEAD-<SHA1>` format used for `brew install --head elixir` directory was unparsable and caused a `null` `Version` and a NPE when sorting to determine the default directory.\r\n  * Geek Zhang ([@geekerzp](https://github.com/geekerzp))\r\n  * [@gw4e](https://github.com/gw4e)\r\n* For letting me know that templates are compiled to private functions in View modules.\r\n  * Chris McCord ([@chrismccord](https://github.com/chrismccord))\r\n* For [explaining](https://intellij-support.jetbrains.com/hc/en-us/community/posts/207231009-ERB-like-template-language) how ERB is implemented in Rubymine and pointing to [`handlebars`](https://github.com/JetBrains/intellij-plugins/tree/master/handlebars) as an open-source implementation of a similar language.\r\n  * Dennis Ushakov ([@denofevil](https://github.com/denofevil))\r\n\r\n# Changelog\r\n\r\n## v6.6.0\r\n\r\n### Enhancements\r\n* [#923](https://github.com/KronicDeth/intellij-elixir/pull/923) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * EEx support\r\n    * Lexer for EEx format\r\n    * Parser for EEx format\r\n    * EEx as a Template Language\r\n      * Any file with `.eex` as the final extension will be treated as EEx.  To determine the Template Data Language, the `.eex` extension will be stripped and any remaining extension will be looked up to get the File Type and its associated Language.  For example, `*.txt.eex` will be EEx with Plain Text (`.txt`) as the Data Template Language.  Likewise, `*.html.eex` will be EEx with HTML as the Data Template Language.  There's no need to register `*.txt.eex` or `*.html.eex` or any other `*.DATA_TEMPLATE_LANGUAGE_EXTENSION.eex` pattern explicitly: the nested extension will be looked up using the normal extension setup.\r\n  * Update Build Matrix\r\n    * IDEA `2016.2` is dropped because it's over a year old.  It is still supported, but not actively tested.\r\n* [#931](https://github.com/KronicDeth/intellij-elixir/pull/931) - Decompile `LocT` chunk for private macros and functions and the derived names of anonymous functions. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#910](https://github.com/KronicDeth/intellij-elixir/pull/910) - `mix hex.local --force` -> `mix local.hex --force` in `README` - [@bryanhuntesl-lowpriv](https://github.com/bryanhuntesl-lowpriv)\r\n* [#930](https://github.com/KronicDeth/intellij-elixir/pull/930) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Parse `HEAD-<SHA1>` as `0.0.<SHA1>` for sorting versions from homebrew homepath.  It will almost always be last unless there is an unknown version, which uses `0.0.0`.\r\n  * Ensure any unparsable version sorts as `0.0.0` (`UKNOWN_VERSION`).\r\n* [#932](https://github.com/KronicDeth/intellij-elixir/pull/932) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Look at parent of `eexTag` to resolve `fn` parameters\r\n  * Ensure functions `fn` in `eex` tags don't error by looking at `eex` element parent.\r\n  * Search above `eexTag` and `eex` to determine if variable.\r\n\r\n# README updates\r\n\r\n### Embedded Elixir (EEx) Templates\r\n\r\nAny file with `.eex` as the final extension will be treated as Embedded Elixir ([EEx](https://hexdocs.pm/eex)) templates.  To determine the Template Data Language, the `.eex` extension will be stripped and any remaining extension will be looked up to get the File Type and its associated Language. For example, `*.txt.eex` will be EEx with Plain Text (`.txt`) as the Data Template Language. Likewise, `*.html.eex` will be EEx with HTML as the Data Template Language. There's no need to register `*.txt.eex` or `*.html.eex` or any other `*.DATA_TEMPLATE_LANGUAGE_EXTENSION.eex` pattern explicitly: the nested extension will be looked up using the normal extension setup.\r\n\r\n![Form Template](/screenshots/features/eex_templates/Form%20Template.png?raw=true \"`lib/*_web/templates/user/form.html.eex` from `mix phx.gen.html Accounts User users name:string age:integer`\")\r\n\r\n![Parameter Usage in Form Template](/screenshots/features/eex_templates/Parameter%20Usage%20in%20Form%20Template.png?raw=true \"`f` parameter to `fn` passed to `form_for` is highlighted in pink, the parameter highlight color\")\r\n\r\n#### Advanced configuration\r\n\r\nIf you need more file-by-file configuration of the Template Data Language than can be achieved with a file extension/pattern, IntelliJ IDEA (Community or Ultimate Edition) has support for setting the Template Data Language on a specific path.\r\n\r\n1. Preferences > Languages and Frameworks > Template Data Languages\r\n\r\n#### Call definition macros\r\n\r\nIt turns out that in the `.beam` binary format there are no macros.  This makes sense since the BEAM format was made for Erlang, which does not have macros, and only has functions.  Elixir marks its macros in the compiled `.beam` by prefixing them with `MACRO-`.\r\n\r\nThere are 2 chunks in the BEAM format for function references: `ExpT`, which is for exports (because in Erlang module they are from `-export`), which are the public functions and macros; and `LocT`, which is for locals (anything not exported in Erlang), which are private functions and macros.\r\n\r\n| BEAM Chunk | Atom Prefix | Macro       |\r\n|------------|-------------|-------------|\r\n| `ExpT`     | `MACRO-`    | `defmacro`  |\r\n| `ExpT`     | N/A         | `def`       |\r\n| `LocT`     | `MACRO-`    | `defmacrop` |\r\n| `LocT`     | N/A         | `defp`      |\r\n\r\n##### `defp` with `/` in name\r\n\r\nMuch like there are no macros in BEAM, there are no anonymous functions either.  Any anonymous function (using `fn` in Elixir or `fun` in Erlang) ends up being a named function in the `LocT` chunk.  Anonymous functions names start with `-`, then the parent function's name, a `/` and a unique number for that scope.\r\n\r\nAs an example, `Kernel` has\r\n\r\n```elixir\r\ndefp unquote(:\"-MACRO-binding/2-fun-0-\")(p0, p1, p2, p3) do\r\n  # body not decompiled\r\nend\r\n```\r\n\r\nwhich is generated from the `for` in\r\n\r\n```elixir\r\n defmacro binding(context \\\\ nil) do\r\n    in_match? = Macro.Env.in_match?(__CALLER__)\r\n    for {v, c} <- __CALLER__.vars, c == context do\r\n      {v, wrap_binding(in_match?, {v, [generated: true], c})}\r\n    end\r\n  end\r\n```\r\n> -- [Kernel.binding/1](https://github.com/elixir-lang/elixir/blob/v1.5.2/lib/elixir/lib/kernel.ex#L2560-L2565)\r\n\r\n[Removal of EEx work-around]"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8409224", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8409224/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8409224/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.5.1", "id": 8409224, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg0MDkyMjQ=", "tag_name": "v6.5.1", "target_commitish": "master", "name": "v6.5.1", "draft": false, "prerelease": false, "created_at": "2017-11-07T01:42:15Z", "published_at": "2017-11-07T01:51:49Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5267127", "id": 5267127, "node_id": "MDEyOlJlbGVhc2VBc3NldDUyNjcxMjc=", "name": "intellij-elixir-6.5.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2002848, "download_count": 33, "created_at": "2017-11-07T01:51:27Z", "updated_at": "2017-11-07T01:51:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.5.1/intellij-elixir-6.5.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.5.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.5.1", "body": "# Thanks\r\n* For reporting that that Rider does not ship with `MockProjectEx` and my test checks probably broke the the plugin for all non-IDEA IDEs \ud83e\udd26\u200d\u2642\ufe0f .\r\n  * Raman But-Husaim ([@RamanBut-Husaim](https://github.com/RamanBut-Husaim))\r\n\r\n# Changelog\r\n\r\n## v6.5.1\r\n\r\n### Bug Fixes\r\n* [#904](https://github.com/KronicDeth/intellij-elixir/pull/904) - Don't do `project instanceOf MockProjectEx` because not all IDEs, such as Rider, ship with `MockProjectEx`; instead, do a `Class#getCanonicalName()` check. - [@KronicDeth](https://github.com/KronicDeth)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8390414", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8390414/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8390414/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.5.0", "id": 8390414, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTgzOTA0MTQ=", "tag_name": "v6.5.0", "target_commitish": "master", "name": "v6.5.0", "draft": false, "prerelease": false, "created_at": "2017-11-05T17:31:38Z", "published_at": "2017-11-05T17:40:14Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5253577", "id": 5253577, "node_id": "MDEyOlJlbGVhc2VBc3NldDUyNTM1Nzc=", "name": "intellij-elixir-6.5.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 14700, "download_count": 11, "created_at": "2017-11-05T17:40:00Z", "updated_at": "2017-11-05T17:40:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.5.0/intellij-elixir-6.5.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.5.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.5.0", "body": "[Donate](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=Kronic%2eDeth%40gmail%2ecom&lc=US&item_name=Elixir%20plugin%20for%20IntelliJ%20IDEA&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted)\r\n\r\n# Thanks\r\n\r\n* For reporting the grammar did not support `not in`\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* For reporting the `credo` edge detection errors were due to UTF-8 charset not being set.\r\n  * Malte Werschy ([@mwerschy](https://github.com/mwerschy))\r\n* For pointed out that `GeneralCommandLine#withCharset` existed to set the charset to UTF-8 always.\r\n  * Aleksey Kladov ([@matklad](https://github.com/matklad))\r\n\r\n# Changelog\r\n\r\n## v6.5.0\r\n\r\n### Enhancements\r\n* [#898](https://github.com/KronicDeth/intellij-elixir/pull/898) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update Build Matrix\r\n    * Only include IDEA versions within the last year.  Prior versions are supported, but not tested.  It is up to users stuck on older versions to report incompatibilities and then I'm specifically fix those bugs.\r\n      * Add `2017.2`\r\n      * Drop `2016.1.4`\r\n    * Only include Elixir versions within the last year.  Prior versions are supported, but not tested.  It is up to users stuck on older versions to report incompatibilities and then I'm specifically fix those bugs.\r\n      * Add `1.5.2`\r\n      * Drop `1.3.4`\r\n    * Only include OTP versions within the last year.  Prior versions are supported, but not tested.  It is up to users stuck on older versions to report incompatibilities and then I'm specifically fix those bugs.\r\n       * Add `20.1`\r\n       * Drop `18.3`\r\n  * Support `not in` grammar added by elixir-lang/elixir#5620 shipped with Elixir 1.5.\r\n  * Don't treat numeric operands to `@` and unary operators as separate operations from non-numeric operands to port elixir-lang/elixir@9747e58db773c716c01c210642ec1d91475e0c83 that shipped with Elixir 1.5.0.  This only kicks in if the Elixir SDK is version >= 1.5.0 or not set.  With an earlier SDK, you'll get the earlier behavior.\r\n\r\n### Bug Fixes\r\n* [#898](https://github.com/KronicDeth/intellij-elixir/pull/898) - Make binary infix vs unary prefix `+`/`-` handling more robust to support `one(two, - three)` used in Elixir 1.5 `enum.ex`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#901](https://github.com/KronicDeth/intellij-elixir/pull/901) - Call `withCharSet(Charsets.UTF_8)` on all `GeneralCommandLines` to prevent encoding errors on Windows. - [@KronicDeth](https://github.com/KronicDeth)\r\n  "}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8298697", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8298697/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8298697/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.4.0", "id": 8298697, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTgyOTg2OTc=", "tag_name": "v6.4.0", "target_commitish": "master", "name": "v6.4.0", "draft": false, "prerelease": false, "created_at": "2017-10-28T15:53:54Z", "published_at": "2017-10-28T18:32:44Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5190481", "id": 5190481, "node_id": "MDEyOlJlbGVhc2VBc3NldDUxOTA0ODE=", "name": "intellij-elixir-6.4.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1970074, "download_count": 30, "created_at": "2017-10-28T18:32:54Z", "updated_at": "2017-10-28T18:32:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.4.0/intellij-elixir-6.4.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.4.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.4.0", "body": "# Thanks\r\n\r\n* For reporting assertion error when explanation content was not indented 5 spaces\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n* For reporting assertion error in `Credo#stripEdge`\r\n  * Ron Arts ([@raarts](https://github.com/raarts))\r\n* For reporting that `end` wasn't being decompiled with `Unquoted` in `wx-1.8.2/ebin/gl.beam`\r\n  * Denis Andrejew ([@seeekr](https://github.com/seeekr))\r\n* For reporting that `$code_change` wasn't being decompiled with `Unquoted` in `tools-2.11/ebin/fprof.beam`\r\n   * Denis Andrejew ([@seeekr](https://github.com/seeekr))\r\n* For reporting that `BeamFileImpl` needed `StubbedSpine getStubbedSpine()` in IntelliJ IDEA 2017.3 EAP/Public Preview\r\n  * Matt Jadczak ([@mjadczak](https://github.com/mjadczak))\r\n  * Raman But-Husaim ([@RamanBut-Husaim](https://github.com/RamanBut-Husaim))\r\n* For showing that `StubbedSpine getStubbedSpine()` could be copied from `ClsFileImpl`, but then fixing it, so that `getStubbedSpine()` had a default implementation on the interface, so I didn't need to use reflection to support > 2017.3 and earlier versions. \u2764\ufe0f \r\n  * Peter Gromov ([@donnerpeter](https://github.com/donnerpeter))\r\n* For reporting that `Credo` annotator violated \"Write access is allowed from event dispatch thread only\" when `Type. putDefaultErlangSdk` was triggered for upgraders that didn't upgrade their SDK manually or with a `mix` Run Configuration before the Credo annotator started running.\r\n  * Pavel Kotlyar ([@paxer](https://github.com/paxer))\r\n  * Shane S ([@ShaneSegal](https://github.com/ShaneSegal))\r\n  * [@chinazhangyujia](https://github.com/chinazhangyujia)\r\n  * Szymon Je\u017c ([@szymon-jez](https://github.com/szymon-jez))\r\n  * Bj\u00f6rn Erlwein ([@beji](https://github.com/beji))\r\n  * Ram Kumar ([@ramka001](https://github.com/ramka001))\r\n  * Steve Wagner ([@ciroque](https://github.com/ciroque))\r\n  * Sergey Shramko ([@sshramko](https://github.com/sshramko))\r\n  * Anton Medvedev ([@antonmedv](https://github.com/antonmedv))\r\n  * Raz ([@RazgrizHsu](https://github.com/RazgrizHsu))\r\n  * Andre Dobroskok ([@andre-dubber](https://github.com/andre-dubber))\r\n  * Wojciech Bednarski ([@wbednarski](https://github.com/wbednarski))\r\n* For reporting ANSI escape codes were not converted to colors in console output\r\n  * Alexey ([@Nihisil](https://github.com/Nihisil))\r\n  * Hannes Nevalainen ([@kwando](https://github.com/kwando))\r\n* For pointing me towards `com.intellij.execution.process.ColoredProcessHandler` for ANSI escape code colors. \u2764\ufe0f \r\n  * Sergey Savenko ([@deadok22](https://github.com/deadok22))\r\n\r\n# Changelog\r\n\r\n## v6.4.0\r\n\r\n### Enhancements\r\n* [#861](https://github.com/KronicDeth/intellij-elixir/pull/861) - Regression test for [#860](https://github.com/KronicDeth/intellij-elixir/issues/860) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#862](https://github.com/KronicDeth/intellij-elixir/pull/862) - Regression test for [#859](https://github.com/KronicDeth/intellij-elixir/issues/859) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#863](https://github.com/KronicDeth/intellij-elixir/pull/863) - Convert ANSI escape codes to colored output in `mix` Run and Debug output - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#886](https://github.com/KronicDeth/intellij-elixir/pull/886) - Regression test for [#883](https://github.com/KronicDeth/intellij-elixir/issues/883) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#887](https://github.com/KronicDeth/intellij-elixir/pull/887) - Regression test for [#878](https://github.com/KronicDeth/intellij-elixir/issues/878) - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#861](https://github.com/KronicDeth/intellij-elixir/pull/861) - [@KronicDeth](https://github.com/KronicDeth).\r\n  * Quote `-` in addition to `#` in `Unquoted` `MacroNameArity` decompiler.\r\n  * Quote `-` in decompiled module names.\r\n* [#862](https://github.com/KronicDeth/intellij-elixir/pull/862) - Wrap call definitions with name `nil` as `unquote(:nil)` in the decompiler. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#884](https://github.com/KronicDeth/intellij-elixir/pull/884) - `Application#runWriteAction` MUST be run from EventDispatch thread.  This is true when run from a Run Configuration runner, but when the Credo annotator runs `runWriteAction`, it's not in an EventDispatch thread, so followed [IntelliJ Platform SDK DevGuide - General Threading Rules](https://www.jetbrains.org/intellij/sdk/docs/basics/architectural_overview/general_threading_rules.html) and wrapped the `runWriteAction` in `Application#invokeAndWait`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#885](https://github.com/KronicDeth/intellij-elixir/pull/885) - Wrap `sdkModificator::commitChanges` in `invokeAndWait` `runWriteAction` in `MixRunningStateUtil#updateRoots`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#886](https://github.com/KronicDeth/intellij-elixir/pull/886) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Generalize what needs to be double quoted for `Unquoted` decompiler\r\n    * Aliases and special forms are bare atoms\r\n    * Anything that is NEITHER an identifier NOR a prefix operator is a double quoted atom.\r\n\r\n    Normal identifiers and prefix operators then fall through to the `Default` decompiler.\r\n* [#887](https://github.com/KronicDeth/intellij-elixir/pull/887) - Add `end` to `Unquoted` decompiler bare atoms. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#888](https://github.com/KronicDeth/intellij-elixir/pull/888) - Replace `assert`s in `Credo` external annotator with extended log messages that record the unexpected line. - [@KronicDeth](https://github.com/KronicDeth)"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8196984", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8196984/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8196984/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.3.0", "id": 8196984, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTgxOTY5ODQ=", "tag_name": "v6.3.0", "target_commitish": "master", "name": "v6.3.0", "draft": false, "prerelease": false, "created_at": "2017-10-20T13:26:38Z", "published_at": "2017-10-20T13:45:50Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5120544", "id": 5120544, "node_id": "MDEyOlJlbGVhc2VBc3NldDUxMjA1NDQ=", "name": "intellij-elixir-6.3.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1966564, "download_count": 15, "created_at": "2017-10-20T13:37:24Z", "updated_at": "2017-10-20T13:37:26Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.3.0/intellij-elixir-6.3.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.3.0", "body": "# Thanks\r\n\r\n* For explaining difficulties with using README Project section in Small IDEs\r\n  * Michel Perez [@mrkaspa](https://github.com/mrkaspa)\r\n  * Ron Arts [@raarts](https://github.com/raarts)\r\n* For reporting that the Internal Erlang SDK in Elixir SDK in Rich IDE support in 6.2.0 broke `mix test` runner for Small IDEs\r\n  * Jan Stevens [@JanStevens](https://github.com/JanStevens)\r\n\r\n# Changelog\r\n\r\n## v6.3.0\r\n\r\n### Enhancements\r\n* [#854](https://github.com/KronicDeth/intellij-elixir/pull/854) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `credo` external annotator\r\n    * Once modifications have settled on a file and all internal annotators have run, `mix credo` will be run on any modified file.\r\n      * Each check failure reported by `mix credo` will be turned into a warning annotation (yellow highlight) of the line or line and column credo identified.\r\n      * If you hover over the annotation (either in the source or on right gutter), the `mix credo PATH:LINE(:COLUMN)` explanation will be shown.  Links in the tooltip are clickable and allow you to jump to the specific line or line and column of the failure.\r\n* [#856](https://github.com/KronicDeth/intellij-elixir/pull/856) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Explain Rich vs Small IDEs more\r\n  * Add feature support table for Rich vs Small IDEs with links to alternatives for Rich IDEs features not in Small IDEs.\r\n  * Reorder Project subsections based on usage.\r\n\r\n### Bug Fixes\r\n* [#854](https://github.com/KronicDeth/intellij-elixir/pull/854) - Rename package with typo `org.elixir_lang.annonator` -> `org.elixir_lang.annotator`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#855](https://github.com/KronicDeth/intellij-elixir/pull/855) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Change error to say mix, elixir, or erlang path is not set instead of just mix path.\r\n  * Rewrite of `MixRunningStateUtil#setElixir` to support calling `erl` directly in IntelliJ IDEA added a check that sdk type was the Elixir SDK Type, but there was no `else` clauses to handle that there IS an SDK, but its NOT Elixir, which is the common case on all Small IDEs (like Rubymine).  To fill this gap, if the SDK is not Elixir and a Small IDE is detected, then the SDK Home from Preferences > Other Settings > Elixir External Tools > Elixir SDK > Path will be used to get the absolute path to the `elixir` (or `elixir.bat` executable and set it in the `GeneralCommandLine`.\r\n* [#856](https://github.com/KronicDeth/intellij-elixir/pull/856) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add missing `**` for bold.\r\n  * Document alternative setup in Small IDEs\r\n  * Put Import from external model first in Project subsections, so that people are more likely to import as a mix project correctly.\r\n\r\n# README updates\r\n\r\n# Thanks\r\n\r\n* For explaining difficulties with using README Project section in Small IDEs\r\n  * Michel Perez [@mrkaspa](https://github.com/mrkaspa)\r\n  * Ron Arts [@raarts](https://github.com/raarts)\r\n* For reporting that the Internal Erlang SDK in Elixir SDK in Rich IDE support in 6.2.0 broke `mix test` runner for Small IDEs\r\n  * Jan Stevens [@JanStevens](https://github.com/JanStevens)\r\n\r\n# Changelog\r\n\r\n## v6.3.0\r\n\r\n### Enhancements\r\n* [#854](https://github.com/KronicDeth/intellij-elixir/pull/854) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `credo` external annotator\r\n    * Once modifications have settled on a file and all internal annotators have run, `mix credo` will be run on any modified file.\r\n      * Each check failure reported by `mix credo` will be turned into a warning annotation (yellow highlight) of the line or line and column credo identified.\r\n      * If you hover over the annotation (either in the source or on right gutter), the `mix credo PATH:LINE(:COLUMN)` explanation will be shown.  Links in the tooltip are clickable and allow you to jump to the specific line or line and column of the failure.\r\n* [#856](https://github.com/KronicDeth/intellij-elixir/pull/856) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Explain Rich vs Small IDEs more\r\n  * Add feature support table for Rich vs Small IDEs with links to alternatives for Rich IDEs features not in Small IDEs.\r\n  * Reorder Project subsections based on usage.\r\n\r\n### Bug Fixes\r\n* [#854](https://github.com/KronicDeth/intellij-elixir/pull/854) - Rename package with typo `org.elixir_lang.annonator` -> `org.elixir_lang.annotator`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#855](https://github.com/KronicDeth/intellij-elixir/pull/855) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Change error to say mix, elixir, or erlang path is not set instead of just mix path.\r\n  * Rewrite of `MixRunningStateUtil#setElixir` to support calling `erl` directly in IntelliJ IDEA added a check that sdk type was the Elixir SDK Type, but there was no `else` clauses to handle that there IS an SDK, but its NOT Elixir, which is the common case on all Small IDEs (like Rubymine).  To fill this gap, if the SDK is not Elixir and a Small IDE is detected, then the SDK Home from Preferences > Other Settings > Elixir External Tools > Elixir SDK > Path will be used to get the absolute path to the `elixir` (or `elixir.bat` executable and set it in the `GeneralCommandLine`.\r\n* [#856](https://github.com/KronicDeth/intellij-elixir/pull/856) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add missing `**` for bold.\r\n  * Document alternative setup in Small IDEs\r\n  * Put Import from external model first in Project subsections, so that people are more likely to import as a mix project correctly.\r\n\r\n# README updates\r\n\r\n# Elixir plugin\r\n\r\n[![Build Status](https://travis-ci.org/KronicDeth/intellij-elixir.svg?branch=master)](https://travis-ci.org/KronicDeth/intellij-elixir)\r\n\r\nThis is a plugin that adds support for [Elixir](http://elixir-lang.org/) to JetBrains IDEs.\r\n\r\nThe plugin works both in the rich IDEs that allow alternative language SDK selection and small IDEs that are language specific.  The rich IDEs work best for IntelliJ Elixir because only in the rich IDEs can have an Elixir SDK set as the Project SDK.  In all small IDEs, the native language SDK is always there, which makes anything that uses the SDK, such as running `elixir`, `erl`, or `mix` more complicated both internally and externally in the configuration you have to setup.\r\n\r\n## IDEs\r\n\r\n*The plugin is free to use in all JetBrains IDEs.  The Cost column in the below table is what JetBrains charges for the IDE itself.  IntelliJ Elixir is maintained by [@KronicDeth](https://github.com/KronicDeth) who does not get any of the subscription money.  If you want to support the plugin itself, make a [donation](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#donations).*\r\n\r\n| IDE                                                                                                      | Rich/Small | Languages   | Cost                                                                      | Trial                                                                                | License              | Source                                                                                                          |\r\n|----------------------------------------------------------------------------------------------------------|------------|-------------|---------------------------------------------------------------------------|--------------------------------------------------------------------------------------|----------------------|-----------------------------------------------------------------------------------------------------------------|\r\n| [IntelliJ IDEA Community Edition](https://www.jetbrains.com/idea/download/download-thanks.html?code=IIC) | Rich       | Java        | Free                                                                      | N/A                                                                                  | Apache 2.0           | [JetBrains/intellij-community](https://github.com/JetBrains/intellij-community)                                 |\r\n| [IntelliJ IDEA Ultimate Edition](https://www.jetbrains.com/idea/download/download-thanks.html)           | Rich       | Java        | [Subscription](https://www.jetbrains.com/idea/buy/#edition=discounts)     | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n| [AppCode](https://www.jetbrains.com/objc/download/download-thanks.html)                                  | Small      | Objective-C | [Subscription](https://www.jetbrains.com/objc/buy/#edition=discounts)     | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n| [CLion](https://www.jetbrains.com/clion/download/download-thanks.html)                                   | Small      | C/C++       | [Subscription](https://www.jetbrains.com/clion/buy/#edition=discounts)    | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n| [DataGrip](https://www.jetbrains.com/datagrip/download/download-thanks.html)                             | Small      | SQL         | [Subscription](https://www.jetbrains.com/datagrip/buy/#edition=discounts) | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n| [Gogland](https://www.jetbrains.com/go/download/download-thanks.html?type=eap)                           | Small      | Go          | Free                                                                      | N/A                                                                                  | Early Access Preview | N/A                                                                                                             |\r\n| [PHPStorm](https://www.jetbrains.com/phpstorm/download/download-thanks.html)                             | Small      | PHP         | [Subscription](https://www.jetbrains.com/phpstorm/buy/#edition=discounts) | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n| [PyCharm Community Edition](https://www.jetbrains.com/pycharm/download/download-thanks.html?code=PCC)    | Small      | Python      | Free                                                                      | N/A                                                                                  | Apache 2.0           | [JetBrains/intellij-community subdirectory](https://github.com/JetBrains/intellij-community/tree/master/python) |\r\n| [PyCharm Professional Edition](https://www.jetbrains.com/pycharm/download/download-thanks.html)          | Small      | Python      | [Subscription](https://www.jetbrains.com/pycharm/buy/#edition=discounts)  | N/A                                                                                  | Commercial           | N/A                                                                                                             |\r\n| [Rider](https://www.jetbrains.com/rider/download/download-thanks.html)                                   | Small      | .NET        | [Subcription](https://www.jetbrains.com/rider/buy/#edition=discounts)     | N/A                                                                                  | Commercial           | N/A                                                                                                             |\r\n| [RubyMine](https://www.jetbrains.com/ruby/download/download-thanks.html)                                 | Small      | Ruby        | [Subscription](https://www.jetbrains.com/ruby/buy/#edition=discounts)     | 30-days ([90-day for whole team](https://www.jetbrains.com/ruby/buy/#edition=trial)) | Commercial           | N/A                                                                                                             |\r\n| [WebStorm](https://www.jetbrains.com/webstorm/download/download-thanks.html)                             | Small      | JavaScript  | [Subscription](https://www.jetbrains.com/webstorm/buy/#edition=discounts) | 30-days                                                                              | Commercial           | N/A                                                                                                             |\r\n\r\n\r\nOnce you have your IDE of choice installed, you can [install this plugin](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#installation)\r\n\r\n## Features\r\n\r\n| Feature                                     | [Rich](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides) | [Small](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides) | Alternative                                                                           |\r\n|---------------------------------------------|---------------|----------------|---------------------------------------------------------------------------------------|\r\n| Project                                     | Yes           | No             | 1. Open directory<br/>2. [Elixir SDK Path in External Elixir Tools](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#elixir-sdk-path) |\r\n| Project Structure                           | Automatic     | Manual         |                                                                                       |\r\n| Project Settings                            | Yes           | No             |                                                                                       |\r\n| Module Settings                             | Yes           | No             |                                                                                       |\r\n| New Elixir File                             | Yes           | Yes            |                                                                                       |\r\n| Syntax Highlighting and Semantic Annotation | Yes           | Yes            |                                                                                       |\r\n| Grammar Parsing                             | Yes           | Yes            |                                                                                       |\r\n| Inspections                                 | Yes           | Yes            |                                                                                       |\r\n| Quick Fixes                                 | Yes           | Yes            |                                                                                       |\r\n| Code Folding                                | Yes           | Yes            |                                                                                       |\r\n| Commenter                                   | Yes           | Yes            |                                                                                       |\r\n| Debugger                                    | Yes           | Yes            |                                                                                       |\r\n| Delimiters                                  | Yes           | Yes            |                                                                                       |\r\n| Building/Compiling                          | Yes           | No             | Build/compile as part `mix` run configurations only                                   |\r\n| Live Templates                              | Yes           | Yes            |                                                                                       |\r\n| Run Configurations                          | Yes           | Yes            |                                                                                       |\r\n| Completion                                  | Yes           | Yes            |                                                                                       |\r\n| Decompilation                               | Yes           | Yes            |                                                                                       |\r\n| Go To Declaration                           | Yes           | Yes            |                                                                                       |\r\n| Formatting                                  | Yes           | Yes            |                                                                                       |\r\n| Go To Symbol                                | Yes           | Yes            |                                                                                       |\r\n| Go To Test                                  | Yes           | Yes            |                                                                                       |\r\n| Go To Test Subject                          | Yes           | Yes            |                                                                                       |\r\n| Find Usage                                  | Yes           | Yes            |                                                                                       |\r\n| Refactor                                    | Yes           | Yes            |                                                                                       |\r\n| SDK                                         | Yes           | No             | [Elixir SDK Path in External Elixir Tools](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#elixir-sdk-path)                          |\r\n| Structure                                   | Yes           | Yes            |                                                                                       |\r\n\r\n### Project\r\n<b>\r\nNOTE: This feature only works in Rich IDEs as it depends on an extension point unavailable in Small IDEs.  To setup a project in a Small IDE\r\n\r\n1. Open Directory of the project\r\n2. [Setup the Elixir SDK Path in External Elixir Tools](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#elixir-sdk-path)\r\n</b>\r\n\r\n#### From Existing Sources\r\n\r\n##### Import project from external model\r\nIf you've already created a `mix` project, you can load it as an Elixir project into the plugin.\r\n\r\n1. File > New > Project From Existing Sources...\r\n2. Select the root directory of your project.\r\n3. Select \"Import project from external model\"\r\n4. Select Mix\r\n   ![File > New Project > From Existing Sources > Import project from external model > Mix](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/from_existing_sources/import_project_from_external_model/Mix.png?raw=true \"Import Mix Project\")\r\n5. Click Next\r\n6. The \"Mix project root\" will be filled in with the selected directory.\r\n7. (Optional) Uncheck \"Fetch dependencies with mix\" if you don't want to run `mix deps.get` when importing the project\r\n   * If \"Fetch dependencies with mix\" is checked both `mix hex.local --force` and `mix deps.get` will be run.\r\n8. Ensure the correct \"Mix Path\" is detected.  On Windows, the `mix.bat`, such as\r\n   `C:\\Program Files (x86)\\Elixir\\bin\\mix.bat` should be used instead of the `mix` file without the extension.\r\n9. Ensure the \"Mix Version\" is as expected.  The number in parentheses should match the Elixir version.\r\n10. Click Next\r\n11. All directories with `mix.exs` files will be selected as \"Mix projects to import\".  To import just the main project and not its dependencies, click Unselect All.\r\n12. Check the box next to the project root to use only its `mix.exs`.  (It will likely be the first checkbox at the top.)\r\n13. Click Next\r\n14. Select a Project SDK directory by clicking Configure.\r\n15. The plugin will automatically find the newest version of Elixir installed. (**NOTE: SDK detection only works for\r\n    Linux, homebrew installs on OSX, and Windows.  [Open an issue](https://github.com/KronicDeth/intellij-elixir/issues)\r\n    with information about Elixir install locations on your operating system and package manager to have SDK detection\r\n    added for it.**)\r\n16. If the automatic detection doesn't find your Elixir SDK or you want to use an older version, manually select select\r\n    the directory above the `bin` directory containing `elixir`, `elixirc`, `iex`, and `mix`. (On Windows it is the\r\n    directory containing `elixir.bat`, `elixirc.bat`, `iex.bat`, and `mix.bat`.)\r\n17. Click Finish after you select SDK name from the Project SDK list.\r\n\r\n##### Create project from existing sources\r\nIf you've already created a (non-`mix`) project, you can load it as an Elixir project into the plugin.\r\n\r\n1. File > New > Project From Existing Sources...\r\n2. Select the root directory of your project.\r\n3. Leave the default selection, \"Create project from existing sources\"\r\n4. Click Next\r\n5. Project name will be filled with the basename of the root directory.  Customize it if you like.\r\n6. Project location will be the root directory.\r\n7. Click Next.\r\n8. If you previously opened the directory in IntelliJ or another JetBrains IDE, you'll be prompted to overwrite the\r\n   .idea directory.  Click Yes.\r\n9. You'll be prompted with a list of detected Elixir project roots to add to the project.  Each root contains a\r\n   `mix.exs`.  Uncheck any project roots that you don't want added.\r\n10. Click Next.\r\n10. Select a Project SDK directory by clicking Configure.\r\n11. The plugin will automatically find the newest version of Elixir installed. (**NOTE: SDK detection only works for\r\n    Linux, homebrew installs on OSX, and Windows.  [Open an issue](https://github.com/KronicDeth/intellij-elixir/issues)\r\n    with information about Elixir install locations on your operating system and package manager to have SDK detection\r\n    added for it.**)\r\n12. If the automatic detection doesn't find your Elixir SDK or you want to use an older version, manually select select\r\n    the directory above the `bin` directory containing `elixir`, `elixirc`, `iex`, and `mix`.\r\n13. Click Next after you select SDK name from the Project SDK list.\r\n14. Click Finish on the framework page.  (*No framework detection is implemented yet for Elixir.*)\r\n15. Choose whether to open in a New Window or in This Window.\r\n\r\n#### New\r\n\r\nIf you want to create a basic (non-`mix`) Elixir project with a `lib` directory, perform the following steps.\r\n\r\n1. File > New > Project\r\n   ![File > New > Project](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/New.png?raw=true \"New Project\")\r\n2. Select Elixir from the project type menu on the left\r\n3. Click Next\r\n   ![File > New > Project > Elixir](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/new/Elixir.png?raw=true \"New Elixir Project\")\r\n4. Select a Project SDK directory by clicking Configure.\r\n   ![Project SDK](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/SDK.png?raw=true \"Project SDK\")\r\n4. Select a Project SDK directory by clicking Configure.\r\n5. The plugin will automatically find the newest version of Elixir installed.\r\n   * macOS / OSX\r\n     * Homebrew (`/usr/local/Cellar/elixir`)\r\n     * Nix (`/nix/store`)\r\n   * Linux\r\n     * `/usr/local/lib/elixir`\r\n     * Nix and NixOS (`/nix/store`)\r\n   * Windows\r\n     * 32-bit (`C:\\Program Files\\Elixir`)\r\n     * 64-bit (`C:\\Program Files (x86)\\Elixir`)\r\n     * (**NOTE: SDK detection only works for [Open an issue](https://github.com/KronicDeth/intellij-elixir/issues) with information about Elixir install locations on your operating system and package manager to have SDK detection added for it.**)\r\n6. If the automatic detection doesn't find your Elixir SDK or you want to use an older version, manually select select the directory above the `bin` directory containing `elixir`, `elixirc`, `iex`, and `mix`.  If the `bin`, `lib,` or `src` directory is incorrectly selected, it will be corrected to the parent directory.\r\n7. Click Next after you select SDK name from the Project SDK list.\r\n8. Change the `Project name` to the name your want for the project\r\n   ![File > New > Project > Settings](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/new/Settings.png?raw=true \"New Elixir Project Settings\")\r\n9. (Optionally) change the `Project location` if the directory does not match what you want\r\n10. (Optionally) expand `More Settings` to change the `Module name`, `Content root`, `Module file location`, and/or `Project format`.  The defaults derived from the `Project name` and `Project location` should work for most projects.\r\n11. Click Finish\r\n12. Choose whether to open in a New Window or in This Window.\r\n    ![File > New > Project > Window](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/project/new/Settings.png?raw=true \"Open Project in New Window or This Window\")\r\n\r\n\r\n### External Annotators\r\n\r\nIn addition to the built-in syntax highlighting and annotations above, various `mix` tasks will be run to gather annotations from Elixir status analysis tools.\r\n\r\n#### Credo\r\n\r\nIf [`credo`](https://github.com/rrrene/credo) is not installed as a project dependency, nothing will happen, but if it is installed, `mix credo PATH` will be called on any files after updates have quieted.  Any `credo` check failures will show up as warning annotations\r\n\r\n![Warning Annotations](/screenshots/features/external_annotators/credo/Warning%20Annotations.png?raw=true \"Warning Annotations\")\r\n\r\nIndividual check failures will show the explanation (from `mix credo PATH:LINE(:COLUMN)`) if you hover over the annotation\r\n\r\n![Explanation](/screenshots/features/external_annotators/credo/Explanation.png?raw=true \"Credo Check Failure Explanation\")\r\n\r\nYou can hover over the explanation and click the embedded links to jump to the line (and column) where the failure occurred.\r\n\r\n### SDK\r\n\r\n**NOTE: These instructions only apply to Rich IDEs, for a Small IDE use [Elixir SDK Path](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#elixir-sdk-path)**\r\n\r\n### Elixir External Tools\r\n\r\n#### [Rich IDEs](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides)\r\n\r\n![Elixir External Tools in Rich IDEs](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/external_elixir_tools/Rich%20IDE.png?raw=true \"Elixir External Tools in Rich IDEs\")\r\n\r\nIn a [Rich IDE](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides), like IntelliJ IDEA, only the path to `mix` is configured as an external tool.  This `mix` path is only used when creating new projects, so when opening a pre-existing project with [Import project from external model](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#import-project-from-external-model), this doesn't even need to be set.\r\n\r\n#### [Small IDEs](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides)\r\n\r\n![Elixir External Tools in Small IDEs](https://github.com/KronicDeth/intellij-elixir/blob/v6.3.0/screenshots/features/external_elixir_tools/Small%20IDE.png?raw=true \"Elixir External Tools in Small IDEs\")\r\n\r\n##### Elixir SDK Path\r\n\r\n**NOTE: To setup the SDK in a Rich IDE use [Import project from external model](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#import-project-from-external-model) or [SDK](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#sdk)**\r\n\r\nIn a [Small IDE](https://github.com/KronicDeth/intellij-elixir/tree/v6.3.0#ides), like Rubymine, the Project SDK is always a Ruby SDK, so to support a pseudo-Elixir-SDK in a Small IDE, the Elixir SDK Path can be set.\r\n\r\n1. Open Preferences > Other Settings > Elixir External Tools\r\n2. Set the Elixir SDK Path\r\n  * Paste the path to an Elixir SDK\r\n  * Click the `...` to select the directory\r\n\r\n  The pattern for the Elixir SDK Path varies based on the OS and package manager you used to install Elixir\r\n\r\n  | OS              | Package Manager  | Elixir SDK Path                    |\r\n  |-----------------|------------------|------------------------------------|\r\n  | OSX/macOS       | Homebrew         | `/usr/local/Cellar/elixir/VERSION` |\r\n  | OSX/macOS/Linux | Nix              | `/nix/store/HASH-elixir-VERSION`   |\r\n  | Windows 32-bit  | Erlang Solutions | `C:\\Program Files\\Elixir`          |\r\n  | Windows 64-bit  | Erlang Solutions | `C:\\Program Files (x86)\\Elixir`    |\r\n  | Linux           | Default          | `/usr/local/lib/elixir`            |\r\n\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8118304", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/8118304/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/8118304/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.2.0", "id": 8118304, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTgxMTgzMDQ=", "tag_name": "v6.2.0", "target_commitish": "master", "name": "v6.2.0", "draft": false, "prerelease": false, "created_at": "2017-10-14T01:10:30Z", "published_at": "2017-10-14T01:12:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/5064782", "id": 5064782, "node_id": "MDEyOlJlbGVhc2VBc3NldDUwNjQ3ODI=", "name": "intellij-elixir-6.2.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1950825, "download_count": 17, "created_at": "2017-10-14T01:12:40Z", "updated_at": "2017-10-14T01:12:41Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.2.0/intellij-elixir-6.2.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.2.0", "body": "[Donate](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=Kronic%2eDeth%40gmail%2ecom&lc=US&item_name=Elixir%20plugin%20for%20IntelliJ%20IDEA&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted)\r\n\r\n# Thanks\r\n\r\n* For reporting header typeID (\ufffd\ufffd\ufffd) did not match expected (FOR1) from /`lib/certifi/ebin/certifi_cacerts.beam`\r\n  * Antonios Ntasioudis ([@stonehz](https://github.com/stonehz))\r\n  * [@adequateDeveloper](https://github.com/adequateDeveloper)\r\n  * Abdulrhman A. AlKhodiry ([@zeroows](https://github.com/zeroows))\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n  * Hassan Schroeder ([@hassan](https://github.com/hassan))\r\n  * [@dima12qw](https://github.com/dima12qw)\r\n  * Mithen_Ji ([@mithenji](https://github.com/mithenji))\r\n* For reporting that I missed porting [capital sigil modifier support](https://github.com/KronicDeth/intellij-elixir/issues/752)\r\n  * Julius Beckmann [@h4cc](https://github.com/h4cc)\r\n* For reporting that `end` wasn't an allowed keyword key\r\n  * Regina Imhoff ([@StabbyMcDuck](https://github.com/stabbymcduck))\r\n  * Aleksandr Kuzmenko ([@IcyEagle](https://github.com/IcyEagle))\r\n* For answer question on https://gitter.im/IntelliJ-Plugin-Developers/Lobby\r\n  * Patrick Scheibe ([@halirutan](https://github.com/halirutan))\r\n  * Alexander Zolotov ([@zolotov](https://github.com/zolotov))\r\n  * Colin Fleming ([@cmf](https://github.com/cmf))\r\n\r\n# Changelog\r\n\r\n## v6.2.0\r\n\r\n### Enhancements\r\n* [#817](https://github.com/KronicDeth/intellij-elixir/pull/817) - * Add note to README that atom module names should be prefixed with `:` - [@merqlove](https://github.com/merglove)\r\n* [#827](https://github.com/KronicDeth/intellij-elixir/pull/827) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Elixir SDK will now have an Internal Erlang SDK, which can be supplied one of two ways:\r\n    1. If `intellij-erlang` is installed: its Erlang SDK can be used\r\n    2. Otherwise: the Erlang SDK for Elixir SDK from this plugin can be used\r\n\r\n    Either Internal Erlang SDK's home path is used to locate the `erl` (or `erl.exe` on Windows) executable and it is used to run Elixir; bypassing the `elixir` (or `elixir.bat` on Windows) script.  Instead, as was done in #789, the ebin directories for the Elixir SDK are passed as `-pa` options to `erl`.\r\n\r\n    The Elixir SDK's configuration becomes more important: the classpath entries are now the list of `ebin` directories to pass to `erl` using `-pa` instead of scanning for ebins in the homepath, so additional code paths can be added to the Classpaths configuration and they will be used when running `mix` and `mix test`.  The classpaths will be initialized to the ebin directories under the home path.\r\n\r\n    * To support migrating from earlier version of the plugin, an SDK will be updated when it is used for Mix ExUnit Run Configurations\r\n      * The default Internal Erlang SDK will be set, which uses the latest version of Erlang that can be found on the system.  When `intellij-erlang` is installed, `intellij-elixir`'s Erlang version suggestion is still used because `intellij-elixir` favors the latest version while `intellij-erlang` favors the first found, which is usually the oldest version.\r\n      * Update roots (class path, source paths, documentation paths):\r\n        * Class path of `HOMEPATH/lib` is replaced with `HOMEPATH/lib/APP/ebin`.\r\n        * Source path of `HOMEPATH/lib` is replaced with `HOMEPATH/lib/APP/lib` IF it exists (so only for source SDKs)\r\n        * Documentation of `http://elixir-lang.org/docs/stable/elixir/` will be replaced with `https://hexdoc.pm/APP/VERSION` for every `APP` in `HOMEPATH/lib`.\r\n* [#839](https://github.com/KronicDeth/intellij-elixir/pull/839) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * All `ebin` paths in the Internal Erlang SDK will be copied to the Elixir SDK, so that they are indexed, which makes the Internal Erlang SDK modules show up in Symbol search.\r\n  * Erlang SDK modules can be completed and then functions in those modules can be completed after typing `.`.\r\n    * Atoms have References.\r\n      * Indexed atoms (from decompiled Erlang `.beams` from the Internal Erlang SDK) will be used for completing atoms as soon the atom is parseable: either after the first letter `:` or inside the quotes when making a quoted atom.\r\n      * Atoms will resolve to modules if the atom is a module name.  If the atom is quoted and contains interpolation, it will treat each interpolation as `.*` and look for regex matches to this derived potential atom name.\r\n  * Completions for functions after `.` will now work at the end of file.  Previously, completions only worked in the middle of a file, where the `.` could parse the next work an existing call, now if that parse doesn't work and the only thing after is a new line, it will still complete.\r\n* [#830](https://github.com/KronicDeth/intellij-elixir/pull/830) - Auto test for mix test case runner will automatically run tests after a change is detected in the project files, which normally happens on save, which happens when losing focus on a changed editor tab by default. - [@nivanson](https://github.com/nivanson)\r\n* [#840](https://github.com/KronicDeth/intellij-elixir/pull/840) - Regression test for [#821](https://github.com/KronicDeth/intellij-elixir/issues/821) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#841](https://github.com/KronicDeth/intellij-elixir/pull/841) - Regression test for [#803](https://github.com/KronicDeth/intellij-elixir/issues/803) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#842](https://github.com/KronicDeth/intellij-elixir/pull/842) - Regression test for [#833](https://github.com/KronicDeth/intellij-elixir/issues/833) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#843](https://github.com/KronicDeth/intellij-elixir/pull/843) - Port [elixir-lang/elixir#2774](https://github.com/elixir-lang/elixir/pull/2774): Allow `A-Z` as sigil modifiers in addition to `a-z` to support `U` ungreedy modifier that replaced `r` ungreedy modifier for regexes. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#816](https://github.com/KronicDeth/intellij-elixir/pull/816) - Add notice for debug blacklist that it uses atoms, not Aliases, so you need to qualifier module aliases with `Elixir.` - [@merqlove](https://github.com/merqlove)\r\n* [#817](https://github.com/KronicDeth/intellij-elixir/pull/817) - Support atoms (prefixed with `:`) and`Elixir.` and plain Aliases for debugger blacklist. - [@merqlove](https://github.com/merglove)\r\n* [#832](https://github.com/KronicDeth/intellij-elixir/pull/832) - Add space to import window text - [@kentongray](https://github.com/kentongray)\r\n* [#840](https://github.com/KronicDeth/intellij-elixir/pull/840) - Add `END` to allowed `keywordKey` tokens - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#841](https://github.com/KronicDeth/intellij-elixir/pull/841) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Only use \"Macros\" as first header in decompiled `.beam` files if `macro` is `defmacro`.  \"Macros\" header was being printed when there was only functions because the check when there was no `lastMacroNameArity` didn't care what the current `macroNameArity.macro` was.\r\n  * When an `.erl` file has `-compile([compressed])`, it will be compiled normally, and then gzipped, so that the `.beam` will not contain the BEAM magic number `FOR1`, but instead the gzip magic number `0x1f` `0x8b`.  So, to properly handle normal and compressed, the decompiler needs to look-ahead 2-bytes and check the gzip magic number.  If the gzip magic number is detected, the InputStream will be passed through `GZIPInputStream` before the the normal decoding process.\r\n* [#842](https://github.com/KronicDeth/intellij-elixir/pull/842) - When decompiling function and macro names from Erlang module, its possible for the name to contain `#` and they would be interpreted as comments.  Accepting those names in `Unquoted` wouldn't escape the `#` from being treated as a comment, so in addition to `unquote`ing the name, surround it in double quotes. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#848](https://github.com/KronicDeth/intellij-elixir/pull/848) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `AdditionalDataConfigurable` only copied the the Internal Erlang SDK Code Paths when the selection in the `ComboBox` was changed, which meant if the there was only one Erlang SDK or the user never changed the selection, the Code Paths were never copied.  To get the Code Paths copied when the Elixir SDK is first created and `setupSdkPaths` interface method is called\r\n    1. All paths are set directly on the Elixir SDK as before\r\n    2. The default Erlang SDK, which should be the one that was last created, is configured in `SdkAdditionalaData`\r\n    3. The Code paths from the Erlang SDK are copied to the Elixir SDK\r\n        1. If the the Erlang SDK is from intellij-elixir and does not have `ebin` directories for its Class Paths, then the Class Paths is expanded to Code Paths.\r\n* [#851](https://github.com/KronicDeth/intellij-elixir/pull/851) - The Code Paths from the Internal Erlang SDK were not being copied from the default Erlang SDK to the Elixir SDK when the default Erlang SDK was set during `mix test` runs, which meant that the Elixir SDK would not upgrade correctly from 6.1.1 to 6.2.0 without the user deleting the Elixir SDK and recreating it. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Changes\r\n\r\n### Decompilation\r\n\r\n`.beam` files, such as those in the Elixir SDK, the Elixir SDK's Internal Erlang SDK, and in your project's `build` directory will be decompiled to equivalent `def` and `defmacro` calls.  The bodies will not be decompiled, only the call definition head and placeholder parameters.  These decompiled call definition heads are enough to allow Go To Declaration, the Structure pane, and Completion to work with the decompiled `.beam` files.\r\n\r\n`.beam` files are not detected purely by their file extension: the BEAM file format starts with a magic number, `FOR1`, that is checked for before decompiling.\r\n\r\n#### Decompression\r\n\r\nIf the `.beam` module was compiled with the `compressed` compiler directive, which in Erlang looks like\r\n\r\n```erlang\r\n-compile([compressed])\r\n```\r\n\r\nand in Elixir looks like\r\n\r\n```elixir\r\n@compile [:compressed]\r\n```\r\n\r\nthen the outer file format is [GZip](https://en.wikipedia.org/wiki/Gzip) (which is detected by checking for the gzip magic number, `1f 8b`, at the start of the file) and the `.beam` will be (stream) decompressed before the `.beam` header is checked and the chunks decoded.\r\n\r\n#### Special handling of call definition names\r\n\r\nFunctions and macros can have names that aren't valid identifier names, so the decompiler has special handlers to detect these invalid identifiers and escape them to make decompiled code that is parsable as valid Elixir.\r\n\r\n<table cellspacing=\"0\" cellpadding=\"0\">\r\n  <thead>\r\n  <tr>\r\n    <td>Handler</td>\r\n    <td>Name/Arity</td>\r\n    <td>Decompiled</td>\r\n    <td>Reason</td>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td rowspan=\"42\">Infix Operator</td>\r\n    <td><code>!=/2</code></td>\r\n    <td><code>left != right</code></td>\r\n    <td rowspan=\"42\">Infix operators are defined in infix position</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>!==/2</code></td>\r\n    <td><code>left !== right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&amp;&amp;/2</code></td>\r\n    <td><code>left &amp;&amp; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&amp;&amp;&amp;/2</code></td>\r\n    <td><code>left &amp;&amp;&amp; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>*/2</code></td>\r\n    <td><code>left * right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>=+/2</code></td>\r\n    <td><code>left + right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>=++/2</code></td>\r\n    <td><code>left ++ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>-/2</code></td>\r\n    <td><code>left - right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>--/2</code></td>\r\n    <td><code>left -- right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>-&gt;/2</code></td>\r\n    <td><code>left -&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>../2</code></td>\r\n    <td><code>left .. right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>//2</code></td>\r\n    <td><code>left / right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>::/2</code></td>\r\n    <td><code>left :: right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;/2</code></td>\r\n    <td><code>left &lt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;-/2</code></td>\r\n    <td><code>left &lt;- right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;&lt;&lt;/2</code></td>\r\n    <td><code>left &lt;&lt;&lt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;&lt;~/2</code></td>\r\n    <td><code>left &lt;&lt;~ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;=/2</code></td>\r\n    <td><code>left &lt;= right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;&gt;/2</code></td>\r\n    <td><code>left &lt;&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;|&gt;/2</code></td>\r\n    <td><code>left &lt;|&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;~/2</code></td>\r\n    <td><code>left &lt;~ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;~&gt;/2</code></td>\r\n    <td><code>left &lt;~&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>=/2</code></td>\r\n    <td><code>left = right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>==/2</code></td>\r\n    <td><code>left == right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>===/2</code></td>\r\n    <td><code>left === right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>=&gt;/2</code></td>\r\n    <td><code>left =&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>=~/2</code></td>\r\n    <td><code>left =~ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&gt;/2</code></td>\r\n    <td><code>left &gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&gt;=/2</code></td>\r\n    <td><code>left &gt;= right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&gt;&gt;&gt;/2</code></td>\r\n    <td><code>left &gt;&gt;&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>\\\\/2</code></td>\r\n    <td><code>left \\\\\\\\ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>^/2</code></td>\r\n    <td><code>left ^ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>^^^/2</code></td>\r\n    <td><code>left ^^^ right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>and/2</code></td>\r\n    <td><code>left and right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>in/2</code></td>\r\n    <td><code>left in right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>or/2</code></td>\r\n    <td><code>left or right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>|&gt;/2</code></td>\r\n    <td><code>left |&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>||/2</code></td>\r\n    <td><code>left || right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>|||/2</code></td>\r\n    <td><code>left ||| right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>~=/2</code></td>\r\n    <td><code>left ~= right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>~&gt;/2</code></td>\r\n    <td><code>left ~&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>~&gt;&gt;/2</code></td>\r\n    <td><code>left ~&gt;&gt; right</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td rowspan=\"2\">Prefix Operator</td>\r\n    <td><code>+/1</code></td>\r\n    <td><code>(+value)</code></td>\r\n    <td rowspan=\"2\">To prevent precedence errors, unary prefix operators, which also have binary\r\n      infix operators of the same name need to be defined inside parentheses\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>-/1</code></td>\r\n    <td><code>(-value)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td rowspan=\"12\">Unquoted</td>\r\n    <td><code>%/2</code></td>\r\n    <td><code>unquote(:%)(p0, p1)</code></td>\r\n    <td rowspan=\"5\">Special forms need to defined as atom passed to unquote, as special forms are\r\n      handled before macros defining the calls are applied\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>%{}/1</code></td>\r\n    <td><code>unquote(:%{})(p0)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&amp;/1</code></td>\r\n    <td><code>unquote(:&amp;)(p0)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>./2</code></td>\r\n    <td><code>unquote(:.)(p0, p1)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>&lt;&lt;&gt;&gt;/1</code></td>\r\n    <td><code>unquote(:&lt;&lt;&gt;&gt;)(p0)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>do/n</code></td>\r\n    <td><code>unquote(:do)(p0, ...)</code></td>\r\n    <td>Keywords need to be escaped</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>fn/1</code></td>\r\n    <td><code>unquote(:fn)(p0)</code></td>\r\n    <td rowspan=\"4\">Special forms need to defined as atom passed to unquote, as special forms are\r\n      handled before macros defining the calls are applied\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>unquote/1</code></td>\r\n    <td><code>unquote(:unquote)(p0)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>unquote_splicing/1</code></td>\r\n    <td><code>unquote(:unquote_splicing)(p0)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>{}/n</code></td>\r\n    <td><code>unquote(:{})(p0, ...)</code></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Capitalized/n</code></td>\r\n    <td><code>unquote(:Capitalized)(p0, ...)</code></td>\r\n    <td>Part of the Corba libraries in OTP have functions starting with a capital letter, which\r\n      would be parsed as an Alias in Elixir if not unquoted.\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>#text#/1</code></td>\r\n    <td><code>unquote(:\"#text#\")(p0)</code></td>\r\n    <td>\r\n      <div>Part of the XML libraries in OTP have functions\r\n        that start with or contain `#`, which would parse as a comment in Elixir if not unquoted in a double quoted\r\n        atom.\r\n      </div>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>Default</td>\r\n    <td><code>name/n</code></td>\r\n    <td><code>name(p0, ...)</code></td>\r\n    <td>If no specialized handler is required, functions and macros are defined normally with pN\r\n      for each parameter in the Nth position\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n### SDK\r\n\r\nBecause Elixir is built on top of Erlang, Elixir command line commands don't have OS native binaries, instead the OS native binaries from Erlang are used.  In order to reliably find the Erlang OS native binaries, like `erl` and `erl.exe`, the path to BOTH the Erlang SDK and the Elixir SDK must be configured.  This allows you to install Erlang and Elixir with completely different package managers too: you can install Erlang with `kerl` and Elixir with `kiex` and you don't have to worry about IntelliJ not seeing the environment variables set by `kerl` when launching IntelliJ from an application launchers instead of a terminal.\r\n\r\nSince JetBrains' OpenAPI only supports one SDK per Project or Module, to support Elixir and Erlang SDK at the same time, the Elixir SDK keeps track of an Internal Erlang SDK.  When setting up your first Elixir SDK, you will be prompted to create an Erlang SDK (if you have the [`intellij-erlang`](https://github.com/ignatov/intellij-erlang) plugin [installed](https://plugins.jetbrains.com/plugin/7083-erlang)) or and Erlang for Elixir SDK (if you don't have `intellij-erlang` installed and you need to use the minimal Erlang for Elixir SDK supplied by this plugin).\r\n\r\nWith the Elixir SDK setup with an Internal Erlang SDK, you can see the Elixir SDK name and the home path, but unlike other SDKs, there's a dropdown for changing the Internal Erlang SDK.\r\n\r\n![Internal Erlang SDK](/screenshots/features/sdk/default/Internal%20Erlang%20SDK.png?raw=true \"Internal Erlang SDK\")\r\n\r\nYou'll notice there is a mix of two different parent paths in Class Paths:\r\n\r\n1. Those from the Elixir SDK Home Directory, which are the `lib/APP/ebin` for the `APP`s that ships with Elixir: `eex`, `elixir`, `ex_unit`, `iex`, `logger`, and `mix`.\r\n\r\n   ![Elixir SDK Home Directory Class Paths.png](/screenshots/features/sdk/Elixir%20SDK%20Home%20Directory%20Class%20Paths.png?raw=true \"Elixir SDK Home Directory Class Paths\")\r\n\r\n2. Those from the Internal Erlang SDK Home Directory, which are the `lib/APP-VERSION/ebin` for the `APP`s that ship with OTP.\r\n\r\n   ![Erlang SDK Home Directory Class Paths.png](/screenshots/features/sdk/Erlang%20SDK%20Home%20Directory%20Class%20Paths.png?raw=true \"Erlang SDK Home Directory Class Paths\")\r\n\r\nThe Class Paths are combined from the two SDKs because OpenAPI doesn't allow to dynamically delegate to the Internal Erlang SDK when checking for Class Paths to scan for completion and running.  If you change the Internal Erlang SDK in the dropdown, the Class Paths will be updated to remove the old Internal Erlang SDK Class Paths and add the new Internal Erlang SDK Class Paths.\r\n\r\nThese Class Paths are not just for code completion and search anymore, all paths listed as passed with `-pa` flag to `erl` or `erl.exe` when running `mix`, so that you can mix different versions of OTP applications shipped with different version of OTP, so you can take advantage of the independently updatable OTP apps in the release notes for OTP.\r\n![Code Paths.png](/screenshots/features/sdk/Code%20Paths.png?raw=true \"Code Paths\")\r\n\r\n#### Default SDK\r\n\r\n1. The default SDK for new projects can we set from the Configure menu on Welcome Screen\r\n2. Hover over \"Project Defaults\" to see its submenu\r\n\r\n   ![Project Defaults](/screenshots/features/sdk/default/Project%20Defaults.png?raw=true \"Configure > Project Defaults on the Welcome Screen\")\r\n3. Select \"Project Structure\" from the submenu\r\n\r\n   ![Project Structure](/screenshots/features/sdk/default/Project%20Structure.png?raw=true \"Configure > Project Defaults > Project Structure on the Welcome Screen\")\r\n4. IntelliJ will start out with no default SDK.  To make the default SDK, an Elixir SDK, Click New\r\n\r\n   ![No SDK](/screenshots/features/sdk/default/No%20SDK.png?raw=true \"No default SDK\")\r\n5. Select \"Elixir SDK\"\r\n\r\n   ![Elixir SDK](/screenshots/features/sdk/default/Elixir%20SDK.png?raw=true \"New > Elixir SDK\")\r\n6. You'll get \"Cannot Create SDK\" message because there are no Erlang SDKs for the Elixir SDK to use as an Internal Erlang SDK.  Click OK to create the Erlang SDK first.\r\n\r\n   ![Cannot Create SDK](/screenshots/features/sdk/default/Cannot%20Create%20SDK.png?raw=true \"Cannot Create SDK\")\r\n7. You'll be actually prompted to Select Home Directory for the Erlang SDK\r\n   * If you have the [`intellij-erlang`](https://github.com/ignatov/intellij-erlang) plugin [installed](https://plugins.jetbrains.com/plugin/7083-erlang), you'll create an Erlang SDK from it.\r\n\r\n     ![Erlang SDK](/screenshots/features/sdk/default/Erlang%20SDK.png?raw=true \"Erlang SDK\")\r\n\r\n     **NOTE: Erlang SDK's default Home Directory favors the _oldest_ version of Erlang installed.  You probably want the newest version.  To manually select the Home Directory, it is the directory that contains the `bin`, `erts-VERSION`, and `lib` subdirectories.  For Homebrew, the path looks like `/usr/local/Cellar/erlang/VERSION/lib/erlang`.  It is important to select the `lib/erlang` directory and not the `VERSION` directory for `intellij-erlang` to accept it as a Home Directory.**\r\n   * If you don't have `intellij-erlang` installed, then you'll create and Erlang for Elixir SDK, which is supplied by this plugin.\r\n8. With an Erlang SDK available to use as the Internal Erlang SDK, you'll be prompted for the Home Directory for the Elixir SDK.\r\n\r\n   ![Elixir SDK Home Directory](/screenshots/features/sdk/default/Elixir%20SDK%20Home%20Directory.png?raw=true \"Elixir SDK Home Directory\")\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7435106", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7435106/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/7435106/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.1.1", "id": 7435106, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTc0MzUxMDY=", "tag_name": "v6.1.1", "target_commitish": "master", "name": "v6.1.1", "draft": false, "prerelease": false, "created_at": "2017-08-18T03:46:52Z", "published_at": "2017-08-18T03:51:24Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/4607948", "id": 4607948, "node_id": "MDEyOlJlbGVhc2VBc3NldDQ2MDc5NDg=", "name": "intellij-elixir-6.1.1.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1935073, "download_count": 54, "created_at": "2017-08-18T03:51:15Z", "updated_at": "2017-08-18T03:51:17Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.1.1/intellij-elixir-6.1.1.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.1.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.1.1", "body": "# Thanks\r\n\r\n* For reporting the need to install intellij-erlang to get icons to resolve\r\n  * Dmitriy Molodtsov ([@sintro](https://github.com/sintro))\r\n* For reporting formatter didn't indent first line of a new `do ... end` block\r\n  * [@nulian](https://github.com/nulian)\r\n* For reporting still unhelpful errors from beam decoder\r\n  * [@bdarla](https://github.com/bdarla)\r\n\r\n# Changelog\r\n\r\n## v6.1.1\r\n\r\n### Bug Fixes\r\n* [#795](https://github.com/KronicDeth/intellij-elixir/pull/795) - When [#754](https://github.com/KronicDeth/intellij-elixir/issues/794) made `intellij-erlang` a soft-dependency, it broke the debugger's icons that referenced `ErlangIcons`, but it turns out all the icon constants were aliases to `AllIcons.Debugger` constants, so by using the `AllIcons.Debugger` icons directly, the dependency on `ErlangIcons` can be removed without the need to copy the image files into `intellij-elixir`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#796](https://github.com/KronicDeth/intellij-elixir/pull/796) - When `do ... end` template is inserted, it did not have a previous child whose attributes to use, so it used the default, which left the cursor unindented.  To get the cursor indented by default, When the `ElementType` is `DO`, apply the `stabChildrenIndent` rules: indent normal and determine whether to indent relative to direct parent using code style setting. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#797](https://github.com/KronicDeth/intellij-elixir/pull/797) - Include `VirtualFile` path in Beam read errors - [@KronicDeth](https://github.com/KronicDeth)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7376433", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7376433/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/7376433/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.1.0", "id": 7376433, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTczNzY0MzM=", "tag_name": "v6.1.0", "target_commitish": "master", "name": "v6.1.0", "draft": false, "prerelease": false, "created_at": "2017-08-14T03:14:50Z", "published_at": "2017-08-14T03:23:49Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/4568604", "id": 4568604, "node_id": "MDEyOlJlbGVhc2VBc3NldDQ1Njg2MDQ=", "name": "intellij-elixir-6.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2023752, "download_count": 15, "created_at": "2017-08-14T03:23:41Z", "updated_at": "2017-08-14T03:23:47Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.1.0/intellij-elixir-6.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.1.0", "body": "# Thanks\r\n* For reporting the original failure to setup debugger environment\r\n  * [@ctrlpz](https://github.com/ctrlpz)\r\n* For reporting the failure to setup debugger environment persisted in 6.0.0 the same day as a the release\r\n  * Erik Reedstrom ([@erikreedstrom](https://github.com/erikreedstrom))\r\n\r\n\r\n# Changelog\r\n\r\n## v6.1.0\r\n\r\n### Enhancements\r\n* [#792](https://github.com/KronicDeth/intellij-elixir/pull/792) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Since the process of requiring resource files is the same, `org.elixir_lang.ElixirModules` has static methods for copying resources out to a temporary directory and adding the `-r <temporary_path>` for one or more resource files to a new or existing ParametersList.  These are now shared for the Mix ExUnit and Debugger code paths.\r\n  * Format class\r\n    * `ElixirXDebugProcess`\r\n    * `MixExUnitRunningState`\r\n    * `MIxRunningState`\r\n\r\n### Bug Fixes\r\n* [#792](https://github.com/KronicDeth/intellij-elixir/pull/792) - The compiled `.beam` files were removed in 58e7d4a, which was before v5.1.0, but not all users had problems with using the debugger.  [#739](https://github.com/KronicDeth/intellij-elixir/issues/739) [persisted](https://github.com/KronicDeth/intellij-elixir/issues/739#issuecomment-322032123) (as reported by [@erikreedstrom](https://github.com/erikreedstrom)) when 6.0.0 was released; I retried reproducing on a clean VM and I got it.  I'm not sure why it worked for some people in prior releases since the `.beam` don't exist that were being copied, but now the debugger uses the same system of copying `.ex` files and requiring them with `-r` instead of copying `.beam` and using `-pa` to add the `ebin` directory.  Fix was verified local under macOS and in Windows VM that reproduced [#739](https://github.com/KronicDeth/intellij-elixir/issues/739). - [@KronicDeth](https://github.com/KronicDeth)\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7372150", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/7372150/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/7372150/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v6.0.0", "id": 7372150, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTczNzIxNTA=", "tag_name": "v6.0.0", "target_commitish": "master", "name": "v6.0.0", "draft": false, "prerelease": false, "created_at": "2017-08-13T01:17:54Z", "published_at": "2017-08-13T02:25:57Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/4564166", "id": 4564166, "node_id": "MDEyOlJlbGVhc2VBc3NldDQ1NjQxNjY=", "name": "intellij-elixir-6.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2021030, "download_count": 12, "created_at": "2017-08-13T01:24:38Z", "updated_at": "2017-08-13T01:24:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v6.0.0/intellij-elixir-6.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v6.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v6.0.0", "body": "# Thanks\r\n\r\n* For reporting `SmartHashSet` `null` errors\r\n  * mirek sawicz ([@mireksawicz](https://github.com/mireksawicz))\r\n  * Bruno Dusausoy ([@bdusauso](https://github.com/bdusauso))\r\n  * [@nulian](https://github.com/nulian)\r\n  * Sa\u0161a \u0160ijak ([@ssijak](https://github.com/ssijak))\r\n  * [@mgom](https://github.com/mgom)\r\n  * Hamed Asghari ([@hasghari](https://github.com/hasghari))\r\n  * Wojciech Bednarski ([@wbednarski](https://github.com/wbednarski))\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* For building their own test versions of `6.0.0` and reporting pre-release bugs\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* For reporting `Kernel.SpecialForms` colors were wrong after merging the `Kernel` and `Callable` annotator\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* For reporting wrong indentation inside of stab (`do` block body)\r\n   * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* Decompilation not working for OTP 20 beams using `AtU8` instead of `Atom` chunk\r\n  * [@tzveeJ](https://github.com/tzveeJ)\r\n* Indexing problems with 6.0.0\r\n   * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n* For needling me into testing NixOS\r\n  * [@Havvy](https://github.com/Havvy)\r\n* Reporting me bundling intellij-erlang's templates because it was a hard-dependency instead of optional\r\n  * Sergey Ignatov ([@ignatov](https://github.com/ignatov))\r\n  * J. Ansorg ([@jansorg](https://github.com/jansorg))\r\n* For explaining how to make intellij-erlang a soft-dependency correctly\r\n  * Alexander Zolotov ([@zolotov](https://github.com/zolotov))\r\n* For reporting error inserting completion at end of file\r\n  * Andrew Zielinski ([@andrewzielinski](https://github.com/andrewzielinski))\r\n* For reporting `UnmatchedAtUnqualifiedBracketOperation` could not be checked to be a parameter\r\n  * [@bdarla](https://github.com/bdarla)\r\n* For both reporting the debugger crashes and designing how to blacklist bad modules\r\n  * Alexander Merkulov ([@merqlove](https://github.com/merqlove))\r\n* For reporting trailing spaces not being stripped before the formatter was implemented\r\n  * Mariusz \u017bak ([@mariuszzak](https://github.com/mariuszzak))\r\n* For reporting the dependency on JUnit code in non-test code\r\n  * Michael Jansen ([@jansenm](https://github.com/jansenm))\r\n* For reporting `\"\"` being sent when ExUnit run configuration had no parameters\r\n * Chad Woolley ([@thewoolleyman](https://github.com/thewoolleyman))\r\n* For reporting Absinthe parsing error\r\n  * Nitin Gupta ([@nitingupta910](https://github.com/nitingupta910))\r\n* For reporting `ElixirMatchedUnqualifiedNoParenthesesCallImpl` parameter name set could not be determined\r\n  * Raman But-Husaim ([@RamanBut-Husaim](https://github.com/RamanBut-Husaim))\r\n* For reporting `ModuleAttribute.typeTypeParameterNameSet` should assume Aliases are incorrectly capitalized parameter names\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n* For reporting the poor choice of background color for sigil in the Default Theme\r\n  * Anmol Sethi ([@nhooyr](https://github.com/nhooyr))\r\n* For reporting incorrect highlighting of `defmodule`\r\n  * Andrei Dziahel ([@develop7](https://github.com/develop7))\r\n* For reporting problems decompiling CORBA modules from Erlang\r\n  * Anatoly Nosov ([@jomei](https://github.com/jomei))\r\n* For reporting debugger errors\r\n  * Samir Sabri ([@hopewise](https://github.com/hopewise))\r\n* For reporting that `\"'\"` was being parsed as a heredoc promoter instead of a single quote inside double quotes\r\n  * Timofey Martynov ([@feymartynov](https://github.com/feymartynov))\r\n* Decompilation errors with `rebar3_hex_config.beam`\r\n  * Josh Taylor ([@joshuataylor](https://github.com/joshuataylor))\r\n* For reporting unhelpful decompilation error messages\r\n  * Neeraj ([@neeraj9](https://github.com/neeraj9))\r\n* For a full example to produce an `ElixirVariable` to trigger `isVariable` bug\r\n  * Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique)) \r\n* For reporting the `mix deps.get` can hang prompting for if the user wants to `mix local.hex --force`\r\n  * Bryan Bryce ([@BryanJBryce](https://github.com/BryanJBryce))\r\n* For reporting mix path quoting problems on Windows\r\n  * Allen Wyma ([@HangingClowns](https://github.com/HangingClowns))\r\n* For reporting the poor feedback when the `bin` is selected as the SDK home instead of the parent of `bin` and `lib`\r\n  * Yordis Prieto ([@yordis](https://github.com/yordis))\r\n* For reporting double quote balancing issues\r\n  * Matt Briggs ([@mbriggs](https://github.com/mbriggs)\r\n* For reporting that link to file goes to wrong file when multiple files share same filenames\r\n  * Ryan Scheel ([@Havvy](https://github.com/Havvy))\r\n* For reporting compilations errors do not mark entire test run as failed\r\n  * Ryan Scheel ([@Havvy](https://github.com/Havvy))\r\n* For reporting inconsistent coloring of `def`s\r\n  * Andrea Campolonghi ([@andreacfm](https://github.com/andreacfm))\r\n* For asking for Nix/NixOS support\r\n  * Ryan Scheel ([@Havvy](https://github.com/Havvy)) \r\n\r\n# Changelog\r\n\r\n## v6.0.0\r\n\r\n### Enhancements\r\n* [#724](https://github.com/KronicDeth/intellij-elixir/pull/724) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Code Formatter\r\n    * `do` block lines are indented\r\n    * `do` blocks `end` as the last argument of a no parentheses call unindents to the start of the call\r\n    * If one clause of a multi-clause anonymous function wraps, all clauses wrap.\r\n    * Indent after `else`\r\n    * Indent map and struct keys\r\n    * All keys wrap if any key wraps\r\n    * No spaces around...\r\n      * `.`\r\n    * Spaces around...\r\n      * `and`\r\n      * `in`\r\n      * `or`\r\n      * `when`\r\n    * Configure spaces around...\r\n      * `=`\r\n      * `<-` and `\\\\`\r\n      * `!=`, `==`, `=~`, `!==`, and `===`\r\n      *  `<`, `<=`, `>=`, and `>`\r\n      * `+` and `-`\r\n      * `*` and `/`\r\n      * Unary `+`, `-`, `!`, `^`, and `~~~`\r\n      * `->`\r\n      * `::`\r\n      * `|`\r\n      * `||` and `|||`\r\n      * `&&` and `&&&`\r\n      * `<~`, `|>`, `~>`, `<<<`, `<<~`, `<|>`, `<~>`, `>>>`, and `~>>`\r\n      * `..`\r\n      * `^^^`\r\n      * `++`, `--`, `..`, `<>`\r\n      * `=>`\r\n    * Configure spaces before...\r\n      * `,`\r\n    * No space after...\r\n      * `@`\r\n    * Spaces after...\r\n      * `not`\r\n      * `fn`\r\n      * `after`\r\n      * `catch`\r\n      * `rescue`\r\n      * `key:`\r\n    * Configure space after...\r\n      * `&`\r\n      * `,`\r\n    * Configure spaces within...\r\n      * `{ }`\r\n      * `<< >>`\r\n      * `[ ]`\r\n      * `( )`\r\n    * No space around `/` in `&NAME/ARITY` and `&QUALIFIER.NAME/ARITY`\r\n    * `when` wraps when its right operand wraps, so that guards start with `when` on a newline when they are too long.\r\n    * Align `|>` at start of indented line for pipelines\r\n    * Align `end` with start of call instead of start of line for `do` blocks in pipelines\r\n    * Indent list elements when wrapped\r\n    * Indent tuple elements when wrapped\r\n    * Align type definition to right of `::`\r\n    * Align guard to right of `when` when guards span multiple lines\r\n    * Align two operator (`++`, `--`, `..`, `<>`) operands, so that `<>` binaries are multiple lines align their starts instead of using continuation indent and being indented relative to first operand.\r\n    * Align pipe `|` operands, so that alternates in types and specs are aligned instead of continuation indented relative to the first operand.\r\n    * Comments in `spec` (that is above operands to `|` align with the operands\r\n    * Remove newlines from pipelines, so that all pipelines start with an initial value or call and each `|>` is the start of a successive line.\r\n    * Key exclusivity: if an association operation or keyword key is already on a line, the container value automatically has it's elements wrapped if there is nested associations or keyword pairs, so that two levels of keys are not on the same line.\r\n    * Indent bit string (`<< >>`) elements when wrapped\r\n* [#732](https://github.com/KronicDeth/intellij-elixir/pull/732) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update IntelliJ IDEA version to latest in each MINOR version:\r\n    * `2017.1.1` -> `2017.1.5`\r\n    * `2016.3.5` -> `2016.3.7`\r\n  * Update Elixir version `1.4.2` -> `1.4.5`\r\n* [#738](https://github.com/KronicDeth/intellij-elixir/pull/738) - [@KronicDeth](https://github.com/KronicDeth)\r\n  *  `TeamCityExUnitFormatting.put_event`\r\n    * Always match on `%__MODULE__{}` for state in clauses to prevent state update errors\r\n    * Match on `:suite_finished` and `:suite_started` events, so that only events added to the interface will be unknown and `IO.warn` can be used tell anyone spotting the new event to file an issue.\r\n* [#741](https://github.com/KronicDeth/intellij-elixir/pull/741) - Instead of pinning position (`1` for lines or `3` for heredocs), `pin` `*_PROMOTER` token, so it's more obvious the pattern is that the promoter is pinned. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#747](https://github.com/KronicDeth/intellij-elixir/pull/747) - Regression test for [#659](https://github.com/KronicDeth/intellij-elixir/issues/659) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#629](https://github.com/KronicDeth/intellij-elixir/pull/629) - Search for Elixir SDKs in `/nix/store` on Mac if homebrew path does not exist - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#749](https://github.com/KronicDeth/intellij-elixir/pull/749) - Regression test for\u00a0[#672](https://github.com/KronicDeth/intellij-elixir/issues/672) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#750](https://github.com/KronicDeth/intellij-elixir/pull/750) - Regression test for [#674](https://github.com/KronicDeth/intellij-elixir/issues/674) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#751](https://github.com/KronicDeth/intellij-elixir/pull/751) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Regression test for [#683](https://github.com/KronicDeth/intellij-elixir/issues/683)\r\n  * Store expected decompilation in files to shrink `DecompilerTest` length\r\n* [#754](https://github.com/KronicDeth/intellij-elixir/pull/754) - Update to `org.jetbrains.intellij` `0.2.15` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#755](https://github.com/KronicDeth/intellij-elixir/pull/755) - Regression test for [#687](https://github.com/KronicDeth/intellij-elixir/issues/687) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#756](https://github.com/KronicDeth/intellij-elixir/pull/756) - Regression test for [#692](https://github.com/KronicDeth/intellij-elixir/issues/692) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#758](https://github.com/KronicDeth/intellij-elixir/pull/758) - Regression test for [#694](https://github.com/KronicDeth/intellij-elixir/issues/694) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#759](https://github.com/KronicDeth/intellij-elixir/pull/759) - Regression test for [#699](https://github.com/KronicDeth/intellij-elixir/issues/699) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#760](https://github.com/KronicDeth/intellij-elixir/pull/760) - Use `Elixir.LDAPEx.ELDAPv3.beam` as regression test for [#703](https://github.com/KronicDeth/intellij-elixir/issues/703) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#764](https://github.com/KronicDeth/intellij-elixir/pull/764) - Show `quote`s in list in macros in Structure View - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#768](https://github.com/KronicDeth/intellij-elixir/pull/768) - References will be cached until the file containing the PSI element changes, so that results from `Callable#multiResolve`, `CallDefinitionClause#multiResolve`, `Module#multiResolve`, and `ModuleAttribute#multiResolve`, which are all the extant references, can be cached and invalidated correctly. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#769](https://github.com/KronicDeth/intellij-elixir/pull/769) - Use `ParameterLists` to support Path Variables in program parameters. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#774](https://github.com/KronicDeth/intellij-elixir/pull/774) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Adjust SDK home path when `bin`, `lib,` or `src` to parent directory.\r\n  * Format `ElixirSdkType`.\r\n* [#775](https://github.com/KronicDeth/intellij-elixir/pull/775) - Regression test for [#354](https://github.com/KronicDeth/intellij-elixir/issues/354) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#777](https://github.com/KronicDeth/intellij-elixir/pull/777) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Include specific message for each decompilation error reason.\r\n  * Regression test for #772\r\n  * `AtU8` UTF8 atoms chunk decompilation to support OTP 20 compiled `.beam` files.\r\n  * Regression test for Elixir 1.5.0 announcement to ensure that unicode from `AtU8` chunk can be read from beam file produced by following Elixir code:\r\n        ```elixir\r\n        defmodule AtU8Test do\r\n          def \u3053\u3093\u306b\u3061\u306f\u4e16\u754c do\r\n            :\u3053\u3093\u306b\u3061\u306f\u4e16\u754c\r\n\r\n        \u00a0    sauda\u00e7\u00e3o = \"Bom dia!\"\r\n\r\n        \u00a0\u00a0  sauda\u00e7\u00e3o\r\n          end\r\n        end\r\n        ```\r\n* [#771](https://github.com/KronicDeth/intellij-elixir/pull/771) - Guard against read/write mismatch in stubs - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#782](https://github.com/KronicDeth/intellij-elixir/pull/782) - Always install `IdeaVIM` in the gradle sandbox because it got annoying having to reinstall it when the sandbox reset. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#786](https://github.com/KronicDeth/intellij-elixir/pull/786) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Merge both homebrew and nix store on Mac\r\n  * Merge default and nix store on Linux\r\n* [#789](https://github.com/KronicDeth/intellij-elixir/pull/789) - Format `MixRunningStateUtil` and fix warnings. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#726](https://github.com/KronicDeth/intellij-elixir/pull/726) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Treat `::` the same as `:`  in `key:` after `when` in type specifications as it's a realistic error.\r\n  * Change `.` to `#` when referring to constants in javadocs\r\n  * Remove `@param` without descriptions\r\n  * Remove explicit type from generics when the type can be inferred.\r\n  * Check if `atNonNumericOperation` reference is non-`null` before resolving\r\n  * Swap empty branches to inverted conditions for final `else`.\r\n  * Check if `Type` `leftOperand` is `null` before using it.\r\n  * Remove empty `highlightTypesAndTypeParameterUsages(When...)`\r\n  * Remove unused `highlightTypesAndSpecificationTypeParameterDeclarations`\r\n  * Flip `equals` to eliminate need for `null` check\r\n  * Remove redundant type arguments (`<...>`)\r\n  * Change `Collections.EMPTY_SET` to `Collections.emptySet()` to prevent uncheck cast warnings.\r\n  * Inline constant argument for errors.\r\n  * Check if `when` `rightOperand` is non-`null` before scanning it for parameter names.\r\n  * Fix typos\r\n* [#732](https://github.com/KronicDeth/intellij-elixir/pull/732) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * When compilation error is detected during `mix test`, it will be turned into a test failure.\r\n    * Compilation errors are any stacktraces to `stderr` that end in `    (elixir) lib/kernel/parallel_require.ex:`.\r\n    * The test failure for the compilation will be attributed to either `mix test` or the inferred module name of test file.\r\n      * If the first line of the stacktrace contains `test/.*_test.exs:\\d+: \\(module\\)`\r\n        * The file and line from that line will be used as the location of failure\r\n        * The `test/` and `.exs` will be stripped from the file and it will be camelized to produce the derived test module name of the failure\r\n      * Otherwise, `mix test` is used\r\n  * Rearrange doc test names to emphasize the function being tested: `\"test doc at MODULE.FUNCTION/ARITY (COUNT)\"` becomes `\"MODULE.FUNCTION/ARITY doc (COUNT)\"`\r\n    * If `MODULE` is the same as the test case without the `Test` suffix, then `MODULE.` is stripped too and the test name becomes only `FUNCTION/ARITY doc (COUNT)`\r\n  * Fix parallel test cases nesting under each other due to asynchronous reporting from formatter.  `##teamCity` `testSuiteStarted` messages automatically nest, so switched to using `nodeId` and `parentNodeId` system, so that nesting is explicit.  This will allow multiple parallel tests to show up in GUI too.\r\n  * `Elixir.` prefix is stripped from test case names.\r\n* [#728](https://github.com/KronicDeth/intellij-elixir/pull/728) - Handle Elixir versions with non-numeric parts - [@pazustep](https://github.com/pazustep)\r\n* [#734](https://github.com/KronicDeth/intellij-elixir/pull/734) - Use a separate formatter, one GenEvent-based and one GenServer-based, depending on whether the SDK is >= 1.4.0 as that's when GenEvent was deprecated and GenServer was preferred. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#736](https://github.com/KronicDeth/intellij-elixir/pull/736) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Merge `Callable` and `Kernel` annotators\r\n  * Use `PsiElementVisitor` instead of `PsiRecursiveElementVisitor`, so that macros in `defmodule` block don't get double annotated.\r\n  * Instead of erasing and then applying multiple `TextAttributeKey`, erase as before, but then merge the `TextAttributeKey`'s `TextAttributes` and apply as single `setEnforcedTextAttributes`.  For some reason, this fixes the inconsistency of whether `PREDEFINED_CALL` or `MACRO_CALL` is applied first.\r\n  * In case of multiple `resolved`s, make those that need `PREDEFINED_CALL` to win.\r\n* [#738](https://github.com/KronicDeth/intellij-elixir/pull/738) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `TeamCityExUnitFormatting.new` should return struct only\u00a0because none of the formatters expects an `:ok` tuple.\r\n  * Fix order of `TeamCityExUnitFormatting.put_Event` catchall parameters.\r\n  * `FileReferenceFilter`\r\n    * Add `.exs` to pattern for stacktrace linking.\r\n    * Highlight only stacktrace path and line umber instead of entire line\r\n    * Better path match in stacktraces\r\n      * Only accept VirtualFile if it has a suffix matching the stacktrace's path instead of accepting the first index file with a matching basename.\r\n      * Allow multiple VirtualFiles to be linked if it turns out there is a true file path collision between two OTP apps in the Project or Libraries.\r\n    * Format and fix warnings\r\n* [#741](https://github.com/KronicDeth/intellij-elixir/pull/741) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Pin promoter for all quotes, including the previously missing `stringLine` and `charListLine`.\r\n  * Only insert closing quote if previous token was an opening quote.\r\n* [#742](https://github.com/KronicDeth/intellij-elixir/pull/742) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * On `unquote`, include argument in name of call definition clause\r\n  *  Look outside tuple containing `quote` for `enclosingMacroCall`, which allows going to [Phoenix.Template.compile's quote's defp](https://github.com/phoenixframework/phoenix/blob/v1.2.4/lib/phoenix/template.ex#L380-L392)\r\n  * Treat `Module.create` as `Modular\r\n  * `Or` interface to unify `Matched` and `Unmatched` `Or`s.\r\n  * Look at both side of `Or` operation for nested child calls for Structure view.\r\n  * Make `unquote(ARG1)` name for `getName` and indexing\r\n* [#744](https://github.com/KronicDeth/intellij-elixir/pull/744) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `ElementDescription` for `ElixirVariable`\r\n  * Mark `UnqualifiedParenthesesCall`s as `call` instead of `variable`.\r\n* [#745](https://github.com/KronicDeth/intellij-elixir/pull/745) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `mix local.hex --force` before `mix deps.get` during project import to prevent prompt for hex update when local hex is earlier than that required by `mix`.\r\n  * Fix warnings and format `MixProjectRootStep`\r\n* [#746](https://github.com/KronicDeth/intellij-elixir/pull/746) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Mark `ElixirDecimalFloat` as error in types.\r\n    * If in a Range: \"Floats aren't allowed in Ranges\"\r\n    * Otherwise: \"Float literals are not allowed in types.  Use float() instead\".\r\n* [#747](https://github.com/KronicDeth/intellij-elixir/pull/747) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore `jps-*/out` directories.\r\n  * Look at parent for `isParameter` for `AtUnqualifiedBracketOperation`.\r\n  * Treat `AtUnqualifiedBracketOperation` the same as `UnqualifiedBracketOperation` for `isVariable`.\r\n* [#748](https://github.com/KronicDeth/intellij-elixir/pull/748) - Include path in error messages from `buildFileStub` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#749](https://github.com/KronicDeth/intellij-elixir/pull/749) - Erlang allows `do` as a function name, but it's a keyword in Elixir, so wrap it as `unquote(:do)`. The `SpecialForm` decompiler already did this `unquote(...)` wrapping, but `do` is a keyword and not a special form, so rename the decompiler to `Unquoted`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#750](https://github.com/KronicDeth/intellij-elixir/pull/750) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Move {3} inside `|` for `SIGIL` `PROMOTER` and `TERMINATOR`:\r\n    > ```\r\n    > SIGIL_HEREDOC_PROMOTER = ({SIGIL_DOUBLE_QUOTES_PROMOTER}|>\r\n    > {SIGIL_SINGLE_QUOTES_PROMOTER}){3}\r\n    > SIGIL_HEREDOC_TERMINATOR = ({SIGIL_DOUBLE_QUOTES_TERMINATOR}|>\r\n    > {SIGIL_SINGLE_QUOTES_TERMINATOR}){3}\r\n    > ```\r\n    > -- https://github.com/KronicDeth/intellij-elixir/blob/v5.1.0/src/org/elixir_lang/Elixir.flex?utf8=%E2%9C%93#L524-L525\r\n\r\n    The `|` is inside group that is then `{3}`'d, so it allows either `'` or `\"` in groups of three.  This is only applies to the sigils.  It's correct for normal string and charlist heredocs:\r\n\r\n    > ```\r\n    > CHAR_LIST_HEREDOC_PROMOTER = {CHAR_LIST_PROMOTER}{3}\r\n    > CHAR_LIST_HEREDOC_TERMINATOR = {CHAR_LIST_TERMINATOR}{3}\r\n    >\r\n    > STRING_HEREDOC_PROMOTER = {STRING_PROMOTER}{3}\r\n    > STRING_HEREDOC_TERMINATOR = {STRING_TERMINATOR}{3}\r\n    >\r\n    > QUOTE_HEREDOC_PROMOTER = {CHAR_LIST_HEREDOC_PROMOTER} | {STRING_HEREDOC_PROMOTER}\r\n    > QUOTE_HEREDOC_TERMINATOR = {CHAR_LIST_HEREDOC_TERMINATOR} | {STRING_HEREDOC_TERMINATOR}\r\n    > ```\r\n    > -- https://github.com/KronicDeth/intellij-elixir/blob/v5.1.0/src/org/elixir_lang/Elixir.flex?utf8=%E2%9C%93#L441-L448\r\n* [#751](https://github.com/KronicDeth/intellij-elixir/pull/751) - Unquote function names that start with an uppercase codepoint, so that they aren't parsed as Aliases.  These function names occur in the CORBA modules in OTP. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#754](https://github.com/KronicDeth/intellij-elixir/pull/754) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Using intellij.plugins will prevent packaging intellij-erlang as a runtime dependency, which leads to duplicate templates.\r\n  * Don't use the `JPS` `type` for `jps-*` projects because their deps become incompatible with other projects.\r\n* [#755](https://github.com/KronicDeth/intellij-elixir/pull/755) - Add missing `break`s to `case` statement in `processDeclarations(Match, ...)` that caused the logic of whether to check left, right, or both operand based on the whether the treeWalkUp came from always fell through to the `RIGHT` case, so it was only, always checking the right operand of the match and never the left operand. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#756](https://github.com/KronicDeth/intellij-elixir/pull/756) - Skip `processDeclarationsInPreviousSibling` when `lastParent` is `ElixirFile` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#757](https://github.com/KronicDeth/intellij-elixir/pull/757) - Remove background color from sigils because it stands out really badly in the Default theme where it's black on white and while it doesn't in Darcula, it's unnecessary there because it's so close to the editor background color in Darcula. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#758](https://github.com/KronicDeth/intellij-elixir/pull/758) - Treat `Alias` as miscapitalized type parameter. [@KronicDeth](https://github.com/KronicDeth)\r\n* [#759](https://github.com/KronicDeth/intellij-elixir/pull/759) - Ignore call definition clauses after `when` in type specifications as it is a common occurrence when typing a specification above a pre-existing call definition clause. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#761](https://github.com/KronicDeth/intellij-elixir/pull/761) - Use `THashSet` instead of the more specific `SmartHashSet` because `THashSet` allows `null` keys, which are expected for the `canonicalNameSet`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#764](https://github.com/KronicDeth/intellij-elixir/pull/764) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Look above `List` for enclosing modular macro.\r\n  * Look above `ElixirNoParenthesesManyStrictNoParenthesesExpression` for enclosing modular macro.\r\n* [#765](https://github.com/KronicDeth/intellij-elixir/pull/765) - Remove background color from Sigil Color Scheme Design to match changes in [#757](https://github.com/KronicDeth/intellij-elixir/pull/757). - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#769](https://github.com/KronicDeth/intellij-elixir/pull/769) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check if program parameters is blank before splitting into mix args.\r\n  * Use `ParametersList` to properly parse quote program parameters.\r\n* [#773](https://github.com/KronicDeth/intellij-elixir/pull/773) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Move `Quoter` into `test` directory, so it and its dependency on `JUnit` is only used for test compilation and runtime and not the shipped runtime.\r\n  * Fix `Quoter` warnings and format.\r\n* [#774](https://github.com/KronicDeth/intellij-elixir/pull/774) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Show expected SDK home path structure when invalid. ![screen shot 2017-08-06 at 2 28 36 pm](https://user-images.githubusercontent.com/298259/29006393-5ce71dfe-7ab4-11e7-88c9-732856f6259d.png)\r\n  * Suppress invalid warnings in `ElixirSdkType`.\r\n* [#775](https://github.com/KronicDeth/intellij-elixir/pull/775) - Always check if resolution result is right operand of match. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#776](https://github.com/KronicDeth/intellij-elixir/pull/776) - `CallDefinitionClause` `InsertHandler` always assumed there was a character after the insert location, but when inserting at the very end of the file, there isn't, which caused an `IndexOutOfBoundsException`.  Only check if the following character is not a space, `(`, or `[` when the document is longer than the tail offset to prevent the `IndexOutOfBoundsException`.  If the insertion is at the end of the file, then the `()` will always be inserted. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#777](https://github.com/KronicDeth/intellij-elixir/pull/777) - `Decompilated` -> `Decompilation` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#771](https://github.com/KronicDeth/intellij-elixir/pull/771) - The lower-level `Data(Output|IntputStream` `(write|read)Int` don't work correctly with sizes, so use the JetBrains `(write|read)VarInt` ones instead. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#782](https://github.com/KronicDeth/intellij-elixir/pull/782) - Delegate `ChildAttributes` to previous child when available: `Block.getChildAttributes` is used when Enter is pressed to determine the indentation and alignment.  Using the default implementation, newlines in stabs look overly indented, but there is a constant, `DELEGATE_TO_PREV_CHILD` that can be used to just use the last child's indent as long as there is one, which appears to work well for stabs (do block bodies, etc). - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#783](https://github.com/KronicDeth/intellij-elixir/pull/783) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Increase suspect `nameSetSize` from `4` to `10` because a `Poison.Encoder` has an `impl` module for 4 types, and so has 4 canonical names.\r\n  * Only read-ahead if guard length is non-zero; otherwise, only warn the nameSetSize may be suspect and don't read-ahead as this can mess up OK namesets.\r\n* [#784](https://github.com/KronicDeth/intellij-elixir/pull/784) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Override `Kernel.SpecialFroms` arity intervals\r\n    * `alias` overridden from `2` to `1-2` to support without `:as` option.\r\n    * `import` overridden from `2` to `1-2` to support without `:except` or `:only` options.\r\n    * `quote` overridden from `2` to `1-2` to support block without options.\r\n    * `require` overridden from `2` to `1-2` to support without `:as` option.\r\n    * `super` overridden from `1` to `0-` to support calling any super method.\r\n* [#789](https://github.com/KronicDeth/intellij-elixir/pull/789) - `elixir.bat` in at least Elixir 1.5.1, will not properly parse a mix path with spaces in it on Windows even when the path has outer quotes (see elixir-lang/elixir#6455). It is not possible to use inner quotes, as you can do in cmd.exe, using the JetBrains and Java libraries hat auto-matically quote, so instead bypass the bad quoting in `elixir.bat` by doing what `elixir.bat` does: call `erl.exe` with all the SDK ebin paths added with `-pa`, then `-noshell -s elixir start_cli` to run Elixir and`-extra` to run requires (`-r`), mix and its tasks. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Incompatible Changes\r\n* [#732](https://github.com/KronicDeth/intellij-elixir/pull/732) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Drop `14.1.X` support because it does not have support for nodeId test output, so it's not possible to handle the ExUnit test output in a safe manner while still allowing concurrent output for asynchronous tests.\r\n\r\n# README Updates\r\n\r\n### Formatting\r\n\r\nIntelliJ Elixir can reformat code to follow a consistent style.\r\n\r\n* `do` block lines are indented\r\n* `do` blocks `end` as the last argument of a no parentheses call unindents to the start of the call\r\n* If one clause of a multi-clause anonymous function wraps, all clauses wrap.\r\n* Indent after `else`\r\n* Indent map and struct keys\r\n* All keys wrap if any key wraps\r\n* No spaces around...\r\n  * `.`\r\n* Spaces around...\r\n  * `and`\r\n  * `in`\r\n  * `or`\r\n  * `when`\r\n* Configure spaces around...\r\n  * `=`\r\n  * `<-` and `\\\\`\r\n  * `!=`, `==`, `=~`, `!==`, and `===`\r\n  *  `<`, `<=`, `>=`, and `>`\r\n  * `+` and `-`\r\n  * `*` and `/`\r\n  * Unary `+`, `-`, `!`, `^`, and `~~~`\r\n  * `->`\r\n  * `::`\r\n  * `|`\r\n  * `||` and `|||`\r\n  * `&&` and `&&&`\r\n  * `<~`, `|>`, `~>`, `<<<`, `<<~`, `<|>`, `<~>`, `>>>`, and `~>>`\r\n  * `..`\r\n  * `^^^`\r\n  * `++`, `--`, `..`, `<>`\r\n  * `=>`\r\n* Configure spaces before...\r\n  * `,`\r\n* No space after...\r\n  * `@`\r\n* Spaces after...\r\n  * `not`\r\n  * `fn`\r\n  * `after`\r\n  * `catch`\r\n  * `rescue`\r\n  * `key:`\r\n* Configure space after...\r\n  * `&`\r\n  * `,`\r\n* Configure spaces within...\r\n  * `{ }`\r\n  * `<< >>`\r\n  * `[ ]`\r\n  * `( )`\r\n* No space around `/` in `&NAME/ARITY` and `&QUALIFIER.NAME/ARITY`\r\n* `when` wraps when its right operand wraps, so that guards start with `when` on a newline when they are too long.\r\n* Align `|>` at start of indented line for pipelines\r\n* Align `end` with start of call instead of start of line for `do` blocks in pipelines\r\n* Indent list elements when wrapped\r\n* Indent tuple elements when wrapped\r\n* Align type definition to right of `::`\r\n* Align guard to right of `when` when guards span multiple lines\r\n* Align two operator (`++`, `--`, `..`, `<>`) operands, so that `<>` binaries are multiple lines align their starts instead of using continuation indent and being indented relative to first operand.\r\n* Align pipe `|` operands, so that alternates in types and specs are aligned instead of continuation indented relative to the first operand.\r\n* Comments in `spec` (that is above operands to `|` align with the operands\r\n* Remove newlines from pipelines, so that all pipelines start with an initial value or call and each `|>` is the start of a successive line.\r\n* Key exclusivity: if an association operation or keyword key is already on a line, the container value automatically has it's elements wrapped if there is nested associations or keyword pairs, so that two levels of keys are not on the same line.\r\n* Indent bit string (`<< >>`) elements when wrapped\r\n\r\n#### Directory\r\n\r\nAll files in a directory can be reformatted.\r\n\r\nUsing context menu:\r\n\r\n1. Open the Project pane\r\n2. Right-click the directory\r\n3. Select Reformat Code\r\n4. Set the desired options in the Reformat Code dialog\r\n5. Click Run\r\n\r\nUsing keyboard shortcuts:\r\n\r\n1. Open the Project pane\r\n2. Select the directory\r\n3. `Alt+Cmd+L`\r\n4. Set the desired options in the Reformat Code dialog\r\n5. Click Run\r\n\r\n#### File\r\n\r\n##### Other File\r\n\r\nAll lines in a file can be reformatted.\r\n\r\nUsing context menu:\r\n\r\n1. Open the Project pane\r\n2. Right-click the file\r\n3. Select Reformat Code\r\n4. Set the desired options in the Reformat Code dialog\r\n5. Click OK\r\n\r\nUsing keyboard shortcuts:\r\n\r\n1. Open the Project pane\r\n2. Select the file\r\n3. `Alt+Cmd+L`\r\n4. Set the desired options in the Reformat Code dialog\r\n5. Click OK\r\n\r\n##### Current File\r\n\r\nAll the lines in the current editor tab file can be reformatted with the\r\ncurrent settings.\r\n\r\n* Code > Reformat\r\n* `Alt+Cmd+L`\r\n  * `Alt+Shift+Cmd+L` to get the Reformat Code dialog.\r\n\r\n#### Selection\r\n\r\nA subset of a file can be reformatted.\r\n\r\n1. Highlight the selection\r\n2. Use the Reformat Code action\r\n   * Code > Reformat Code\r\n   * `Alt+Shift+Cmd+L`"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/6163110", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/6163110/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/6163110/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v5.1.0", "id": 6163110, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTYxNjMxMTA=", "tag_name": "v5.1.0", "target_commitish": "master", "name": "v5.1.0", "draft": false, "prerelease": false, "created_at": "2017-04-24T02:28:40Z", "published_at": "2017-04-24T02:32:48Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/3721679", "id": 3721679, "node_id": "MDEyOlJlbGVhc2VBc3NldDM3MjE2Nzk=", "name": "intellij-elixir-5.1.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 3547030, "download_count": 85, "created_at": "2017-04-24T02:32:32Z", "updated_at": "2017-04-24T02:32:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v5.1.0/intellij-elixir-5.1.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v5.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v5.1.0", "body": "# Thanks\r\n* For reporting when `scope.isEquivalentTo(lastParent.getParent())` is `false` in `processDeclarationsInPreviousSibling`\r\n  * [@gopalindians](https://github.com/gopalindians)\r\n\r\n# Changelog\r\n\r\n## v5.1.0\r\n\r\n### Enhancements\r\n* [#643](https://github.com/KronicDeth/intellij-elixir/pull/643) - Graphical debugger with line breakpoints - [@JakeBecker](https://github.com/JakeBecker)\r\n* [#673](https://github.com/KronicDeth/intellij-elixir/pull/673) - Add Debugger to README - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Bug Fixes\r\n* [#669](https://github.com/KronicDeth/intellij-elixir/pull/669) - Replace `assert scope.isEquivalentTo(lastParent.getParent())` with an `if` and log what `lastParent` was when condition is `false`, so root cause can be traced. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n### Debugger\r\n\r\nIntelliJ Elixir allows for graphical debugging of `*.ex` files using line breakpoints.\r\n\r\n<figure>\r\n  <img alt=\"Line breakpoints for debugger can be set in gutter of editor tab.\" src=\"/screenshots/Debugger.png?raw=true\"/>\r\n  <br/>\r\n  <figcaption>\r\n    Line breakpoints can added by clicking in the left-hand gutter of an\r\n    editor tab.  A red dot will appear marking the breakpoint.  When a\r\n    Run Configuration is Run with the Debug (bug) instead of Run (arrow)\r\n    button, execution will stop at the breakpoint and you can view the\r\n    local variables (with Erlang names) and the stackframes.\r\n  </figcaption>\r\n</figure>\r\n\r\n#### Steps\r\n\r\n1. Define a [run/debug configuration](#run-configurations)\r\n2. [Create breakpoints](#creating-line-breakpoints) in the `*.ex` files\r\n3. [Launch](#starting-the-debugger-session) a debugging session\r\n4. During the debugger session, [step through the breakpoints](#stepping), [examine suspended program](#examining-suspended-program), and [explore frames](#frames).\r\n\r\n#### Basics\r\n\r\nAfter you have configured a [run configuration](#run-configuration) for your project, you can launch it in debug mode by pressing `Ctrl+D`.\r\n\r\n##### Keyboard Shortcuts\r\n\r\n| Action                                  | Keyword Shortcut |\r\n|-----------------------------------------|------------------|\r\n| Toggle Breakpoint                       | `Cmd+F8`         |\r\n| Resume Program                          | `Alt+Cmd+R`      |\r\n| Step Over                               | `F8`             |\r\n| Step Into                               | `F7`             |\r\n| View breakpoint details/all breakpoints | `Shift+Cmd+F8`   |\r\n\r\n#### Breakpoints\r\n\r\nWhen a breakpoint is set, the editor displays a breakpoint icon in the gutter area to the left of the affected source code. A breakpoint icon denotes status of a breakpoint, and provides useful information about its type, location, and action.\r\n\r\nThe icons serve as convenient shortcuts for managing breakpoints. Clicking an icon removes the breakpoint. Successive use of Alt - click on an icon toggles its state between enabled and disabled. The settings of a breakpoint are shown in a tooltip when a mouse pointer hovers over a breakpoint icon in the gutter area of the editor.\r\n\r\n| Status                 | Icon                                                                                                                                | Description                                                                                   |\r\n|------------------------|-------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\r\n| Enabled                | <img alt=\"Red dot\" src=\"screenshots/debugger/breakpoints/Enabled.png?raw=true\"/>                                                    | Indicates the debugger will stop at this line when the breakpoint is hit.                     |\r\n| Disabled               | <img alt=\"Red dot with green dot in center\" src=\"screenshots/debugger/breakpoints/Disabled.png?raw=true\"/>                          | Indicates that nothing happens when the breakpoint is hit.                                    |\r\n| Conditionally Disabled | <img alt=\"Red dot with green dot in top-left corner\" src=\"screenshots/debugger/breakpoints/Conditionally%20Disabled.png?raw=true\"/> | This state is assigned to breakpoints when they depend on another breakpoint to be activated. |\r\n\r\nWhen the button <img alt=\"Red dot surrounded by crossed-out circle\" src=\"screenshots/debugger/breakpoints/Mute.png?raw=true\"/> is pressed in the toolbar of the Debug tool window, all the breakpoints in a project are muted, and their icons become grey: <img alt=\"Grey dot\" src=\"screenshots/debugger/breakpoints/Muted.png?raw=true\"/>.\r\n\r\n##### Accessing Breakpoint Properties\r\n\r\n###### Viewing all breakpoints\r\n\r\nTo view the list of all breakpoints and their properties, do one of the following:\r\n\r\n* Run > View Breakpoints\r\n* `Shift+Cmd+F8`\r\n* Click the <img alt=\"Two red dots layered vertically on top of each other with smaller grey rings to right of the red dots\" src=\"screenshots/debugger/breakpoints/All.gif?raw=true\"/>\r\n* Breakpoints are visible in the Favorites tool window.\r\n\r\n###### Viewing a single breakpoint\r\n\r\nTo view properties of a single breakpoint\r\n\r\n* Right-Click a breakpoint icon in the left gutter of the editor.\r\n  <img src=\"screenshots/debugger/breakpoints/Properties.png?raw=true\"/>\r\n\r\n##### Configuring Breakpoints\r\n\r\nTo configure actions, suspend policy and dependencies of a breakpoint\r\n\r\n1. Open the Breakpoint Properties\r\n   * Right-click a breakpoint in the left gutter, then click the More link or press `Shift+Cmd+F8`\r\n   * Open the [Breakpoints](#viewing-all-breakpoints) dialog box and select the breakpoint from the list\r\n   * In the Favorites tool window, select the desired breakpoint, and click the pencil icon.\r\n2. Define the actions to be performed by IntelliJ IDEA on hitting breakpoint:\r\n   * To notify about the reaching of a breakpoint with a text message in the debugging console, check the \"Log message to console\" check box.  A message of the format `*DBG* 'Elixir.IntellijElixir.DebugServer' got cast {breakpoint_reached, PID}` will appear in the console.\r\n   * To set a breakpoint the current one depends on, select it from the \"Disabled until selected breakpoint hit\" drop-down list. Once dependency has been set, the current breakpoint is disabled until selected one is hit.\r\n     * Choose the \"Disable again\" radio button to disable the current breakpoint after selected breakpoint was hit.\r\n     * Choose the \"Leave enabled\" radio button to keep the current breakpoint enabled after selected breakpoint was hit.\r\n   * Enable suspending an application upon reaching a breakpoint by checking the \"Suspend\" check box.\r\n\r\n##### Creating Line Breakpoints\r\n\r\nA line breakpoint is a breakpoint assigned to a specific line in the source code.\r\n\r\nLine breakpoints can be set on executable lines. Comments, declarations and empty lines are not valid locations for the line breakpoints.\r\n\r\n1. Place the caret on the desired line of the source code.\r\n2. Do one of the following:\r\n   * Click the left gutter area at a line where you want to toggle a breakpoint\r\n   * Run > Toggle Line Breakpoint\r\n   * `Cmd+F8`\r\n\r\n##### Describing Line Breakpoints\r\n\r\n1. [Open the Breakpoints dialog](#viewing-all-breakpoints)\r\n2. Right-click the breakpoint you want to describe\r\n3. Select \"Edit description\" from the context menu\r\n4. In the \"Edit Description\" dialog box, type the desired description.\r\n\r\n##### Searching for Line Breakpoints\r\n\r\n1. [Open the Breakpoints dialog](#viewing-all-breakpoints)\r\n2. Start typing the description of the desired breakpoint\r\n\r\n##### Jump to Breakpoint Source\r\n\r\n* To view the selected breakpoint without closing the dialog box, use the preview pane.\r\n* To open the file with the selected breakpoint for editing, double-click the desired breakpoint.\r\n* To close Breakpoints dialog, press `Cmd+Down`. The caret will be placed at the line marked with the breakpoint in question.\r\n\r\n##### Disabling Line Breakpoints\r\n\r\nWhen you temporarily disable or enable a breakpoint, its icon changes from <img src=\"screenshots/debugger/breakpoints/Enabled.png?raw=true\"/> to <img src=\"screenshots/debugger/breakpoints/Disabled.png?raw=true\"/> and vice versa.\r\n\r\n1. Place the caret at the desired line with a breakpoint.\r\n2. Do one of the following:\r\n   * Run > Toggle Breakpoint Enable\r\n   * Right-click the desired breakpoint icon, select or deselect the <breakpoint name> enabled check box, and then click Done.\r\n   * Alt-click the breakpoint icon\r\n\r\n##### Deleting Line Breakpoints\r\n\r\nDo one of he following:\r\n\r\n* In the [Breakpoints](#viewing-all-breakpoints) dialog box, select the desired line breakpoint, and click the red minus sign.\r\n* In the editor, locate the line with the line breakpoint to be deleted, and click its icon in the left gutter.\r\n* Place caret on the desired line and press `Cmd+F8`.\r\n\r\n#### Starting the Debugger Session\r\n\r\n1. Select the run/debug configuration to execute\r\n2. Do one of the following\r\n   * Click <img alt=\"Bug\" src=\"screenshots/debugger/Debug.png?raw=true\"/> on the toolbar\r\n   * Run > Debug\r\n   * `Ctrl+D`\r\n\r\nOR\r\n\r\nDebug quick menu\r\n\r\n1. `Ctrl+Alt+D`\r\n2. Select the configuration from the pop-up menu\r\n3. Hit `Enter`\r\n\r\n#### Examining Suspended Program\r\n\r\n##### Processes\r\n\r\n<figure>\r\n  <img src=\"screenshots/debugger/Processes.png?raw=true\"/>\r\n  <br/>\r\n  <figcaption>\r\n    The \"Thread\" drop-down lists the current processes in the local\r\n    node.  Only the current process is suspended.  The rest of the\r\n    processes are still running.\r\n  </figcaption>\r\n</figure>\r\n\r\n##### Frames\r\n\r\n<figure>\r\n  <img src=\"screenshots/debugger/Frames.png?raw=true\"/>\r\n  <br/>\r\n  <figcaption>\r\n    The Frames for the current process can be navigated up and down\r\n    using the arrow keys or clicking on the frame.\r\n  </figcaption>\r\n</figure>\r\n\r\n* Press `Up` or `Down` to change frames\r\n* Click the frame from the list\r\n\r\n###### Jump to Current Execution Point\r\n\r\nWhen changing frames or jumping to definitions, you can lose track of where the debugger is paused.  To get back to the current execution point, do one of the following:\r\n1. Run > Show Execution Point.\r\n2. `Alt+F10`\r\n3. Click <img src=\"screenshots/debugger/Show%20Execution%20Point.png?raw=true\"/> on the stepping toolbar of the Debug tool window.\r\n\r\n##### Variables\r\n\r\n<img src=\"screenshots/debugger/Variables.png?raw=true\"/>\r\n\r\nWhile Elixir allows rebinding variable names, Erlang does not, so when viewed in the Variables pane, variables will have an `@VERSION` after their name indicating which rebinding of a the variable is.  Even if there is no variable reuse, the first variable will still have `@1` in its name.\r\n\r\n#### Stepping\r\n\r\n| Action               | Icon                                                                    | Shortcut   | Description                                                                                                                                                                                                                                                                                  |\r\n|----------------------|-------------------------------------------------------------------------|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| Show Execution Point | <img src=\"screenshots/debugger/Show%20Execution%20Point.png?raw=true\"/> | `Alt+F10`  | Click this button to highlight the current execution point in the editor and show the corresponding stack frame in the Frames pane.                                                                                                                                                          |\r\n| Step Over            | <img src=\"screenshots/debugger/stepping/Step%20Over.png?raw=true\"/>     | `F8`       | Click this button to execute the program until the next line in the current function or file, skipping the function referenced at the current execution point (if any). If the current line is the last one in the function, execution steps to the line executed right after this function. |\r\n| Step Into            | <img src=\"screenshots/debugger/stepping/Step%20Into.png?raw=true\"/>     | `F7`       | Click this button to have the debugger step into the function called at the current execution point.                                                                                                                                                                                         |\r\n| Step Out             | <img src=\"screenshots/debugger/stepping/Step%20Out.png?raw=true\"/>      | `Shift+F8` | Click this button to have the debugger step out of the current function, to the line executed right after it.                                                                                                                                                                                |\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/6093399", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/6093399/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/6093399/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v5.0.0", "id": 6093399, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTYwOTMzOTk=", "tag_name": "v5.0.0", "target_commitish": "master", "name": "v5.0.0", "draft": false, "prerelease": false, "created_at": "2017-04-16T19:43:33Z", "published_at": "2017-04-17T01:10:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/3669682", "id": 3669682, "node_id": "MDEyOlJlbGVhc2VBc3NldDM2Njk2ODI=", "name": "intellij-elixir-5.0.0.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 3546375, "download_count": 27, "created_at": "2017-04-16T19:56:28Z", "updated_at": "2017-04-16T19:56:30Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v5.0.0/intellij-elixir-5.0.0.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v5.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v5.0.0", "body": "With both the contribution of ExUnit Mix Tasks in `4.7.0` and the conversion of the build to Gradle for `5.0.0`, I've added Jake Becker ([@JakeBecker](https://github.com/JakeBecker)) as a Collaborator to the repo.\r\n\r\n# Thanks\r\n\r\n* Reporting the `AssertionError` in `org.elixir_lang.code_insight.lookup.element_renderer.CallDefinitionClause.renderElement`\r\n  * [@bdarla](https://github.com/bdarla)\r\n  *  Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique))\r\n  * Arjan Molenaar ([@amolenaar](https://github.com/amolenaar))\r\n  * Chris Desch ([@ cdesch](https://github.com/cdesch))\r\n  * Steve ([@stevepm](https://github.com/stevepm))\r\n  * Laura Stone ([@tyrostone](https://github.com/tyrostone))\r\n  * [@wee911](https://github.com/wee911)\r\n  * Oleg Samorai ([@Samorai](https://github.com/Samorai))\r\n  * Jadenn ([@dabaer](https://github.com/dabaer))\r\n  * Jan Stevens ([@JanStevens](https://github.com/JanStevens))\r\n  * Szymon Je\u017c ([@szymon-jez](https://github.com/szymon-jez))\r\n* Reporting examples where `ElixirVariable` could not be determined if it was a variable.\r\n  * Steve Wagner ([@ciroque](https://github.com/ciroque))\r\n  * Marcin Jakubowski ([@mjakubowski84](https://github.com/mjakubowski84))\r\n  * Ryan Cammer ([@ryancammer](https://github.com/ryancammer))\r\n  * Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique)) (multiple examples!)\r\n  * Matt Briggs ([@mbriggs](https://github.com/mbriggs))\r\n* Reporting examples where `ElixirMultipleAliases` could not resolve variable in match.\r\n  * \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0414\u0443\u0431\u0438\u043d\u0430 ([@dmitrydprog](https://github.com/dmitrydprog)\r\n  * Nitin Gupta ([@nitingupta910](https://github.com/nitingupta910)) for\r\n* Reporting examples of the annotator highlighting in the wrong file due to the call definition offset always being assumed to be in the same file.\r\n  * Wojciech Bednarski ([@wbednarski](https://github.com/wbednarski))\r\n  * Artem Gordinsky ([@ArtemGordinsky](https://github.com/ArtemGordinsky))\r\n  * Sam Brotherton ([@sbrother](https://github.com/sbrother))\r\n  * Alexander Merkulov ([@merqlove](https://github.com/merqlove))\r\n* Reporting Parameter variable style being incorrectly applied\r\n  * Matt Briggs ([@mbriggs](https://github.com/mbriggs))\r\n* Working with me to figure out that the template tags in the color preview were messed up\r\n  * Dmitry Maltsev ([@judgedim](https://github.com/judgedim))\r\n* Reporting mismatch between inspection resource and class due to a copy-and-paste error\r\n  * Markus Fischer ([@mfn](https://github.com/mfn))\r\n* Reporting incorrect highlighting of functions with guards\r\n  * Dmitry Maltsev ([@judgedim](https://github.com/judgedim))\r\n* Requesting configurable code-folding for module attributes\r\n  * Artem Rizhov ([@artemrizhov](https://github.com/artemrizhov))\r\n* Pointing out it makes no sense for context menus for ExUnit to appear in non-Elixir projects\r\n  * Alexander Merkulov ([@merqlove](https://github.com/merqlove))\r\n* Reporting an example where `MatchedUnqualifiedParenthesesCall` could not be type highlighted\r\n  * Ryan Scheel ([@Havvy](https://github.com/Havvy))\r\n* Reporting that function complete didn't take into account the already typed prefix\r\n  * Saeed Zarinfam ([@zarinfam](https://github.com/zarinfam))\r\n* Requesting completion of Aliases to `.beam`-only Module, which is what inspired me to attempt decompilation\r\n  * Matt Briggs ([@mbriggs](https://github.com/mbriggs))\r\n\r\n# Changelog\r\n\r\n## v5.0.0\r\n\r\n### Enhancements\r\n* [#574](https://github.com/KronicDeth/intellij-elixir/pull/574) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Decompile `.beam` files\r\n    * Structure view for decompiled `.beam` files\r\n    * Index modules, functions, and macros exported by `.beam` files\r\n    * Go To Symbol for Modules defined in `.beam` files (both SDK and deps)\r\n      * Erlang using atoms (like `:idna`)\r\n      * Elixir using Alias (like `Enum`)\r\n    * Completion for Modules defined in `.beam` files (both SDK and deps)\r\n      * Elixir using Alias (like `Enum`)\r\n    * Completion for functions and macros exported by `.beam` files\r\n    * Syntax highlighting\r\n* [#579](https://github.com/KronicDeth/intellij-elixir/pull/579) - Regression test for [#575](https://github.com/KronicDeth/intellij-elixir/pull/575) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#583](https://github.com/KronicDeth/intellij-elixir/pull/583) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Macros appear before functions in decompiled `.beam` files\r\n    * Header for macro and function sections\r\n* [#585](https://github.com/KronicDeth/intellij-elixir/pull/585) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Update `ELIXIR_VERSION` for `1.2.*` from `1.2.3` to `1.2.6`\r\n  * Add `ELIXIR_VERSION` `1.3.4`\r\n  * Add `ELIXIR_VERSION` `1.4.0`\r\n  * Update `IDEA` for `2016.*` to `2016.3.1`\r\n  * Show `OtpErlangBitStr` (and therefore `OtpErlangBinary` contents when tests fail\r\n  * Quote binaries as `to_charlist` instead of `to_char_list` for Elixir `>= 1.3`.  Depends on Elixir version of project SDK.\r\n  * Use `elixir` instead of `java` VM, so now Erlang and Elixir don't need to be built on travis-ci, but `ant` and the `jdk` need to be installed, but unlike Erlang and Elixir, there are tarballs for that, so this way is faster than the old method without depending on travis-ci cache.\r\n* [#609](https://github.com/KronicDeth/intellij-elixir/pull/609) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * If `multiResolve` causes a `StackOverflow` for `org.elixir_lang.annotator.Callable.visitCall`, then `catch` it and use `errorreport` logger to log the element.\r\n  * Include file path in `errorreport` excerpt\r\n  * Log element for `StackOverflow` related to `import`s\r\n  * Regression test for [#605](https://github.com/KronicDeth/intellij-elixir/issues/605).\r\n  * Log `LookupElement#getObject` when `LookupElement#getPsiElement` is `null` to track down how it was `null` in [#563](https://github.com/KronicDeth/intellij-elixir/issues/563).\r\n* [#614](https://github.com/KronicDeth/intellij-elixir/pull/614) - Regression test for [#559](https://github.com/KronicDeth/intellij-elixir/issues/559) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#504](https://github.com/KronicDeth/intellij-elixir/pull/504) - [@JakeBecker](https://github.com/JakeBecker)\r\n  * Switch to Gradle for builds.\r\n    * `./gradlew runIde` (or the `runIde (VERSION)` Run Configurations) will run IDEA in a sandbox with the development version of the plugin.\r\n    * `./gradlew test` (or the `test (VERSION)` Run Configurations) will run the main plugin and jps-builder tests.\r\n    * The plugin can now be published with `./gradlew publishPlugin`, *BUT* you'll need to fill in `publish*` properties in `gradle.properties`.  This will _eventually_ allow for automated \"nightlies\" from successful Travis-CI builds on `master`.\r\n* [#638](https://github.com/KronicDeth/intellij-elixir/pull/638) - The `Callable` annotator is meant for variables, parameters, and macro and function calls and declarations.  The `ModuleAttribute` annotator handles module attribute declaration and usage, so we can save reference resolution time by skipping module attributes in `Callable`. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#640](https://github.com/KronicDeth/intellij-elixir/pull/640) - Allow module attribute folding to be configured. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#662](https://github.com/KronicDeth/intellij-elixir/pull/662) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Allow call definition heads to resolves to themselves for consistency with Aliases of `defmodule`.\r\n  * Generalize `Callable.callDefinitionClauseDefiner(Call)`: in addition to the current `CallDefinitionClause`, make it work for `Implementation`, `Module`, and `Protocol`.\r\n\r\n### Bug Fixes\r\n* [#574](https://github.com/KronicDeth/intellij-elixir/pull/574) - Fix copy-paste errors in `MatchOperatorInsteadOfTypeOperator` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#579](https://github.com/KronicDeth/intellij-elixir/pull/579) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Subtract 1 from arity in `.beam` file when decompiling to `defmacro` calls because the Erlang function for Elixir macros has one addition argument: the first argument is the `Caller` of the macro.\r\n  * If the name of the decompiled macro/function is an infix operator, then decompile the head as a binary operation instead of a normal prefix name as infix operators aren't valid prefix names and led to parsing errors, which was the root cause of [#575](https://github.com/KronicDeth/intellij-elixir/pull/575).\r\n  * Fix IntelliJ warnings in `BeamFileImpl`\r\n  * Remove unused `VirtualFile` argument to `BeamFileImpl#buildFileStub`.\r\n* [#583](https://github.com/KronicDeth/intellij-elixir/pull/583) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Add `++`, `=~`, and `in` to `INFIX_OPERATOR_SET`.\r\n  * Only render infix operators if arity is `2`.\r\n  * Prefix operator decompilation: `+` and `-` are both binary and unary operators.  When a unary operator they need to be wrapped in parentheses, so that the call definition clause is parsed correctly.\r\n* [#585](https://github.com/KronicDeth/intellij-elixir/pull/585) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Ignore `JFLex` jar\r\n  * Don't check for `elixir-lang/elixr` files remove in `1.3`\r\n  * Allow `nil` as a keyword key.  `nil` was being lexed as a potential keyword key, but NIL was missing from the token list in the keywordKey grammar rule.\r\n* [#599](https://github.com/KronicDeth/intellij-elixir/pull/599) - Some SpecialForms don't work as literals as they would be interpreted as metaprogramming, so their name needs to be wrapped as an atom to `unquote`. -  [@KronicDeth](https://github.com/KronicDeth)\r\n* [#600](https://github.com/KronicDeth/intellij-elixir/pull/600) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check children of `MultipleAliases` for variable declarations.\r\n  * Treat any variable declared in a `MultipleAliases` as invalid.\r\n* [#609](https://github.com/KronicDeth/intellij-elixir/pull/609) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Skip `import Kernel` in `kernel.ex` to prevent stack overflow due to recursive `import`\r\n  * Strip all outer parentheses for left type operand, so that `(+value)` can be see as `+` operator type spec.\r\n  * Use advice from `IndexNotReadyException` documentation and check `DumbService.isDumb(Project)` before calling `StubIndex.getElements` in `Module` and `module.MultiResolve.indexNameElements`.\r\n  * Don't `assert` that `LookupElement#getPsiElement` is not `null` in `CallDefinitionCluase.renderElement`\r\n  * Update to `ant` `1.10.1` because `1.10.0` is no longer hosted.\r\n* [#612](https://github.com/KronicDeth/intellij-elixir/pull/612) - Yeah, it sounds weird, but an `ElixirVariable` isn't necessarily a variable if it doesn't occur in a declaration context.  It could just be a no-parentheses function call in the wrong spot, so check the parent `PsiElement` to determine if `ElixirVariable` is a variable. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#614](https://github.com/KronicDeth/intellij-elixir/pull/614) - Highlight parameterized type head (`maybe(t)` in `@type maybe(t)`) the same as a full type definition (`maybe(t)` in `@type maybe(t) :: t | nil`) - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#616](https://github.com/KronicDeth/intellij-elixir/pull/616) - Only show Mix ExUnit Run in context when the module, or when the module is not a available, the project SDK is Elixir.  If there is no SDK configured, show \"Mix ExUnit Run\" in the menu. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#617](https://github.com/KronicDeth/intellij-elixir/pull/617) - Mark `do:` as atom in demo text - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#627](https://github.com/KronicDeth/intellij-elixir/pull/627) - Annotations can only be applied to the single, active file, which belongs to the `referrer` `Callable`.  The `resolved` may be outside the file if it is a cross-file function or macro usage, in which case it's `TextRange` should not be highlighted because it is referring to offsets in a different file. - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#634](https://github.com/KronicDeth/intellij-elixir/pull/634) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `Variable` scope for `QualifiedMultipleAliases`, which occurs when qualified call occurs over a line with assignment to a tuple, such as `Qualifier.\\n{:ok, value} = call()`\r\n  * Remove call definition clauses (function or macro) completion for bare words as it had a detrimental impact on typing feedback (the editor still took input, but it wasn't rendered until the completion returned OR `ESC` was hit to cancel the completion, which became excessive once the index of call definition clauses was expanded by the decompilation of the Elixir standard library `.beam`s, so disable it.  If bare-words completion is restored.  It will either (1) need to not use the `Reference#getVariants()` API because it generates too many objects that need to be thrown away or (2) need to only complete call definition clauses that are provably in-scope from imports or other macros.\r\n* [#636](https://github.com/KronicDeth/intellij-elixir/pull/636) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Both intellij-erlang and intellij-community are Apache 2.0 licensed and its the default license for Elixir projects, so seems like a good choice for `LICENSE.md`\r\n  * Add `CODE_OF_CONDUCT.md`\r\n* [#638](https://github.com/KronicDeth/intellij-elixir/pull/638) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * The run configurations I put together in [#504](https://github.com/KronicDeth/intellij-elixir/pull/504) didn't allow for the debugger to work properly: neither pause nor breakpoints had any effect, so regenerate them from the Gradle pane.\r\n  * Check parent of `when` operation in case it's a guarded function head in `org.elixir_lang.annonator.Parameter.putParameterized(Parameter, PsiElement)`\r\n  * Instead of highlighting call definition clauses when they are referred to, which only works if it is in the same file, highlight all function and macro declarations when the `def*` call is encountered.\r\n  * Only increment arity for right pipe operand instead of all operands, so that left operands resolve to correct arity or as variable/parameter.\r\n* [#662](https://github.com/KronicDeth/intellij-elixir/pull/662) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Override `ModuleImpl#getProject()` to prevent `StackOverflowError`.  Without overriding `#getProject()`, `IdentifierHighlighterPass` gets stuck in a loop between `getManager` and `getProject` on the target (the `ModuleImpl`) when clicking on the space between `def`s or `defmacro`s in the decompiled `.beam` files.\r\n  * Fix source formatting\r\n  * Skip looking for variables unless 0-arity AND no arguments\r\n  * Highlight unresolved macros as macro calls. Anything with a do keyword or a do block will be treated like a macro call even if it can't be resolved.  No resolved is either no resolve results or an empty list\r\n  * Implicit imports at top of file in addition to top of Module.\r\n* [#663](https://github.com/KronicDeth/intellij-elixir/pull/663) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * `CallDefinitionClause` completion provider is unexpectedly invoked both when `.` is typed, but continues to be invoked after a letter is typed after the `.`; however, once the letter is typed, the letter becomes the default prefix instead, so the prefix should only be reset to `\"\"` when it ends in `.`.\r\n  * Disable `Callable#getVariants` unless `Unqualified` to  prevents local functions and macros being shown as completions for qualified names.\r\n* [#651](https://github.com/KronicDeth/intellij-elixir/pull/651) - [@StabbyMcDuck](https://github.com/StabbyMcDuck)\r\n  * Among many other tweaks, the String color is now green, so that Atom and String are no longer close to one another, which was the original issue in #569\r\n      <img width=\"760\" alt=\"screen shot 2017-04-09 at 9 44 06 pm\" src=\"https://cloud.githubusercontent.com/assets/298259/24844071/b1c9b51a-1d6d-11e7-8647-46a5075b12d9.png\">\r\n    * `Alias` now has `underscored` effect\r\n    * `Brackets` are now greenish instead of brownish\r\n    * `Callbacks` are now a lighter blue and has `underscored` effect\r\n    * `CharList` is little lighter\r\n    * `CharToken` is dark yellow now instead of dark purple\r\n    * `Dot` is now purple instead of dark red\r\n    * `Expression Substitution Mark` is a little lighter\r\n    * `Interpolation` is now lime green\r\n    * `Kernel Macros` are a burnt orange\r\n    * `Map` is now a dark blue instead of a dark yellow\r\n    * `Operation Sign` is a little lighter\r\n    * `Parameters` are a little darker\r\n    * `Parentheses` are redder\r\n    * `Predefined` is orange instead of blue\r\n    * `Specification` is now red instead of purple\r\n    * `Struct` is now purple instead of yellow\r\n    * `Type` is now green instead of dark purple\r\n    * `Variable` is more tealish\r\n* [#650](https://github.com/KronicDeth/intellij-elixir/pull/650) - [@StabbyMcDuck](https://github.com/StabbyMcDuck)\r\n  * Fix indentation to fix sub-lists in `CONTRIBUTING.md`\r\n  * Fix pluralization in `CONTRIBUTING.md`\r\n* [#664](https://github.com/KronicDeth/intellij-elixir/pull/664) - [@KronicDeth](https://github.com/KronicDeth)\r\n  * Check if resolve results are `null` for `For.resolveResultList`\r\n  * Check if `Protocol.resolveResultList` is `null`\r\n* [#665](https://github.com/KronicDeth/intellij-elixir/pull/665) - Check `match` `Call` is an `UnqualifiedNoArgumentCall`, in addition to being 0 resolved final arity, before checking if the name matches. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n### Incompatible Changes\r\n* [#585](https://github.com/KronicDeth/intellij-elixir/pull/585) - Move `^^^` to its own three-operator precedence level to match `1.2`.  This does mean the parsing will be wrong for Elixir `1.1`, but is simpler than maintaining two grammars for those that are still using Elixir `1.1` - [@KronicDeth](https://github.com/KronicDeth)\r\n* [#504](https://github.com/KronicDeth/intellij-elixir/pull/504) - The `ant` build files have been removed.  To build the build plugin (for Install From Disk), use the `./gradlew buildPlugin`. - [@JakeBecker](https://github.com/JakeBecker)\r\n* [#640](https://github.com/KronicDeth/intellij-elixir/pull/640) - Change to module attribute folding to off by default. - [@KronicDeth](https://github.com/KronicDeth)\r\n\r\n# README Updates\r\n\r\n### Decompilation\r\n\r\n`.beam` files, such as those in the Elixir SDK and in your project's `build` directory will be decompiled to equivalent `def` and `defmacro` calls.  The bodies will not be decompiled, only the call definition head and placeholder parameters.  These decompiled call definition heads are enough to allow Go To Declaration, the Structure pane, and Completion to work with the decompiled `.beam` files.\r\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4840917", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4840917/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4840917/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.7.0", "id": 4840917, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ4NDA5MTc=", "tag_name": "v4.7.0", "target_commitish": "master", "name": "v4.7.0", "draft": false, "prerelease": false, "created_at": "2016-12-06T05:19:00Z", "published_at": "2016-12-06T06:04:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2772404", "id": 2772404, "node_id": "MDEyOlJlbGVhc2VBc3NldDI3NzI0MDQ=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2114260, "download_count": 143, "created_at": "2016-12-06T06:03:55Z", "updated_at": "2016-12-06T06:03:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.7.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.7.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.7.0", "body": "# Thanks\n- Thanks to Jake Becker ([@JakeBecker](https://github.com/JakeBecker)) for adding Mix ExUnit Run Configurations and create from context.\n- Thanks to [@andyl](https://github.com/andyl) for requesting Navigate > Test and Navigate > Test Subject as it was a good complement to Jake Becker's new Mix ExUnit Run Configurations\n- Thanks to Alexander Merkulov ([@merqlove](https://github.com/merqlove)) for outline the testing workflow that Jack Becker ended up implementing\n- Thanks to [@davit55](https://github.com/davit555) and Matt Briggs ([@mbriggs](https://github.com/mbriggs)) for confirming that lookup name could exceed the element text and it wasn't just an artifact of my development environment\n- Thanks to [@taorg](https://github.com/taorg) for a full test case to show how MultipleAliases would need to be supported in `isVariable`\n- Thanks to Josh Taylor ([@joshuataylor](https://github.com/joshuataylor) for posting a screenshot of the bad lookup formatting for variables.\n- Thanks to Matt Briggs ([@mbriggs](https://github.com/mbriggs)) for posting an error about the error reporter \ud83d\ude1d \n- Thanks to Josh Taylor ([@joshuataylor](https://github.com/joshuataylor), Matt Briggs ([@mbriggs](https://github.com/mbriggs)), Cris ([@crisonyx](https://github.com/crisonyx)), [@sngyai](https://github.com/sngyai), [@lucdang](https://github.com/lucdang), Cris ([@crisonyx](https://github.com/crisonyx)), Sven Marquardt ([@Eiamnacken](https://github.com/Eiamnacken)), and Aaron Eikenberry ([@aeikenberry](https://github.com/aeikenberry)) for reporting that `CallDefinitionClause(Call)` needed between error handling to avoid a `NullPointerException`\n- Thanks to Matt Briggs ([@mbriggs](https://github.com/mbriggs)) for posting the source for a reproduction-case for the StackOverflow that was plaguing [@andshape](https://github.com/andshape), Robert Hencke ([@rhencke](https://github.com/rhencke)), Alexander Merkulov ([@merqlove](https://github.com/merqlove)), [@fieldinrain](https://github.com/fieldinrain), Roman ([@roman462](https://github.com/roman462)), Andrei Dziahel ([@develop7](https://github.com/develop7)), and Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique))\n- Thanks to Tiziano Puppi ([@tizpuppi](https://github.com/tizpuppi)) for demonstrating how a typing a typo could cause an error in variable use scope.\n- Thanks to nsm ([@nsmuffin](https://github.com/nsmuffin)) for posting that working directory being null wasn't treated the same as not being a directory.\n- Thanks to Ryan Scheel ([@Havvy](https://github.com/Havvy) for showing how missing a `:` in type specs could break the highlighting, which led to the inspections and quick fixes in this release.\n\n# Changelog\n\n## v4.7.0\n\n### Enhancements\n- [#523](https://github.com/KronicDeth/intellij-elixir/pull/523) - Use the `CommonProgramParametersPanel` to get the working directory and environment variables the same way the JUnit form does.  Replace the custom \"Command\" input with the \"Program arguments\" input built into the `CommonProgramParametersPanel`. `CommonProgramParametersPanel` expects to store the \"Program Arguments\" in a \"ProgramParameters\" field, so old run configurations will lose their \"Command\" option value and it will be migrated to the new \"ProgramParameters\". - [@KronicDeth](https://github.com/KronicDeth)\n- [#482](https://github.com/KronicDeth/intellij-elixir/pull/482) - [@JakeBecker](https://github.com/JakeBecker), [@KronicDeth](https://github.com/KronicDeth)\n  - Create / Run Mix ExUnit Run Configurations\n    - Run Configuration from Directory\n    - Run Configuration from File\n    - Run Configuration from LIne\n  - Run Configurations support Common Program Parameters\n    - Program Arguments\n    - Working directory\n    - Environment variables\n- [#531](https://github.com/KronicDeth/intellij-elixir/pull/531) - [@KronicDeth](https://github.com/KronicDeth) \n  - `enclosingMacroCall` returns enclosing macro call when parent is `ElixirDoBlock`, so that `end` element goes to the macro call.\n  - `Navigate > Test` will go to the Module that has the same canonical name as the current `defimpl`, `defmodule`, `defprotocol` , or `quote` with a `Test` suffix added\n  - `Navigate > Test Subject` will go to the `defimpl`, `defmodule`, `defprotocol`, or `quote` that has the same canonical name as the current Module with the `Test` suffix removed.\n- [#533](https://github.com/KronicDeth/intellij-elixir/pull/533) - Regression test for #500 - [@KronicDeth](https://github.com/KronicDeth)\n- [#545](https://github.com/KronicDeth/intellij-elixir/pull/545) - Regression test for #517 - [@KronicDeth](https://github.com/KronicDeth)\n- [#548](https://github.com/KronicDeth/intellij-elixir/pull/548) - Regression test for #521 - [@KronicDeth](https://github.com/KronicDeth)\n- [#549](https://github.com/KronicDeth/intellij-elixir/pull/549) - [@KronicDeth](https://github.com/KronicDeth)\n  - Regression test for #525\n  - If `:` is used instead of `::` for a type specification, mark it as an error with a Quick Fix to convert `:` to `::`.\n  - Highlight `=` operands the same as `::` operands in type specifications.\n  - If `=` is used instead of `::` in a type specification, mark it as an error with a Quick Fix to convert `=` to `::`.\n\n### Bug Fixes\n- [#523](https://github.com/KronicDeth/intellij-elixir/pull/523) - Fix typo: `myRunInModuleChekcBox` => `myRunInModuleCheckBox` - [@KronicDeth](https://github.com/KronicDeth)\n- [#532](https://github.com/KronicDeth/intellij-elixir/pull/532) - Don't log error when name length exceeds presentable text length because it appears to be common for normal users and not a development environment artifact. - [@KronicDeth](https://github.com/KronicDeth)\n- [#533](https://github.com/KronicDeth/intellij-elixir/pull/533) - Check parent of `ElixirMultipleAliases` for `isVariable` because `ElixirMultipleAliases` can be hit in `isVariable` when `MyAlias.` is added on a line above a pre-existing tuple, such as when typing a new qualified call. - [@KronicDeth](https://github.com/KronicDeth)\n- [#534](https://github.com/KronicDeth/intellij-elixir/pull/534) - Add space between variable and match in lookup element presentation - [@KronicDeth](https://github.com/KronicDeth)\n- [#535](https://github.com/KronicDeth/intellij-elixir/pull/535) - Check `VirtualFile` is not null before creating attachment because `PsiFile` can lack a `VirtualFile` if the `PsiFile` only exists in memory. - [@KronicDeth](https://github.com/KronicDeth) \n- [#537](https://github.com/KronicDeth/intellij-elixir/pull/537) - Convert `CallDefinitionClause(Call)` to `CallDefinitionClause.fromCall(Call)`, so that `null` can be returned when `CallDefinitionClause.enclosingModular(Call)` returns `null`. - [@KronicDeth](https://github.com/KronicDeth) \n- [#539](https://github.com/KronicDeth/intellij-elixir/pull/539) - [@KronicDeth](https://github.com/KronicDeth)\n  - Use `functionName` instead of `getName` when multiresolving unqualified functions because `getName` will return the Alias when called on `defmodule`.\n  - `maybeQualifiedCallToModular` returned `null` BOTH (1) if the call was unqualified OR (2) if the call was qualified, but its modular could not be resolved, so qualified calls to `.beam`-only modules, like `File.read!` returned `null` because `File` could not be resolved to a modular.  Remove `maybeqQualifiedToModular` and call `qualifiedToModular` when `myElement` is qualified.  If the modular is `null`, then return an empty `ResolveResult[]` instead of looking for unqualified matches.\n  - Pass `maxScope` to `Module` reference.  `maxScope` is generally the containing file for the element, but when using `Module` to resolve `import`s, it is the `import` call's parent element, so that the resolve doesn't ricochet between the `defmodule` and its child, the `import` call until `StackOverflowError`.\n- [#545](https://github.com/KronicDeth/intellij-elixir/pull/545) - A variable cannot be declared in update arguments, so return `LocalSearchScope.EMPTY`, the same as interpolation. - [@KronicDeth](https://github.com/KronicDeth)\n- [#548](https://github.com/KronicDeth/intellij-elixir/pull/548) - `ElixirSystemUtil.getProcessOutput` already allowed for an empty, invalid `ProcessOutput` when the `workDir` wasn't a directory, so allow it to also be `null` and return the empty `ProcessOutput`. - [@KronicDeth](https://github.com/KronicDeth)\n- [#549](https://github.com/KronicDeth/intellij-elixir/pull/549) - [@KronicDeth](https://github.com/KronicDeth)\n  - If a single keyword pair is used for a type spec, treat `:` as a type for `::`\n  - Limit variable use scope for variables \"declared\" in module attributes to the module attribute because the variable can't be declared there and it is really a variable usage without declaration.\n\n# README Changes\n\n### Inspections\n\n#### Keyword pair colon (`:`) used in type spec instead of type operator (`::`)\n\nType specifications separate the name from the definition using `::`.\n\n``` elixir\n@type name: definition\n```\n\nReplace the `:` with `::`\n\n``` elixir\n@type name :: definition\n```\n\n#### Match operator (`=`) used in type spec instead of type operator (`::`)\n\nType specifications separate the name from the definition using `::`.\n\n``` elixir\n@type name = definition\n```\n\nReplace the `=` with `::`\n\n``` elixir\n@type name :: definition\n```\n\n### Quick Fixes\n\n#### Convert `:` to `::` in type specs\n\nIf a type specification uses a single `:` instead of `::`, then hit Alt+Enter on the `:` to change it to `::` and fix the type spec.\n\n#### Convert `=` to `::` in type specs\n\nIf a type specification uses `=` instead of `::`, then hit Alt+Enter on the `=` to change it to `::` and fix the type spec.\n\n### Run Configurations\n\n#### `mix test`\n\nThe `mix test` task gets a special type of Run Configuration, `Elixir Mix ExUnit`.  Using this Run Configuration type instead, of the basic `Elixir Mix` Run Configuration will cause the IDE to attach a special formatter to `mix test`, so that you get the standard graphical tree of Test Results\n\n##### Creating `mix test` Run Configurations Manually\n1. Run > Edit Configurations...\n   ![Edit Run Configurations](/screenshots/features/run_configurations/Edit%20Configurations.png?raw=true)\n2. Click +\n3. Select \"Elixir Mix ExUnit\"\n   ![Add New Elixir Mix ExUnit](/screenshots/features/run_configurations/mix_test/Add%20New.png?raw=true)\n4. Fill in the \"Program arguments\" with the argument(s) to pass to `mix test`.  Normally, this will be a directory like `test`, relative to the \"Working directory\"\n5. Fill in the \"Working directory\"\n   - Type the absolute path to the directory.  \n   - Select the path using directory picker by clicking the `...` button\n6. (Optionally) click the `...` button on the \"Environment variables\" line to add environment variables.\n7. Click \"OK\" to save the Run Configuration and close the dialog\n8. Click the RUn arrow in the Toolbar to run the `mix test` task\n9. The Run pane will open showing the Test Results\n   ![Test Results](/screenshots/features/run_configurations/mix_test/Test%20Results.png?raw=true)\n\nWhile you can create `Elixir Mix ExUnit` run configurations manually using the `Run > Edit Configurations...` menu, it is probably more convenient to use the context menu.\n\n##### Creating `mix test` Run Configurations from context\n\nThe context menu must know that the the directory, file, or line you are right-clicking is a test.  It does this by checking if the current directory or an ancestor is marked as a Test Sources Root. \n1. In the Project pane, ensure your OTP application's `test` directory is marked as a Test Sources Root\n   1. Check if the `test` directory is green.  If it is, it is likely a Test Sources Root.  This color may differ in different themes, so to be sure you can check the context menu\n   2. Right-click the `test` directory.\n   3. Hover over \"Mark Directory As &gt;\"\n      - If \"Unmark as Test Sources Root\" is shown, then the directory is already configured correctly, and create from context will work.\n        ![Mark Directory As &gt; Unmark as Test Sources Root](/screenshots/features/run_configurations/mix_test/mark_directory_as/Unmark%20as%20Test%20Sources%20Root.png?raw=true)\n      - If \"Test Sources Root\" is shown, then the directory need to be configured by clicking that entry\n        ![Mark Directory As &gt; Test Sources Root](/screenshots/features/run_configurations/mix_test/mark_directory_as/Test%20Sources%20Root.png?raw=true)\n\n###### Creating/Running `mix test` Run Configurations from directory\n1. Right-click the directory in the Project pane\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\n   ![Run Mix ExUnit](/screenshots/features/run_configurations/mix_test/context/directory/Run%20Mix%20ExUnit.png?raw=true)\n   - If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\n\nAlternatively, you can use keyboard shortcuts\n1. Select the directory in the Project pane.\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\n\n###### Creating/Running `mix test` Run Configurations from file\n1. Right-click the file in the Project pane\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\n   - If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\n\nAlternatively, you can use keyboard shortcuts\n1. Select the directory in the Project pane.\n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\n\nFinally, you can use the editor tabs\n1. Right-click the editor tab for the test file you want to run\n   ![Run Mix ExUnit](/screenshots/features/run_configurations/mix_test/context/file/Run%20Mix%20ExUnit.png?raw=true)\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\n   - If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\n\n###### Creating/Running `mix test` Run Configurations from line\n\nIf you want to be able to run a single test, you can create a Run Configuration for a line in that test\n1. Right-click a line in the test file\n   ![Run Mix ExUnit](/screenshots/features/run_configurations/mix_test/context/line/Run%20Mix%20ExUnit.png?raw=true)\n2. Click \"Run Mix ExUnit\", which will both create the Run Configuration and Run it.\n   - If you want to only create the Run Configuration, select \"Create Mix ExUnit\" instead\n\nAlternatively, you can use keyboard shortcuts\n1. Place the cursor on the line you want to test \n2. `Ctrl+Shift+R` will create the Run Configuration and Run it.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4636669", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4636669/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4636669/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.6.0", "id": 4636669, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ2MzY2Njk=", "tag_name": "v4.6.0", "target_commitish": "master", "name": "v4.6.0", "draft": false, "prerelease": false, "created_at": "2016-11-11T06:06:44Z", "published_at": "2016-11-11T15:23:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2629652", "id": 2629652, "node_id": "MDEyOlJlbGVhc2VBc3NldDI2Mjk2NTI=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2029256, "download_count": 28, "created_at": "2016-11-11T15:04:31Z", "updated_at": "2016-11-11T15:05:15Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.6.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.6.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.6.0", "body": "[v4.5.0](https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.5.0) was a canary release, so it's release notes are included in this general release in case you didn't run the canary\n\n# Thanks\n- Thanks to Matt Briggs ([@mbriggs](https://github.com/mbriggs)) and Andrei Dziahel ([@develop7](https://github.com/develop7)) for reporting the `NullPointerException` from `org.elixir_lang.psi.scope.call_definition_clause.Variants.getLookupElementCollection`.\n- Thanks to Sergey Zubtsovskiy ([@szubtsovskiy](https://github.com/szubtsovskiy)) for reporting `StackOverflowError`s from certain forms of `with` and helping me narrow down specific minimal reproduction cases.\n- Thanks to [@mdhirsch](https://github.com/mdhirsch) for finding a parser bug (!) after all this time: newlines weren't allowed before `do` for `do` blocks.\n- Thanks to Scott Bennett ([sbennett33](https://github.com/sbennett33)) for finding a case that triggered the `ElixirNoParenthesesStrict` error handling, which revealed that `isVariable` didn't handle it correctly.\n- Thanks to Andrei Dziahel ([@develop7](https://github.com/develop7)) for reporting an error that while I couldn't reproduce did lead to an improved error reporter, so I can figure it out if it happens again.\n- Thanks to Danni Friedland ([BlueHotDog](https://github.com/BlueHotDog)) for reporting a bug that led me to find that `Prefix.primaryArguments` wasn't using `Normalized` and still was using basic `assert`s.\n- Thanks to Aaron Foster ([AnimalRepellentGranules](https://github.com/AnimalRepellentGranules)) for reporting that the `do` `end` matching was too aggressive and incorrectly matched on one liners starting at the `do:`.\n\n# Changelog\n\n## v4.6.0\n\n### Enhancements\n- [#454](https://github.com/KronicDeth/intellij-elixir/pull/454) - Regression test for [#453](https://github.com/KronicDeth/intellij-elixir/issues/453) - [@KronicDeth](https://github.com/KronicDeth)\n- [#455](https://github.com/KronicDeth/intellij-elixir/pull/454) - Regression test for [#446](https://github.com/KronicDeth/intellij-elixir/issues/446) - [@KronicDeth](https://github.com/KronicDeth)\n- [#464](https://github.com/KronicDeth/intellij-elixir/pull/464) - Show element class in all error reports - [@KronicDeth](https://github.com/KronicDeth)\n- [#465](https://github.com/KronicDeth/intellij-elixir/pull/465) - Regression test for [#456](https://github.com/KronicDeth/intellij-elixir/issues/456) - [@KronicDeth](https://github.com/KronicDeth)\n- [#466](https://github.com/KronicDeth/intellij-elixir/pull/466) - Regression test for [#458](https://github.com/KronicDeth/intellij-elixir/issues/458) - [@KronicDeth](https://github.com/KronicDeth)\n- [#467](https://github.com/KronicDeth/intellij-elixir/pull/467) - Regression tests for [#443](https://github.com/KronicDeth/intellij-elixir/issues/443) - [@KronicDeth](https://github.com/KronicDeth)\n- [#474](https://github.com/KronicDeth/intellij-elixir/pull/474) - Regression test for [#462](https://github.com/KronicDeth/intellij-elixir/issues/462) - [@KronicDeth](https://github.com/KronicDeth)\n- [#476](https://github.com/KronicDeth/intellij-elixir/pull/476) - Regression test for [#468](https://github.com/KronicDeth/intellij-elixir/issues/468) - [@KronicDeth](https://github.com/KronicDeth)\n- [#477](https://github.com/KronicDeth/intellij-elixir/pull/477) - [@KronicDeth](https://github.com/KronicDeth)\n  - Regression test for [#469](https://github.com/KronicDeth/intellij-elixir/issues/469)\n  - Highlight Strings and String Heredocs as errors in types.\n- [#479](https://github.com/KronicDeth/intellij-elixir/pull/479) - Regression tests for [#470](https://github.com/KronicDeth/intellij-elixir/issues/470) - [@KronicDeth](https://github.com/KronicDeth)\n- [#483](https://github.com/KronicDeth/intellij-elixir/pull/483) - [@KronicDeth](https://github.com/KronicDeth)\n  - Add `Qualified#qualifier` by extracting it from `CallDefinitionClause` `CompletionProvider`.\n  - Add `Modular` class with `#forEachCallDefinitionClauseNameIdentifier` to enumerate all the identifiers that could be linked to in a modular.\n  - Add `ElixirPsiImplUtil#maybeQualifiedCallToModular` by extracting `resolveFully` from `CallDefinitionClause` `CompletionProvider`\n  - Add regression tests for [#463](https://github.com/KronicDeth/intellij-elixir/issues/463).\n- [#484](https://github.com/KronicDeth/intellij-elixir/pull/484) - Regression test for [#471](https://github.com/KronicDeth/intellij-elixir/issues/471) - [@KronicDeth](https://github.com/KronicDeth)\n- [#485](https://github.com/KronicDeth/intellij-elixir/pull/485) - Regression test for [#472](https://github.com/KronicDeth/intellij-elixir/pull/472) - [@KronicDeth](https://github.com/KronicDeth)\n- [#486](https://github.com/KronicDeth/intellij-elixir/pull/486) - [@KronicDeth](https://github.com/KronicDeth)\n  - Extract `Arrow` interface for `*ArrowOperation`s.\n  - Regression tests for [#480](https://github.com/KronicDeth/intellij-elixir/issues/480)\n\n### Bug Fixes\n- [#454](https://github.com/KronicDeth/intellij-elixir/pull/454) - Return `emptySet` when `lookupElementByPsiElement` is `null`. - [@KronicDeth](https://github.com/KronicDeth)\n- [#455](https://github.com/KronicDeth/intellij-elixir/pull/454) - [@KronicDeth](https://github.com/KronicDeth)\n  - Don't do a naked `assert` that there are 2 children because this can fail during error recovery on the operand, instead use the `prefix.Normalized.operand()` through `prefix.operand()`.\n    \n    **WARNING: This changes the `@NotNull` array so that its sole element changes from `@NotNull` to `@Nullable`.  It may trigger new bugs.**\n- [#461](https://github.com/KronicDeth/intellij-elixir/pull/461) - Use shipped `GeneratedParserUtilBase.DUMMY_BLOCK` because the `DUMMY_BLOCK` _MUST_ match the `GeneratedParserUtilBase` to detect dummy blocks inserted for error handling. - [@KronicDeth](https://github.com/KronicDeth)\n- [#465](https://github.com/KronicDeth/intellij-elixir/pull/465) - Skip over `ElixirNoParenthesesStrict` for `isVariable` - [@KronicDeth](https://github.com/KronicDeth)\n- [#466](https://github.com/KronicDeth/intellij-elixir/pull/466) - Allow newlines before `do` in `doBlock` - [@KronicDeth](https://github.com/KronicDeth)\n- [#467](https://github.com/KronicDeth/intellij-elixir/pull/467) - Don't match `do` or `fn` to `end` when used as a keyword key. - [@KronicDeth](https://github.com/KronicDeth)\n- [#474](https://github.com/KronicDeth/intellij-elixir/pull/474) - [@KronicDeth](https://github.com/KronicDeth)\n  - Check if `iterator.atEnd()` before calling `iterator.getTokenType()` to avoid `IndexOutOfBounds` exception.\n  - Don't add current call definition clause being written to completion \n- [#476](https://github.com/KronicDeth/intellij-elixir/pull/476) - `When#leftOperand` will return `null` (because it's normalized) if there are left-hand error elements, but when stripping guards we want best-effort to match human expectations, so don't use normalized `null`, but use left, non-error element if it is unique. - [@KronicDeth](https://github.com/KronicDeth)\n- [#477](https://github.com/KronicDeth/intellij-elixir/pull/477) - Highlight types in `QualifiedNoParenthesesCall` - [@KronicDeth](https://github.com/KronicDeth)\n- [#478](https://github.com/KronicDeth/intellij-elixir/pull/478) - Still not obvious why `name` for a `CallDefinitionClause` lookup renderer can be longer than `presentableText`, so still log an error, but with `Logger.error`, so we get `name`, `presentableText`, and the original `element`. - [@KronicDeth](https://github.com/KronicDeth)\n- [#479](https://github.com/KronicDeth/intellij-elixir/pull/479) - [@KronicDeth](https://github.com/KronicDeth)\n  - Skip `Arguments` elements in `previousParentExpresion` to eliminate an unnecessary level of processing declarations since calls will enter their arguments.\n  - Only put new `ENTRANCE` in `ResolveState` in `variable.MultiResolve.resolveResultList`, so that caller can override the default value.\n  - Set `ENTRANCE` to `matchAncestor` instead of previous expression to eliminate the looping that occurred when a variable was unbound (or a function) because the check for `with` (and `for`) was expecting the `ENTRANCE` to be the previous child expression instead of the `with` clause as a whole (or the `Arguments` element as had been the case before [6fcc19b](https://github.com/KronicDeth/intellij-elixir/commit/6fcc19bd1748004756da2c8a541fa8b94ede1f71)).\n- [#483](https://github.com/KronicDeth/intellij-elixir/pull/483) - [@KronicDeth](https://github.com/KronicDeth)\n  - Resolves functions qualified by Aliases that are either direct Module references or one-step aliases.\n  - Remove `Call#resolvedFunctionName`  because `import` can't rename functions.\n- [#484](https://github.com/KronicDeth/intellij-elixir/pull/484) - Don't type-highlight `BracketOperation`s as they occur when putting maps or structs in front of lists. - [@KronicDeth](https://github.com/KronicDeth)\n- [#485](https://github.com/KronicDeth/intellij-elixir/pull/485) - Treat `Enum.each` the same as `Enum.map` around `def` - [@KronicDeth](https://github.com/KronicDeth)\n- [#486](https://github.com/KronicDeth/intellij-elixir/pull/486) - Increase `resolvedFinalArity` by `1` for piping. - [@KronicDeth](https://github.com/KronicDeth)\n- [#498](https://github.com/KronicDeth/intellij-elixir/pull/498) - [@KronicDeth](https://github.com/KronicDeth)\n  - Go To Declaration resolves through `import`\n    - for `import MyModule` \n      - the `import` statement\n      - the call definition clause in the imported Module. \n    - for `import MyModule, only: [name: arity]`\n      - the `import` statement\n      - the call definition clause in the imported Module. \n    - for `import MyModule, except: [name: arity]` _if_ reference is _not_ `name/arity`.\n      - the `import` statement\n      - the call definition clause in the imported Module. \n\n## v4.5.0\n\n### Enhancements\n- [#452](https://github.com/KronicDeth/intellij-elixir/pull/452) - [@KronicDeth](https://github.com/KronicDeth)\n  - Go To Declaration for functions and macros (only those defined in parseable-Elixir source.  References to Erlang functions or only those available in `.beam` file, such as the standard library will not resolve.)\n  - Completion for functions and macros (only those defined in parseable-Elixir source.  Erlang functions and Elixir function only in compiled `.beam` file, such as the standard library will not complete.)\n    - Completion uses the same presentation as Structure View, so the you can tell whether the name is a function/macro, whether it is public/private, and the Module where it is defined.\n    - Completed functions/macro insert `()` after the name in preparation for Elixir 1.4 where it is an error to have bare function calls.  It also makes it more obvious that you inserted a function and not a variable.\n    - Completion works for all functions when a bare identifier is used.  For a qualified identifier, only functions/macros under than Module are shown. \n\n# README Changes\n\n### Completion\n\n#### Function and Macro Calls\n\nCompletion uses the same presentation as [Structure](#structure), so you can tell whether the name is function/macro ([Time](#time)), whether it is public/private ([Visibility](#visibility)) and the Module where it is defined.  Between the icons and the Modules is the name itself, which is highlighted in **bold**, the parameters for the call definition follow, so that you can preview the patterns required for the different clauses.\n\n![Function and Macro Calls Completion](https://github.com/KronicDeth/intellij-elixir/blob/master/screenshots/Function%20and%20Macro%20Calls%20Completion.png?raw=true)\n\n##### Qualified\n\nQualified functions and macro calls will complete using those functions and macros defined in the qualifying Module (`defmodule`), Implementation (`defimpl`) or Protocol (`defprotocol`).  Completion starts as shown as `.` is typed after a qualifying Alias.\n\n##### Unqualified\n\nFunction and macro calls that are unqualified are completed from the index of all function and macro definitions, both public and private. (The index contains only those Elixir functions and macro defined in parsable source, such as those in the project or its dependencies.  Erlang functions and Elixir functions only in compiled `.beam` files, such as the standard library will not complete.)  Private function and macros are shown, so you can choose them and then make the chosen function or macro public if it is a remote call.\n\n### Go To Declaration\n\n#### Function or Macro\n\nYou'll know if function or macro usage is resolved and Go To Declaration will work if the call is annotated, which in the default themes will show up as _italics_.\n\n##### Imported Functions or Macros\n1. Place the cursor over name of the function or macro call.\n2. Activate the Go to Declaration action with one of the following:\n   1. `Cmd+B`\n   2. Select Navigate &gt; Declaration from the menu.\n   3. `Cmd+Click`\n3. A Go To Declaration lookup menu will appear, allowing you to jump to either the `import` that imported the function or macro or jumping directly to the function or macro definition clause.  Select which declaration you want.\n   1. Use arrow keys to select and hit `Enter`\n   2. `Click`\n\n##### Local Functions or Macros\n1. Place the cursor over name of the function or macro call.\n2. Activate the Go to Declaration action with one of the following:\n   1. `Cmd+B`\n   2. Select Navigate &gt; Declaration from the menu.\n   3. `Cmd+Click`\n3. Whether a lookup a Go To Declaration lookup menu appears depends on the number of clauses in the function or macro definition: \n   1. If there is only one clause in the function or macro definition, you'll jump immediately to that clause\n   2. If there is more than one clause in the function or macro definition, a Go To Declaration lookup menu will appear, allowing you to jump to either the `import` that imported the function or macro or jumping directly to the function or macro definition clause.  Select which declaration you want.\n      1. Use arrow keys to select and hit `Enter`\n      2. `Click`\n\n##### Remote Functions or Macros\n1. Place the cursor over name of the function or macro call that is qualified by an Alias.\n2. Activate the Go to Declaration action with one of the following:\n   1. `Cmd+B`\n   2. Select Navigate &gt; Declaration from the menu.\n   3. `Cmd+Click`\n3. \n   1. If there is only one clause in the function or macro definition, you'll jump immediately to that clause\n   2. If there is more than one clause in the function or macro definition, a Go To Declaration lookup menu will appear, allowing you to jump to either the `import` that imported the function or macro or jumping directly to the function or macro definition clause.  Select which declaration you want.\n      1. Use arrow keys to select and hit `Enter`\n      2. `Click`\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4343971", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4343971/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4343971/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.5.0", "id": 4343971, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQzNDM5NzE=", "tag_name": "v4.5.0", "target_commitish": "master", "name": "v4.5.0", "draft": false, "prerelease": true, "created_at": "2016-10-09T21:23:44Z", "published_at": "2016-10-09T21:26:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2447022", "id": 2447022, "node_id": "MDEyOlJlbGVhc2VBc3NldDI0NDcwMjI=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 2008141, "download_count": 61, "created_at": "2016-10-09T21:26:12Z", "updated_at": "2016-10-09T21:26:13Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.5.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.5.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.5.0", "body": "Canary build of v4.5.0\n\n[Changes since v4.4.0](https://github.com/KronicDeth/intellij-elixir/compare/v4.4.0...v4.5.0)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4160607", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4160607/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4160607/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.4.0", "id": 4160607, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQxNjA2MDc=", "tag_name": "v4.4.0", "target_commitish": "master", "name": "v4.4.0", "draft": false, "prerelease": false, "created_at": "2016-09-18T01:00:38Z", "published_at": "2016-09-18T01:06:34Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2330320", "id": 2330320, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzMzAzMjA=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1985718, "download_count": 34, "created_at": "2016-09-18T01:06:30Z", "updated_at": "2016-09-18T01:06:31Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.4.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.4.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.4.0", "body": "# Thanks\n- Thanks to Andrei Dziahel ([@develop7](https://github.com/develop7) for reporting that indexing of the standard library was broken, which led to me making the type annotator (highlighter) work on invalid typespecs.  Thanks to Robert Zotter ([@zapient](https://github.com/zapient)) and Gerald Philip MacKenzie ([@gmack](https://github.com/gmack)) for reporting the same bug, so I knew it was affect multiple users and I should release the fix ASAP.\n- Thanks to Alexander Merkulov ([@merqlove](https://github.com/merqlove)) helping other users with SDK errors.\n- Thanks to [@dima-starosud](https://github.com/dima-starosud) for pointing out that I broke the fix for GeneratedParserUtilBase when I regenerated the parser, so it was still broke in 4.3.0 when it being unbroke was one of the important bug fixes.\n- Thanks to Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique)) for finding a case where `isParameter` didn't work for `ElixirBracketArguments`.\n- Thanks to Claudio D'Alicandro ([@claudio-dalicandro](https://github.com/claudio-dalicandro)) for pointing out that `QualifiableAlias#fullyQualifiedName` was still using `assert` instead of the `Normalized` helpers and so could fail when `QualifiableAlias` did not have 3 children as can happen during error recovery.\n- Thanks to Andrei Dziahel ([@develop7](https://github.com/develop7) for [a most excellent bug report](https://github.com/KronicDeth/intellij-elixir/issues/429) with reproduction steps, source code and even &lt;details&gt; to hide sections, which showed that `isVariable` did not work in the `else` block, which can occur when a variable does not resolve because it's not fully typed or it would resolve to a function.\n- Thanks to Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique)) for a [full module](https://github.com/KronicDeth/intellij-elixir/issues/422#issuecomment-246008280) reproducing `isVariable` not working for ambiguously nested no parentheses calls, so now the editor can highlight through code that causes a native compiler error.\n- Thanks to [@adequateDeveloper](https://github.com/adequateDeveloper) for [a repository](https://github.com/adequateDeveloper/physics) to reproduce `for` comprehensions being nested in one-line function calls leading to `isParameter` not working.  This is another case where the editor can highlight through code that causes a native compiler error.\n- Thanks to Carlos Brito Lage ([@cblage](https://github.com/cblage)) for reporting a use case of interpolation that skipped a round of `isParameter`.\n\n# Changelog\n\n## v4.4.0\n\n### Enhancements\n- [#419](https://github.com/KronicDeth/intellij-elixir/pull/419) - Regression test using `typespec_test.exs` that triggered [#413](https://github.com/KronicDeth/intellij-elixir/issues/413) - [@KronicDeth](https://github.com/KronicDeth)\n- [#425](https://github.com/KronicDeth/intellij-elixir/pull/425) - Regression test that checks the correct `import` is used for `GeneratedParserUtilBase` in `ElixirParser` - [@KronicDeth](https://github.com/KronicDeth)\n- [#432](https://github.com/KronicDeth/intellij-elixir/pull/432) - [@KronicDeth](https://github.com/KronicDeth)\n  - [Completion of multiple aliases inside curly braces](https://www.youtube.com/watch?v=aOiJHZuudzg)\n    - Override `ElixirMultipleAliases#processDeclarations`, so that `treeWalkUp` can stop at `ElixirMultipleAliases` when determining how to do Alias completion.  If a multiple alias is encountered, then de-prefixed names should be returned.\n- [#434](https://github.com/KronicDeth/intellij-elixir/pull/434) - Regression test for [#429](https://github.com/KronicDeth/intellij-elixir/issues/429) - [@KronicDeth](https://github.com/KronicDeth)\n- [#435](https://github.com/KronicDeth/intellij-elixir/pull/435) - Regression test for [#422](https://github.com/KronicDeth/intellij-elixir/issues/422) - [@KronicDeth](https://github.com/KronicDeth)\n- [#439](https://github.com/KronicDeth/intellij-elixir/pull/439) - Regression test for [#438](https://github.com/KronicDeth/intellij-elixir/issues/438) - [@KronicDeth](https://github.com/KronicDeth)\n- [#440](https://github.com/KronicDeth/intellij-elixir/pull/440) - Regression test for [#431](https://github.com/KronicDeth/intellij-elixir/issues/431) - [@KronicDeth](https://github.com/KronicDeth)\n- [#441](https://github.com/KronicDeth/intellij-elixir/pull/441) - Regression test for [#436](https://github.com/KronicDeth/intellij-elixir/issues/436) - [@KronicDeth](https://github.com/KronicDeth)\n\n### Bug Fixes\n- [#419](https://github.com/KronicDeth/intellij-elixir/pull/419) - [@KronicDeth](https://github.com/KronicDeth)\n  - Return empty `Set` instead of `null` from `canonicalNameSet`\n  - Highlight types in `ElixirMapUpdateArguments` even though they are an [invalid typespec example from elixir-lang/elixir tests](https://github.com/elixir-lang/elixir/blob/dadf98fbff2966f24bf5b0313822a90b90f7016a/lib/elixir/test/elixir/kernel/typespec_test.exs#L314-L320)\n- [#424](https://github.com/KronicDeth/intellij-elixir/pull/424) - Check if `rightOperand` is `null` when highlighting types for `Type`, which can occur when typing `:` for an atom after the `::` for a `Type` - [@KronicDeth](https://github.com/KronicDeth)\n- [#425](https://github.com/KronicDeth/intellij-elixir/pull/425) - Use `GeneratedParserUtilBase` synced to GrammarKit version as was done originally in [#406](https://github.com/KronicDeth/intellij-elixir/pull/406) - [@KronicDeth](https://github.com/KronicDeth)\n- [#426](https://github.com/KronicDeth/intellij-elixir/pull/426) - Check parent of `BracketArguments` for `isParameter` and `isVariable`\\- [@KronicDeth](https://github.com/KronicDeth)\n- [#428](https://github.com/KronicDeth/intellij-elixir/pull/428) - Instead of asserting that a `QualifiableAlias` has 3 children, which may not be true on error recovery, use the `Normalized` static methods that are used elsewhere to handle error recovery around Infix operations as the `.` in `QualifiableAlias`es is a pseudo-Infix - [@KronicDeth](https://github.com/KronicDeth)\n- [#432](https://github.com/KronicDeth/intellij-elixir/pull/432) - Add missing `@Nullable` to `@NotNull` change when parser wasn't regenerated when `canonicalNameSet` was changed to `@NotNull` in the interface. - [@KronicDeth](https://github.com/KronicDeth)\n- [#434](https://github.com/KronicDeth/intellij-elixir/pull/434) - Search above block items and block lists for calls to check use scope - [@KronicDeth](https://github.com/KronicDeth)\n- [#435](https://github.com/KronicDeth/intellij-elixir/pull/435) - Check parent `isVariable` for `ElixirNoParenthesesManyStrictNoParenthesesExpression` - [@KronicDeth](https://github.com/KronicDeth)\n- [#439](https://github.com/KronicDeth/intellij-elixir/pull/439) - Highlight `@type` without `::` - [@KronicDeth](https://github.com/KronicDeth)\n- [#440](https://github.com/KronicDeth/intellij-elixir/pull/440) - `ElixirNoParenthesesManyStrictNoParenthesesExpression` indicates an ambiguous no parentheses nesting, but the highlighting should not error and do a best effort instead. - [@KronicDeth](https://github.com/KronicDeth)\n- [#441](https://github.com/KronicDeth/intellij-elixir/pull/441) - `isParameter(Call)` called `isParameter` on its parent if it wasn't a call definition clause, delegation or macro, but `isParameter(PsiElement)` immediately calls `getParent()` and does all the `instanceof` tests on the parent.  So, instead of `isParameter(Call)` calling `isParameter(PsiElement)` on its parent, it should just call it on itself, this way the check for `ElixirInterpolation` will not be skipped and there's no need to handle `ElixirInterpolatedString`. - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4080801", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4080801/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4080801/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.4.0-dev%2B20160908134805", "id": 4080801, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwODA4MDE=", "tag_name": "v4.4.0-dev+20160908134805", "target_commitish": "master", "name": "v4.4.0-dev+20160908134805", "draft": false, "prerelease": true, "created_at": "2016-09-08T13:47:48Z", "published_at": "2016-09-08T13:49:44Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2278147", "id": 2278147, "node_id": "MDEyOlJlbGVhc2VBc3NldDIyNzgxNDc=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1981135, "download_count": 21, "created_at": "2016-09-08T13:49:37Z", "updated_at": "2016-09-08T13:49:39Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.4.0-dev%2B20160908134805/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.4.0-dev+20160908134805", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.4.0-dev+20160908134805", "body": "Canary build of v4.4.0-dev at 2016-09-08T13:48:05Z.\n\n[Changes since v4.4.0](https://github.com/KronicDeth/intellij-elixir/compare/v4.3.0...v4.4.0-dev%2B20160908134805)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4039454", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4039454/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4039454/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.3.0", "id": 4039454, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwMzk0NTQ=", "tag_name": "v4.3.0", "target_commitish": "master", "name": "v4.3.0", "draft": false, "prerelease": false, "created_at": "2016-09-05T22:29:33Z", "published_at": "2016-09-05T22:50:59Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2261046", "id": 2261046, "node_id": "MDEyOlJlbGVhc2VBc3NldDIyNjEwNDY=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1980662, "download_count": 34, "created_at": "2016-09-05T22:50:55Z", "updated_at": "2016-09-05T22:50:57Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.3.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.3.0", "body": "# Thanks\n- Thanks to [@gremlinLee](https://github.com/gremlinLee), Huy Hoang ([@huyh](https://github.com/huyh)) , Ratan Paul ([@RatanPaul](https://github.com/RatanPaul)) and [@anehing](https://github.com/anehing) for reporting `NoSuchMethod` errors on `GeneratedParserUtilBase`, which motivated me to actually [ask JetBrains](https://intellij-support.jetbrains.com/hc/en-us/community/posts/207852029-Some-users-of-my-plugin-get-java-lang-NoSuchMethodError-com-intellij-lang-parser-GeneratedParserUtilBase-enter-section-) how to fix the problem, where Yann C\u00e9bron ([@YannCebron](https://github.com/YannCebron))\n- Thanks to Alexander Merkulov ([@merqlove](https://github.com/merqlove)) for opening an issue that Go To Definition didn't work for aliases as before that the issue was just in my head.  Go To Definition (and completion) for Aliased ended up being the primary feature of this release, so thanks Alexander.\n- Thanks to Josu\u00e9 Henrique Ferreira da Silva ([@josuehenrique](https://github.com/josuehenrique)) for reporting that Go To Symbol broke on **schema** metaprogramming in Ecto, which led to support for looking outside Enum.map functions for enclosing modulars.\n- Thanks to Robin Hilliard ([@robinhilliard](https://github.com/robinhilliard)) for reporting that unquoting of literal variables (`unquote({name, [], nil})` in type specs was broken\n- Thanks to Max Baumann ([@dudeman](https://github.com/dudeman)) for reproduction case in `DBConnection.Connection.sync_stop/4` for variable resolution not working for pinned variable in `receive` clauses.\n- Thanks to Filip Haglund ([@drathier](https://github.com/drathier)), Gerard de Brieder ([@smeevil](https://github.com/smeevil)), Markus Fischer ([@mfn](https://github.com/mfn)) and Alexander Tovstonozhenko ([@alextov](https://github.com/alextov)) for let me know that users wanted to be able to turn off Module directive (`alias`, `import`, `require`, `user`) folding.\n- Thanks to Halil \u00d6zg\u00fcr ([@halilim](https://github.com/halilim)) [excellent reproduction case](https://github.com/KronicDeth/intellij-elixir/issues/367#issuecomment-244214975) for revealing the reason for mystery `isParameter` errors.\n\n# Changelog\n\n## v4.3.0\n\n### Enhancements\n- [#387](https://github.com/KronicDeth/intellij-elixir/pull/387) - Resolve aliased modules to their `alias` call, from the alias call, you can Go To Declaration for the module itself. - [@KronicDeth](https://github.com/KronicDeth)\n  - Code structure\n    - Module resolution uses the OpenAPI convention of `treeWalkUp` now instead of custom code.\n    - Resolvable names has been extracted to its own class\n  - Resolution use cases\n    - `Suffix` resolves to `alias Prefix.Suffix`\n    - `Suffix.Nested` resolves to `alias Prefix.Suffix`\n    - `As` resolves `to`alias Prefix.Suffix, as: As`\n    - `NestedSuffix` resolves to `alias __MODULE__.NestedSuffix`\n- [#389](https://github.com/KronicDeth/intellij-elixir/pull/389) - Completion for module aliases - [@KronicDeth](https://github.com/KronicDeth)\n  - From in-file aliases\n  - `__MODULE__`\n  - In project modules (using index already used for Go To Declaration)\n- [#393](https://github.com/KronicDeth/intellij-elixir/pull/393) - In addition to `StubBased#canonicalName`, there now also `StubBased#canonicalNames`, for when a call defines multiple canonical names, as is the case for `defimpl <PROTOCOL>, for: [<TYPE>, ...]`. - [@KronicDeth](https://github.com/KronicDeth)\n- [#397](https://github.com/KronicDeth/intellij-elixir/pull/397) - When a aliased name is added to the module list for completion, it's unaliased name is searched for in the `AllName` index, if any nested modules are found for the unaliased name, then those nested names are aliased and also shown for completion. - [@KronicDeth](https://github.com/KronicDeth)\n- [#399](https://github.com/KronicDeth/intellij-elixir/pull/399) - `resolvableName` allows nested modules under multiple aliases to be completed. - [@KronicDeth](https://github.com/KronicDeth)\n- [#403](https://github.com/KronicDeth/intellij-elixir/pull/403) - By user request, the folding will be off-by-default now, but can be re-enabled, like the old behavior by checking the checkbox in Preferences > Editor > General > Code Folding > Elixir Module directive (`alias`, `import`, `require` or `use`) groups. - [@KronicDeth](https://github.com/KronicDeth)\n- [#405](https://github.com/KronicDeth/intellij-elixir/pull/405) - [@KronicDeth](https://github.com/KronicDeth)\n  - Resolve `as:` aliased name to both `alias` and `defmodule`\n  - Complete modules nested under `as:` aliased name.\n- [#409](https://github.com/KronicDeth/intellij-elixir/pull/409) - [@KronicDeth](https://github.com/KronicDeth)\n  - Completion and reference tests for aliases:\n    - `alias Prefix.Suffix`\n    - `alias Prefix.Suffix, as: As`\n    - `alias Prefix.{MultipleAliasA, MultipleAliasB}`\n\n### Bug Fixes\n- [#393](https://github.com/KronicDeth/intellij-elixir/pull/393) - [@KronicDeth](https://github.com/KronicDeth)\n  - `defimpl <PROTOCOL>, for: [<TYPE>, ...]` generates multiple canonical names, which are stored in the stub index.\n    - When retrieved from the `AllName` index, the `defimpl`'s Implementation will render as if only the `defimpl <PROTOCOL>, for: <TYPE>` was used for the `<TYPE>` matching the lookup name in the Goto Symbol dialog.  For example, if you search for `Tuple`, `JSX.Encoder.Tuple` will match for [`defimpl JSX.Encoder, for: for: [Tuple, PID, Port, Reference, Function, Any]`](https://github.com/talentdeficit/exjsx/blob/master/lib/jsx.ex#L152-L155).\n- [#400](https://github.com/KronicDeth/intellij-elixir/pull/400) - [@KronicDeth](https://github.com/KronicDeth)\n  - Look outside Enum.map for enclosing macro call because `Ecto` defines the clauses of `__schema__(:type, ...)` using `Enum.map`, but `enclosingMacroCall` only knews to jump over enclosing macros like `for`, so a special case was added for anonymous function given to `Enum.map`.\n  - Fix if-else-ordering bug where `Call` appeared before operations (which are usually `Call`s) like `Match`.\n- [#401](https://github.com/KronicDeth/intellij-elixir/pull/401) - In `@type unquote({name, nil, []}) :: foo`, `name` will be highlighted as a type parameter even though it is not strictly the name that will appear as a type parameter. - [@KronicDeth](https://github.com/KronicDeth)\n- [#405](https://github.com/KronicDeth/intellij-elixir/pull/405) - [@KronicDeth](https://github.com/KronicDeth)\n  - Resolve alias nested under aliased modules to both the `alias` and `defmodule`, as resolving to only the `alias` loses the nested name, so it wasn't possible to jump to the nested name's `defmodule`.\n  - Resolve aliased name to both the `alias` and the `defmodule`, so you can skip jumping to the `alias` before jumping to the `defmodule`.\n- [#406](https://github.com/KronicDeth/intellij-elixir/pull/406) - [@KronicDeth](https://github.com/KronicDeth)\n  - The generated `ElixirParser` uses the `GeneratedParserUtilBase` from `com.intellij.lang.parser`, but since that version is a synced copy, it is a snapshot of `GeneratedParserUtilBase` from the version of GrammarKit that was current when the IDE was released.  To ensure the generated parser works on all the IDEs, I copy `GeneratedParserUtilBase` from `org.intellij.grammar.parser` into `org.elixir_lang.grammar.parser` and then use that version in `ElixirParser`.  This ensures neither the IDE's version nor the version in any installed GrammarKit plugin is used.\n- [#409](https://github.com/KronicDeth/intellij-elixir/pull/409) - [@KronicDeth](https://github.com/KronicDeth)\n  - Check that index name maps to an actual project element before returning it for completion as the names from `StubIndex.getInstance.getAllKeys(...)` is a superset of actual keys in the actual project [according to Peter Gromov of JetBrains](https://intellij-support.jetbrains.com/hc/en-us/community/posts/207930789-StubIndex-persisting-between-test-runs-leading-to-incorrect-completions).\n  - Don't index `canonicalName` if it matches the literal name, as the duplicate name leads to duplicate entries in the completion lookup.\n    - `canonicalNameCollection` was renamed to `canonicalNameSet` (with type changing from `Collection<String>` to `Set<String>` to match) to emphasize that the canonical names should be unique, but `canonicalNameSet` itself should still include duplicates of name for those places where only canonical names are used.\n  - Use `resolvableName` for the `unaliasedName` for `MultipleAliases` Aliases, so that they complete correctly for nested modules.\n  - Completion for nested modules will no longer complete with string suffixes (i.e. `SSHView`) and only complete nested Aliases (i.e. `SSH.Key`).\n\n# README Changes\n\n### Completion\n\n#### Aliases and Modules\n\nWhen you start typing an Alias, completion will look in three locations:\n1. `alias` aliased names in the current file\n   a. `Suffix` for `alias Prefix.Suffix`\n   b. `MultipleAliasA` or `MultipleAliasB` for `alias Prefix.{MultipleAliasA, MultipleAliasB}`\n   c. `As` for `alias Prefix.Suffix, as: As`\n2. Indexed module names (as available from [Go To Symbol](#go-to-symbol))\n   a. `Prefix.Suffix` from `defmodule Prefix.Suffix`\n   b. `MyProtocol` from `defprotocol MyProtocol`\n   c. `MyProtocol.MyStruct`\n     i. `defimpl MyProtocol, for: MyStruct` \n     ii. `defimpl MyProtocol` nested under `defmodule MyStruct`\n3. Nested modules under aliased names\n   a. `Suffix.Nested` for `alias Prefix.Suffix` where `Prefix.Suffix.Nested` is an indexed module, implementation or protocol name.\n   b. `MultipleAliasA.Nested` for `alias Prefix.{MultipleAliasA, MultipleAliasB}` where `Prefix.MultipleAliasA.Nested` `alias Prefix.{MultipleAliasA, MultipleAliasB}` is an indexed module, implementation or protocol name.\n   c. `As.Nested` for `alias Prefix.Suffix, as: As` where `Prefix.Suffix.Nested` is an indexed module, implementation, or protocol name.\n\n### Go To Declaration\n\nGo To Declaration is a feature of JetBrains IDEs that allows you to jump from the usage of a symbol, such as a Module\nAlias, to its declaration, such as the `defmodule` call.\n\n#### Alias\n1. Place the cursor over an Alias with an aliased name setup by `alias`\n   a. `Suffix` if `alias Prefix.Suffix` called\n   b. `MultipleAliasA` if `alias Prefix.{MultipleAliasA, MultipleAliasB}` called\n   c. `As` if `alias Prefix.Suffix, as: As`\n2. Activate the Go To Declaration action with one of the following:\n   a. `Cmd+B`\n   b. Select Navigate &gt; Declaration from the menu.\n   c. `Cmd+Click`\n3. A Go To Declaration lookup menu will appear, allowing you to jump either the `alias` that setup the aliased name or jumping directly to `defmodule` of the unaliased name.  Select which declaration you want\n   a. Use arrow keys to select and hit `Enter`\n   b. `Click`\n\n#### Module\n1. Place the cursor over a fully-qualified Alias\n   a. `A.B` in `A.B.func()`\n   b. `A.B` in `alias A.B`\n   c. `B` in `alias A.{B, C}`\n2. Activate the Go To Declaration action with one of the following:\n   a. `Cmd+B`\n   b. Select Navigate &gt; Declaration from the menu.\n   c. `Cmd+Click`\n\nIf you hold `Cmd` and hover over the Alias before clicking, the target declaration will be shown.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4029835", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/4029835/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/4029835/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.3.0-dev%2B20160901144352", "id": 4029835, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQwMjk4MzU=", "tag_name": "v4.3.0-dev+20160901144352", "target_commitish": "master", "name": "v4.3.0-dev+20160901144352", "draft": false, "prerelease": true, "created_at": "2016-08-31T20:49:19Z", "published_at": "2016-09-01T14:47:08Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2241931", "id": 2241931, "node_id": "MDEyOlJlbGVhc2VBc3NldDIyNDE5MzE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1946211, "download_count": 23, "created_at": "2016-09-01T14:46:58Z", "updated_at": "2016-09-01T14:47:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.3.0-dev%2B20160901144352/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.3.0-dev+20160901144352", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.3.0-dev+20160901144352", "body": "Canary build of v4.3.0-dev at 2016-09-01T14:43:52Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3943254", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3943254/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3943254/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.3.0-dev%2B20160822081835", "id": 3943254, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM5NDMyNTQ=", "tag_name": "v4.3.0-dev+20160822081835", "target_commitish": "master", "name": "v4.3.0-dev+20160822081835", "draft": false, "prerelease": true, "created_at": "2016-08-22T13:18:06Z", "published_at": "2016-08-22T18:11:24Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2183985", "id": 2183985, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxODM5ODU=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1928572, "download_count": 24, "created_at": "2016-08-22T18:11:20Z", "updated_at": "2016-08-22T18:11:22Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.3.0-dev%2B20160822081835/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.3.0-dev+20160822081835", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.3.0-dev+20160822081835", "body": "Canary build of v4.3.0-dev at 2016-08-22T08:18:35Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3881980", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3881980/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3881980/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.2.0", "id": 3881980, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4ODE5ODA=", "tag_name": "v4.2.0", "target_commitish": "master", "name": "v4.2.0", "draft": false, "prerelease": false, "created_at": "2016-08-13T20:42:59Z", "published_at": "2016-08-13T21:03:42Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2143590", "id": 2143590, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxNDM1OTA=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1921020, "download_count": 30, "created_at": "2016-08-13T21:03:35Z", "updated_at": "2016-08-13T21:03:38Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.2.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.2.0", "body": "# Thanks\n- Thanks to Filip Haglund ([@drathier](https://github.com/drathier)) and Andrei Dziahel ([@develop7](https://github.com/develop7)) for reporting reproduction cases for map update arguments not working with `isVariable`\n- Thanks Gerard de Brieder ([@smeevil](https://github.com/smeevil)) for testing the canary build and finding the the `do end` completion mistakenly completed `do: end`.\n- Andrei Dziahel ([@develop7](https://github.com/develop7)) for find a working reproduction that Go To Symbol broke when trying to display `def` in the `else` of an `if` with `Plug.Endpoint`.\n- Nima Shariatian [@nimashariatian](https://github.com/nimashariatian) for requesting I add the delimiter auto-insertion and matching.\n- Thanks to Jorg Heymans ([@jorgheymans](https://github.com/jorgheymans)), Andrew Phillipo [@aphillipo](https://github.com/aphillipo), and Filip Haglund ([@drathier](https://github.com/drathier)) on their input on the usability issues with the `doc` template and the need for `@doc`.\n\n# Changelog\n\n## v4.2.0\n\n### Enhancements\n- [#371](https://github.com/KronicDeth/intellij-elixir/pull/371) - [@KronicDeth](https://github.com/KronicDeth)\n  - `BraceMatcher`\n    - Matches the following pairs:\n      - `do` to `end`\n      - `fn` to `end`\n      - `\"\"\"` to `\"\"\"`\n      -  `'''` to `'''`\n      - `<<` to `>>`\n      - `<` to `>`\n      - `[` to `]`\n      - `{` to `}`\n      - `(` to `)`\n    - Completes the following pairs:\n      - `[` with `]`\n      - `{` with `}`\n      - `(` with `)`\n  - `QuoteHandler` completes standard quotes (that start with `\"` or `'`)\n    - `'` with `'`\n    - `\"` with `\"`\n    - `'''` with `'''`\n    - `\"\"\"` with `\"\"\"`\n  - `TypedHandler` completes the non-standard quotes and braces\n    - `do` with `end`\n    - `fn` with `end`\n    - ` `<<` with `>>`\n    - `<` with `>`  (for promoters)\n    - `/` with `/`  (for promoters)\n    - `|` with `|` (for promoters)\n\n### Bug Fixes\n- [#372](https://github.com/KronicDeth/intellij-elixir/pull/372) - Check parent for `isVariable(ElixirMapUpdateArguments)` - [@KronicDeth](https://github.com/KronicDeth)\n- [#374](https://github.com/KronicDeth/intellij-elixir/pull/374) - [@KronicDeth](https://github.com/KronicDeth)\n  - IntelliJ 15.0.4 is no longer available from JetBrains, so if the cache is not available, the builds don't work, so use 15.0.6, which is available in 15.0.4's place as the test version for 15.X.\n  - IntelliJ 2016.2 is no longer available from JetBrains, so if the cache is not available, the builds don't work, so use 2016.2, which is available in 2016.1's places at the test version for 2016.X.\n- [#378](https://github.com/KronicDeth/intellij-elixir/pull/378) - `enclosingMacroCall` could climb out the stab after a `do`, but not the `else` in an `if`, which is used for defined functions conditionally in [`Phoenix.Endpoint.server/0`](https://github.com/phoenixframework/phoenix/blob/v1.2.0/lib/phoenix/endpoint.ex#L542-L548) - [@KronicDeth](https://github.com/KronicDeth)\n- [#380](https://github.com/KronicDeth/intellij-elixir/pull/380) - A lot of ppl use the doc template after already typing `@`, but the doc template starts with `@`, so it ends up inserting `@@doc ...`. The `@doc` template is the same code, but since the name starts with `@`, it doesn't insert a second `@`. Unfortunately, the template search code doesn't prompt when just typing `@`, so you end up having to type `@doc` before only one template is selected. The `@doc` template will show in the lookup as soon as `@d` is typed, but you have to select it from the list then before tabbing to accept. - [@KronicDeth](https://github.com/KronicDeth)\n- [#381](https://github.com/KronicDeth/intellij-elixir/pull/381) - Look at end of `do` instead of start for `end` completion to stop ignoring the `:` in `do:`, when `caret - 3` would land on the `o`, now all tests are meant to land on the `o`, so `do:` won't complete with `end` incorrectly anymore. - [@KronicDeth](https://github.com/KronicDeth)\n- [#382](https://github.com/KronicDeth/intellij-elixir/pull/382) - Ignore `ElixirVariable` in `highlightTypesAndTypeParameterUsages` - [@KronicDeth](https://github.com/KronicDeth)\n\n# README Updates\n\n### Delimiters\n\n#### Auto-inserting\n\nThe right-delimiter will be automatically inserted when the left\ndelimiter is typed.  In some cases, to prevent false positives, the\nthe delimiter is only completed if when used for sigils.\n\n| Preceded By | Left | Right |\n| --- | --- | --- |\n|  | `do` | `end` |\n|  | `fn` | `end` |\n|  | `[` | `]` |\n|  | `{` | `}` |\n|  | `(` | `)` |\n|  | `'` | `'` |\n|  | `'''` | `'''` |\n|  | `\"` | `\"` |\n|  | `\"\"\"` | `\"\"\"` |\n|  | `<<` | `>>` |\n| `~<sigil-name>` | `<` | `>` |\n| `~<sigil-name>` | `/` | `/` |\n| `~<sigil-name>` | `|` | `|` |\n\n#### Matching\n\nAll delimiters that are auto-inserted are also matched for highlighting\n\n| Left | Right |\n| --- | --- |\n| `do` | `end` |\n| `fn` | `end` |\n| `[` | `]` |\n| `{` | `}` |\n| `(` | `)` |\n| `'` | `'` |\n| `'''` | `'''` |\n| `\"` | `\"` |\n| `\"\"\"` | `\"\"\"` |\n| `<<` | `>>` |\n| `<` | `>` |\n| `/` | `/` |\n| `|` | `|` |\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3875223", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3875223/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3875223/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/4.2.0-dev%2B20160812134719", "id": 3875223, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4NzUyMjM=", "tag_name": "4.2.0-dev+20160812134719", "target_commitish": "master", "name": "4.2.0-dev+20160812134719", "draft": false, "prerelease": true, "created_at": "2016-08-12T13:47:47Z", "published_at": "2016-08-12T13:59:43Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2137961", "id": 2137961, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxMzc5NjE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1920460, "download_count": 23, "created_at": "2016-08-12T13:59:39Z", "updated_at": "2016-08-12T13:59:41Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/4.2.0-dev%2B20160812134719/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/4.2.0-dev+20160812134719", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/4.2.0-dev+20160812134719", "body": "Canary build of 4.2.0-dev at 2016-08-12T13:47:19\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3826293", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3826293/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3826293/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.1.0", "id": 3826293, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4MjYyOTM=", "tag_name": "v4.1.0", "target_commitish": "master", "name": "v4.1.0", "draft": false, "prerelease": false, "created_at": "2016-08-05T21:59:34Z", "published_at": "2016-08-05T22:38:08Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2102076", "id": 2102076, "node_id": "MDEyOlJlbGVhc2VBc3NldDIxMDIwNzY=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1914222, "download_count": 28, "created_at": "2016-08-05T22:13:53Z", "updated_at": "2016-08-05T22:13:54Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.1.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.1.0", "body": "# Thanks\n- Thanks to Jimmi Fragkos ([@FraDim](https://github.com/FraDim)) and Mariusz Nosi\u0144ski ([@marioosh](https://github.com/marioosh)) for voting for [Code Folding](https://github.com/KronicDeth/intellij-elixir/issues/95)\n- Thanks to Andrei Dziahel ([@develop7](https://github.com/develop7)), Gerard de Brieder ([@smeevil](https://github.com/smeevil)), and C\u00e9sar Izurieta ([@cesarizu](https://github.com/cesarizu)) for voting for Multiple Alias (`A.{B, C}`) support.  Special thanks to Alexander Merkulov ([@merqlove](https://github.com/merqlove)) for guilting me to support this Elixir 1.2 (!) feature that I knew about since September 2015 after he let me know not having it broke parsing on over half his code and for supplying test repositories.\n- Thanks to Filip Haglund ([@drathier](https://github.com/drathier)) for reporting a second reproduction of the [stack trace linking bug](https://github.com/KronicDeth/intellij-elixir/issues/229)\n- Thanks to [@swieckib](https://github.com/swieckib) and [@fcruxen](https://github.com/fcruxen) for reporting the Variable scope processor wasn't checking if the `PsiElement`s were `null`, as can happen with error handling recovery.\n- Thanks to [@swieckib](https://github.com/swieckib) and [@zan-kusterle](https://github.com/zan-kusterle) for reporting where `isParameter` failed\n- Thanks to Nicholas Schell ([@Nicholi](https://github.com/Nicholi)), Calinoiu Alexandru Nicolae ([@alexandru-calinoiu](https://github.com/alexandru-calinoiu)), and Christian Meter ([@n2o](https://github.com/n2o)) for reporting that the `mix --version` output changed _AGAIN_ for Elixir 1.3.  Thanks to Christian Meter ([@n2o](https://github.com/n2o)), Gonzalo Gabriel Jim\u00e9nez Fuentes ([@mendrugory](https://github.com/mendrugory)), Roeland ([@r03](https://github.com/r03)), Serhij Korochanskyj ([@webzepter](https://github.com/webzepter)) for confirming the fixed worked in the Canary build.\n- Thanks to Bulat Gaifullin ([@bgaifullin](https://github.com/bgaifullin)) for reporting errors with `Match#processDeclarations`.\n\n# Changelog\n\n## v4.1.0\n\n### Enhancements\n- [#331](https://github.com/KronicDeth/intellij-elixir/pull/331) - [@KronicDeth](https://github.com/KronicDeth)\n  - Allow `do end` blocks to fold to `do: ...`\n  - Allow `->` operator and the right operand to fold to `-> ...`\n  - Allow `@doc`, `@moduledoc` and `@typedoc` value to fold to `\"...\"`.\n  - Fold runs of adjacent `alias`, `import`, `require`, or `use` to be followed to a single `alias`, `import`, `require`, or `use` followed by `...`. \n- [#334](https://github.com/KronicDeth/intellij-elixir/pull/334) - Function separators - [@KronicDeth](https://github.com/KronicDeth)\n  - Show a function separator (Preferences > Editor > General > Appearance > Show method separators) above the group of `@doc`, `@spec` and `def`, `defp`, `defmacro`, and `defmacrop` (call definition clauses) of the same name and arity range.  Arity range will be used if one of the call definition clauses uses default arguments.\n- [#337](https://github.com/KronicDeth/intellij-elixir/pull/337) - [@KronicDeth](https://github.com/KronicDeth)\n  - `@for` folds to the resolved module name in `defimpl`\n  - `@protocol` folds to the protocol name in `defimpl`\n- [#343](https://github.com/KronicDeth/intellij-elixir/pull/343) - Share code between `mix` and `elixir` version parsing. - [@KronicDeth](https://github.com/KronicDeth)\n- [#344](https://github.com/KronicDeth/intellij-elixir/pull/344) - [@KronicDeth](https://github.com/KronicDeth)\n  - Allow Unknown modulars in the Structure pane, in addition to Go To Symbol.  Their icon is a big ? to indicate their correct usage is unknown.\n- [#348](https://github.com/KronicDeth/intellij-elixir/pull/348) - [@KronicDeth](https://github.com/KronicDeth)\n  - Regenerate `gen` folder using Grammar Kit 1.4.1 and fix some bugs (including [JetBrains/Grammar-Kit#126](https://github.com/JetBrains/Grammar-Kit/issues/126)) manually.\n- [#349](https://github.com/KronicDeth/intellij-elixir/pull/349) - Have both `QualifiedBracketOperation` and `UnqualifiedBracketOperation` extend `BracketOperation`, so that `BracketOperation` can be used to match both when the qualification does not matter. - [@KronicDeth](https://github.com/KronicDeth)\n- [#364](https://github.com/KronicDeth/intellij-elixir/pull/364) - [@KronicDeth](https://github.com/KronicDeth)\n  - Regenerate parser with GrammarKit 1.4.2\n  - `ElixirSdkRelease` is now `Comparable`, so version checks can be done for tests to restrict them to Elixir 1.2+ for multiple alias support.\n  - Resolve Multiple Aliases with unqualified Alias in tuples.\n  - `canonicalName` borrows from the idea of `PsiReference#canonicalText`: an element can have both a Name (from `getName`), which is the literal name in the code, which can be renamed, and a Canonical Name, which is the name to refer to the element without need for imports or aliases.  For this change, `defimpl`, `defmodule`, and `defprotocol` will show their full module Alias for their Canonical Name.\n    \n    This change addresses the use case of Go To Declaration that should resolved to a nested `defmodule`.\n\n### Bug Fixes\n- [#330](https://github.com/KronicDeth/intellij-elixir/pull/330) - Check if `parameter` is `null` before `Variable#execute` call in `Variable#execute(PsiElement[], ResolveState)`. - [@KronicDeth](https://github.com/KronicDeth)\n- [#336](https://github.com/KronicDeth/intellij-elixir/pull/336) - Fix `isVariable` and `variableUseScope` for `var!(name)[...]` - [@KronicDeth](https://github.com/KronicDeth)\n- [#337](https://github.com/KronicDeth/intellij-elixir/pull/337) - [@KronicDeth](https://github.com/KronicDeth)\n  - `@for` is no longer marked as unresolved in `defimpl` and instead resolve to the either the `<name>` in `for: <name>` or the module name for the enclosing module when `for:` is not given.\n  - `@protocol` is no longer marked as unresolved in `defimpl` and instead resolve to the `<name>` in `defimpl <name>`.\n- [#342](https://github.com/KronicDeth/intellij-elixir/pull/342) - [@KronicDeth](https://github.com/KronicDeth)\n  - Instead of `assert checkRight || checkLeft` in `Match#processDeclaraions`, do the normal code if `checkRight || checkLeft` and log an error report otherwise, so that the exact code that trigger this error can be reported and the method fixed to handle that form of `Match` later.\n- [#343](https://github.com/KronicDeth/intellij-elixir/pull/343) - Be able to parse mix version from 1.3.0+ - [@KronicDeth](https://github.com/KronicDeth)\n  - Check all lines of output for mix version as Elixir 1.3.0 changed the format of `mix --version`, so that it includes the Erlang header (`Erlang/OTP ... [erts-...] [source] [64-bit] [smp:..:..] [async-threads:..] [hipe] [kernel-poll:false] [dtrace]`) on the first line and `Mix <version>` on the 3rd line.  Previously the parsing expected `Mix <version>` to be the first line.\n- [#344](https://github.com/KronicDeth/intellij-elixir/pull/344) - [@KronicDeth](https://github.com/KronicDeth)\n  - If no known modular (Module, Implementation, Protocol, Quote, or Use) matches the call, then use Unknown, which accepts any macro with a `do` block or keyword.  This allows Go To Symbol to no error in projects using Dogma as `defrule` is now treated as Unknown instead of causing an error that the enclosing modular could not be found.\n- [#349](https://github.com/KronicDeth/intellij-elixir/pull/349) - `BracketOperations` are neither parameters nor variables. - [@KronicDeth](https://github.com/KronicDeth)\n- [#353](https://github.com/KronicDeth/intellij-elixir/pull/353) - Fix stacktrace linking picking wrong file with same basename - [@KronicDeth](https://github.com/KronicDeth)\n  - Strip spaces from front of file path in `mix` output, which allows file looks to work correctly.\n  - Ensure file reference highlight doesn't include the leading and trailing characters by fix off-by-one errors.\n- [#358](https://github.com/KronicDeth/intellij-elixir/pull/358) - Determine whether to check left, right, or both by doing isAncestor checks for all operands, not just the normalized operand.  The normalized operand is still used for `PsiScopeProcessor#execute` since `#execute` is not expected to handle error elements. - [@KronicDeth](https://github.com/KronicDeth)\n- [#364](https://github.com/KronicDeth/intellij-elixir/pull/364) - [@KronicDeth](https://github.com/KronicDeth)\n  - Add `A.{B, C}` to grammar with quoting to check consistence with Elixir 1.2.  Ports [elixir-lang/elixir#3666](https://github.com/elixir-lang/elixir/pull/3666).\n  - Use `fullyQualifiedName` instead of `getName` for `resolvableName` because `fullyQualifiedName` is needed so that qualified aliases inside of the `{ }` of a multiple alias will not have a name as `getName` is `null` for those qualified aliases because the name from `getName` has to be a literal name that can be renamed and qualified names can't be renamed.\n- [#365](https://github.com/KronicDeth/intellij-elixir/pull/365) - The `Module` icon got the same icon as `Unknown` when creating `Unknown` somehow, I assume due to find-replace. - [@KronicDeth](https://github.com/KronicDeth)\n\n# README Updates\n\n### Code Folding\n\nYou can collaspe (fold) pre-defined regions of your Elixir code to make it easier to quickly scroll through files or hide details you don't care about right now.\n\n#### Controls\n\n##### Collapsing\n1. Position cursor between lines with with downward facing - arrow and upward facing - arrow.\n2. Cmd+-\n\n##### Expanding\n1. Position cursor on the collapsed line with the square +\n2. Cmd++\n\n#### Regions\n\n| Expanded | Collapsed | Folded By Default? |\n| --- | --- | --- |\n| `do end` | `do: ...` | No |\n| `->` and right operand | `-> ...` | No |\n| `@doc VALUE` | `@doc \"...\"` | No |\n| `@moduledoc VALUE` | `@moduledoc \"...\"` | No |\n| `@typedoc VALUE` | `@typedoc \"...\"` | No |\n| alias ALIAS1<br> alias ALIAS1 | `alias ...` | Yes |\n| import ALIAS1<br> import ALIAS2 | `import ...` | Yes |\n| require ALIAS1<br> require ALIAS2 | `require ...` | Yes |\n| use ALIAS1<br> use ALIAS2 | `use ALIAS1` | Yes |\n| `@for` | `FOR` in `defimpl PROTOCOL, for: FOR` | Yes |\n| `@protocol` | `PROTOCOL` in `defimpl PROTOCOL, for: FOR` | Yes |\n| @MODULE_ATTRIBUTE | VALUE in `@MODULE_ATTRIBUTE VALUE` | Yes |\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3822440", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3822440/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3822440/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/4.1.0-dev%2B20160805133759", "id": 3822440, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4MjI0NDA=", "tag_name": "4.1.0-dev+20160805133759", "target_commitish": "master", "name": "4.1.0-dev+2016080513375", "draft": false, "prerelease": true, "created_at": "2016-08-05T13:41:57Z", "published_at": "2016-08-05T13:49:17Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/2099921", "id": 2099921, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwOTk5MjE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1914256, "download_count": 16, "created_at": "2016-08-05T13:49:13Z", "updated_at": "2016-08-05T13:49:16Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/4.1.0-dev%2B20160805133759/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/4.1.0-dev+20160805133759", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/4.1.0-dev+20160805133759", "body": "Canary build of 4.1.0 at 2016-08-05T13:37:59Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3634716", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3634716/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3634716/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/4.1.0-dev%2B20160712024727", "id": 3634716, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM2MzQ3MTY=", "tag_name": "4.1.0-dev+20160712024727", "target_commitish": "master", "name": "4.1.0-dev+20160712024727", "draft": false, "prerelease": true, "created_at": "2016-07-12T02:48:22Z", "published_at": "2016-07-12T02:51:47Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1974611", "id": 1974611, "node_id": "MDEyOlJlbGVhc2VBc3NldDE5NzQ2MTE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1894753, "download_count": 86, "created_at": "2016-07-12T02:51:44Z", "updated_at": "2016-07-12T02:51:46Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/4.1.0-dev%2B20160712024727/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/4.1.0-dev+20160712024727", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/4.1.0-dev+20160712024727", "body": "Canary build of v4.1.0 built at 2016-07-12T02:47:27Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3445720", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3445720/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3445720/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v4.0.0", "id": 3445720, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0NDU3MjA=", "tag_name": "v4.0.0", "target_commitish": "master", "name": "v4.0.0", "draft": false, "prerelease": false, "created_at": "2016-06-15T00:47:04Z", "published_at": "2016-06-15T01:23:12Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1849799", "id": 1849799, "node_id": "MDEyOlJlbGVhc2VBc3NldDE4NDk3OTk=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1870976, "download_count": 63, "created_at": "2016-06-15T01:23:04Z", "updated_at": "2016-06-15T01:23:08Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v4.0.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v4.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v4.0.0", "body": "# Thanks\n- Thanks to Alexey Poimtsev ([@alec-c4](https://github.com/alec-c4)), [@swieckib](https://github.com/swieckib), Jorg Heymans ([@jorgheymans](https://github.com/jorgheymans)), Andrei Dziahel ([@develop7](https://github.com/develop7)), and Khaaliq DeJan ([@MisterDeejay](https://github.com/MisterDeejay)) for reporting test cases for \"Prefix operation does not have 2 children, but 1\"\n- Thanks to [@wliirl](https://github.com/wliirl), [@aCandidMind](https://github.com/aCandidMind), Julius Beckmann ([@h4cc](https://github.com/h4cc)), [@developerworks](https://github.com/developerworks), and Christoph Drie\u00dfen ([@cedriessen](https://github.com/cedriessen)) for reporting IntelliJ version-compatibility and build issues.\n  - Thanks to Christoph Drie\u00dfen ([@cedriessen](https://github.com/cedriessen)) for pointing that all the weird loading bugs were related to https://github.com/ignatov/intellij-erlang/issues/727 and then Sergey Ignatov ([@ignatov](https://github.com/ignatov)), Sergey Savenko ([@deadok22](https://github.com/deadok22)), and Nikolay Chashnikov ([@chashnikov](https://github.com/chashnikov)) for helping from that issue.\n- Thanks to Evgen ([@doctorx](https://github.com/doctorx)) for reporting that character tokens couldn't be type highlighted.\n- Thanks to Kozio\u0142ek ([@Koziolek](https://github.com/Koziolek)) and Povilas Skruibis ([@povilas](https://github.com/povilas)) for reporting `null` argument to `getDescriptiveName` when trying to rename a variable.\n- Thanks to [@wliirl](https://github.com/wliirl) for reporting a problem showing the Structure of parts of `Ecto`.\n- Thanks to Vlad Shcherbin ([@VladShcherbin](https://github.com/VladShcherbin)) for encouraging me to implement `additionalTextAttributes` to improve the syntax highlighting\n- Thanks to Jorg Heymans ([@jorgheymans](https://github.com/jorgheymans)) for trying to rename parameters, so that I knew there was user demand for the feature.\n\n# Changelog\n\n## v4.0.0\n- Enhancements\n  - [#314](https://github.com/KronicDeth/intellij-elixir/pull/314) - Call references for unqualified no argument calls that work as variables or parameters - [@KronicDeth](https://github.com/KronicDeth)\n    - Resolve and highlight parameter references\n      - Resolve call definition clause (`def(macro)?p?`) parameters to themselves\n      - Resolve call definition parameter with default to itself\n      - Add Parameter ot Color Settings Page\n      - Parameters in any macro with do block or keyword pair\n    - Resolve and highlight variable references\n      - Properly identifier variable declared in `for` comprehension as variable\n      - Add Variable to Color Settings Page\n      - Highlight bind quoted keyword key as Variable\n      - Resolve references to earlier `&&` operands, which handles code that matches a variable and only uses the variable on success like [`((cwd = cwd()) && write_tmp_dir(cwd))`](https://github.com/elixir-lang/elixir/blob/ccf6d14e3ec2eb96090222dad6f395b5b9ab72ac/lib/elixir/lib/system.ex#L268)\n      - Resolve variables from `destructure`\n    - Detect bitstring segment options and don't treat them as variables.\n      - Highlight bitstring segment type options as Type, the same highlight as used for `@type` names.\n      - Don't generate (unresolved) references for bitstring segment options\n    - Resolve `_` to only itself, no matter how many are used to reflect that it is non-binding, while `_<name>`  will resolve to `_<name>` as it does bind.\n      - Add Ignored Variable to Color Settings Page\n    - Reimplement module attribute renaming so that variable renaming can be implemented using a different validator for renaming (since module attribute names include the `@`).  Non-inplace renaming should also be supported, but inplace is preferred.  (There's a setting to turn off in-place renaming in JetBrains IDEs.)\n    - `operation.infix.Normalized`\n      - Normalizes leftOperand, operator, and rightOperand for an Infix operation that may have errors (in either operand).  If there is an error in the operand then its normalized value is `null`.\n    - Keyword key type descriptions\n      - Default to `\"keyword key\"`. \n      - Detect `bind_quoted:` usage and call those `\"quote bound variable\"`.\n    - Add interfaces to unify matching of `Matched` and `Unmatched` form of operations when the code cares about the operator\n      - `And`\n      - `UnaryNonNumericOperation`\n    - Add `processDeclarations` to support variable and parameter resolution using `PsiTreeUtil.treeWalkUp` and `PsiScopeProcessors`\n      - `ElixirStabBody`\n      - StabOperations\n    - Treat variables and parameters as `NamedElements`, so they can be Rename Refactored.\n    - Move reused Module and Function names to `org.elixir_lang.psi.name.{Module,Function}` constants.\n    - Parameter and Variable completion  \n  - [#318](https://github.com/KronicDeth/intellij-elixir/pull/318) - Highlight keyword keys (`key:` in `key: value`) that aren't quotes (`\"key\": value` or `'key': value`) as Atom. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#320](https://github.com/KronicDeth/intellij-elixir/pull/320) - [@KronicDeth](https://github.com/KronicDeth)\n    - Show annotator applied highlights in the Preferences > Editor > Colors & Fonts > Elixir.\n      - Errors\n      - `Alias`\n      - `Braces and Operators`\n        - `Bit` (`<<` and `>>`)\n        - `Braces` (`{` and `}`)\n        - `Brackets` (`[` and `]`)\n        - `Char Tokens` (`?`)\n        - `Comma` (`,`)\n        - `Dot` (`.`)\n        - `Interpolation` (`#{` and `}`)\n        - `Maps and Structs`\n          - `Maps` (`%{` and `}`)\n          - `Structs` (`%{` and `}` when used for struct.  The Alias is still highlighted using `Alias`)\n        - `Operation Sign`\n        - `Parentheses` (`(` and `)`)\n        - `Semicolon` (`;`)\n      - `Calls`\n        - `Function` (currently only combined with `Predefined` to highlight `Kernel` functions.  Will be used later for all function calls once function references are implemented.)\n        - `Macro` (curently only combined with `Predefined` to highlight `Kernel` and `Kernel.SpecialForms` macros. Will be used later for all macro calls once macro references are implemented.)\n        - `Predefined` (Combined with `Function` to highlight `Kernel` functions.  Combined with `Macro` to highlight `Kernel` and `Kernel.SpecialForms` macros.)\n      - `Escape Sequence`\n      - `Module Attributes`\n        - `Documentation` (Previously `Documentation Module Attributes`)\n          - `Text` (Previously `Documentation Text`)\n        - `Types`\n          - `Callback` (`my_callback` in `@callback my_callback() :: :ok` or `my_macro_callback` in `@macrocallback my_macro_callback`)\n          - `Specification` (`my_function` in `@spec my_function() :: :ok`)\n          - `Type`\n            - `typ` and `integer` in  `@type typ :: integer`\n            - `parameterized` in `@type parameterized(type_parameter) :: type_parameter`\n            - `typtyp` in `@opaque typtyp :: 1..10`\n            - `typ` and `typtyp` in `@callback func(typ, typtyp) :: :ok | :fail`\n            - `binary` and `utf8` in `<< \"hello\" :: binary, c :: utf8, x = 4 * 2 >> = \"hello\u21221\"`\n        - `Type Parameters` (`type_parameter` in `@type parameterized(type_parameter) :: type_parameter`)  \n      - `Numbers`\n        - `Binary, Decimal, Hexadecimal, and Octal Digits` (Previously at top-level.)\n        - `Decimal Exponent, Mark and Separator` (Previously at top-level)\n        - `Invalid Binary, Decimal, Hexadecimal, and Octal Digits` (Previously at top-level.)\n        - `Non-Decimal Base Prefix` (Previously at top-level.)\n        - `Obsolete Non-Decimal Base Prefix`\n      - `Variables`\n        - `Ignored`\n        - `Parameter`\n        - `Variable`\n    - Recover in expression until close of subexpression\n      - `\\n`\n      - `\\r\\n`\n      - `>>`\n      - `]`\n      - `}`\n      - `)`\n      - `;`\n      - `->`\n      - `end`\n      - `after`\n      - `catch`\n      - `else`\n      - `rescue`\n    - Update Preferences > Editor > Colors & Fonts > Elixir example text's bitstring syntax to Elixir post-1.0.0 (Use `-` to separate segment options instead of a list.)\n    - Use same algorithm for `ElixirStabBody` and `ElixirFile` because they are sequences of expressions.\n    - Highlight atom keywords (`false`, `nil`, and `true`) as merge of `Atom` and `Keyword` text attributes.  If both only use foreground color, `Keyword` wins.\n    - Annotate `QualifiableAlias` as `Alias`.\n    - Highlight keyword list and map keywords (`<key>:`) as `Atom`.\n    - Add `with` to highlighted special forms  \n  - [#322](https://github.com/KronicDeth/intellij-elixir/pull/322) - Additional Text Attributes - [@KronicDeth](https://github.com/KronicDeth)\n    - Default text attributes for \"Darcula\" and \"Default\" themes: almost every Text Attribute Key has a unique hue for the Foreground color.\n    - Explain how to add `additionalTextAttributes` to `plugin.xml` in `CONTRIBUTING.md`\n    - Group Textual Text Attribute Keys Together: Next \"Textual\" group is created and \"Character List\", \"Escape Sequence\", \"Sigil\", and \"String\" are moved under the group.\n    - Describe relations between different text attributes in `COLOR_SCHEMA_DESIGN.xml`, so they can be applied to different base schemes, such as applying the current Darcula additonalTextAttributes to Default.\n- Bug Fixes\n  - [#314](https://github.com/KronicDeth/intellij-elixir/pull/314) - [@KronicDeth](https://github.com/KronicDeth)\n    - Don't generate module attribute references for control attributes: Module attributes that control compilation or are predefined by the standard library: `@behaviour`, `@callback`, `@macrocallback`, `@doc`, `@moduledoc`, `@typedoc`, `@spec`, `@opaque`, `@type`, and `@typep`, should not have references because their uses are unrelated.\n    - Drop requirement that there are 2 children and only require there be 1 and assume that is the Operator.\n    - Don't count @(...) as a module attribute usage: Module attribute declarations are defined as `defmacro @(...)` in Kernel and that `@` should count as a function name, not a prefix for a module attribute name.\n    - Allow `null` Module for Scratch File use scope\n    - Default to `\"call\"` for Call type\n    - Fix typo that had `*Two` operations using `Type` interface\n    - Don't process `AccessExpression` declarations\n  - [#316](https://github.com/KronicDeth/intellij-elixir/pull/316) - [@KronicDeth](https://github.com/KronicDeth)\n    - Highlight `foo` in `@spec foo` as a type, which occurs while typing a new `@spec` before `::` can be typed.\n    - Check if `leftOperand` is `null` even when `checkLeft` is `true` because `checkLeft` can be `true` and `leftOperand` is `null` when the `lastParent` is the operand or operation as a whole, but there is an error in the unnormalized `leftOperand` leading to the normalized `leftOperand` being `null`.\n    - Check if reference is `null` before checking if it resolves to `null` when replacing module attribute usages with their value because `AtNonNumericOperation`s can have a `null` reference when they are non-referencing, like `@spec`.\n  - [#317](https://github.com/KronicDeth/intellij-elixir/pull/317) - Leave normal highlighting for char tokens when highlighting types - [@KronicDeth](https://github.com/KronicDeth)\n  - [#320](https://github.com/KronicDeth/intellij-elixir/pull/320) - [@KronicDeth](https://github.com/KronicDeth)\n    - Stab operation parameter Use Scope is the stab operation.\n    - Skip over `PsiLeafElement` when looking for variables because the `PsiLeafElement` is an error.\n    - In a script file where the parent of a `Match` is a `PsiFile`, the `Match` Use Scope is the rest of the file.\n    - Add `=` to `Operator Signs`\n    - Skip `NoParenthesesKeywords` when highlighting types, which occurs when the `::` has no proper right operand and the following one-liner function clause with `do:` is parsed as the right operand.\n    - Skip `DUMMY_BLOCK` when looking for Variable, which prevents walking through errors.\n    - Use `Normalized` pattern for `Prefix`, so that the operand is `null` when only the operator matches or the operand has errors.\n    - Work-around Phoenix .ex templates that contain EEX: if `<%=` from EEX is detected, don't throw error when `Modular` can't be found.\n    - Fix capitalization error in example text\n  - [#323](https://github.com/KronicDeth/intellij-elixir/pull/323) - Build `jps-builder` using only Java 1.6 compatible `.class`es - [@KronicDeth](https://github.com/KronicDeth)\n    - In IntelliJ 14.1, all of `openapi.jar` targets Java 1.6 (with `MAJOR.MINOR` `50.0`), but in IntelliJ 2016.1, some of `openapi.jar` targets only Java 1.8 (with `MAJOR.MINOR` `52.0`), since `jps-builders` require parts of `openapi.jar` and must target Java 1.6 even for IntelliJ 2016.1, the `52.0` `.class`es needed to be ported into `org.elixir_lang.jps.builder`, so that the `52.0` version in `openapi.jar` wouldn't be attempted to be loaded.\n      \n      This ended up being 5 classes:\n      - `ExecutionException`\n      - `GeneralCommandLine`\n      - `ParametersList`\n      - `ParamsGroup`\n      - `ProcessNotCreatedException`\n      \n      Only `GeneralCommandLine` was used directly, all others are dependencies of it.\n- Incompatible Changes\n  - [#320](https://github.com/KronicDeth/intellij-elixir/pull/320) - [@KronicDeth](https://github.com/KronicDeth)\n    - Preferences > Editor > Colors & Fonts > Elixir restructured to group together related highlights and to match grouping used for Colors & Fonts > Language Defaults and Colors & Fonts > Java.\n      - `Documentation Module Attributes` renamed to `Module Attributes` > `Documentation`\n      - `Documentation Text` renamed to `Module Attributes > Documentation > Text`\n      - `Expression Substitution Mark` renamed to `Braces and Operators > Interpolation`.\n      - The following are now nested under `Numbers` instead of being at the top-level:\n        - `Binary, Decimal, Hexadecimal, and Octal Digits`\n        - `Decimal Exponent, Mark and Separator` \n        - `Invalid Binary, Decimal, Hexadecimal, and Octal Digits`\n        - `Non-Decimal Base Prefix`\n        - `Obsolete Non-Decimal Base Prefix`\n  - [#322](https://github.com/KronicDeth/intellij-elixir/pull/322) - \"Character List\", \"Escape Sequence\", \"Sigil\", and \"String\" are moved under the new \"Textual\" group. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#324](https://github.com/KronicDeth/intellij-elixir/pull/324) - Group Numbers subcategories and lower display name verbosity - [@KronicDeth](https://github.com/KronicDeth)\n    - \"Numbers > Binary, Decimal, Hexadecimal, and Octal Digits\" renamed to \"Numbers > Digits > Valid\"\n    - \"Numbers > Invalid Binary, Decimal, Hexadecimal, and Octal Digits\" renamed to \"Numbers > Digits > Invalid\"\n    - \"Numbers > Non-Decimal Base Prefix\" renamed to \"Numbers > Base Prefix > Non-Decimal\"\n    - \"Numbers > Obsolete Non-Decimal Base\" renamed to \"Numbers > Base Prefix > Obsolete > Non-Decimal\"\n\n# README Updates\n\n### Completion\n\n#### Module Attributes\n\nModule attributes declared earlier in the file can be completed whenever you type `@` and some letter.  If you want to see all module attributes, you can type `@a`, wait for the completions to appear, then delete the `@` to remove the filtering to `a`.\n\n#### Parameters and Variables\n\nParameter and variable usages can be completed whenever typing an identifier.  The completions will include all variables know up from that part of the file.  It can include variables from outside macros, like quote blocks.\n\n### Go To Declaration\n\nGo To Declaration is a feature of JetBrains IDEs that allows you to jump from the usage of a symbol, such as a Module\nAlias, to its declaration, such as the `defmodule` call.\n\n#### Parameters and Variables\n1. Place the cursor over a parameter or variable usage\n2. Active the Go To Declaration action with one of the following:\n   a. `Cmd+B`\n   b. Select Navigate &gt; Declaration from the menu.\n   c. `Cmd+Click`\n\nIf you hold `Cmd` and hover over the variable before clicking, it will say `parameter` or `variable`, which matches the annotation color. \n\n### Find Usage\n\nFind Usage is a feature of JetBrains IDEs that allows you to find all the places a declared symbol, such a Module Alias\nin a `defmodule`, is used, including in strings and comments.\n\n#### Parameters and Variables\n1. Place cursor over the parameter or variable declaration.\n2. Active the Find Usage action with one of the following:\n   a.\n   i. Right-click the Alias\n   ii. Select \"Find Usages\" from the context menu\n   b. Select Edit &gt; Find &gt; Find Usages from the menu\n   c. `Alt+F7`\n\n### Refactor\n\n#### Rename\n\n##### Parameters and Variables\n1. Place the cursor over the parameter or variable usage or declaration\n2. Active the Rename Refactoring action with one of the following:\n   a.\n     i. Right-click the module attribute\n     ii. Select Refactoring from the context menu\n     iii. Select \"Rename...\" from the Refactoring submenu\n   b. `Shift+F6`\n3. Edit the name inline and have the declaration and usages update.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3274200", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3274200/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3274200/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v3.0.1.20160520213720", "id": 3274200, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMyNzQyMDA=", "tag_name": "v3.0.1.20160520213720", "target_commitish": "call-references", "name": "v3.0.1.20160520213720", "draft": false, "prerelease": true, "created_at": "2016-05-20T21:27:10Z", "published_at": "2016-05-20T21:59:53Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1721185", "id": 1721185, "node_id": "MDEyOlJlbGVhc2VBc3NldDE3MjExODU=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1559520, "download_count": 43, "created_at": "2016-05-20T21:58:09Z", "updated_at": "2016-05-20T21:58:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v3.0.1.20160520213720/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v3.0.1.20160520213720", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v3.0.1.20160520213720", "body": "Canary build of the call-references branch built at 2016-05-20T21:37:20Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2935006", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2935006/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2935006/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v3.0.1", "id": 2935006, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI5MzUwMDY=", "tag_name": "v3.0.1", "target_commitish": "master", "name": "v3.0.1", "draft": false, "prerelease": false, "created_at": "2016-04-01T15:43:14Z", "published_at": "2016-04-01T16:06:40Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1498659", "id": 1498659, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0OTg2NTk=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1507896, "download_count": 70, "created_at": "2016-04-01T16:06:33Z", "updated_at": "2016-04-01T16:06:35Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v3.0.1/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v3.0.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v3.0.1", "body": "# Thanks\n- Thanks to Khaaliq DeJan ([@MisterDeejay](https://github.com/MisterDeejay)) for reporting the `AssertionError` for `Prefix#operator` using the new error reporter.\n- Thanks to Iuri L. Machado ([@imetallica](https://github.com/imetallica)), Andrei Dziahel ([@develop7](https://github.com/develop7)), and Ryan Scheel ([@Havvy](https://github.com/Havvy))  for reporting the `@NotNull` violation for `FindUsagesProvider#getType` using the new error reporter.\n- Thanks to Tobias Pfeiffer ([@PragTob](https://github.com/PragTob)) and Garrett Hart ([@thirdshift](https://github.com/thirdshift)) for prodding me to document what is a Kernel Function, Macro and Special Form so future users know which setting will highlight which calls.\n\n# Changelog\n\n## v3.0.1\n- Bug Fixes\n  - [#287](https://github.com/KronicDeth/intellij-elixir/pull/287) - Use the error reporter logger instead of plain `assert` in `Prefix#operator`.  **NOTE: This does not address error recovery recovery since I don't have a regression test case.** - [@KronicDeth](https://github.com/KronicDeth)\n  - [#283](https://github.com/KronicDeth/intellij-elixir/pull/283) - All function name elements act as `PsiNameIdentifier`s now even if they don't resolve, but that means they all need to support `FindUsagesProvider#getType`, which they don't, so use a placeholder of \"unknown call type\" for any `Call` that can't be matched and \"unknown element\" for anything else. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#284](https://github.com/KronicDeth/intellij-elixir/pull/284) - Enumerate all Kernel Functions, Macros, and Special Forms in the Syntax Highlighting section of the README, so that users searching for which category controls highlighting a given call can find it. - [@KronicDeth](https://github.com/KronicDeth)\n\n# README Updates\n\n### Syntax Highlighting\n\nSyntax highlighting for the following tokens:\n- [Kernel Functions](http://elixir-lang.org/docs/stable/elixir/Kernel.html#functions)\n  - `abs`\n  - `apply`\n  - `apply`\n  - `binary_part`\n  - `bit_size`\n  - `byte_size`\n  - `div`\n  - `elem`\n  - `exit`\n  - `function_exported?`\n  - `get_and_update_in`\n  - `get_in`\n  - `hd`\n  - `inspect`\n  - `is_atom`\n  - `is_binary`\n  - `is_bitstring`\n  - `is_boolean`\n  - `is_float`\n  - `is_function`\n  - `is_function`\n  - `is_integer`\n  - `is_list`\n  - `is_map`\n  - `is_number`\n  - `is_pid`\n  - `is_port`\n  - `is_reference`\n  - `is_tuple`\n  - `length`\n  - `macro_exported?`\n  - `make_ref`\n  - `map_size`\n  - `max`\n  - `min`\n  - `node`\n  - `node`\n  - `not`\n  - `put_elem`\n  - `put_in`\n  - `rem`\n  - `round`\n  - `self`\n  - `send`\n  - `spawn`\n  - `spawn`\n  - `spawn_link`\n  - `spawn_link`\n  - `spawn_monitor`\n  - `spawn_monitor`\n  - `struct`\n  - `throw`\n  - `tl`\n  - `trunc`\n  - `tuple_size`\n  - `update_in`\n- [Kernel Macros](http://elixir-lang.org/docs/stable/elixir/Kernel.html#macros)\n  - `@`\n  - `alias!`\n  - `and`\n  - `binding`\n  - `def`\n  - `defdelegate`\n  - `defexception`\n  - `defimpl`\n  - `defmacro`\n  - `defmacrop`\n  - `defmodule`\n  - `defoverridable`\n  - `defp`\n  - `defprotocol`\n  - `defstruct`\n  - `destructure`\n  - `get_and_update_in`\n  - `if`\n  - `in`\n  - `is_nil`\n  - `match?`\n  - `or`\n  - `put_in`\n  - `raise`\n  - `raise`\n  - `reraise`\n  - `reraise`\n  - `sigil_C`\n  - `sigil_R`\n  - `sigil_S`\n  - `sigil_W`\n  - `sigil_c`\n  - `sigil_r`\n  - `sigil_s`\n  - `sigil_w`\n  - `to_char_list`\n  - `to_string`\n  - `unless`\n  - `update_in`\n  - `use`\n  - `var!`\n- [Kernel.SpecialForms Macros](http://elixir-lang.org/docs/stable/elixir/Kernel.SpecialForms.html)\n  - `__CALLER__`\n  - `__DIR__`\n  - `__ENV__`\n  - `__MODULE__`\n  - `__aliases__`\n  - `__block__`\n  - `alias`\n  - `case`\n  - `cond`\n  - `fn`\n  - `for`\n  - `import`\n  - `quote`\n  - `receive`\n  - `require`\n  - `super`\n  - `try`\n  - `unquote`\n  - `unquote_splicing`\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3344057", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/3344057/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/3344057/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v3.0.1.20160531121901", "id": 3344057, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMzNDQwNTc=", "tag_name": "v3.0.1.20160531121901", "target_commitish": "master", "name": "v3.0.1.20160531121901", "draft": false, "prerelease": true, "created_at": "2016-03-31T21:31:32Z", "published_at": "2016-05-31T21:04:28Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1773457", "id": 1773457, "node_id": "MDEyOlJlbGVhc2VBc3NldDE3NzM0NTc=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1838887, "download_count": 12, "created_at": "2016-05-31T21:04:18Z", "updated_at": "2016-05-31T21:04:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v3.0.1.20160531121901/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v3.0.1.20160531121901", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v3.0.1.20160531121901", "body": "Canary build of the call-references branch built at 2016-05-31T12:19:01Z\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2894210", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2894210/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2894210/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v3.0.0", "id": 2894210, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4OTQyMTA=", "tag_name": "v3.0.0", "target_commitish": "master", "name": "v3.0.0", "draft": false, "prerelease": false, "created_at": "2016-03-27T02:13:38Z", "published_at": "2016-03-27T02:54:21Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1475431", "id": 1475431, "node_id": "MDEyOlJlbGVhc2VBc3NldDE0NzU0MzE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1507185, "download_count": 28, "created_at": "2016-03-27T02:54:10Z", "updated_at": "2016-03-27T02:54:11Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v3.0.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v3.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v3.0.0", "body": "# Changelog\n\n## v3.0.0\n- Enhancements\n  - [#257](https://github.com/KronicDeth/intellij-elixir/pull/257) - [@KronicDeth](https://github.com/KronicDeth)\n    - Go To Symbol (\u2325\u2318O)\n      - Call definition clauses (`def`, `defp`, `defmacro`, and `defmacrop`)\n      - Callbacks (`@callback` and `@macrocallback`)\n      - Call definition specifications (`@spec`)\n      - Call definition heads (`foo(bar)`) for delegation (`defdelegate foo(bar), to: BAZ`)\n      - Implementations (`defimpl`)\n      - Protocols (`defprotocol`)\n    - Go To Declaration for Aliases now uses the same `isModular` checks as the stubbing for the index uses for Go To Symbol.\n  - [#263](https://github.com/KronicDeth/intellij-elixir/pull/263) - Build against 14.0, 14.1, 15.0, and 2016.1 on travis-ci to ensure continued compatibility. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#273](https://github.com/KronicDeth/intellij-elixir/pull/273) - Error reporting for type highlighter gives the Class, Excerpt and Full Text when an unknown element type is encountered as the Excerpt alone is not enough sometimes. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#275](https://github.com/KronicDeth/intellij-elixir/pull/275) - [@KronicDeth](https://github.com/KronicDeth)\n    - Custom error handling that will open an issue against https://github.com/KronicDeth/intellij-elixir with the exception messsage and stacktrace filled in.\n    - Changed `NotImplementedExceptions` and (some) `assert`s to logging custom error message that include the `PsiElement` text and the containing file as an attachment.  The files make the URL too big for the error handler to put the file contents in when opening the browser with the error handler, so the issue body instead explains how to get the attachment text out of IntelliJ's \"IDE Fatal Errors\"\n  - [#276](https://github.com/KronicDeth/intellij-elixir/pull/276) - Update to Grammar Kit 1.3.0. - [@KronicDeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#256](https://github.com/KronicDeth/intellij-elixir/pull/256) - Fix Elixir Mix Run configuration not persisting past restart - [@zyuyou](https://github.com/zyuyou)\n  - [#259](https://github.com/KronicDeth/intellij-elixir/pull/259) - Allow `Infix#operator` to work on operations with errors, which eliminates the `AssertionError` reported when typing infix operation and they are incomplete - [@KronicDeth](https://github.com/KronicDeth)\n  - [#259](https://github.com/KronicDeth/intellij-elixir/pull/260) - Add Keywords to the Preferences > Editor > Colors & Fonts > Elixir settings page, so it can be customized for just Elixir instead of having to change Preferences > Editor > Colors & Fonts > General > Keyword - [@KronicDeth](https://github.com/KronicDeth)\n  - [#263](https://github.com/KronicDeth/intellij-elixir/pull/263) - Ensure compatibility from 14.0 to 2016.1 - [@KronicDeth](https://github.com/KronicDeth)\n    - Use `TextAttributesKey`s that aren't deprecated in 2016.1 and work back to 14.1\n      \n      All of `CodeInsightColors` is deprecated, so all constants from there had to be replaced.  Unfortunately, the recommended replacements don't have the same color as the original, so I used different `DefaultLanguageHighlighterColors` constants for some.\n      \n      \"Module Attribute\" is now based on `DefaultLanguageHighlighterColors.CONSTANT` (which is purplish in Darcula) instead of the recommended `METADATA`, which is yellow.  Although module attributes don't have to be constant since they can be set to accumulate, often they are used as constants and not really as metadata, since they are just data then.  All the `metadata` uses of module attributes have a separate color.\n      \n      \"Specification\" is now based on `DefaultLanguageHighlighterColors.FUNCTION_DECLARATION`, which maintains the golden color that `CodeInsightColors.METHOD_DECLARATION_ATTRIBUTES` had.\n      \n      \"Type\" is now based on `DefaultLanguageHighlighterColors.METADATA`, which is bright yellow unlike `CodeInsightColors.ANNOTATION_ATTRIBUTE_NAME_ATTRIBUTES`, which was a bright white.\n      \n      \"Type Parameter\" is now based on `DefaultLanguageHighlighterColors.PARAMETER`, which unfortunately has no attributes associated with it, but the constant name was too good a fit not to use, so if you want the old color, you'll need to customize it yourself.\n    - Restore compatibility with the IntelliJ IDEA 14.0 release line\n      - By using reflection to call `FileTemplateManager#getInstance` if `FileTemplateManager#getDefaultInstance` is not available\n      - By calling `FileChooserDescriptorFactory#createSingleLocalFileDescriptor` (which works in 14.0 through 2016.1) instead of `FileChooserDescriptorFactory#createSingleFileDescriptor` (which only works in 14.1 through 2016.1)\n  - [#264](https://github.com/KronicDeth/intellij-elixir/pull/264) - Use more human-readable error message for Elixir File action - [@KronicDeth](https://github.com/KronicDeth)\n    - Instead of showing the regular expression pattern, which may be confusing to new developers, explain in English the expected pattern. I also included the description, which explains how nesting is mapped to directories, of the action since it doesn't actually show up in the dialog otherwise.\n  - [#265](https://github.com/KronicDeth/intellij-elixir/pull/265) - Check if a file exists before allowing Elixir Module to be created. If it exists, show an error with the conflicting path. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#272](https://github.com/KronicDeth/intellij-elixir/pull/272) - Fix (one cause) of `AssertionError` in `GoToSymbolContributor` when the `Modular` (`defimpl`, `demodule`, `defprotocol`, and `quote`) could not be resolved due a `def` being surrounded by a `for` comprehension, which is common in Elixir libraries as was the case for `Postgrex`: any enclosing `for` comprehension(s) will now be ignored and the next enclosing macro will be checked to see if it is a `Modular`. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#273](https://github.com/KronicDeth/intellij-elixir/pull/273) - While typing, before `:` in keyword pairs, after the `when`, such as in `@spec foo(id) :: id when id` before finishing typing `@spec foo(id) :: id when id: String.t`, the keyword key will be properly highlighted as a Type Parameter - [@KronicDeth](https://github.com/KronicDeth)\n  - [#276](https://github.com/KronicDeth/intellij-elixir/pull/276) - [@KronicDeth](https://github.com/KronicDeth)\n    - Properly handle the `Infix#rightOperand` being `null` due to the Pratt Parser matching up through the operator and then ignoring the mismatched right operand, which leads to the `Infix` having only 2 elements: the left operand and the operator.\n    - `@doc` and other module attributes appearing as the right operand of `@type name ::` will be ignored as it is common when adding a new type above pre-existing, documented functions.\n    - Only error in `Infix#leftOperand` if there are not 2-3 children for `Infix` instead of a strict 3.\n- Incompatible Changes\n  - [#276](https://github.com/KronicDeth/intellij-elixir/pull/276) - Drop support for IntelliJ 14.0 because the parser generated by Grammar Kit 1.3.0 is not compatible with the OpenAPI libraries shipped in IntelliJ 14.0.  Still compatible with 14.1 through 2016.1. - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2733341", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2733341/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2733341/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v2.2.0", "id": 2733341, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI3MzMzNDE=", "tag_name": "v2.2.0", "target_commitish": "master", "name": "v2.2.0", "draft": false, "prerelease": false, "created_at": "2016-03-03T06:22:47Z", "published_at": "2016-03-03T06:25:11Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1377552", "id": 1377552, "node_id": "MDEyOlJlbGVhc2VBc3NldDEzNzc1NTI=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1426394, "download_count": 74, "created_at": "2016-03-03T06:25:07Z", "updated_at": "2016-03-03T06:25:08Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v2.2.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v2.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v2.2.0", "body": "# Changelog\n\n## v2.2.0\n- Enhancement\n  - [#240](https://github.com/KronicDeth/intellij-elixir/pull/240) - Code Commenter - [qertoip](https://github.com/qertoip)\n  - [#243](https://github.com/KronicDeth/intellij-elixir/pull/243), [#248](https://github.com/KronicDeth/intellij-elixir/pull/248) - Structure View - [KronicDeth](https://github.com/KronicDeth)\n    - Controls\n      - Scroll to Source and Scroll From Source\n      - Sorting\n        - Runtime (functions) vs Compile (macros)\n        - Visibility (public [`def`, `macro`, etc] vs private [`defp`, `macrop` and `@typep`])\n        - Alphabetical\n      - Show Used - injects structure from `use Alias` call's `__using__`'s `quote` into the call site Structure\n    - Elements\n      - Callbacks (`@callback`) show their name/arity and then a nest spec\n      - CallDefinition groups together CallDefinitionClause of the same name/arity\n      - CallDefinitionClause (`def`, `defp`, `macro`, and `macrop`) shows the head of each definition under the CallDefinition.\n      - CallDefinitionSpecification (`@spec`) show the type specification for a CallDefinition\n      - CallReference `name: arity` shows the name/arity for a `defoverridable`.\n      - Delegation shows all the `:append_first` and `:to` options with the implied Function Delegation nested underneath\n      - Exception (`defexception`) show the implicit struct and nest any callback functions, such as `exception/1` or `message/1`.\n      - Overridable `defoverridable` tracks overridable functions and is used to mark CallDefinitions are overrides.\n      - Quote `quote do end` models quote blocks so they can be injected `use Alias` sites.\n      - Use `use Alias` show `use` calls.  \n  - [#241](https://github.com/KronicDeth/intellij-elixir/pull/241) - Live Templates - [pfitz](https://github.com/pfitz)\n  - [#220](https://github.com/KronicDeth/intellij-elixir/pull/220) - Added clarification to \"Import Project from External Model\" that `mix.bat` should be used instead of `mix` - [f-lombardo](https://github.com/f-lombardo)\n  - [#244](https://github.com/KronicDeth/intellij-elixir/pull/244) - Get the Elixir version directly from `System.build_info[:version]` instead of processing the formatted output of `elixir --version` as the build info version is more stable - [KronicDeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#244](https://github.com/KronicDeth/intellij-elixir/pull/244) - Elixir version parsing handles both pre and build numbers if present by using the same regular expression as Elixir itself uses for the `Version` module - [KronicDeth](https://github.com/KronicDeth)\n  - [#245](https://github.com/KronicDeth/intellij-elixir/pull/245) - Better error handling in Structure View - [KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2401819", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2401819/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2401819/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v2.1.0", "id": 2401819, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI0MDE4MTk=", "tag_name": "v2.1.0", "target_commitish": "master", "name": "v2.1.0", "draft": false, "prerelease": false, "created_at": "2016-01-10T19:40:01Z", "published_at": "2016-01-10T19:42:16Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1197748", "id": 1197748, "node_id": "MDEyOlJlbGVhc2VBc3NldDExOTc3NDg=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1289385, "download_count": 89, "created_at": "2016-01-10T19:41:58Z", "updated_at": "2016-01-10T19:42:04Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v2.1.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v2.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v2.1.0", "body": "# Changelog\n\n## v2.1.0\n- Enhancement\n  - [#236](https://github.com/KronicDeth/intellij-elixir/pull/236) - `\\u` in strings and char lists for unicode mapping - [KronicDeth](https://github.com/KronicDeth)\n  - [#237](https://github.com/KronicDeth/intellij-elixir/pull/237) - Test against Elixir 1.1.1 and 1.2.0 - [KronicDeth](https://github.com/KronicDeth)\n  - [#233](https://github.com/KronicDeth/intellij-elixir/pull/233) - More flexible `elixir --version` parsing: works with `elixir` 1.2.0 and earlier - [bitgamma](https://github.com/bitgamma)\n- Bug Fixes\n  - [#231](https://github.com/KronicDeth/intellij-elixir/pull/231) - Update IntelliJ to 14.1.6 to fix 403 errors in Travis-CI build - [sholden](https://github.com/sholden)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2383991", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2383991/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2383991/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v2.0.0", "id": 2383991, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIzODM5OTE=", "tag_name": "v2.0.0", "target_commitish": "master", "name": "v2.0.0", "draft": false, "prerelease": false, "created_at": "2016-01-06T22:11:05Z", "published_at": "2016-01-06T22:13:42Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1182475", "id": 1182475, "node_id": "MDEyOlJlbGVhc2VBc3NldDExODI0NzU=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1278847, "download_count": 31, "created_at": "2016-01-06T22:13:13Z", "updated_at": "2016-01-06T22:13:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v2.0.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v2.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v2.0.0", "body": "# Changelog\n\n## v2.0.0\n- Enhancements\n  - [#207](https://github.com/KronicDeth/intellij-elixir/pull/207) - [KronicDeth](https://github.com/KronicDeth)\n    - Highlighters for\n      - Kernel Functions\n      - Kernel Macros\n      - Kernel.SpecialForms Macros\n  - [#219](https://github.com/KronicDeth/intellij-elixir/pull/219) - Test against Elixir v1.1.1 - [KronicDeth](https://github.com/KronicDeth)\n  - [#221](https://github.com/KronicDeth/intellij-elixir/pull/221) - Highlight `after`, `catch`, `do`, `else`, `end`, `fn`, and `rescue` as keywords - [KronicDeth](https://github.com/KronicDeth)\n  - [#223](https://github.com/KronicDeth/intellij-elixir/pull/223), [#227](https://github.com/KronicDeth/intellij-elixir/pull/227) - Annotate Module Attributes - [KronicDeth](https://github.com/KronicDeth)\n    - Documentation module attributes (`@doc`, `@moduledoc`, and `@typedoc`) are annotated as \"Documentation Module Attributes\" while all other module attributes are annotated as \"Module Attributes\".\n    - The string or heredoc argument to a documentation module attribute (`@doc`, `@moduledoc`, and `@typedoc`) is annotated as \"Documentation Text\"\n    - Function names passed to `@callback`, `@macrocallback` or `@spec` are annotated as \"Specification\".\n    - Variables/calls in the parameters and return of `@callback`, `@macrocallback`, `@spec` are annotated as \"Type\".\n    - Parameters of `@opaque`, `@type`, `@typep` names are annotated as \"Type Parameter\"\n    - Keyword keys from the `when` clause of `@callback`, `@macrocallback` or `@spec` definitions and their usage are annotated as \"Type Parameters\"\n    - `@doc false`, `@moduledoc false`, and `@typedoc false` will annotate the `false` with a weak warning: \"Will make documented invisible to the documentation extraction tools like ExDoc.\".\n  - [#228](https://github.com/KronicDeth/intellij-elixir/pull/228) - Module attributes resolution and refactoring - [KronicDeth](https://github.com/KronicDeth)\n    - Go To Definition for module attributes.\n    - Module attribute completion (**NOTE: works after typing first character after `@`.  To see all module attributes, type a character after `@`, then delete the character to get the full list.**)\n    - Module attributes that can't be resolved will have \"Unresolved module attribute\" error annotation (i.e. red squiggly underline).\n    - Find Usages of module attributes from their declarations.\n    - Rename module attributes inline (editing the name in the declaration will change the name at the usage site at the same time without a dialog).\n    - The module attribute value (from the declaration site) will be folded into the usage site.  It can be reverted to the literal `@module_name` text by clicking the + to unfold.\n- Bug Fixes \n  - [#206](https://github.com/KronicDeth/intellij-elixir/pull/206) - Change \"edition\" to \"addition\" in README. - [folz](https://github.com/folz)\n  - [#225](https://github.com/KronicDeth/intellij-elixir/pull/225) - Sped up reparsing when [ENTER] is hit in the middle of comment by removing the custom error handling element, adjacentExpression, and going with the default error handling provided by JetBrains' OpenAPI. - [KronicDeth](https://github.com/KronicDeth)\n  - [#226](https://github.com/KronicDeth/intellij-elixir/pull/226) - Fix `mix` version detection on Windows - [KronicDeth](https://github.com/KronicDeth)\n- Incompatible Changes\n  - [#225](https://github.com/KronicDeth/intellij-elixir/pull/225) - [KronicDeth](https://github.com/KronicDeth)\n    - Removed \"Add Newline\" Quick Fix as it depended on `adjacentExpression` elements, which have now been removed to speed up error handling when comments become code.\n    - Removed \"Add Semicolon\" Quick Fix as it depended on `adjacentExpression` elements, which have now been removed to speed up error handling when comments become code.\n\n# Upgrading\n\n## v2.0.0\n\n### Preferences/Settings\n\nThe fallback key attribute is `DefaultLanguageHighlighterColors.FUNCTION_CALL`, which is uncolored in most themes, so users need to customize their themes to see the highlighting for \"Kernel Functions\", \"Kernel Macros\", and \"Kernel.SpecialForms Macros\".\n\n### Quick Fix\n\nThe \"Add Newline\" and \"Add Semicolon\" Quick Fixes have been removed as the parsing elements they depend on have been removed in favor of JetBrains' OpenAPI error handling.  If your workflow depended on these quick fixes you will have to manually add newlines or semicolons now.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2089790", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2089790/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2089790/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v1.2.1", "id": 2089790, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwODk3OTA=", "tag_name": "v1.2.1", "target_commitish": "master", "name": "v1.2.1", "draft": false, "prerelease": false, "created_at": "2015-11-07T20:45:22Z", "published_at": "2015-11-07T22:03:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1016141", "id": 1016141, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMTYxNDE=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1223353, "download_count": 83, "created_at": "2015-11-07T22:03:12Z", "updated_at": "2015-11-07T22:03:14Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v1.2.1/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v1.2.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v1.2.1", "body": "# Changelog\n\n## v1.2.1\n- Enhancements\n  - [#204](https://github.com/KronicDeth/intellij-elixir/pull/204) - Keywords not at the end of no parentheses calls will be properly marked as errors. - [KronicDeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#200](https://github.com/KronicDeth/intellij-elixir/pull/200) - Fix `IllegalStateException` for file delete and rename by giving `ElixirFile`s descriptive names for safe-refactoring displaying file usage. - [KronicDeth](https://github.com/KronicDeth)\n  - [#201](https://github.com/KronicDeth/intellij-elixir/pull/201) - [KronicDeth](https://github.com/KronicDeth)\n    - README states explicitly that the plugin works with _both_ IntelliJ Community and Ultimate.\n    - README states that the plugin is free.\n  - [#202](https://github.com/KronicDeth/intellij-elixir/pull/202) - Prevent match error when typing `~` to start a sigil that is followed later by a `\\n` by matching `EOL` in the `NAMED_SIGIL` state as a `BAD_CHARACTER` - [KronicDeth](https://github.com/KronicDeth)\n  - [#204](https://github.com/KronicDeth/intellij-elixir/pull/204) - Keywords at the end of a no parentheses call that is surrounded by parentheses will not be marked as an error when that parenthetical group appears in the middle of an outer call. - [KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2071658", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/2071658/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/2071658/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v1.2.0", "id": 2071658, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIwNzE2NTg=", "tag_name": "v1.2.0", "target_commitish": "master", "name": "v1.2.0", "draft": false, "prerelease": false, "created_at": "2015-11-04T16:45:13Z", "published_at": "2015-11-04T16:46:28Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/1006020", "id": 1006020, "node_id": "MDEyOlJlbGVhc2VBc3NldDEwMDYwMjA=", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1222843, "download_count": 21, "created_at": "2015-11-04T16:46:18Z", "updated_at": "2015-11-04T16:46:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v1.2.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v1.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v1.2.0", "body": "# Changelog\n\n## v1.2.0\n- Enhancements\n  - [#184](https://github.com/KronicDeth/intellij-elixir/pull/184) - If (1) you have intellij-erlang installed and (2) you have an atom in Erlang that starts with `Elixir.`, such as `'Elixir.Test'`, then intellij-elixir will annotate whether it can resolve the name to a `defmodule` call in Elixir files. - [KronicDeth](https://github.com/KronicDeth)\n  - [#188](https://github.com/KronicDeth/intellij-elixir/pull/188) - Default SDK path for Linux and Windows - [zyuyou](https://github.com/zyuyou)\n  - [#198](https://github.com/KronicDeth/intellij-elixir/pull/198) - [KronicDeth](https://github.com/KronicDeth)\n    - Go To Declaration (`Cmd+Click`, `Cmd+B`, `Navigate > Declaration`) from Alias to `defmodule` where Alias is declared.\n    - Index `defmodule`s for fast Go To Declaration in [elixir-lang/elixir](https://github.com/elixir-lang/elixir) and other large projects.\n    - Find Usage for Alias in `defmodule`\n- Bug Fixes\n  - [#187](https://github.com/KronicDeth/intellij-elixir/pull/187) - Fix links to screenshots in README - [zhyu](https://github.com/zhyu)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1612591", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1612591/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1612591/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v1.1.0", "id": 1612591, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MTI1OTE=", "tag_name": "v1.1.0", "target_commitish": "master", "name": "v1.1.0", "draft": false, "prerelease": false, "created_at": "2015-07-31T13:03:42Z", "published_at": "2015-07-31T13:09:45Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/758415", "id": 758415, "node_id": "MDEyOlJlbGVhc2VBc3NldDc1ODQxNQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1180938, "download_count": 60, "created_at": "2015-07-31T13:10:06Z", "updated_at": "2015-07-31T13:10:10Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v1.1.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v1.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v1.1.0", "body": "# Changelog\n\n## v1.1.0\n- Enhancements\n  - [#167](https://github.com/KronicDeth/intellij-elixir/pull/167) - [zyuyou](https://github.com/zyuyou)\n    - `Build`\n      - `Compile` an individual file\n      - `Make Project` to build the entire project\n    - `New`\n      - `Elixir File` has new templates\n        - `Empty module`\n        - `Elixir Application`\n        - `Elixir Supervisor`\n        - `Elixir GenServer`\n        - `Elixir GenEvent`\n      - `Project > Elixir` creates a new Elixir project with an empty `lib` directory marked as source directory.\n      - `Project from Existing Sources...`\n        - `Create project from existing sources` sets up the project with SDK using a pre-existing directory.\n        - `Import project from external model > Mix`\n          - Fetches the the dependencies with the local version of `mix`\n          - Marks `lib` directory as source\n          - Marks `test` directory as test sources\n    - `Run > Elixir Mix` to setup Run Configurations to run `mix` tasks.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1591226", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1591226/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1591226/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v1.0.0", "id": 1591226, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1OTEyMjY=", "tag_name": "v1.0.0", "target_commitish": "master", "name": "v1.0.0", "draft": false, "prerelease": false, "created_at": "2015-07-27T15:15:43Z", "published_at": "2015-07-27T15:19:50Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/747655", "id": 747655, "node_id": "MDEyOlJlbGVhc2VBc3NldDc0NzY1NQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1012815, "download_count": 16, "created_at": "2015-07-27T15:19:35Z", "updated_at": "2015-07-27T15:19:38Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v1.0.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v1.0.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v1.0.0", "body": "# Changelog\n\n## v1.0.0\n- Enhancements\n  - [#168](https://github.com/KronicDeth/intellij-elixir/pull/168) - Update ant build on travis-ci.org to use IDEA 14.1.4 (from 14.0.2) - [KronicDeth](https://github.com/KronicDeth)\n  - [#174](https://github.com/KronicDeth/intellij-elixir/pull/174) - Parser is verified to quote the same as native Elixir - [KronicDeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#154](https://github.com/KronicDeth/intellij-elixir/pull/154) - Fix parsing of unary vs binary +/- with leading and trailing spaces and newlines - [KronicDeth](https://github.com/KronicDeth)\n  - [#155](https://github.com/KronicDeth/intellij-elixir/pull/155) - Allow EOL between list arguments and `]` - [KronicDeth](https://github.com/KronicDeth)\n  - [#156](https://github.com/KronicDeth/intellij-elixir/pull/156) - [KronicDeth](https://github.com/KronicDeth)\n    - Relative identifiers after `.` that start with `and`, `or`, and `not` will be lexed as a single identifier instead\n      of `and`, `or`, or `not` followed by another identifier.\n    - `end` is allowed as a relative identifier after `.`\n  - [#157](https://github.com/KronicDeth/intellij-elixir/pull/157) - Fix `(...)` as part of matched expression in no parentheses stab signature - [KronicDeth](https://github.com/KronicDeth)\n  - [#158](https://github.com/KronicDeth/intellij-elixir/pull/158) - Allow multiple newlines to mark the end of an expression, but only one `;` - [KronicDeth](https://github.com/KronicDeth)\n  - [#159](https://github.com/KronicDeth/intellij-elixir/pull/159) - Allow operators in function references (`<op>/<arity>`) for function captures (`&<op>/<arity>`) - [KronicDeth](https://github.com/KronicDeth)\n  - [#160](https://github.com/KronicDeth/intellij-elixir/pull/160) - `unquote_splicing` is properly wrapped in `__block__` when in stab bodies - [KronicDeth](https://github.com/KronicDeth)\n  - [#163](https://github.com/KronicDeth/intellij-elixir/pull/160) - Check for matching terminator in heredocs when determining white space type at beginning of line - [KronicDeth](https://github.com/KronicDeth)\n  - [#170](https://github.com/KronicDeth/intellij-elixir/pull/170) - Allow <space>+<EOL> to count as addition - [KronicDeth](https://github.com/KronicDeth)\n  - [#171](https://github.com/KronicDeth/intellij-elixir/pull/171) - Unary expressions inside parentheses are no longer marked `ambiguous_op: nil` - [KronicDeth](https://github.com/KronicDeth)\n  - [#173](https://github.com/KronicDeth/intellij-elixir/pull/173) - Differentiate between `Qualifier.'relative'()` vs `Qualifier.'relative' ()` and `Qualifier.\"relative\"()` vs `Qualifier.\"relative\" ()` - [KronicDeth](https://github.com/KronicDeth)\n  - [#176](https://github.com/KronicDeth/intellij-elixir/pull/176) - Fix link to Elixir website in README - [shalecraig](https://github.com/shalecraig)\n  - [#178](https://github.com/KronicDeth/intellij-elixir/pull/178) - All tokens have human-readable names and/or expected characters for better error messages - [KronicDeth](https://github.com/KronicDeth)\n- Incompatible Fixes\n  - [#162](https://github.com/KronicDeth/intellij-elixir/pull/162) - New Elixir File has moved to the last item in the New File menu to preserve `CTRL+N ENTER` keyboard shortcut for `New > File` - [jaketrent](https://github.com/jaketrent)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1511861", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1511861/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1511861/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.5", "id": 1511861, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE1MTE4NjE=", "tag_name": "v0.3.5", "target_commitish": "master", "name": "v0.3.5", "draft": false, "prerelease": true, "created_at": "2015-07-08T17:57:43Z", "published_at": "2015-07-08T18:14:09Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/693815", "id": 693815, "node_id": "MDEyOlJlbGVhc2VBc3NldDY5MzgxNQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1120542, "download_count": 17, "created_at": "2015-07-08T18:09:00Z", "updated_at": "2015-07-08T18:09:01Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.3.5/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.5", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.5", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, check if it's a\n[known bug](https://github.com/KronicDeth/intellij-elixir/issues?q=is%3Aopen+is%3Aissue+milestone%3Av1.0.0+label%3Abug)\nthat is planned to be fixed for v1.0.0.  If you don't see your error, please\n[open a new issue](https://github.com/KronicDeth/intellij-elixir/issues/new). Please subscribe to notifications on\n[Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the parser is\ncomplete.**\n\n# Changelog\n\n## v0.3.5\n- Enhancements\n  - [#135](https://github.com/KronicDeth/intellij-elixir/pull/135) - `do` blocks (`do end) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#152](https://github.com/KronicDeth/intellij-elixir/pull/152) - Unmatched expressions (operations involving `do` block calls and normal matched expressions) - [Kronicdeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#137](https://github.com/KronicDeth/intellij-elixir/pull/137) - Lex full atom instead of just identifier-like operator prefix (`:in<nospace>dex` before vs `:index` after) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#138](https://github.com/KronicDeth/intellij-elixir/pull/138) - `!` and `not` are properly wrapped in `__block__`s when in stab bodies - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1376426", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1376426/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1376426/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.4", "id": 1376426, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNzY0MjY=", "tag_name": "v0.3.4", "target_commitish": "master", "name": "v0.3.4", "draft": false, "prerelease": true, "created_at": "2015-06-04T13:17:04Z", "published_at": "2015-06-04T13:11:19Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/621547", "id": 621547, "node_id": "MDEyOlJlbGVhc2VBc3NldDYyMTU0Nw==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1049630, "download_count": 22, "created_at": "2015-06-04T13:17:47Z", "updated_at": "2015-06-04T13:17:50Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.3.4/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.4", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.4", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, it is most likely due to the incomplete parser.  (Expected failures are parsing `do` blocks.) Please subscribe to notifications\nor comment on [Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the\nparser is complete.**\n\n# Changelog\n\n## v0.3.4\n- Enhancements\n  - [#126](https://github.com/KronicDeth/intellij-elixir/pull/126) - Bracket at expression (`@foo[key]`) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#127](https://github.com/KronicDeth/intellij-elixir/pull/127) - Anonymous functions (`fn end`), stab clauses (`->`), and parentheticals (`(1 + 2)`) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#128](https://github.com/KronicDeth/intellij-elixir/pull/128) - Maps (`%{}`) and structs (`%User{}`) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#129](https://github.com/KronicDeth/intellij-elixir/pull/129) - Tuples (`{}`) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#130](https://github.com/KronicDeth/intellij-elixir/pull/130) - Bit strings (`<<>>`) - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1302032", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1302032/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1302032/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.3", "id": 1302032, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzMDIwMzI=", "tag_name": "v0.3.3", "target_commitish": "master", "name": "v0.3.3", "draft": false, "prerelease": true, "created_at": "2015-05-15T19:17:58Z", "published_at": "2015-05-15T19:00:55Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/584360", "id": 584360, "node_id": "MDEyOlJlbGVhc2VBc3NldDU4NDM2MA==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 1002821, "download_count": 16, "created_at": "2015-05-15T19:00:32Z", "updated_at": "2015-05-15T19:00:34Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.3.3/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.3", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.3", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, it is most likely due to the incomplete parser.  Please subscribe to notifications\nor comment on [Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the\nparser is complete.**\n\n# Changelog\n\n## v0.3.3\n- Enhancements\n  - [#122](https://github.com/KronicDeth/intellij-elixir/pull/122) - [@KronicDeth](https://github.com/KronicDeth)\n    - Remote function calls (`Alias.function`, `:atom.function`, etc) and local function calls (`function`) with...\n      - No Parentheses with...\n        - No Arguments (`Alias.function`)\n        - Keywords (`Alias.function key: value`)\n        - Nested No Parentheses Call (`Alias.function Inner.function positional, key: value`)\n        - Positional and Keyword arguments (`Alias.function positional, key: value`)\n        - Matched Expression (`Alias.function 1 + 2`)\n      - Parentheses with...\n        - No arguments (`Alias.function()`)\n        - No Parentheses Call (`Alias.function(Inner.function positional, key: value`)\n        - Keywords (`Alias.function(key: value)`)\n        - Positional and Keyword arguments (`Alias.function(positional, key: value)`)\n        - Trailing parentheses for quoting (`def unquote(variable)(positional)`)\n  - [#125](https://github.com/KronicDeth/intellij-elixir/pull/122) - Bracket expression (`foo[key]`) - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1245201", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1245201/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1245201/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.2", "id": 1245201, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNDUyMDE=", "tag_name": "v0.3.2", "target_commitish": "master", "name": "v0.3.2", "draft": false, "prerelease": true, "created_at": "2015-05-01T19:48:54Z", "published_at": "2015-05-01T19:51:45Z", "assets": [], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.2", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.2", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, it is most likely due to the incomplete parser.  Please subscribe to notifications\nor comment on [Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the\nparser is complete.**\n\n# Changelog\n\n## v0.3.2\n- Bug Fixes\n  - [#121](https://github.com/KronicDeth/intellij-elixir/pull/121) - Fix `NoSuchElementException` when no suggested SDK home paths are available.  Thanks to [@zyuyou](https://github.com/zyuyou) for [reporting](https://github.com/KronicDeth/intellij-elixir/issues/120) - [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1225536", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1225536/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1225536/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.1", "id": 1225536, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyMjU1MzY=", "tag_name": "v0.3.1", "target_commitish": "master", "name": "v0.3.1", "draft": false, "prerelease": true, "created_at": "2015-04-28T03:06:22Z", "published_at": "2015-04-28T03:26:19Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/549061", "id": 549061, "node_id": "MDEyOlJlbGVhc2VBc3NldDU0OTA2MQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 982945, "download_count": 11, "created_at": "2015-04-28T03:19:22Z", "updated_at": "2015-04-28T03:19:28Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.3.1/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.1", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, it is most likely due to the incomplete parser.  Please subscribe to notifications\nor comment on [Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the\nparser is complete.**\n\n# Changelog\n\n## v0.3.1\n- Enhancements\n  - [#112](https://github.com/KronicDeth/intellij-elixir/pull/112) - File > New > Project From Existing Sources can be used in IntelliJ to setup the excludes, sources, tests, SDK and libraries for an Elixir project that has already been created with `mix new`. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#114](https://github.com/KronicDeth/intellij-elixir/pull/114) - Operators can be qualified function names - [@KronicDeth](https://github.com/KronicDeth)\n  - [#118](https://github.com/KronicDeth/intellij-elixir/pull/114) - [@KronicDeth](https://github.com/KronicDeth)\n    - Anonymous function calls (`.(...)`)\n    - Inspection that marks errors when keywords aren't at end of list.\n\n# Upgrading\n\n## v0.3.1\n\n**NOTE: The Project Structure Detector is just bookkeeping and visual now.  No other features currently take advantage of the SDK setting or the marked directories.  Theses Project Settings will be used for later features.**\n\nTo take advantage of the new Project Structure Detector in IntelliJ, you will want to recreate any project you\npreviously opened as an Empty Project.\n\n(Copied from Elixir Plugin > Features > Project > From Existing Directory in README.md)\n\nTo take advantage of the new Project Structure Detector in IntelliJ, you will want to recreate any project you\npreviously opened as an Empty Project.\n\n(Copied from Elixir Plugin > Features > Project > From Existing Directory in README.md)\n1. File > New > Project From Existing Sources...\n2. Select the root directory of your project.\n3. Leave the default selection, \"Create project from existing sources\"\n4. Click Next\n5. Project name will be filled with the basename of the root directory.  Customize it if you like.\n6. Project location will be the root directory.\n7. Click Next.\n8. If you previously opened the directory in IntelliJ or another JetBrains IDE, you'll be prompted to overwrite the\n   .idea directory.  Click Yes.\n9. You'll be prompted with a list of detected Elixir project roots to add to the project.  Each root contains a\n   `mix.exs`.  Uncheck any project roots that you don't want added.\n10. Click Next.  \n11. Select a Project SDK directory by clicking Configure.\n12. The plugin will automatically find the newest version of Elixir installed. (**NOTE: SDK detection only works for\n    homebrew installs on OSX.  [Open an issue](https://github.com/KronicDeth/intellij-elixir/issues) with information\n    about Elixir install locations on your operating system and package manager to have SDK detection added for it.**)\n13. If the automatic detection doesn't find your Elixir SDK or you want to use an older version, manually select select\n    the directory above the `bin` directory containing `elixir`, `elixirc`, `iex`, and `mix`.\n14. Click Next after you select SDK name from the Project SDK list.\n15. Click Finish on the framework page.  (_No framework detection is implemented yet for Elixir._)\n16. Choose whether to open in a New Window or in This Window.\n\nAlternatively, you can manually mark the directories and setup the Elixir SDK.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1150991", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1150991/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1150991/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.3.0", "id": 1150991, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExNTA5OTE=", "tag_name": "v0.3.0", "target_commitish": "master", "name": "v0.3.0", "draft": false, "prerelease": true, "created_at": "2015-04-10T19:36:57Z", "published_at": "2015-04-28T03:40:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.3.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.3.0", "body": "**The parser is incomplete until [v1.0.0](https://github.com/KronicDeth/intellij-elixir/milestones/v1.0.0).  If you see\nan odd error from valid Elixir code, it is most likely due to the incomplete parser.  Please subscribe to notifications\nor comment on [Issue #6](https://github.com/KronicDeth/intellij-elixir/issues/6) if you want to be notified when the\nparser is complete.**\n\n# Changelog\n\n## v0.3.0\n- Enhancements\n  - [#108](https://github.com/KronicDeth/intellij-elixir/pull/108) - `\\x` is marked as an error in CharLists, CharList Heredocs, Strings, and String Heredocs, but not in any sigils. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#111](https://github.com/KronicDeth/intellij-elixir/pull/111) - New Elixir File will automatically underscore the camel case module name when creating the file name and will convert qualifying aliases before the last `.` to directories - [@KronicDeth](https://github.com/KronicDeth)\n- Incompatible Changes\n  - [#111](https://github.com/KronicDeth/intellij-elixir/pull/111) - New Elixir File validates that the name is a valid Alias, so each `.` separated part must start with a capital letter.  Previous New Elixir File validated that the name was a valid path, and so forced the name to be lowercase. - [@KronicDeth](https://github.com/KronicDeth)\n\n# Upgrading\n\n## v0.3.0\n\nThe prior version of New > Elixir File validated that the input name was a valid path and would only allow lowercase\nnames, so you'd be forced to set the name to `foo`, which would produce a `foo.ex` file, but `foo` would also be used\nin the file contents:\n\n``` elixir\ndefmodule foo do\n\nend\n```\n\nIn v0.3.0, the validator was corrected so that it only allows Alias (with and without `.`), so instead of entering the\nname as `foo`, enter it as `Foo`.  The file will still be named `foo.ex`, but the module name will correctly be `Foo`\nin the file contents:\n\n``` elixir\ndefmodule Foo do\nend\n```\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1126066", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/1126066/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/1126066/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.2.1", "id": 1126066, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExMjYwNjY=", "tag_name": "v0.2.1", "target_commitish": "master", "name": "v0.2.1", "draft": false, "prerelease": true, "created_at": "2015-04-04T15:29:06Z", "published_at": "2015-04-04T15:40:18Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/506718", "id": 506718, "node_id": "MDEyOlJlbGVhc2VBc3NldDUwNjcxOA==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 934455, "download_count": 11, "created_at": "2015-04-04T15:40:04Z", "updated_at": "2015-04-04T15:40:05Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.2.1/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.2.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.2.1", "body": "## v0.2.1\n- Enhancements\n  - [#105](https://github.com/KronicDeth/intellij-elixir/pull/105) - No parentheses function calls can occur as the right operand in binary infix operations or the sole operand of unary prefix operation. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#74](https://github.com/KronicDeth/intellij-elixir/pull/74) - [@KronicDeth](https://github.com/KronicDeth)\n    - Function calls with neither parentheses nor `do` blocks that have at least 2 arguments: a positional argument and keyword arguments or 2 or more positional argument(s) followed by optional keyword arguments.\n    - Inspection that marks errors for ambiguous commas\n    - Inspection that marks errors for ambiguous parentheses\n    - Quick Fix for the ambiguous parentheses to remove the space between the function name and the opening parentheses.\n  - [#75](https://github.com/KronicDeth/intellij-elixir/pull/75) - [@KronicDeth](https://github.com/KronicDeth)\n    - Inspection that marks errors for missing end-of-expressions (`;` and newlines) between expressions.\n    - Quick Fix to insert `;` for missing end-of-expression.\n    - Quick Fix to insert newline for missing end-of-expression.\n- Bug Fixes\n  - [#74](https://github.com/KronicDeth/intellij-elixir/pull/74) - Right hand-side of `dot_alias` and `dot_identifier`\n    was translated incorrectly. Only Aliases and Identifiers are allowed now. [@KronicDeth](https://github.com/KronicDeth)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/744515", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/744515/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/744515/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.2.0", "id": 744515, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTc0NDUxNQ==", "tag_name": "v0.2.0", "target_commitish": "master", "name": "v0.2.0", "draft": false, "prerelease": true, "created_at": "2014-12-01T04:04:39Z", "published_at": "2014-12-01T04:09:52Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/325808", "id": 325808, "node_id": "MDEyOlJlbGVhc2VBc3NldDMyNTgwOA==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 614675, "download_count": 50, "created_at": "2014-12-01T04:30:26Z", "updated_at": "2014-12-01T04:30:31Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.2.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.2.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.2.0", "body": "This is the first release with a community contributor, @abaire, who I'd like to thank for adding Module creation support.  This is the release marks the transition from primarily [tokenization](https://github.com/elixir-lang/elixir/blob/de39bbaca277002797e52ffbde617ace06233a2b/lib/elixir/src/elixir_tokenizer.erl) to [parsing](https://github.com/elixir-lang/elixir/blob/de39bbaca277002797e52ffbde617ace06233a2b/lib/elixir/src/elixir_parser.yrl), including [error recovery for base integers](https://github.com/KronicDeth/intellij-elixir/pull/73)\n\n![screen shot 2014-11-30 at 10 08 26 pm](https://cloud.githubusercontent.com/assets/298259/5241188/773bf8f4-78dd-11e4-86ed-7584bbd05f31.png)\n\n## v0.2.0\n- Enhancements\n  - [#73](https://github.com/KronicDeth/intellij-elixir/pull/73) - [@KronicDeth](https://github.com/KronicDeth)\n    - New attributes for parts of numbers on Color Settings Page\n      - Binary, Decimal, Hexadecimal, and Octal Digits\n    - Decimal Exponent, Mark, and Separator\n    - Invalid Binary, Decimal, Hexadecimal, and Octal Digits\n      - 2-9, A-Z, and a-z will be parsed as invalid binary digits\n      - 8-9, A-Z, and a-z will be parsed as invalid octal digits\n      - G-Z and g-z will be parsed as invalid hexadecimal digits\n    - Non-Decimal Base Prefix\n      - Any letter other than b, o, or x, in either case, will be recognized as an invalid whole number base\n    - Obsolete Non-Decimal Base Prefix (`B` for binary and `X` for hexadecimal)\n  - Any digit, 0-9, A-Z, or a-z will be parsed as invalid for invalid whole number based numbers\n  - Recovery for non-decimal whole numbers if the prefix is given, but no digits are given\n- Incompatible Changes\n  - [#73](https://github.com/KronicDeth/intellij-elixir/pull/17): Number attribute has been removed from Color Settings page - [@KronicDeth](https://github.com/KronicDeth)\n\n## v0.1.4\n- Enhancements\n  - [#17](https://github.com/KronicDeth/intellij-elixir/pull/17): All valid escape sequences (`\\<character>`, `\\x<hexadecimal>`, `\\x{<hexadecimal>}` are recognized. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#18](https://github.com/KronicDeth/intellij-elixir/pull/18): Support for creation of Elixir modules - [@abaire](https://github.com/abaire) ![New Elixir File](/screenshots/New%20Elixir%20File.png?raw=true)\n  - [#21](https://github.com/KronicDeth/intellij-elixir/pull/21): Use [pygments' elixir_example.ex](https://bitbucket.org/birkenfeld/pygments-main/src/102ed2526c384403fd0e0129b3e31832a6583ea1/tests/examplefiles/example_elixir.ex?at=default) supplied by [@alco](https://github.com/alco) for Color Settings Page - [@KronicDeth](https://github.com/KronicDeth)\n  - [#25](https://github.com/KronicDeth/intellij-elixir/pull/25): `?` before any character or valid escape sequence will be recognized as a character token. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#35](https://github.com/KronicDeth/intellij-elixir/pull/35): `;` is recognized as EOL. `\\r\\n` and `\\n` style EOL can be escaped with `\\` and will be treated as whitespace.  - [@KronicDeth](https://github.com/KronicDeth)\n  - [#38](https://github.com/KronicDeth/intellij-elixir/pull/38): Operator arity, associativity, and precedence - [@KronicDeth](https://github.com/KronicDeth)\n  - [#39](https://github.com/KronicDeth/intellij-elixir/pull/38): Decimal integers and floats - [@KronicDeth](https://github.com/KronicDeth)\n  - [#40](https://github.com/KronicDeth/intellij-elixir/pull/40): Identifiers (variable, function, and macro names) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#41](https://github.com/KronicDeth/intellij-elixir/pull/41): `...` identifier - [@KronicDeth](https://github.com/KronicDeth)\n  - [#42](https://github.com/KronicDeth/intellij-elixir/pull/42): Aliases (module names) - [@KronicDeth](https://github.com/KronicDeth)\n  - [#45](https://github.com/KronicDeth/intellij-elixir/pull/45): Keyword identifiers - [@KronicDeth](https://github.com/KronicDeth)\n  - [#49](https://github.com/KronicDeth/intellij-elixir/pull/49): Empty Parentheses - [@KronicDeth](https://github.com/KronicDeth)\n  - [#52](https://github.com/KronicDeth/intellij-elixir/pull/52): In Operator - [@KronicDeth](https://github.com/KronicDeth)\n  - [#54](https://github.com/KronicDeth/intellij-elixir/pull/54): Dot Operator - [@KronicDeth](https://github.com/KronicDeth)\n  - [#56](https://github.com/KronicDeth/intellij-elixir/pull/56): Keyword Lists - [@KronicDeth](https://github.com/KronicDeth)\n  - [#70](https://github.com/KronicDeth/intellij-elixir/pull/70): Matched Expressions - [@KronicDeth](https://github.com/KronicDeth)\n  - [#72](https://github.com/KronicDeth/intellij-elixir/pull/72): Regular Keywords (`end`, `false`, `fn`, `nil`, and `true`) - [@KronicDeth](https://github.com/KronicDeth)\n- Bug Fixes\n  - [#17](https://github.com/KronicDeth/intellij-elixir/pull/17): Sigil terminator escapes are recognized, so that sigils are no longer prematurely terminated. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#24](https://github.com/KronicDeth/intellij-elixir/pull/24): Comments do not consume EOL, so trailing comments don't cause error parsing expression on following line. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#36](https://github.com/KronicDeth/intellij-elixir/pull/36): Sigil modifiers now work on groups in addition to heredocs. - [@KronicDeth](https://github.com/KronicDeth)\n  - [#47](https://github.com/KronicDeth/intellij-elixir/pull/47): `;` is separate from `EOL` and either or both can separate expressions, but only `EOL` can separate operators and operands for operations - [@KronicDeth](https://github.com/KronicDeth) \n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/625504", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/625504/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/625504/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.1.3", "id": 625504, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTYyNTUwNA==", "tag_name": "v0.1.3", "target_commitish": "master", "name": "v0.1.3", "draft": false, "prerelease": true, "created_at": "2014-10-14T13:57:32Z", "published_at": "2014-10-14T14:14:15Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/269211", "id": 269211, "node_id": "MDEyOlJlbGVhc2VBc3NldDI2OTIxMQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 541787, "download_count": 26, "created_at": "2014-10-14T14:14:03Z", "updated_at": "2014-10-14T14:14:04Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.1.3/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.1.3", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.1.3", "body": "![screen shot 2014-10-14 at 9 02 36 am](https://cloud.githubusercontent.com/assets/298259/4630305/69d25c22-53ac-11e4-94c4-1ed02c6d30e0.png)\n- Bug Fixes\n  - Blank lines are properly parsed as whitespace instead of bad characters.\n  - EOL is parsed as bad character in sigil name (after `~`) instead of causing the lexer to fail to match, which raised exceptions in Event Log.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/584251", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/584251/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/584251/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.1.2", "id": 584251, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTU4NDI1MQ==", "tag_name": "v0.1.2", "target_commitish": "master", "name": "v0.1.2", "draft": false, "prerelease": true, "created_at": "2014-09-26T02:22:26Z", "published_at": "2014-09-26T02:26:20Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/249945", "id": 249945, "node_id": "MDEyOlJlbGVhc2VBc3NldDI0OTk0NQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 541469, "download_count": 19, "created_at": "2014-09-26T02:26:08Z", "updated_at": "2014-09-26T02:26:09Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.1.2/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.1.2", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.1.2", "body": "- Enhancements\n  - Atoms with highlighting\n    - Atom with double or single quotes to allow interpolation.  Double quotes are highlighted as 'String' while single\n      quotes are highlighted as 'Char List'.  This may be changed in the future.\n    - Literal atoms highlighted as 'Atom'.\n    - Operator atoms highlighted as 'Atom'.\n\n![color settings](https://cloud.githubusercontent.com/assets/298259/4415078/5bcd4d58-4524-11e4-855b-7f7b11d990ed.png)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/570987", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/570987/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/570987/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.1.1", "id": 570987, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTU3MDk4Nw==", "tag_name": "v0.1.1", "target_commitish": "master", "name": "v0.1.1", "draft": false, "prerelease": true, "created_at": "2014-09-20T06:33:11Z", "published_at": "2014-09-20T06:36:33Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/244092", "id": 244092, "node_id": "MDEyOlJlbGVhc2VBc3NldDI0NDA5Mg==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 538806, "download_count": 16, "created_at": "2014-09-20T06:35:19Z", "updated_at": "2014-09-20T06:35:20Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.1.1/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.1.1", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.1.1", "body": "- Bug Fixes\n  - Build using JDK 6 instead of 7 so that plugin will work by default on OSX Mavericks.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/555576", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/555576/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/555576/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.1.0", "id": 555576, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTU1NTU3Ng==", "tag_name": "v0.1.0", "target_commitish": "master", "name": "v0.1.0", "draft": false, "prerelease": true, "created_at": "2014-09-13T19:46:43Z", "published_at": "2014-09-13T19:48:38Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/237433", "id": 237433, "node_id": "MDEyOlJlbGVhc2VBc3NldDIzNzQzMw==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 539199, "download_count": 14, "created_at": "2014-09-13T19:48:14Z", "updated_at": "2014-09-13T19:48:15Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.1.0/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.1.0", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.1.0", "body": "## v0.1.0\n- Enhancements\n  - Literal and interpolated sigils with highlighting\n    - CharList Sigils (`~c` and `~C`) highlighted as 'Char List' in Settings.</li>\n    - Regex Sigils (`~r` and `~R`) highlighted as 'Sigil' in Settings. **NOTE: Regex syntax is not internally highlighted yet**\n    - String Sigils (`~s` and `~S`) highlighted as 'String' in Settings.\n    - Word Sigils (`~w` and `~W`) highlighted as 'Sigil' in Settings.\n    - Custom Sigils highlighted as 'Sigil' in Settings.\n    - Modifiers are highlighted on Regex, Word, and Custom while modifiers aren't allowed on CharList and String Sigils.\n- Bug Fixes\n  - Single-quoted strings are correctly referred to as 'Character List' now instead of 'String' in Settings.\n  - Double-quoted strings are correctly referred to as 'String' now instead of 'Interpolated String' in Settings.\n  - Non-Heredoc CharLists and Strings can be multiline.\n  - CharLists and Strings support interpolation and escape sequences.\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/480688", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/480688/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/480688/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.0.3", "id": 480688, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ4MDY4OA==", "tag_name": "v0.0.3", "target_commitish": "master", "name": "v0.0.3", "draft": false, "prerelease": true, "created_at": "2014-08-08T23:57:36Z", "published_at": "2014-08-09T00:01:52Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/205658", "id": 205658, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwNTY1OA==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 517202, "download_count": 14, "created_at": "2014-08-09T00:01:49Z", "updated_at": "2014-08-09T00:01:50Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.0.3/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.0.3", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.0.3", "body": "## v0.0.3\n- Enhancements\n  - Single quoted strings with highlighting. ('String' in Color Settings.)\n  - Double quoted strings with highlighting. ('Interpolated String' in Color Settings.)\n    - Interpolation (`#{` and `}`) with highlighting. ('Expression Substitution Mark' in Color Settings.)\n    - Escape sequences for `\"` and `#` with highlighting. ('Escape Sequence' in Color Settings.)\n"}
{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/468745", "assets_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/468745/assets", "upload_url": "https://uploads.github.com/repos/KronicDeth/intellij-elixir/releases/468745/assets{?name,label}", "html_url": "https://github.com/KronicDeth/intellij-elixir/releases/tag/v0.0.2", "id": 468745, "author": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ2ODc0NQ==", "tag_name": "v0.0.2", "target_commitish": "main", "name": "v0.0.2", "draft": false, "prerelease": true, "created_at": "2014-08-04T05:14:29Z", "published_at": "2014-08-04T05:15:32Z", "assets": [{"url": "https://api.github.com/repos/KronicDeth/intellij-elixir/releases/assets/200745", "id": 200745, "node_id": "MDEyOlJlbGVhc2VBc3NldDIwMDc0NQ==", "name": "intellij-elixir.zip", "label": null, "uploader": {"login": "KronicDeth", "id": 298259, "node_id": "MDQ6VXNlcjI5ODI1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/298259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KronicDeth", "html_url": "https://github.com/KronicDeth", "followers_url": "https://api.github.com/users/KronicDeth/followers", "following_url": "https://api.github.com/users/KronicDeth/following{/other_user}", "gists_url": "https://api.github.com/users/KronicDeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/KronicDeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KronicDeth/subscriptions", "organizations_url": "https://api.github.com/users/KronicDeth/orgs", "repos_url": "https://api.github.com/users/KronicDeth/repos", "events_url": "https://api.github.com/users/KronicDeth/events{/privacy}", "received_events_url": "https://api.github.com/users/KronicDeth/received_events", "type": "User", "site_admin": false}, "content_type": "application/zip", "state": "uploaded", "size": 511675, "download_count": 14, "created_at": "2014-08-04T05:16:18Z", "updated_at": "2014-08-04T05:16:27Z", "browser_download_url": "https://github.com/KronicDeth/intellij-elixir/releases/download/v0.0.2/intellij-elixir.zip"}], "tarball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/tarball/v0.0.2", "zipball_url": "https://api.github.com/repos/KronicDeth/intellij-elixir/zipball/v0.0.2", "body": "- Enhancements\n  - Binary, Hexadecimal, and Octal numbers (including deprecated syntax) are recognized as numbers.\n  - Syntax Highlighting for numbers.\n  - Color Settings page for changing the color of comments and numbers for Elixir (Preferences > Editor > Colors & Fonts > Elixir).\n- Bug Fixes\n  - Parser no longer freezes IDE on tokens it doesn't understand.\n  - White space at beginning of lines no longer leads to annotation errors.\n  - White space and EOLs at beginning of file no longer lead to annotation errors.\n"}

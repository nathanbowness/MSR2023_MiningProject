{"url": "https://api.github.com/repos/jgaeddert/liquid-dsp/releases/83690734", "assets_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/releases/83690734/assets", "upload_url": "https://uploads.github.com/repos/jgaeddert/liquid-dsp/releases/83690734/assets{?name,label}", "html_url": "https://github.com/jgaeddert/liquid-dsp/releases/tag/v1.5.0", "id": 83690734, "author": {"login": "jgaeddert", "id": 253027, "node_id": "MDQ6VXNlcjI1MzAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/253027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgaeddert", "html_url": "https://github.com/jgaeddert", "followers_url": "https://api.github.com/users/jgaeddert/followers", "following_url": "https://api.github.com/users/jgaeddert/following{/other_user}", "gists_url": "https://api.github.com/users/jgaeddert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgaeddert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgaeddert/subscriptions", "organizations_url": "https://api.github.com/users/jgaeddert/orgs", "repos_url": "https://api.github.com/users/jgaeddert/repos", "events_url": "https://api.github.com/users/jgaeddert/events{/privacy}", "received_events_url": "https://api.github.com/users/jgaeddert/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAAoA3M4E_QTu", "tag_name": "v1.5.0", "target_commitish": "master", "name": "Version 1.5.0", "draft": false, "prerelease": false, "created_at": "2022-11-20T20:58:12Z", "published_at": "2022-11-20T21:07:20Z", "assets": [], "tarball_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/tarball/v1.5.0", "zipball_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/zipball/v1.5.0", "body": "This release includes substantially improved testing coverage, deep `copy()` methods for nearly all objects, improved speed, and resolves a number of issues and pull requests.\r\n\r\n  * build\r\n    - added support for [PlatformIO](https://platformio.org) for embeedded\r\n      development (thanks, @jcw!)\r\n    - incorporated recursive `copy()` methods to objects to facilitate c++ copy\r\n      constructors for bindings; now all objects can be deep copied to a new\r\n      object with their entire memory and state preserved\r\n    - added convenience method to malloc and copy memory arrays\r\n    - improved support for error codes across objects and methods\r\n    - cleaned up spelling errors across project (thanks, @nowls!)\r\n    - scrubbed function argument variable names to avoid underscore followed\r\n      by a capital letter, causing trouble with pre-compiler processing\r\n    - added basic test to check linking to installed library, incorporating\r\n      into CI/CD pipelines\r\n    - added more example programs\r\n  * autotest\r\n    - increased coverage testing (81% across entire project)\r\n    - added the ability to \"hammer\" a particular test by running repeatedly on\r\n      incremental seeds to assess specific edge cases (e.g. with random data)\r\n    - added timer to show execution time for each test and identify areas for\r\n      speed improvements\r\n    - added methods for testing spectral response of various fields\r\n    - added special directory for storing output logs: `autotest/logs/`\r\n  * benchmark\r\n    - replacing old C-based benchmark comparison with simpler python version\r\n  * dotprod\r\n    - added support for AVX SIMD in vector dot products (thanks, @vankxr!)\r\n  * fft\r\n    - adding macro to allow for aligned memory allocation if FFTW is used\r\n      (thanks, @nowls!)\r\n  * filter\r\n    - added new halfband filter design using Parks-McClellan algorithm and\r\n      **qs1dsearch** method to provide as exact a specification as possible\r\n    - added method to retrieve filter response from coefficients array\r\n    - **dds**: adding methods to get/set scale\r\n    - **firhilb**, **iirhilb**: added block processing method\r\n    - **msresamp**, **resamp**: adding method to provide the exact number of output\r\n      samples with provided input size\r\n    - **msresamp2**, **resamp2**: using better halfband filter design for exact user\r\n      specifications\r\n    - **resamp**: adding methods to get/set scale, fixing filter bank resolution\r\n      (was hard-coded, now respects user configuration)\r\n  * framing\r\n    - **framesync64**: added methods to set callback and userdata (context)\r\n      fields, adding support for exporting debugging files for post-analysis\r\n      as well as python script for processing, adding better estimate of\r\n      error vector magnitude\r\n    - **msource**: added convenience method to recall number of samples generated\r\n      by each source\r\n    - **ofdmflexframesync**: added methods to set callback and userdata (context)\r\n      fields\r\n    - **qpacketmodem**: returning much better estimate of error vector magnitude\r\n    - **qsource**: fixed issue with carrier frequency adjustment\r\n  * optim\r\n    - added `qs1dsearch` object to perform quad-section 1-dimensional search:\r\n      similar to bisection search, but to find potentially non-continuous\r\n      minimum/maximum of function\r\n", "discussion_url": "https://github.com/jgaeddert/liquid-dsp/discussions/308", "reactions": {"url": "https://api.github.com/repos/jgaeddert/liquid-dsp/releases/83690734/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 3}
{"url": "https://api.github.com/repos/jgaeddert/liquid-dsp/releases/58590913", "assets_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/releases/58590913/assets", "upload_url": "https://uploads.github.com/repos/jgaeddert/liquid-dsp/releases/58590913/assets{?name,label}", "html_url": "https://github.com/jgaeddert/liquid-dsp/releases/tag/v1.4.0", "id": 58590913, "author": {"login": "jgaeddert", "id": 253027, "node_id": "MDQ6VXNlcjI1MzAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/253027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgaeddert", "html_url": "https://github.com/jgaeddert", "followers_url": "https://api.github.com/users/jgaeddert/followers", "following_url": "https://api.github.com/users/jgaeddert/following{/other_user}", "gists_url": "https://api.github.com/users/jgaeddert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgaeddert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgaeddert/subscriptions", "organizations_url": "https://api.github.com/users/jgaeddert/orgs", "repos_url": "https://api.github.com/users/jgaeddert/repos", "events_url": "https://api.github.com/users/jgaeddert/events{/privacy}", "received_events_url": "https://api.github.com/users/jgaeddert/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAAoA3M4DfgbB", "tag_name": "v1.4.0", "target_commitish": "master", "name": "Version 1.4.0", "draft": false, "prerelease": false, "created_at": "2022-02-03T11:34:25Z", "published_at": "2022-02-03T11:41:46Z", "assets": [], "tarball_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/tarball/v1.4.0", "zipball_url": "https://api.github.com/repos/jgaeddert/liquid-dsp/zipball/v1.4.0", "body": "This release includes a number of new objects, new methods for existing objects, better support for error handling, integrated GitHub workflows for testing & code coverage, and general stability enhancements:\r\n\r\n  * autotest\r\n    - automated code coverage testing (72%)\r\n  * build\r\n    - incorporated error handling in most methods with integer-based return value\r\n  * agc\r\n    - added interface to check if AGC is locked or not\r\n  * buffer\r\n    - cbuffer: added method to check if buffer is empty\r\n  * dotprod\r\n    - included methods to create/recreate object in reverse order\r\n  * equalization\r\n    - eqlms: added convenience methods for copying coefficients and running as\r\n      a decimator\r\n  * fft\r\n    - spgram: adding convenience methods for getting/setting properties\r\n    - spwaterfall: adding convenience methods for getting/setting properties\r\n  * filter\r\n    - new direct digital synthesis (DDS) family of objects which allows\r\n      cascaded half-band interpolation/decimation with arbitrary frequency\r\n      translation\r\n    - new fractional delay (fdelay) family of objects which allow for\r\n      adjustable large fractional delays\r\n    - firdecim: adding convenience method to get decimation rate\r\n    - firfilt: adding convenience methods to get/copy coefficients as well as\r\n      create object using firdespm algorithm\r\n    - firinterp: adding convenience methods for new ways to create object as\r\n      well as getting object properties\r\n    - firpfb: adding convenience methods to create default object, write\r\n      samples\r\n    - resamp2: adding methods to get/set output scale\r\n    - rresamp: adding methods to operate with block execution\r\n  * framing\r\n    - new arbitrary rate symstreamr object (derived from symstream family)\r\n    - framesync64: adding methods for getting/resetting frame data statistics\r\n      as well as getting/setting detection threshold\r\n    - gmskframegen/gmskframesync: extending methods to support easier\r\n      operation, getting/resetting frame data statistics, more control over\r\n      parameters in create methods\r\n    - ofdmflexframesync: adding methods to get/reset frame data statistics\r\n    - qdetector: adding method to get threshold\r\n    - qpilotsync: adding method to get error vector magnitude\r\n    - symstream: adding convenience methods for getting properties\r\n    - symtrack: adding convenience methods for getting/setting properties\r\n  * math\r\n    - adding `liquid_` prefix to winodowing functions while supporting backwards\r\n      compatibility with older methods\r\n    - adding `liquid_` prefix to internal polynomial functions, using\r\n      common double-precision method for finding polynomial roots\r\n  * multichannel\r\n    - firpfbch2: adding convenience methods to get object properties\r\n  * modem\r\n    - modem: adding type extension for more consistency: `modem` -> `modemcf`,\r\n      supporting backwards compatibility with API shim\r\n"}

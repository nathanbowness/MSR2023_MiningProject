{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/60124765", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/60124765/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/60124765/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.4.0", "id": 60124765, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDNJTXOA5VuXQ", "tag_name": "v5.4.0", "target_commitish": "develop", "name": "v5.4.0", "draft": false, "prerelease": false, "created_at": "2021-12-21T03:06:26Z", "published_at": "2022-02-22T12:07:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.4.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.4.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New Features\r\n\r\n* Rails 7 support, including contributions from @anthonyshull in [#1205](https://github.com/pat/thinking-sphinx/pull/1205).\r\n\r\n## Changes to behaviour\r\n\r\n* Confirmed support by testing against Manticore 4.0 and Sphinx 3.4.\r\n\r\n### Fixes\r\n\r\n* Include instance_exec in ThinkingSphinx::Search::CORE_METHODS by @jdelStrother in [#1210](https://github.com/pat/thinking-sphinx/pull/1210).\r\n* Use File.exist? instead of the deprecated File.exists? ([#1211](https://github.com/pat/thinking-sphinx/issues/1211)).", "reactions": {"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/60124765/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "mentions_count": 2}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/48091146", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/48091146/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/48091146/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.3.0", "id": 48091146, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ4MDkxMTQ2", "tag_name": "v5.3.0", "target_commitish": "develop", "name": "v5.3.0", "draft": false, "prerelease": false, "created_at": "2021-08-19T06:23:38Z", "published_at": "2021-08-19T06:29:13Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.3.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.3.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## Changes to behaviour\r\n\r\n* StaleIdsExceptions now include a URL in their error message with recommendations on how to resolve the problem.\r\n* Fire real-time callbacks on `after_commit` (including deletions) instead of `after_save`/`after_destroy` to ensure data is fully persisted to the database before updating Sphinx. More details in [#1204](https://github.com/pat/thinking-sphinx/pull/1204).\r\n\r\n## Fixes\r\n\r\n* Ensure Thinking Sphinx's ActiveRecord components are loaded by either Rails' after_initialise hook or ActiveSupport's on_load notification, because the order of these two events are not consistent.\r\n* Remove `app/indices` from eager_load_paths in Rails 4.2 and 5, to match the behaviour in 6.\r\n\r\nBoth of these fixes are evolutions/improvements to changes introduced in v5.2.0/5.2.1.", "reactions": {"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/48091146/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/47507503", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/47507503/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/47507503/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.2.1", "id": 47507503, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ3NTA3NTAz", "tag_name": "v5.2.1", "target_commitish": "develop", "name": "v5.2.1", "draft": false, "prerelease": false, "created_at": "2021-08-09T01:27:51Z", "published_at": "2021-08-09T01:32:49Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.2.1", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.2.1", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## Fixes\r\n\r\n* Ensure ActiveRecord components are loaded for rake tasks, but only after the Rails application has initialised. More details in [#1199](https://github.com/pat/thinking-sphinx/issues/1199). A fix for a bug introduced in v5.2.0.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/44511008", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/44511008/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/44511008/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.2.0", "id": 44511008, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ0NTExMDA4", "tag_name": "v5.2.0", "target_commitish": "develop", "name": "v5.2.0", "draft": false, "prerelease": false, "created_at": "2021-06-12T01:47:13Z", "published_at": "2021-06-12T01:51:41Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.2.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.2.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New features\r\n\r\n* Confirmed support for Ruby 3.0.\r\n* Orphaned records in real-time indices can now be cleaned up without running `rails ts:rebuild`. Disabled by default, can be enabled by setting `real_time_tidy` to true per environment in `config/thinking_sphinx.yml` (and will need `ts:rebuild` to restructure indices upon initial deploy). More details in [#1192](https://github.com/pat/thinking-sphinx/pull/1192).\r\n\r\n## Bug fixes\r\n\r\n* Avoid loading ActiveRecord during Rails initialisation so app configuration can still have an impact ([@jdelStrother](https://github.com/jdelStrother) in [#1194](https://github.com/pat/thinking-sphinx/pull/1194)).\r\n* Remove `app/indices` (in both the Rails app and engines) from Rails' eager load paths, which was otherwise leading to indices being loaded more than once. (See [#1191](https://github.com/pat/thinking-sphinx/issues/1191) and [#1195](https://github.com/pat/thinking-sphinx/issues/1195)).", "reactions": {"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/44511008/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/35759668", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/35759668/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/35759668/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.1.0", "id": 35759668, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM1NzU5NjY4", "tag_name": "v5.1.0", "target_commitish": "develop", "name": "v5.1.0", "draft": false, "prerelease": false, "created_at": "2020-12-28T03:25:56Z", "published_at": "2020-12-28T03:29:43Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.1.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.1.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New features\r\n\r\n* Support for Sphinx v3.3 and Manticore v3.5.\r\n* Support for Rails 6.1 (via [joiner](https://rubygems.org/gems/joiner) v0.6.0).\r\n\r\n## Changes to behaviour\r\n\r\n* `enable_star` is no longer available as a configuration option, as it's been enabled by default in Sphinx since v2.2.2, and is no longer allowed in Sphinx v3.3.1.\r\n* All timestamp attributes are now considered plain integer values from Sphinx's perspective. Sphinx was already expecting integers, but since Sphinx v3.3.1 it doesn't recognise timestamps as a data type. There is no functional difference with this change - Thinking Sphinx was always converting times to their UNIX epoch integer values.\r\n* Allow configuration of the maximum statement length ([@kalsan](https://github.com/kalsan) in [#1179](https://github.com/pat/thinking-sphinx/pull/1179)).\r\n* Respect `:path` values to navigate associations for Thinking Sphinx callbacks on SQL-backed indices. Discussed in [#1182](https://github.com/pat/thinking-sphinx/issues/1182).\r\n\r\n## Bug fixes\r\n\r\n* Don't attempt to update delta flags on frozen model instances."}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/28729417", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/28729417/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/28729417/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v5.0.0", "id": 28729417, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4NzI5NDE3", "tag_name": "v5.0.0", "target_commitish": "develop", "name": "v5.0.0", "draft": false, "prerelease": false, "created_at": "2020-07-20T08:51:40Z", "published_at": "2020-07-20T08:54:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v5.0.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v5.0.0", "body": "## Major Features and Breaking Changes\r\n\r\nThinking Sphinx v5.0 has one significant change - explicit callbacks - plus drops support for old versions of Rails/Ruby/Sphinx, and adds a few other smaller improvements.\r\n\r\n### Explicit Callbacks\r\n\r\nPrevious versions of Thinking Sphinx automatically added callbacks to _all_ ActiveRecord models, for the purpose of persisting changes back to Sphinx (whether that be inserts, updates, or deletions). And while the actual overhead for non-indexed models wasn't super slow, it's still far from ideal.\r\n\r\nSo now, you need to add callbacks yourself, to just the models you're indexing.\r\n\r\nWith SQL-backed models (defined using `:with => :active_record`), you'll very likely want to add one of the two following lines inside your model:\r\n\r\n```ruby\r\nclass Article < ApplicationRecord\r\n  # If you're not using delta indices:\r\n  ThinkingSphinx::Callbacks.append(self, :behaviours => [:sql])\r\n\r\n  # If you *are* using delta indices:\r\n  ThinkingSphinx::Callbacks.append(self, :behaviours => [:sql, :deltas])\r\nend\r\n```\r\n\r\nIf you're using real-time indices, you very likely already have callbacks defined in your models, but you can replace them with the new calls:\r\n\r\n```ruby\r\nclass Article < ApplicationRecord\r\n  # Instead of this...\r\n  after_save ThinkingSphinx::RealTime.callback_for(:article)\r\n  # use this...\r\n  ThinkingSphinx::Callbacks.append(self, :behaviours => [:real_time])\r\nend\r\n```\r\n\r\nFor associated models which still fire real-time callbacks, you can use the `:path` option with the same call:\r\n\r\n```ruby\r\nclass Comment < ApplicationRecord\r\n  belongs_to :article\r\n\r\n  ThinkingSphinx::Callbacks.append self,\r\n    :behaviours => [:real_time],\r\n    :path       => [:article]\r\nend\r\n```\r\n\r\nAnd if you're using a custom block with your old real-time callback, you can pass that same block to the new approach as well:\r\n\r\n```ruby\r\nclass Article < ApplicationRecord\r\n  ThinkingSphinx::Callbacks.append(\r\n    self, :behaviours => [:real_time]\r\n  ) do |instance|\r\n    # returning an array of instances to index. You could add\r\n    # custom logic here if you don't want indexing to happen\r\n    # in some cases.\r\n  end\r\nend\r\n```\r\n\r\nAt this point in time, the older callback style for real-time indices will continue to work, but it's still recommended to update your code to the new style instead.\r\n\r\nOn the off chance you are using SQL-backed indices _and_ you have `attribute_updates` enabled in `config/thinking_sphinx.yml`, you'll want to specify that in your `:behaviours` option:\r\n\r\n```ruby\r\nThinkingSphinx::Callbacks.append(self, :behaviours => [:sql, :updates])\r\n```\r\n\r\n### Sphinx 2.2.11 or newer is required\r\n\r\nSphinx 2.1 is no longer supported - and ideally, it's best to upgrade any 2.2.x release to 2.2.11.\r\n\r\nSphinx 3.x releases _are_ supported, but there are known issues with indexing SQL-backed indices on a PostgreSQL database (real-time indices are fine though).\r\n\r\nAs part of this change, Sphinx's docinfo setting is no longer configured, so the `skip_docinfo` setting in `config/thinking_sphinx.yml` can be removed.\r\n\r\nWhen it comes to *Manticore* as a drop-in replacement for Sphinx, we're testing against the latest 2.x and 3.x releases, which are currently 2.8.2 and 3.4.2 respectively.\r\n\r\n### Ruby 2.4 or newer is required\r\n\r\nVersions of Ruby less than 2.3 are no longer supported, sorry. We're currently testing against 2.4 through to 2.7.\r\n\r\n### Rails 4.2 or newer is required\r\n\r\nIt's been a long time coming, but Rails 3.2 (and 4.0 and 4.1) are no longer supported. The current supported versions are 4.2 through to 6.0 (and 6.1 will likely work as well, once it's released).\r\n\r\n## Other changes to behaviour\r\n\r\n* Remove internal uses of `send`, replaced with `public_send` as that's available in all supported Ruby versions.\r\n* Custom index_set_class implementations can now expect the `:instances` option to be set alongside `:classes`, which is useful in cases to limit the indices returned if you're splitting index data for given classes/models into shards. (Introduced in PR [#1171](https://github.com/pat/thinking-sphinx/pull/1171) after discussions with @lunaru in [#1166](https://github.com/pat/thinking-sphinx/issues/1166).)\r\n* Deletion statements are simplified by avoiding the need to calculate document keys/offsets (@njakobsen via [#1134](https://github.com/pat/thinking-sphinx/issues/1134)).\r\n* Real-time data is deleted before replacing it, to avoid duplicate data when offsets change (@njakobsen via [#1134](https://github.com/pat/thinking-sphinx/issues/1134)).\r\n* Use `reference_name` as per custom `index_set_class` definitions. Previously, the class method was called on `ThinkingSphinx::IndexSet` even if a custom subclass was configured. (As per discussions with @kalsan in [#1172](https://github.com/pat/thinking-sphinx/issues/1172).)\r\n* Fields and attributes can be overriden - whichever's defined last with a given name is the definition that's used. This is an edge case, but useful if you want to override any of the default fields/indices. (Requested by @kalsan in [#1172](https://github.com/pat/thinking-sphinx/issues/1172).)\r\n\r\n## Bug fixes\r\n\r\nNone.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19483650", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19483650/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/19483650/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.4.1", "id": 19483650, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5NDgzNjUw", "tag_name": "v4.4.1", "target_commitish": "develop", "name": "v4.4.1", "draft": false, "prerelease": false, "created_at": "2019-08-23T02:11:16Z", "published_at": "2019-08-23T02:13:34Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.4.1", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.4.1", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## Changes to behaviour\r\n\r\n* Automatically remove `app/indices` from Zeitwerk's autoload paths in Rails 6.0 onwards (if using Zeitwerk as the autoloader).\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19435735", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19435735/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/19435735/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.4.0", "id": 19435735, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5NDM1NzM1", "tag_name": "v4.4.0", "target_commitish": "develop", "name": "v4.4.0", "draft": false, "prerelease": false, "created_at": "2019-08-21T12:51:35Z", "published_at": "2019-08-21T13:00:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.4.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.4.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New features\r\n\r\n* Confirmed Rails 6.0 support.\r\n* Added ability to have custom real-time index processors (which handles all indices) and populators (which handles a particular index). These are available to get/set via `ThinkingSphinx::RealTime.processor` and `ThinkingSphinx::RealTime.populator`.\r\n\r\nThe **processor** should accept `call` with two arguments: an array of index objects, and a block to invoke after each index is processed. Here is a simple example for parallel processing of indices:\r\n\r\n```ruby\r\n# Add the 'parallel' gem to your Gemfile.\r\nThinkingSphinx::RealTime.processor = Proc.new do |indices, &block|\r\n  Parallel.map(indices) do |index|\r\n    puts \"Populating index #{index.name}\"\r\n    ThinkingSphinx::RealTime.populator.populate index\r\n    puts \"Populated index #{index.name}\"\r\n\r\n    block.call\r\n  end\r\nend\r\n```\r\n\r\nAnd the populator should respond to `populate`, accepting a single argument which is the index object. Here is a simple example for parallel processing.\r\n\r\n```ruby\r\n# Add the 'parallel' gem to your Gemfile.\r\nclass ParallelPopulator\r\n  def self.populate(index)\r\n    new(index).call\r\n  end\r\n\r\n  def initialize(index)\r\n    @index = index\r\n  end\r\n\r\n  def call\r\n    Parallel.each(index.scope.find_in_batches) do |instances|\r\n      transcriber.copy *instances\r\n      true # Don't emit any large object because results are accumulated\r\n    end\r\n    ActiveRecord::Base.connection.reconnect!\r\n  end\r\n\r\n  private\r\n\r\n  attr_reader :index\r\n\r\n  def transcriber\r\n    @transcriber ||= ThinkingSphinx::RealTime::Transcriber.new index\r\n  end\r\nend\r\n\r\nThinkingSphinx::RealTime.populator = ParallelPopulator\r\n```\r\n\r\nInstead of building your own procs/classes from scratch, you may instead wish to subclass the default classes to tweak behaviour - or at the very least, both classes are useful as reference points for your own replacements:\r\n\r\n* [ThinkingSphinx::RealTime::Processor](https://github.com/pat/thinking-sphinx/blob/master/lib/thinking_sphinx/real_time/processor.rb)\r\n* [ThinkingSphinx::RealTime::Populator](https://github.com/pat/thinking-sphinx/blob/master/lib/thinking_sphinx/real_time/populator.rb)\r\n\r\nThese changes were influenced by discussions in #1134 with @njakobsen about parallel processing of real-time indices.\r\n\r\n## Changes to behaviour\r\n\r\n* Improve failure message when tables don't exist for models associated with Sphinx indices ([Kiril Mitov](https://github.com/thebravoman) in #1139).\r\n\r\n## Bug fixes\r\n\r\n* Injected has-many/habtm collection search calls as default extensions to associations in Rails 5+, as it's a more reliable approach in Rails 6.0.0."}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19054979", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19054979/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/19054979/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.3.2", "id": 19054979, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5MDU0OTc5", "tag_name": "v4.3.2", "target_commitish": "develop", "name": "v4.3.2", "draft": false, "prerelease": false, "created_at": "2019-07-10T02:28:06Z", "published_at": "2019-08-03T04:37:05Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.3.2", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.3.2", "body": "## Upgrading\r\n\r\nNo breaking or behaviour changes.\r\n\r\n## Bug fixes\r\n\r\n* Reverted loading change behaviour from v4.3.1 for Rails v5 ([Eduardo J.](https://github.com/eduardoj) in [#1138](https://github.com/pat/thinking-sphinx/pull/1138)).\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19054975", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/19054975/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/19054975/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.3.1", "id": 19054975, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE5MDU0OTc1", "tag_name": "v4.3.1", "target_commitish": "develop", "name": "v4.3.1", "draft": false, "prerelease": false, "created_at": "2019-06-27T03:16:15Z", "published_at": "2019-08-03T04:36:30Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.3.1", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.3.1", "body": "## Upgrading\r\n\r\nNo breaking or behaviour changes.\r\n\r\n## Bug fixes\r\n\r\n* Fixed loading of index files to work with Rails 6 and Zeitwerk ([#1137](https://github.com/pat/thinking-sphinx/issues/1137)).\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/17436501", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/17436501/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/17436501/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.3.0", "id": 17436501, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NDM2NTAx", "tag_name": "v4.3.0", "target_commitish": "develop", "name": "v4.3.0", "draft": false, "prerelease": false, "created_at": "2019-05-18T02:49:11Z", "published_at": "2019-05-18T02:53:32Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.3.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.3.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New features\r\n\r\n* Allow overriding of Sphinx's running state by setting `skip_running_check` to true/false in `config/thinking_sphinx.yml` for appropriate environments. This is useful when Sphinx commands are interacting with a remote Sphinx daemon. As per discussions in [#1131](https://github.com/pat/thinking-sphinx/pull/1131).\r\n* Allow skipping of directory creation by setting `skip_directory_creation` to true/false in `config/thinking_sphinx.yml` for appropriate environments. As per discussions in [#1131](https://github.com/pat/thinking-sphinx/pull/1131).\r\n\r\n## Bug fixes\r\n\r\n* Use ActiveSupport's lock monitor where possible (Rails 5.1.5 onwards) to avoid database deadlocks. Essential investigation by [Jonathan del Strother](https://github.com/jdelstrother) ([#1132](https://github.com/pat/thinking-sphinx/pull/1132)).\r\n* Allow facet searching on distributed indices ([#1135](https://github.com/pat/thinking-sphinx/pull/1132))."}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/16009178", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/16009178/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/16009178/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.2.0", "id": 16009178, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE2MDA5MTc4", "tag_name": "v4.2.0", "target_commitish": "develop", "name": "v4.2.0", "draft": false, "prerelease": false, "created_at": "2019-03-09T04:36:22Z", "published_at": "2019-03-09T04:38:55Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.2.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.2.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes.\r\n\r\n## New features\r\n\r\n* Allow changing the default encoding for MySQL database connections from `utf8` to something else via the `mysql_encoding` setting in `config/thinking_sphinx.yml`. In the next significant release, the default will change to `utf8mb4` (which is supported in MySQL 5.5.3 and newer).\r\n* Added Rails 6.0 and Manticore 2.8 to the test matrix.\r\n\r\n## Changes to behaviour\r\n\r\n* Use Arel's SQL literals for generated order clauses, to avoid warnings from Rails 6.\r\n\r\n## Bug fixes\r\n\r\n* Fix usage of alternative primary keys in update and deletion callbacks and attribute access.\r\n* Ensure `respond_to?` takes Sphinx scopes into account ([Jonathan del Strother](https://github.com/jdelstrother) in [#1124](https://github.com/pat/thinking-sphinx/pull/1124)).\r\n* Add `:excerpts` as a known option for search requests.\r\n* Fix depolymorphed association join construction with Rails 6.0.0.beta2.\r\n* Reset ThinkingSphinx::Configuration's cached values when Rails reloads, to avoid holding onto stale references to ActiveRecord models ([#1125](https://github.com/pat/thinking-sphinx/issues/1125)).\r\n* Don't join against associations in `sql_query` if they're only used by query-sourced properties ([Hans de Graaff](https://github.com/graaff) in [#1127](https://github.com/pat/thinking-sphinx/pull/1127)).\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/14724821", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/14724821/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/14724821/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.1.0", "id": 14724821, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NzI0ODIx", "tag_name": "v4.1.0", "target_commitish": "develop", "name": "v4.1.0", "draft": false, "prerelease": false, "created_at": "2018-12-28T04:12:51Z", "published_at": "2018-12-28T04:17:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.1.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.1.0", "body": "## Upgrading\r\n\r\nNo breaking or major changes, though Ruby 2.2 is now no longer officially supported - but this release will almost certainly still work on it.\r\n\r\n## New features\r\n\r\n* The `:sql` search option can now accept per-model settings with model names as keys. e.g. `ThinkingSphinx.search \"foo\", :sql => {'Article' => {:include => :user}}` (Sergey Malykh in [#1120](https://github.com/pat/thinking-sphinx/pull/1120)).\r\n\r\n## Changes to behaviour\r\n\r\n* Drop MRI 2.2 from the test matrix, and thus no longer officially supported (though the code will likely continue to work with 2.2 for a while).\r\n* Added MRI 2.6, Sphinx 3.1 and Manticore 2.7 to the test matrix.\r\n\r\n## Bug fixes\r\n\r\n* Real-time indices now work with non-default integer primary keys (alongside UUIDs or other non-integer primary keys).\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/10470040", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/10470040/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/10470040/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v4.0.0", "id": 10470040, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwNDcwMDQw", "tag_name": "v4.0.0", "target_commitish": "develop", "name": "v4.0.0", "draft": false, "prerelease": false, "created_at": "2018-04-10T07:50:47Z", "published_at": "2018-04-10T07:52:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v4.0.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v4.0.0", "body": "## Major Features and Changes\r\n\r\nThinking Sphinx v4.0 has been in development for a little while, and includes some significant changes (as befitting a major release):\r\n\r\n### Merging Indices\r\n\r\nMerging indices is now supported via the new `ts:merge` rake task. This is useful when you're using delta indices as an alternative to running `ts:index` regularly to have new/changed records populated into the core indices. Merging should be reliably faster (and it avoids hitting your database to reprocess all the records).\r\n\r\nRunning `ts:index` every now and then to catch any records changed/modified without callbacks is probably wise (perhaps once a day compared to more frequent `ts:merge` calls).\r\n\r\n### Run the daemon on a UNIX socket\r\n\r\nIf you've got Sphinx and your Rails app all on a single machine, you may want to have the daemon (`searchd`) hosting connections via a UNIX socket instead of a TCP socket. Just set the `socket` value in each appropriate environment within `config/thinking_sphinx.yml` (and do _not_ set `mysql41` unless you want the daemon to also be available via that TCP port).\r\n\r\n```yaml\r\nproduction:\r\n  socket: /var/tmp/production.sphinx\r\n```\r\n\r\nThis feature is limited to MRI, as JRuby doesn't seem to have a way to connect to UNIX sockets for MySQL-protocol connections.\r\n\r\n### ActiveRecord 5.2 Support\r\n\r\nThe new release of ActiveRecord/Rails is happily supported by this release.\r\n\r\n### Manticore Support\r\n\r\nThe recent fork of Sphinx known as Manticore is supported, and can be used as a drop-in replacement for Sphinx. In particular, the v2.6.3 release is included in the test matrix.\r\n\r\n## Breaking Changes\r\n\r\n### Sphinx 2.1.2 or newer is required\r\n\r\nSphinx 2.0 is no longer supported - make sure you're running at least 2.1.2, but 2.2.11 is recommended if possible.\r\n\r\n### Ruby 2.2 or newer is required\r\n\r\nVersions of Ruby less than 2.2 are no longer supported, sorry.\r\n\r\n### Removed auto-typing of search filter values\r\n\r\nIf you're filtering via human-entered values (say, via request parameters), then in the past you were allowed to send those string values straight through to Sphinx.\r\n\r\nHowever, Sphinx now supports string filtering, so it's not possible to make assumptions about filter types. Thinking Sphinx v3.4.0 introduced automatic typing of these values, but this was an extra overhead which was far from ideal and was always flagged as temporary.\r\n\r\nSo, please cast your filter values where appropriate:\r\n\r\n```ruby\r\nModel.search :with => {:foo_id => params[:foo_id]}\r\n# should become:\r\nModel.search :with => {:foo_id => params[:foo_id].to_i}\r\n```\r\n\r\n## Minor features\r\n\r\n* If you want to remove the `docinfo` setting from the generated Sphinx configuration (to avoid warnings in Sphinx 2.2+), add `skip_docinfo: true` to each appropriate environment in `config/thinking_sphinx.yml`.\r\n* Sphinx 3.0 is now supported.\r\n* You can now use relative paths in `config/thinking_sphinx.yml`, but you must also add `absolute_paths: true` to each environment for them to be converted to absolute paths for the generated configuration.\r\n\r\n## Changes to behaviour\r\n\r\n* The INDEX_FILTER environment variable is applied when running ts:index on SQL-backed indices.\r\n* Useful error messages are now displayed if processing real-time indices is attempted when the daemon isn't running.\r\n* Rake task code has been refactored into separate command classes under the hood (which allows for `flying-sphinx` to override when appropriate).\r\n* Added `frozen_string_literal: true` pragma comments for safe frozen string literals.\r\n* Exceptions are logged when processing real-time indices without halting the processing.\r\n* Update polymorphic properties to support Rails 5.2.\r\n* Allow configuration of the index guard approach (e.g. `ThinkingSphinx::Configuration.instance.guarding_strategy = ThinkingSphinx::Guard::None`).\r\n* Output a warning if guard files exist when calling ts:index.\r\n* Delete index guard files as part of ts:rebuild and ts:clear.\r\n\r\n## Bug fixes\r\n\r\n* Don't attempt to interpret indices for models that don't have a database table.\r\n* Handle situations where no exit code is provided for Sphinx binary calls.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7937284", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7937284/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/7937284/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.4.2", "id": 7937284, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTc5MzcyODQ=", "tag_name": "v3.4.2", "target_commitish": "develop", "name": "v3.4.2", "draft": false, "prerelease": false, "created_at": "2017-09-29T07:04:03Z", "published_at": "2017-09-29T07:10:48Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.4.2", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.4.2", "body": "## Upgrading\r\n\r\nNo breaking or major changes, just three small fixes and a couple of minor changes.\r\n\r\n## Changes to behaviour\r\n\r\n* Allow use of deletion callbacks for rollback events.\r\n* Remove extra deletion code in the Populator - it's also being done by the real-time rake interface.\r\n\r\n## Bug fixes\r\n\r\n* Real-time callback syntax for namespaced models accepts a string (as was already documented).\r\n* Fix up logged warnings (and avoiding overwriting the existing warn method).\r\n* Add missing search options to known values to avoid incorrect warnings.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7555734", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7555734/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/7555734/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.4.1", "id": 7555734, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTc1NTU3MzQ=", "tag_name": "v3.4.1", "target_commitish": "develop", "name": "v3.4.1", "draft": false, "prerelease": false, "created_at": "2017-08-29T11:19:16Z", "published_at": "2017-08-29T11:21:42Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.4.1", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.4.1", "body": "## Upgrading\r\n\r\nNo breaking or major changes, just two small fixes.\r\n\r\n## Changes to behaviour\r\n\r\n* Errors with \"Lost connection to MySQL server\" are now treated as connection errors (Manuel Schnitzer).\r\n\r\n## Bug fixes\r\n\r\n* Index normalisation will now work even when index model tables don't exist.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7546404", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/7546404/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/7546404/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.4.0", "id": 7546404, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTc1NDY0MDQ=", "tag_name": "v3.4.0", "target_commitish": "develop", "name": "v3.4.0", "draft": false, "prerelease": false, "created_at": "2017-08-28T17:17:21Z", "published_at": "2017-08-28T17:18:49Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.4.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.4.0", "body": "## Upgrading\r\n\r\nThere are a few significant changes in this release. There's nothing that's going to break your code, but there are some deprecations (and thus, there will be breaking in later releases), so reading through is highly recommended.\r\n\r\n### Basic type checking for attribute filters.\r\n\r\nGiven Riddle now quotes string values in filters (because Sphinx now supports filtering on string attributes), we need to be a little more careful about attribute filter values coming in through params. In the past, Riddle would presume any string value was not actually a string, and that's no longer a safe presumption.\r\n\r\nAs of this release, Thinking Sphinx will do its best to cast your filter values to their appropriate types, but it's not going to be perfect, and this will be removed in a future release. So, best to do the casting yourself:\r\n\r\n```ruby\r\nModel.search :with => {:foo_id => params[:foo_id]}\r\n# should become:\r\nModel.search :with => {:foo_id => params[:foo_id].to_i}\r\n```\r\n\r\nThis is likely going to crop up any time you're using params data in filters, because they'll always be strings.\r\n\r\nIf you're confident that you're casting all filter values to their appropriate types, you can remove the search middleware that's attempting to auto-cast (and thus, get a bit of a speed boost) by putting the following in an initialiser:\r\n\r\n```ruby\r\nThinkingSphinx::Middlewares::DEFAULT.delete(\r\n  ThinkingSphinx::Middlewares::AttributeTyper\r\n)\r\nThinkingSphinx::Middlewares::RAW_ONLY.delete(\r\n  ThinkingSphinx::Middlewares::AttributeTyper\r\n)\r\nThinkingSphinx::Middlewares::IDS_ONLY.delete(\r\n  ThinkingSphinx::Middlewares::AttributeTyper\r\n)\r\n```\r\n\r\n### Warnings for unknown options in search calls.\r\n\r\nThinking Sphinx will now output a warning to your logs when unexpected options are used in search queries.\r\n\r\nIf you\u2019re adding your own middleware in or have something else that may allow for custom options, make sure you add them to `ThinkingSphinx::Search.valid_options`.\r\n\r\nIf you don\u2019t want this behaviour to occur, you can remove the middleware from your stack by putting the following in an initialiser:\r\n\r\n```ruby\r\nThinkingSphinx::Middlewares::DEFAULT.delete(\r\n  ThinkingSphinx::Middlewares::ValidOptions\r\n)\r\nThinkingSphinx::Middlewares::RAW_ONLY.delete(\r\n  ThinkingSphinx::Middlewares::ValidOptions\r\n)\r\nThinkingSphinx::Middlewares::IDS_ONLY.delete(\r\n  ThinkingSphinx::Middlewares::ValidOptions\r\n)\r\n```\r\n\r\n### Unified Rake Tasks\r\n\r\nRake tasks are now unified, so the original tasks will operate on real-time indices as well. What this means is that `ts:generate` and `ts:regenerate` can be changed to `ts:index` and `ts:rebuild`. All standard tasks will perform their appropriate behaviours on all indices.\r\n\r\nIf you wish to perform operations on specific types of indices, then there are now tasks available for that, including:\r\n\r\n* `ts:sql:index` (the old behaviour of `ts:index`)\r\n* `ts:sql:rebuild` (the old behaviour of `ts:rebuild`)\r\n* `ts:rt:index` (the old behaviour of `ts:generate`)\r\n* `ts:rt:rebuild` (the old behaviour of `ts:regenerate`)\r\n\r\n## Minor Features\r\n\r\n* Automatically use UTF8 in Sphinx for encodings that are extensions of UTF8 (such as `utf8mb4`).\r\n* Allow generation of a single real-time index (Tim Brown) with the `INDEX_FILTER` environment variable.\r\n\r\n## Changes to behaviour\r\n\r\n- Handle non-computable queries as parse errors.\r\n- Don't search multi-table inheritance ancestors.\r\n- Set a default Sphinx connection timeout of 5 seconds.\r\n- Use saved_changes if it's available (in Rails 5.1+).\r\n- Add support for Ruby's frozen string literals feature.\r\n- Display SphinxQL deletion statements in the log.\r\n- Allow for unsaved records when calculating document ids (and return nil).\r\n- Delta callback logic now prioritises checking for high level settings rather than model changes.\r\n\r\n## Bug Fixes\r\n\r\n- Ensure ts:index now respects rake silent/quiet flags.\r\n- Use the base class of STI models for polymorphic join generation (via Andr\u00e9s Cirugeda).\r\n- Fix multi-field conditions.\r\n- Fix handling of attached starts of Sphinx (via Henne Vogelsang).\r\n- Get bigint primary keys working in Rails 5.1.\r\n- Always close the SphinxQL connection if Innertube's asking (via @cmaion).\r\n- Fix long SphinxQL query handling in JRuby.\r\n- Fix Sphinx connections in JRuby.\r\n- Index normalisation now occurs consistently, and removes unneccesary sphinx_internal_class_name fields from real-time indices.\r\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/4901142", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/4901142/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/4901142/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.3.0", "id": 4901142, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ5MDExNDI=", "tag_name": "v3.3.0", "target_commitish": "develop", "name": "v3.3.0", "draft": false, "prerelease": false, "created_at": "2016-12-13T01:15:40Z", "published_at": "2016-12-13T01:17:39Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.3.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.3.0", "body": "## Upgrading\n\nThere are no breaking changes in this release - upgrading _should_ be a painless process (but do let me know if that's not the case).\n\nA big thank you to all contributors of this release - in particular, Julio Monteiro and Asaf Barton.\n\n## New Features\n\nRunning the `ts:generate` task loads model instances in batches of 1000. You can customise this globally by setting the batch_size option in your `config/thinking_sphinx.yml` file per environment.\n\nAlso, if you prefer to have data persisted to your real-time indices after the database transaction is committed, the callback helper works with `after_commit` just like it does with `after_save` - though you should only use one! Also, if you're using `after_commit`, that means you can't wrap tests that involve Sphinx in transactions.\n\n``` ruby\nclass Article < ActiveRecord::Base\n  # ...\n\n  after_commit ThinkingSphinx::RealTime.callback_for(:article)\n\n  # ...\nend\n```\n\n## Changes to behaviour\n- Memoize the default primary keys per context to improve performance.\n- Added custom exception class for invalid database adapters, rather than relying on Ruby's default exceptions.\n- Sort engine paths for loading indices to ensure they're consistent.\n- The ts:start and ts:stop rake tasks default to verbose, and respect Rake's quiet and silent flags, so those are the recommended approach for getting the output you desire.\n- Use Riddle's reworked command interface for interacting with Sphinx's command-line tools.\n- Delta indexing is now quiet by default (rather than verbose).\n- Only toggle the delta value if the record has changed or is new (rather than on every single save call).\n\n## Bug Fixes\n- Ensure custom primary key columns are handled consistently (Julio Monteiro).\n- Fixed handling of multiple field tokens in wildcarding logic.\n- Improved Rails 5 / JRuby support.\n- Check search query length and raise an exception if they are too long for Sphinx.\n- Don't load ActiveRecord earlier than necessary. This avoids loading Rails out of order, which caused problems with Rails 5.\n- Load indices before deleting index files, to ensure the files are actually found and deleted.\n- Add an explicit source method in the SQLQuery Builder instead of relying on method missing, thus avoiding any global methods named 'source' (Asaf Bartov).\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/3218378", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/3218378/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/3218378/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.2.0", "id": 3218378, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMyMTgzNzg=", "tag_name": "v3.2.0", "target_commitish": "develop", "name": "v3.2.0", "draft": false, "prerelease": false, "created_at": "2016-05-13T09:11:35Z", "published_at": "2016-05-13T09:14:04Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.2.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.2.0", "body": "## Upgrading\n\nThere are no breaking changes in this release - upgrading _should_ be a painless process (but do let me know if that's not the case).\n\nA big thank you to all contributors of this release, which has been a while coming (it's been almost a year since 3.1.4). Andrey Novikov, Nathaneal Gray, Mattia Gheda, Roman Usherenko, Jonathan del Strother, Chance Downs, Andrew Roth, @arrtchiu, Brandon Dewitt: your commits and feedback is greatly appreciated!\n\n## New Features\n\nMuch like the existing suspended deltas feature, you can now suspend/resume _all_ Thinking Sphinx callbacks using `ThinkingSphinx::Callbacks.suspend!` and `ThinkingSphinx::Callbacks.resume!`. This will disable all attribute update callbacks, delta callbacks, real-time update callbacks, and object deletion callbacks. This is particularly useful for unit tests.\n\nSince Thinking Sphinx was first built, the indexing approach has been to process all of the indices in a single `indexer` call. It is now possible to opt for a different approach: to call `indexer` for each index, one by one:\n\n``` ruby\n# This can go in an initialiser:\nThinkingSphinx::Configuration.instance.indexing_strategy = \\\n  ThinkingSphinx::IndexingStrategies::OneAtATime\n# or, the default is:\nThinkingSphinx::Configuration.instance.indexing_strategy = \\\n  ThinkingSphinx::IndexingStrategies::AllAtOnce\n```\n\nYou can give `ThinkingSphinx::Configuration.instance.indexing_strategy` anything you like that responds to `call` and expects an array of index options, and yields index names. You can see the implementations of the two approaches [here](https://github.com/pat/thinking-sphinx/tree/develop/lib/thinking_sphinx/indexing_strategies).\n\nAndrey Novikov has given you the ability to use the environment variable NODETACH when running `rake ts:start`, and that keeps Sphinx around as a foreground process.\n\nNathaneal Gray has added a `:primary_key` option when defining indices, in case you want something different to your model for Sphinx.\n\nMattia Gheda has added `rand_seed` as an allowed SELECT clause option.\n\n@arrtchiu has added the ability to define Sphinx's MySQL SSL options on a per-index basis (via the `set_property` method within an index definition).\n\nJSON attributes are now supported for real-time indices. Also, there's a new exception type `ThinkingSphinx::OutOfBoundsError` for when search queries are requesting results outside of their pagination bounds.\n\n## Changes to behaviour\n- Only use ERB to parse the YAML file if ERB is loaded.\n- Disable deletion callbacks when real-time indices are in place and all other real-time callbacks are disabled.\n- Reduce memory/object usage for model references (Jonathan del Strother).\n- Use Sphinx's bulk insert ability (Chance Downs).\n- Reset delta column before core indexing begins (reverting behaviour introduced in 3.1.0). See issue #958 for further discussion.\n- Don't populate search results when requesting just the count values (Andrew Roth).\n- Improved error messages for duplicate property names and missing columns.\n\n## Bug Fixes\n- Improved handling of marshalled/demarshalled search results.\n- Make preload_indices thread-safe.\n- Handle quoting of namespaced tables (Roman Usherenko).\n- Fix stale id handling for multiple search contexts (Jonathan del Strother).\n- Fixed JRuby compatibility with camelCase method names (Brandon Dewitt).\n- Fixed mysql2 compatibility for memory references (Roman Usherenko).\n- Ensure SQL table aliases are reliable for SQL-backed index queries.\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/1360883", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/1360883/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/1360883/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.1.4", "id": 1360883, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjA4ODM=", "tag_name": "v3.1.4", "target_commitish": "develop", "name": "v3.1.4", "draft": false, "prerelease": false, "created_at": "2015-06-01T12:17:44Z", "published_at": "2015-06-01T12:35:59Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.1.4", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.1.4", "body": "## Contributor Code of Conduct\n\nThis is the first release since I've added [a Contributor Code of Conduct](http://contributor-covenant.org/version/1/0/0/) to the project. There haven't been any problems in the past, but I like being upfront about this. By participating in this project, you agree to abide by its terms.\n\n## Upgrading\n\nIf you're upgrading from v3.1.3 and you're not yet using Sphinx 2.2.x, then you'll probably want to add the `charset_type` setting to `config/thinking_sphinx.yml` for each of your environments - Thinking Sphinx used to specify a default of `'utf-8'`, but Sphinx now insists on UTF-8 and ignores the setting (and will print a warning).\n\nAlso, if you're using polymorphic associations within your index definitions _and_ you're using Rails 3.2, you're going to have to upgrade Rails to use this version of Thinking Sphinx. It's just too painful to manage all the different ActiveRecord behaviours. Sorry.\n\nAnd of course if you're using something older than v3.1.3, reading the earlier release notes is highly recommended.\n\n## New Features\n\nIf you're using MySQL and SQL-backed indices, and you want to use the `GROUP BY` shortcut to speed things up, you can now specify `minimal_group_by?` in `config/thinking_sphinx.yml` (per environment) instead of needing to call `set_property` in each index definition.\n\nFor those unfamiliar with this setting: MySQL is often configured by default to not care if you leave off columns from the GROUP BY clause even when you have aggregations. If you enable this, it'll group by only your primary key, along with any columns you specify yourself using the `group_by` method in index definitions.\n\nThe other new feature of this release is courtesy of Daniel Vandersluis: proper JSON attribute support, which is automatically detected when tied to JSON database columns. Fancy.\n\n## Changes to behaviour\n- Removing sql_query_info setting, as it's no longer used by Sphinx (nor is it actually used by Thinking Sphinx).\n- Remove default charset_type - no longer required for Sphinx 2.2.\n- Remove polymorphic association and (unofficial) HABTM query support (when related to Thinking Sphinx) when ActiveRecord 3.2 is involved.\n\n## Bug Fixes\n- Bug fix for association creation (with polymophic fields/attributes).\n- More consistent with escaping table names.\n- Handle database settings reliably, now that ActiveRecord 4.2 uses strings all the time.\n- Don't try to delete guard files if they don't exist (@exAspArk).\n- Kaminari expects prev_page to be available.\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/870207", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/870207/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/870207/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.1.3", "id": 870207, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTg3MDIwNw==", "tag_name": "v3.1.3", "target_commitish": "develop", "name": "v3.1.3", "draft": false, "prerelease": false, "created_at": "2015-01-21T08:27:22Z", "published_at": "2015-01-21T08:47:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.1.3", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.1.3", "body": "## Upgrading\n\nThere's no modification required if you're upgrading from v3.1.2, though running `rake ts:regenerate` is recommended if you're using real-time indices. Of course, if you're using something older than v3.1.2, reading the earlier release notes is highly recommended.\n\nThis is the first release to properly support Rails 4.2.\n\n## New Features\n\nTwo new features, both related to using Thinking Sphinx with multiple data sources (in particular, different PostgreSQL schemas via the Apartment gem):\n\n### Allow for custom IndexSet classes\n\nIf you want to change which indices are returned in different situations, you can set a custom class:\n\n``` ruby\nThinkingSphinx::Configuration.instance.index_set_class = TenantIndexSet\n```\n\n### Allow for custom offset references\n\nBecause Sphinx requires all document ids to be unique - even across different indices - they're generated via a unique offset combined with model primary keys. Normally, Thinking Sphinx will use the same offset calculation if you have more than one index for a given model - as they're likely the same record.\n\nHowever, if you're using the Apartment gem, then this is probably not the case - you have identical tables in different schemas, with different sets of overlapping primary keys. So, there's a need for indices for each Apartment tenant on one model to be considered as separate. The `:offset_option` when defining an index will sort this out.\n\n[Here is a gist](https://gist.github.com/pat/971307984434f564bb50) covering both of these new features.\n\n## Changes to behaviour\n- Add bigint support for real-time indices, and use bigints for the sphinx_internal_id attribute (mapped to model primary keys) (Chance Downs).\n- Convert raw Sphinx results to an array when querying (Bryan Ricker).\n- Load Railtie if `Rails::Railtie` is defined, instead of just `Rails` (Andrew Cone).\n- Log excerpt SphinxQL queries just like the search queries.\n\n## Bug Fixes\n- Don't double-up on STI filtering, already handled by Rails.\n- Don't load ActiveRecord early - fixes a warning in Rails 4.2.\n- Use reflect_on_association instead of reflections, to stick to the public ActiveRecord::Base API.\n- Generate de-polymorphised associations properly for Rails 4.2\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/675936", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/675936/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/675936/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.1.2", "id": 675936, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTY3NTkzNg==", "tag_name": "v3.1.2", "target_commitish": "develop", "name": "v3.1.2", "draft": false, "prerelease": false, "created_at": "2014-11-04T06:32:24Z", "published_at": "2014-11-04T06:51:47Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.1.2", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.1.2", "body": "## Upgrading\n\nThere's no modification required if you're upgrading from v3.1.1. Of course, if you're using something older than that, reading the earlier release notes is highly recommended.\n\n## New Features\n\nNothing massive, but a few helpful new things, in order of when they were committed:\n\n### Cast Sphinx document ids as 64-bit integers\n\nTo ensure document ids are reliably 64-bit integers (aka bigints), set `big_document_ids` to true either via `set_property` in a specific index or in `config/thinking_sphinx.yml` for each appropriate environment.\n\n### Real-time index callbacks accept blocks\n\nThis is useful when your callback refers to multiple objects via an association and you want to ensure certain data is available by preloading:\n\n``` ruby\nThinkingSphinx::RealTime.callback_for(:post) { |user| user.posts.include(:category) }\n```\n\n### Rake task for Sphinx status\n\n`ts:status` lets you know if Sphinx is running or not.\n\n### Allow binlog_path to be blank\n\nCourtesy of @uhlenbrock, this allows you to disable binlog files if you're not using real-time indices - just set `binlog_path` to a blank string for each environment in `config/thinking_sphinx.yml`.\n\n### Custom location paths for index files\n\nIf you want to change where specific indices are located, instead of all of them, you can supply a `:path` option to `ThinkingSphinx::Index.define`. This will be the _directory_ where the index files will be stored, and an absolute path is expected.\n\n## Changes to behaviour\n- rebuild task uses clear between stopping the daemon and indexing.\n- Default the Capistrano TS Rails environment to use rails_env, and then fall back to stage.\n- Paginate records by 1000 results at a time when flagging as deleted.\n- Log indices that aren't processed due to guard files existing.\n- Raise an exception when a populated search query is modified (as it can't be requeried).\n- regenerate task now only deletes index files for real-time indices.\n\n## Bug Fixes\n- Clear connections when raising connection errors.\n- Some association fixes for Rails 4.1.\n- Models with more than one index have correct facet counts (using Sphinx 2.1.x or newer).\n- Field weights and other search options are now respected from set_property.\n- Convert database setting keys to symbols for consistency with Rails (@dimko).\n- Use STI base class for polymorphic association replacements.\n- Don't update real-time indices for objects that are not persisted (Chance Downs).\n- Ensure indexing guard files are removed when an exception is raised (Bobby Uhlenbrock).\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/281199", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/281199/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/281199/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.1.1", "id": 281199, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4MTE5OQ==", "tag_name": "v3.1.1", "target_commitish": "develop", "name": "v3.1.1", "draft": false, "prerelease": false, "created_at": "2014-04-21T14:17:17Z", "published_at": "2014-04-21T14:42:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.1.1", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.1.1", "body": "## Upgrading\n\nThere's no modification required if you're upgrading from v3.1.0. Of course, if you're using something older than that, reading the earlier release notes is highly recommended.\n\n## New Features\n\n### Sphinx v2.2\n\nThis release has the beginnings of support for Sphinx v2.2, including the [common options section](http://sphinxsearch.com/docs/manual-2.2.2.html#confgroup-common). This is disabled by default (as it won't work with earlier versions of Sphinx), but if you're keen to give it a spin, add the following to each environment in `config/thinking_sphinx.yml`:\n\n``` yaml\ncommon_sphinx_configuration: true\n```\n\nAt some point, this will become the default behaviour (likely Thinking Sphinx v3.2.0), but we're a while away from that.\n\n### Disabling distributed indices\n\nIf you want to disable the automatically generated distributed indices, set `distributed_indices: false` in each environment in `config/thinking_sphinx.yml`.\n\n### Testing with real-time indices\n\n`ThinkingSphinx::Test` is now in a position for proper use with real-time indices. Here's how I use it with RSpec (with the relevant examples tagged with `:search => true`):\n\n``` ruby\nRSpec.configure do |config|\n  config.before(:each) do\n    if example.metadata[:search]\n      ThinkingSphinx::Test.init\n      ThinkingSphinx::Test.start :index => false\n    end\n\n    ThinkingSphinx::Configuration.instance.settings['real_time_callbacks'] = !!example.metadata[:search]\n  end\n\n  config.after(:each) do\n    if example.metadata[:search]\n      ThinkingSphinx::Test.stop\n      ThinkingSphinx::Test.clear\n    end\n  end\nend\n```\n\nThe setting for disabling real-time callbacks can be used anywhere, of course - but keep in mind this could lead to your model data being out of sync with Sphinx.\n\n### HABTM MVAs with query/ranged-query sources\n\nPreviously this wasn't supported at all - now, it's only partially supported, for the foreign keys of single HABTM associations (you can't drill further through associations):\n\n``` ruby\nhas genres.id, :as => :genre_ids, :source => :query\n```\n\nThe association/column reference above is slightly misleading - it will actually use the genre_id column in the HABTM join table (thus, avoiding unnecessary joins). You still _cannot_ use the `:source` option with columns in other tables accessed through HABTM associations.\n\n## Changes to behaviour\n- All indices now respond to a public attributes method.\n- Log real-time index updates (Demian Ferreiro).\n- Alias group and count columns for easier referencing in other clauses.\n- Capistrano tasks use thinking_sphinx_rails_env (defaults to standard environment) (Robert Coleman).\n- Raise an exception when a referenced column does not exist.\n- Connection error messages now mention Sphinx, instead of just MySQL.\n- Include full statements when query execution errors are raised (uglier, but more useful when debugging).\n\n## Bug Fixes\n- Improved handling of association searches with real-time indices, including via has_many :though associations (Rob Anderton).\n- Fixing wildcarding of Unicode strings.\n- Handle JDBC connection errors appropriately (Adam Hutchison).\n- Only expand log directory if it exists.\n- :thinking_sphinx_roles is now used consistently in Capistrano v3 tasks.\n- :populate option is now respected for single-model searches.\n- Don't send unicode null characters to real-time Sphinx indices.\n- Avoid null values in MVA query/ranged-query sources.\n- respond_to? works reliably with masks (Konstantin Burnaev).\n- Always use connection options for connection information.\n- Don't presume all indices for a model have delta pairs, even if one does.\n- Don't instantiate blank strings (via inheritance type columns) as constants.\n- Don't apply attribute-only updates to real-time indices.\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/144778", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/144778/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/144778/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.1.0", "id": 144778, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE0NDc3OA==", "tag_name": "v3.1.0", "target_commitish": "master", "name": "v3.1.0", "draft": false, "prerelease": false, "created_at": "2014-01-11T06:49:21Z", "published_at": "2014-01-11T13:34:15Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.1.0", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.1.0", "body": "## New Features\n\nThinking Sphinx v3.1.0 is the first v3 release to support JRuby. You'll need the jdbc-mysql gem as well, and then it'll be smooth sailing. However, Rails 3.1 and MRI 1.9.2 are no longer supported - please upgrade to 3.2 and 1.9.3 (or 2.0.0/2.1.0) respectively.\n\n## Upgrading\n\n### Sphinx Versions\n\nThinking Sphinx now expects Sphinx v2.1.2 or newer by default. If you're using v2.1.2, or something newer than that, then you should not make any of the changes listed in this section.\n\nHowever, If you're using Sphinx 2.1.1 or earlier, you'll want to add these lines to an initializer:\n\n``` ruby\nThinkingSphinx::Middlewares::DEFAULT.insert_after(\n  ThinkingSphinx::Middlewares::Inquirer, ThinkingSphinx::Middlewares::UTF8\n)\nThinkingSphinx::Middlewares::RAW_ONLY.insert_after(\n  ThinkingSphinx::Middlewares::Inquirer, ThinkingSphinx::Middlewares::UTF8\n)\n```\n\nAnd add the following setting to `config/thinking_sphinx.yml`:\n\n``` yaml\ndevelopment:\n  utf8: false\n# repeat for each environment as necessary\n```\n\nIf you're using Sphinx 2.0.x, you'll also need to put the following in an initializer as well:\n\n``` ruby\nThinkingSphinx::SphinxQL.variables!\n```\n\n### Custom SELECT Statements\n\nIf you're sending through custom SELECT statements via the `:select` option in search calls, please note that you'll need to supply `*` or specific column names to have them returned (the `*` is no longer supplied by default _if_ you're setting something custom). So:\n\n``` ruby\nArticle.search 'pancakes', :select => 'weight() as w'\n# becomes\nArticle.search 'pancakes', :select => '*, weight() as w'\n```\n\nIf you don't want to return all the columns/attributes, but you _do_ want ActiveRecord objects instantiated in your search results, you'll need to include the `sphinx_internal_id` and `sphinx_internal_class` columns. It's also worth noting that any attribute you refer to in other parts of the query (for example, the `ORDER` clause) must exist in your `SELECT` clause.\n\n### Capistrano\n\nCapistrano v3 is now supported, and there are now cap tasks for real-time indices (`thinking_sphinx:generate` and `thinking_sphinx:regenerate`). There's no longer any automatic symlinking of directories - it's recommended that pid, index and configuration files are all located in the shared directory permanently, using something like the following in your `config/thinking_sphinx.yml` file:\n\n``` yaml\nproduction:\n  pid_file: /path/to/app/shared/tmp/searchd.pid\n  indices_location: /path/to/app/shared/db/sphinx\n  configuration_file: /path/to/app/shared/production.sphinx.conf\n```\n\nAlso: previously, `thinking_sphinx:index` and `thinking_sphinx:start` would automatically run after `deploy:cold`. This is no longer the case, partially because the behaviour is different with real-time indices, and partially because it's better for you to have control over those decisions instead.\n\n## New features\n- Set custom database settings within the index definition, using the `set_database` method within a index definition block. You can either pass in a database settings hash (like what would exist in `database.yml`), or an environment name which corresponds to a known database configuration.\n- All delta records can have their core pairs marked as deleted after a suspended delta (use `ThinkingSphinx::Deltas.suspend_and_update` instead of `ThinkingSphinx::Deltas.suspend`).\n- Pass through :delta_options to delta processors in index definitions (Timo Virkalla).\n- Track what's being indexed, and don't double-up while indexing is running. Single indices (e.g. deltas) can be processed while a full index is happening, though.\n- Persistent connections can be disabled if you wish (`ThinkingSphinx::Connection.persistent = false`).\n- `:group` option within `:sql` options in a search call is passed through to the underlying ActiveRecord relation (Siarhei Hanchuk).\n- Capistrano recipe now includes tasks for realtime indices.\n- Wildcard/starring can be applied directly to strings using ThinkingSphinx::Query.wildcard('pancakes'), and escaping via ThinkingSphinx::Query.escape('pancakes').\n- Adding max_predicted_time search option (Sphinx 2.2.x).\n- Support for Sphinx 2.2.x's HAVING and GROUP N BY SphinxQL options (via `:having` and `:group_best` options respectively).\n- JRuby support (with Sphinx 2.1 or newer).\n- Support for Capistrano v3 (Alexander Tipugin).\n\n## Changes to behaviour\n- Provide a distributed index per model that covers both core and delta indices.\n- Reset the delta column to true after core indexing is completed, instead of before, and don't filter out delta records from the core source.\n- Insist on at least `*` for SphinxQL SELECT statements.\n- MRI 1.9.2 is no longer supported.\n- Rails 3.1 is no longer supported.\n- Sphinx functions are now the default, instead of the legacy special variables (in line with Sphinx 2.1.x).\n- UTF-8 forced encoding is now disabled by default (in line with Sphinx 2.1.x).\n- Capistrano recipe no longer automatically adds thinking_sphinx:index and thinking_sphinx:start to be run after deploy:cold.\n- Auto-wildcard/starring (via `:star => true`) now treats escaped characters as word separators.\n- Geodist calculation is now prepended to the SELECT statement, so it can be referred to by other dynamic attributes (order matters in SELECT statements).\n- Extracting join generation into its own gem: Joiner.\n- Updating Riddle requirement to >= 1.5.10.\n\n## Bug fixes\n- Don't split function calls when casting timestamps (Timo Virkalla).\n- Separate per_page/max_matches values are respected in facet searches (Timo Virkkala).\n- Track indices on parent STI models when marking documents as deleted.\n- Blank STI values are converted to the parent class in Sphinx index data (Jonathan Greenberg).\n- Destroy callbacks are ignored for non-persisted objects.\n- Indices will be detected in Rails engines upon configuration.\n"}
{"url": "https://api.github.com/repos/pat/thinking-sphinx/releases/71233", "assets_url": "https://api.github.com/repos/pat/thinking-sphinx/releases/71233/assets", "upload_url": "https://uploads.github.com/repos/pat/thinking-sphinx/releases/71233/assets{?name,label}", "html_url": "https://github.com/pat/thinking-sphinx/releases/tag/v3.0.6", "id": 71233, "author": {"login": "pat", "id": 4183, "node_id": "MDQ6VXNlcjQxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pat", "html_url": "https://github.com/pat", "followers_url": "https://api.github.com/users/pat/followers", "following_url": "https://api.github.com/users/pat/following{/other_user}", "gists_url": "https://api.github.com/users/pat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pat/subscriptions", "organizations_url": "https://api.github.com/users/pat/orgs", "repos_url": "https://api.github.com/users/pat/repos", "events_url": "https://api.github.com/users/pat/events{/privacy}", "received_events_url": "https://api.github.com/users/pat/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTcxMjMz", "tag_name": "v3.0.6", "target_commitish": "develop", "name": "v3.0.6", "draft": false, "prerelease": false, "created_at": "2013-10-20T06:15:52Z", "published_at": "2013-10-20T06:35:45Z", "assets": [], "tarball_url": "https://api.github.com/repos/pat/thinking-sphinx/tarball/v3.0.6", "zipball_url": "https://api.github.com/repos/pat/thinking-sphinx/zipball/v3.0.6", "body": "## Upgrading\n\nFrom this point onwards, Thinking Sphinx requires Sphinx v2.0.5 or newer.\n\nIf you're using Sphinx 2.1.1 or newer, you should add the following to an initialiser:\n\n``` ruby\nThinkingSphinx::SphinxQL.functions!\n```\n\nSphinx 2.1.x releases no longer support special variables with the `@` prefix - instead, there are equivalent functions. The code above switches Thinking Sphinx to use the functions instead.\n\nIf you're using Sphinx 2.1.2 or newer, you'll also want to add the following to your initializer (as 2.1.2 now returns strings as UTF-8 properly, so conversion isn't required):\n\n``` ruby\nThinkingSphinx::Middlewares::DEFAULT.delete ThinkingSphinx::Middlewares::UTF8\n```\n\nAnd in your `config/thinking_sphinx.yml` file:\n\n``` yaml\ndevelopment:\n  utf8: true\n# repeat for each environment as necessary\n```\n\nAll of these changes will become the default behaviour in Thinking Sphinx v3.1.0.\n\n## New features\n- MySQL users can enable a minimal GROUP BY statement, to speed up queries: `set_property :minimal_group_by? => true`.\n- `search_for_ids` can now be chained onto scoped search calls.\n- Added ability to switch between Sphinx special variables and the equivalent functions. Sphinx 2.1.x requires the latter, and that behaviour will become the default in Thinking Sphinx 3.1.0.\n- Added ability to disable UTF-8 forced encoding, now that Sphinx 2.1.2 returns UTF-8 strings by default. This will be disabled by default in Thinking Sphinx 3.1.0.\n- Added new search options in Sphinx 2.1.x.\n- `skip_time_zone` setting is now available per environment via `config/thinking_sphinx.yml` to avoid the `sql_query_pre` time zone command.\n- Raise an error if no indices match the search criteria (Bryan Ricker).\n\n## Changes to behaviour\n- Rake's silent mode is respected for indexing (@endoscient).\n- Insist on the log directory existing, to ensure correct behaviour for symlinked paths. (Michael Pearson).\n- Realtime fields and attributes now accept symbols as well as column objects, and fields can be sortable (with a `_sort` prefix for the matching attribute).\n- Automatically load Riddle's Sphinx 2.0.5 compatibility changes.\n- Don't clobber custom `:select` options for facet searches (Timo Virkkala).\n- Sphinx connection failures now have their own class, `ThinkingSphinx::ConnectionError`, instead of the standard `Mysql2::Error`.\n- Always use DISTINCT in group concatenation.\n- Have tests index UTF-8 characters where appropriate (Pedro Cunha).\n- Separated directory preparation from data generation for real-time index (re)generation tasks.\n- Updating Riddle dependency to be >= 1.5.9.\n\n## Bug fixes\n- Cast every column to a timestamp for timestamp attributes with multiple columns.\n- Don't use Sphinx ordering if SQL order option is supplied to a search.\n- Custom middleware and mask options now function correctly with model-scoped searches.\n- Suspended deltas now no longer update core indices as well.\n- Use alphabetical ordering for index paths consistently (@grin).\n- Convert very small floats to fixed format for geo-searches.\n"}

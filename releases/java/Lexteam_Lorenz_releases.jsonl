{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/51919446", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/51919446/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/51919446/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.8", "id": 51919446, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOAwWShM4DGDpW", "tag_name": "0.5.8", "target_commitish": "develop", "name": "0.5.8", "draft": false, "prerelease": false, "created_at": "2021-10-23T22:48:51Z", "published_at": "2021-10-23T22:50:33Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.8", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.8", "body": "## Fixes\r\n\r\n- [GH-53]\\: Don't de-obfuscate field types twice, which can cause\r\n  invalid output in some conditions.\r\n\r\n[GH-53]: https://github.com/CadixDev/Lorenz/issues/53\r\n"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/37182950", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/37182950/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/37182950/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.7", "id": 37182950, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM3MTgyOTUw", "tag_name": "0.5.7", "target_commitish": "develop", "name": "0.5.7", "draft": false, "prerelease": false, "created_at": "2021-02-01T15:11:36Z", "published_at": "2021-02-01T15:12:30Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.7", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.7", "body": "## Fixes\r\n\r\n- CSRG and TSRG now ignore package mappings, rather than erroneously reading them\r\n  as class mappings.\r\n- `MappingSet#deobfuscate(FieldType)` will now correctly de-obfuscate object types\r\n  of inner classes, where the parent class has a mapping - but the inner class\r\n  does not.\r\n- [GH-29]\\: Avoid inheriting field mappings from a parent where the child class has\r\n  a field of its own, of the same signature.\r\n\r\n[GH-29]: https://github.com/CadixDev/Lorenz/issues/29"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/34518065", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/34518065/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/34518065/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.6", "id": 34518065, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM0NTE4MDY1", "tag_name": "0.5.6", "target_commitish": "develop", "name": "0.5.6", "draft": false, "prerelease": false, "created_at": "2020-11-27T20:06:53Z", "published_at": "2020-11-27T20:37:26Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.6", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.6", "body": "Configurable Parallelism during mapping merges\r\n----------------------------------------------\r\n\r\nThe mapping merging system introduced in 0.5.4 merges mappings in parallel - which in quick testing can\r\nimprove the merge time by half. There may be cases where the max number of threads needs to be controlled.\r\nOne common example is debugging Lorenz itself, having multiple merge threads running at once can make\r\ndebugging a lot more difficult.\r\n\r\nThis release just adds one new method to [`MergeConfig`](https://github.com/CadixDev/Lorenz/blob/49be5233bff0adfaf59440ac37efdeccbb2893da/lorenz/src/main/java/org/cadixdev/lorenz/merge/MergeConfig.java):\r\n[`getParallelism()`](https://github.com/CadixDev/Lorenz/blob/49be5233bff0adfaf59440ac37efdeccbb2893da/lorenz/src/main/java/org/cadixdev/lorenz/merge/MergeConfig.java#L84-L95).\r\nSet this value using the new [`withParallelism()`](https://github.com/CadixDev/Lorenz/blob/49be5233bff0adfaf59440ac37efdeccbb2893da/lorenz/src/main/java/org/cadixdev/lorenz/merge/MergeConfig.java#L185-L202)\r\nmethod. Check the javadocs for more info.\r\n\r\nAllow arbitrary indexes for parameter mappings \r\n---------------------------------------------\r\n\r\nMethod mappings may now contain parameter mappings for arbitrary indexes, rather than being constrained to\r\nbetween 0 and the number of parameters in the method signature. This is nice from a general flexibility\r\nperspective as Lorenz is only a container and isn't intended for validating mappings, but also fixes the issue\r\nwhere Lorenz can't read mappings which using 1-indexed method parameters for instance methods. With this change\r\nit's up to the user to decide how to use parameter mappings, Lorenz doesn't dictate anything one way or the\r\nother (just like the other mapping types).\r\n\r\nAny code which worked with Lorenz before will still continue to work, as this change only removes constraints\r\nwhich used to be present. If some code was written which relied on the existing index checks then this will\r\ntechnically be a breaking change, as you'll need to handle those checks yourself. That is likely to be a minor\r\nedge case however, so this is still considered a minor release."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/33597631", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/33597631/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/33597631/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.5", "id": 33597631, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMzNTk3NjMx", "tag_name": "0.5.5", "target_commitish": "develop", "name": "0.5.5", "draft": false, "prerelease": false, "created_at": "2020-11-07T13:02:29Z", "published_at": "2020-11-07T13:03:39Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.5", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.5", "body": "## Writer configurations\r\n\r\nWriter configurations are a powerful new feature that allows the output of\r\nmappings writers to be fine-tuned as consumers would like. Currently, this\r\nis limited to:\r\n\r\n- The sorting functions used to write mappings for classes, fields, and\r\n  methods.\r\n- The API is open-ended, so there is potential for further additions to be\r\n  made.\r\n\r\nWriter configurations can be created fluently through use the provided\r\nbuilder, which includes our default implementations.\r\n\r\n```java\r\nprotected MappingsWriterConfig config = MappingsWriterConfig.builder()\r\n        .classMappingComparator(Comparator.comparing(Mapping::getFullObfuscatedName))\r\n        .fieldMappingComparator(Comparator.comparing(Mapping::getFullObfuscatedName))\r\n        .methodMappingComparator(Comparator.comparing(Mapping::getFullObfuscatedName))\r\n        .build();\r\n```\r\n\r\nThey are applied to a mappings writer by use of the new `#setConfig` method,\r\nand can be retrieved through the corresponding `#getConfig()` method.\r\n\r\n```java\r\nwriter.setConfig(MappingsWriterConfig.builder().build());\r\n```\r\n\r\n## Fixes\r\n\r\n- The Kin mapping writer now produces consistent output, sorting the\r\n  mappings as per the provided comparators. Output is also now rid of 'junk'\r\n  mappings (those without valid children mappings, or a de-obf mapping of\r\n  their own)."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/30101939", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/30101939/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/30101939/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.4", "id": 30101939, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTMwMTAxOTM5", "tag_name": "0.5.4", "target_commitish": "develop", "name": "0.5.4", "draft": false, "prerelease": false, "created_at": "2020-08-25T12:47:17Z", "published_at": "2020-08-25T12:48:47Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.4", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.4", "body": "Lorenz 0.5.4 includes yet-more bug fixes, and a new (and vastly more powerful)\r\nmapping merging API.\r\n\r\nThe ProGuard mapping reader now also reads field types.\r\n\r\nThe Bombe dependency has been bumped to 0.3.4, resolving a `NullPointerException`\r\nthat would occur when using the `ClassLoaderClassProvider`.\r\n\r\nMerging\r\n-------\r\n\r\nLorenz now has a new mappings merging API which aims at fulfilling 3 main goals:\r\n\r\n 1. Improve the output of the merging operation significantly, supporting many more edge cases and handling merges\r\n    with less complete mapping sets.\r\n 2. Allow configuring (to some degree) the merging process to control some aspects of the default merge process.\r\n 3. Provide an API which is extensible and modifiable at multiple levels to enable custom merge situations.\r\n\r\nThere are a limited number of possible edge cases one would expect to run into when merging, so we laid them all out\r\nand made decisions on how best to handle them in the default case. Due to the extensible API users can override and\r\nchange any of the default behavioe as necessary. The default behavior is laid out as follows:\r\n\r\n|Left|Right|Output|Note|\r\n|----|-----|------|----|\r\n| `A -> B` | `B -> C` | `A -> C` | Typical case, easiest to handle |\r\n| `A -> B` | _Missing_ | `A -> B`  | Standalone mappings get copied |\r\n| _Missing_ | `B -> C` | `B -> C` | Standalone mappings get copied |\r\n| `A -> B` | `X -> Y` | `A -> B` and `X -> Y` | This is no different than the 2 above cases with missing mappings on each side. This is just meant to be a further example that if two unrelated mappings are present, a standard merger won't know how to handle them other than copying both. |\r\n| `A -> B` | `A -> C` | `A -> C` | By default the right mapping is considered the \"most up to date\" mappings, so in the case where both mapping sets provide mappings for the same obfuscated name, the right mapping is used in the default implementation. |\r\n| `A -> B` (types) | `B -> B` (types) and `A -> C` (names) | `A -> B` (types) and `A -> C` (names) | This is an example of a special case situation where the left mapping only maps types, then the second mapping set only maps members, but from the expectation that the first mapping set was already applied. The default implementation should handle this case correctly. | \r\n\r\n> How to read the above chart: Each mapping operation is made up of a `left` side and a `right` side. The chart\r\n> represents this with the directional arrow `->`. Merge operations in the table apply to any individual mapping,\r\n> not the whole mapping set. That is, a field name mapping merging with another field name, or a class name merging\r\n> with another class name.\r\n>\r\n> Handling merges with less complete mappings sets are what is intended by the last row. \r\n\r\n### Directionality\r\n\r\nIt may seem a natural goal for merging mapping sets is for the merge operation to be commutative - in other words, when\r\nmerging `A -> B` and `B -> C` you would get the same result as when merging `C -> B` and `B -> A` (except, reversed).\r\n\r\nThis is true for _most_ cases, but for some special cases - most notably duplicate mappings - this property just can't\r\nbe handled in any reasonable way. In these situations where a decision has to be made regarding whether to keep one\r\nmapping or another (and neither being a better option by itself) we use the position of the mapping as the heuristic for\r\nwhich one to keep.\r\n\r\nWhen merging `A -> B` and `B -> C` the names you get in the output are `C`. Because of this, the `right` side of a merge\r\nis considered the more correct set of names (since it is the output). If the merge operation were to be reversed `A`\r\nwould be preferred instead. Because of this it is important to consider which direction works best for you merge.\r\n\r\n### Other Scenarios\r\n\r\nThere's also 2 other factors necessary to consider when merging mapping sets that we'll go over:\r\n\r\n 1. Duplicate mappings are possible\r\n 2. Field mappings can have type signature\r\n\r\n#### Handling Duplicates\r\n\r\nA duplicate mapping is when both mapping sets define a mapping for the same obfuscated member. For example, if you were\r\nto merge the following mappings, they would be considered duplicated because they both share `com.example.Example` as\r\nthe obfuscated name.\r\n\r\n```\r\ncom.example.Example -> com.example.OtherExample1\r\n```\r\n```\r\ncom.example.Example -> com.example.OtherExample2\r\n```\r\n\r\nFor the default merge implementation `right` mappings take priority for all duplicate merge scenarios. So in this case\r\nthe mapping which would be present in the output mapping set would be:\r\n\r\n```\r\ncom.example.Example -> com.example.OtherExample2\r\n```\r\n\r\n#### Handling Field Types\r\n\r\nField mappings can have types, but often don't. Because Java doesn't allow duplicate field names visible in any class\r\nit's not always necessary to explicitly list the type of the field. The complication comes when merging mapping sets\r\nwhere one mapping set does and the other doesn't contain field types. In this scenario looking up the field from one\r\nmapping set to another in the default case by simply using the field signature would fail, as the type descriptor is\r\nmissing in one of the mapping sets.\r\n\r\nThe new merge system provides a configuration option for whether to handle this case. The default options is `LOOSE` -\r\nthat is, first check for the signature, but also check for just the field name and use it if the field\r\nsignature can't be found. This can be switched to `STRICT` where all field mappings must match signatures exactly.\r\n\r\n### Merging Code and API\r\n\r\nThe new merging system is made up of 2 main classes:\r\n\r\n 1. [`MappingSetMerger`](https://github.com/CadixDev/Lorenz/blob/312c9ed737964b21a9058b29ec041831c955b537/lorenz/src/main/java/org/cadixdev/lorenz/merge/MappingSetMerger.java)\r\n 2. [`MappingSetMergerHandler`](https://github.com/CadixDev/Lorenz/blob/312c9ed737964b21a9058b29ec041831c955b537/lorenz/src/main/java/org/cadixdev/lorenz/merge/MappingSetMergerHandler.java)\r\n\r\nThe JavaDocs for each class go into considerable detail on exactly what each class is and how it's used, but here's a\r\nquick rundown:\r\n\r\n`MappingSetMerger` is the entry point for the merge operation. It's an interface with a default implementation which\r\ncan be retrieved with `MappingSetMerger.create()`. It does the job of walking the class hierarchy of both mapping sets\r\nand finding the members of each side that should be merged together. It decides which members to include based on the\r\n[`MergeConfig`](https://github.com/CadixDev/Lorenz/blob/312c9ed737964b21a9058b29ec041831c955b537/lorenz/src/main/java/org/cadixdev/lorenz/merge/MergeConfig.java)\r\nprovided in the call to `create()` (or just the default config if none was provided) and determines which  individual\r\ncase each merge is.\r\n\r\n`MappingSetMerger` is available with an overridable default implementation in case it's necessary to modify how the\r\nabove cases are decided individually. It is designed to let a user override individual methods in order to change said\r\nlogic when necessary, but the general idea is that in most cases you'll never need to modify the default implementation\r\nof `MappingSetMerger`.\r\n\r\n`MappingSetMerger` doesn't handle actually merging the mappings, all it does is recognize which type of merge each merge\r\nis, and delegates the handling of that merge to `MappingSetMergerHandler`. This handler class has individual methods for\r\neach mapping case, and is a fully-default interface. This means you can implement `MappingSetMergerHandler` and override\r\nonly the mapping cases you want to modify for your custom merge operation. The merge cases are all described by the\r\nmethod names (and explained in further detail in the JavaDoc), and look like:\r\n\r\n```java\r\nFieldMapping mergeFieldMappings(\r\n    final FieldMapping left,\r\n    final FieldMapping strictRight,\r\n    final FieldMapping looseRight,\r\n    final ClassMapping<?, ?> target,\r\n    final MergeContext context\r\n);\r\n\r\nFieldMapping mergeDuplicateFieldMappings(\r\n    final FieldMapping left,\r\n    final FieldMapping strictRightDuplicate,\r\n    final FieldMapping looseRightDuplicate,\r\n    final FieldMapping strictRightContinuation,\r\n    final FieldMapping looseRightContinuation,\r\n    final ClassMapping<?, ?> target,\r\n    final MergeContext context\r\n);\r\n\r\nFieldMapping addLeftFieldMapping(final FieldMapping left, final ClassMapping<?, ?> target, final MergeContext context);\r\n\r\nFieldMapping addRightFieldMapping(final FieldMapping right, final ClassMapping<?, ?> target, final MergeContext context);\r\n```\r\n\r\nIf you only need some custom logic when the `right` mapping set provides a mapping that the `left` mapping set doesn't\r\nprovide, then you could just override `addRightFieldMapping` with your custom logic and leave everything else default.\r\nYou wouldn't need to worry about walking the hierarchy or copying of the other members or handling any other special\r\ncases.\r\n\r\nThis separation of concerns between determining what _kind_ of merge each case is and actually _handling_ the merge\r\noperation for each merge case hopefully will allow you to easily customize mapping merges for whatever custom situation\r\nyou have.\r\n\r\n#### Existing Code\r\n\r\nEach of the existing `merge()` methods on each of the mapping classes have all been updated to use this new merge\r\nsystem. The methods haven't been removed and are still binary compatible with any existing code you have which may be\r\nusing it. The output of the merge may differ however, as the logic has been considerably modified as described above.\r\n\r\n#### One Last Thing\r\n\r\nThe default implementation of `MappingSetMerger` merges top-level classes in parallel. This is okay because\r\n`MappingSetMergerHandler` is a stateless class, and `MappingSetMerger` is completely thread-safe. Due to this merge time\r\nfell by as much as half of the previous merge time when testing against Minecraft mapping sets."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/28212537", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/28212537/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/28212537/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.3", "id": 28212537, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4MjEyNTM3", "tag_name": "0.5.3", "target_commitish": "develop", "name": "0.5.3", "draft": false, "prerelease": true, "created_at": "2020-07-03T22:39:48Z", "published_at": "2020-07-03T22:41:22Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.3", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.3", "body": "Lorenz 0.5.3 includes yet-another set of bug-fixes:\r\n\r\n- [Mercury/GH-14]: Inheritance completion now considers elevated return types\r\n- [Bombe/GH-11]: Bump Bombe dependency to 0.3.2, including a fix for remapping\r\n  manifests without a `Main-Class` attribute\r\n- [Lorenz/GH-30]: Don't wrap `Writer`s in `TextMappingsWriter`, allowing files\r\n  larger than `BufferedWriter`s buffer to be written (thanks to @phase for this\r\n  bug-fix)\r\n- [Lorenz/GH-32]: Support blank comments in IO readers (affects SRG formats, JAM,\r\n  and Enigma)\r\n  \r\nSupport for yet-another SRG variant, XSRG, has also been introduced with this\r\nrelease - the format is the same as the SRG format, though has field types\r\n([Lorenz/GH-33]).\r\n\r\nThanks to @phase and @DemonWav for their contributions towards this release.\r\n  \r\n### Registries\r\n\r\n`Registry` has been expanded to expose more of the underlying `Map`'s data:\r\n\r\n- `Registry#keys()`, returning a `Set` of `String`s which correspond to the\r\n  identifier of registered values.\r\n- `Registry#entries()`, returning a `Set` of `Map.Entry`s.\r\n\r\n### Improved Mapping Merging\r\n\r\nMapping Merging, introduced with Lorenz 0.5.0, has always been a fairly\r\nlacklustre implementation - dropping mappings present on the b mapping set, if\r\nthere wasn't a mapping in the a mapping set.\r\n\r\nThanks to @DemonWav, that has now been resolved (see [Lorenz/GH-36]).\r\n\r\n[Mercury/GH-14]: https://github.com/CadixDev/Mercury/issues/14\r\n[Bombe/GH-11]: https://github.com/CadixDev/Bombe/issues/11\r\n[Lorenz/GH-30]: https://github.com/CadixDev/Lorenz/pull/30\r\n[Lorenz/GH-32]: https://github.com/CadixDev/Lorenz/issues/32\r\n[Lorenz/GH-33]: https://github.com/CadixDev/Lorenz/issues/33\r\n[Lorenz/GH-36]: https://github.com/CadixDev/Lorenz/pull/36\r\n"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/26290162", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/26290162/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/26290162/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.2", "id": 26290162, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2MjkwMTYy", "tag_name": "0.5.2", "target_commitish": "develop", "name": "0.5.2", "draft": false, "prerelease": true, "created_at": "2020-05-07T20:59:14Z", "published_at": "2020-05-07T21:02:28Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.2", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.2", "body": "Lorenz 0.5.2 addresses issues with using Lorenz's ASM Remapper on Atlas >= 0.2.0.\r\nSpecifically, it should now be possibly to concurrently access mappings."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/26062935", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/26062935/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/26062935/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.1", "id": 26062935, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI2MDYyOTM1", "tag_name": "0.5.1", "target_commitish": "develop", "name": "0.5.1", "draft": false, "prerelease": true, "created_at": "2020-04-30T20:06:50Z", "published_at": "2020-04-30T20:08:24Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.1", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.1", "body": "Lorenz 0.5.1 brings some minor additions, that were missed during previous dev cycles,\r\nidentified during the development of Lorenz 0.6.\r\n\r\n## ProGuard Reader\r\n\r\nLorenz 0.5.1 includes a `lorenz-io-proguard` module, that allows you to read\r\nProGuard output files (for example, Mojang's mapping files for Minecraft). You can\r\nobtain the ProGuard `MappingFormat` with `MappingFormats.byId(\"proguard\")`.\r\n\r\nImportantly, the ProGuard module **does not** support writing mapping files."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/17499065", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/17499065/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/17499065/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.5.0", "id": 17499065, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3NDk5MDY1", "tag_name": "0.5.0", "target_commitish": "develop", "name": "0.5.0", "draft": false, "prerelease": true, "created_at": "2019-05-21T20:11:40Z", "published_at": "2019-05-21T20:12:50Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.5.0", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.5.0", "body": "Lorenz 0.5.0 has enjoyed a long development process (beginning the 1st of September!),\r\nand packs a bundle of cool changes. The most notable being the change of package, from\r\n`me.jamiemansfield.lorenz` to `org.cadixdev.lorenz`.\r\n\r\n## Modularisation\r\n\r\nThe long put-off modularisation has finally arrived - with the Enigma, JAM, and Kin\r\nmapping formats being given their own modules.\r\n\r\n- Enigma: `org.cadixdev:lorenz-io-enigma:0.5.0`\r\n- JAM: `org.cadixdev:lorenz-io-jam:0.5.0`\r\n- Kin: `org.cadixdev:lorenz-io-kin:0.5.0`\r\n\r\nMapping formats can be introduced through service providers, and `MappingFormats` will\r\npopulate a registry with all the formats found. You can get a mapping format, like the\r\nfollowing:\r\n\r\n```java\r\nfinal MappingFormat enigma = MappingFormats.byId(\"enigma\");\r\nfinal MappingFormat jam    = MappingFormats.byId(\"jam\");\r\nfinal MappingFormat kin    = MappingFormats.byId(\"kin\");\r\n```\r\n\r\n## Merging and reversing\r\n\r\nMapping sets can now be reversed (`A->B` -> `B->A`), and mapping sets merged\r\n(`A->B` + `B->C` = `A->C`). This can be achieved like the following.\r\n\r\n```java\r\n// let a be a MappingSet\r\n// let b be a MappingSet\r\n\r\nfinal MappingSet reversed = a.reverse();\r\nfinal MappingSet merged = a.merge(b);\r\n```\r\n\r\n## Extension Data\r\n\r\nLorenz now supports adding extension data to the mapping model (**no existing formats serialise this\r\ninformation**).\r\n\r\n```java\r\nstatic final ExtensionKey<String> EXTRA_NAME = new ExtensionKey<>(String.class, \"extra_name\");\r\n\r\nfinal MappingSet mappings = new MappingSet();\r\nmappings.set(EXTRA_NAME, \"Beep Boop\");\r\nmappings.get(EXTRA_NAME).get(); // Beep Boop\r\n```\r\n"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/17374847", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/17374847/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/17374847/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.4.4", "id": 17374847, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTE3Mzc0ODQ3", "tag_name": "0.4.4", "target_commitish": "develop", "name": "0.4.4", "draft": false, "prerelease": true, "created_at": "2019-05-15T16:40:26Z", "published_at": "2019-05-15T16:41:32Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.4.4", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.4.4", "body": "Lorenz 0.4.4 is the combination of bugs identified in the development of Lorenz 0.5.0, specifically\r\nwith regards to the mapping format implementations, in addition to a faulty mapping model method.\r\n\r\n## IO\r\n\r\n- TSRG: Don't write empty class line for parents\r\n- TSRG: Correct a length check, preventing some **valid** mappings from being read\r\n- Enigma: Output field types properly, using the *obfuscated* type\r\n\r\n## Mapping Model\r\n\r\n- Fix the faulty implementation of `ClassMapping::hasMappings`, specifically it did'nt consider method\r\n  argument mappings\r\n"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13690869", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13690869/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/13690869/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.4.3", "id": 13690869, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjkwODY5", "tag_name": "0.4.3", "target_commitish": "develop", "name": "0.4.3", "draft": false, "prerelease": true, "created_at": "2018-10-27T13:48:57Z", "published_at": "2018-10-27T13:52:11Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.4.3", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.4.3", "body": "This version of Lorenz introduces a number of improvements to the Enigma IO classes, namely\r\nfixing support that has been broken under 0.4.x."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13687126", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13687126/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/13687126/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.4.2", "id": 13687126, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjg3MTI2", "tag_name": "0.4.2", "target_commitish": "develop", "name": "0.4.2", "draft": false, "prerelease": true, "created_at": "2018-10-26T23:10:20Z", "published_at": "2018-10-26T23:11:02Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.4.2", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.4.2", "body": "This version of Lorenz addresses a critical bug in the Enigma reader, that prevents inner\r\nclasses from preceding the other members of a class."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13687105", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/13687105/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/13687105/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.4.1", "id": 13687105, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEzNjg3MTA1", "tag_name": "0.4.1", "target_commitish": "develop", "name": "0.4.1", "draft": false, "prerelease": true, "created_at": "2018-10-26T23:05:51Z", "published_at": "2018-10-26T23:06:51Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.4.1", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.4.1", "body": "This version of Lorenz addresses a critical bug in the Enigma writer, that causes invalid\r\noutput (totally broken).\r\n\r\n### Broken\r\n```\r\nCLASS none/aet\r\n\r\nMETHOD c getDeathMessage (Lnone/afq;)Lnone/iw;\r\n\r\n\r\nARG 0 entity\r\n```\r\n\r\n### Fixed\r\n\r\n```\r\nCLASS none/aet\r\n\tMETHOD c getDeathMessage (Lnone/afq;)Lnone/iw;\r\n\t\tARG 0 entity\r\n```\r\n"}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/12677000", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/12677000/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/12677000/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.4.0", "id": 12677000, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNjc3MDAw", "tag_name": "0.4.0", "target_commitish": "develop", "name": "0.4.0", "draft": false, "prerelease": true, "created_at": "2018-08-31T15:19:20Z", "published_at": "2018-08-31T15:20:34Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.4.0", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.4.0", "body": "This version of Lorenz consolidates the work towards supporting additional formats, even\r\ngoing as far to support those formats. A number of breaking changes have been made in order\r\nto support these formats, in addition to new constructs to make using Lorenz easier.\r\n\r\nThe following formats are now supported:\r\n\r\n- [Enigma](http://www.cuchazinteractive.com/enigma/)\r\n- [JAM](https://github.com/caseif/JAM)\r\n- [Kin](https://github.com/KyoriPowered/heart/blob/8b739bf173a43933d6743b86be16e811a0293624/src/main/java/net/kyori/heart/mapping/type/KinMappingType.java)\r\n\r\nBig thanks to @Minecrell, for his help towards this release!\r\n\r\n- [Contributions to Bombe](https://github.com/jamiemansfield/Bombe/commits?author=Minecrell)\r\n- [Contributions to Lorenz](https://github.com/jamiemansfield/Lorenz/commits?author=Minecrell)\r\n\r\n## Changes\r\n\r\n### Type Model\r\n\r\nLorenz 0.4.0 has received a major overhaul of the type model, migrating that section of\r\nthe codebase over to its own project ([Bombe](https://github.com/jamiemansfield/Bombe)),\r\nand introducing a great deal of safety to types and their uses.\r\n\r\n- `PrimitiveType` has been split up to `BaseType` and `VoidType`, becoming more in line\r\n  with the JVM specification.\r\n  - However, there now exists a `PrimtiveType` interface that both `BaseType` and\r\n    `VoidType` inherit.\r\n- `FieldType` has been introduced, providing type safety for field types (void is not a\r\n  valid field or parameter descriptor as per the JVM specification).\r\n- The `#getObfuscated()` and `#getDeobfuscated(MappingSet)` methods no longer exist in\r\n  either `Type` or `MethodDescriptor`.\r\n  - Calls to `#getObfuscated()` should be replaced with calls to `#toString()`.\r\n  - Calls to `#getDeobfuscated(MappingSet)` should be replaced with calls to\r\n    `MappingSet#deobfuscate` for the appropriate type.\r\n- `MethodDescriptor#compile()` has been renamed to `MethodDescriptor#of()`.\r\n- The 'convenience' signature constructors have been replaced with `#of(String, String)`\r\n  methods. \r\n\r\n### I/O\r\n\r\nPreviously Lorenz had only supported text-based mapping formats and gave them a rather\r\nstrict means of being implemented. Lorenz 0.4.0 has generified the I/O classes to be more\r\nadaptable to a greater number of situations, including binary-based formats.\r\n\r\nThe provided implementations of mapping format I/O classes have also been moved to their\r\nown packages in preparation of the modularisation that will happen in Lorenz 0.5.0 (more\r\non that later).\r\n\r\n- `MappingsReader` and `MappingsWriter` have been generified and are no longer dependent\r\n  on text-based formats.\r\n  - There is abstract classes for both text-based formats and binary-based formats.\r\n- The `Processor`s of text-based formats are now contained as inner classes of their\r\n  parent reader.\r\n  - The processors no longer use Guava's `LineProcessor`, instead using Java's `Consumer`.\r\n- `MappingsReader#parse()` has been refactored to `MappingsReader#read()` becoming more\r\n  consistent with the reader naming.\r\n- The mapping readers will now throw exceptions when given bad input, as opposed to ignoring\r\n  it as it did in the past.\r\n  - Do note that SRG package mappings are'nt considered bad input, and will be silently\r\n    ignored.\r\n  - This remains to be something that needs to be looked into further, and expect changes\r\n    to be made in 0.5.0/1.0.0.\r\n- Introduced a `MappingFormat` interface, with convenience methods that will be useful to\r\n  consumers of Lorenz.\r\n  - Notably there are convenience methods for operating with `Path`s directly.\r\n    - `MappingFormat#read(Path)`\r\n    - `MappingFormat#write(MappingSet, Path)`\r\n  - There is a psuedo-enumeration of `MappingFormat`s implemented within Lorenz available\r\n    through the `MappingFormats` class.\r\n  \r\n### Other\r\n\r\nThese changes, though notable, are not large enough to warrant their own section. Most of\r\nthe changes listed here are features / changes to better support the new formats that\r\nLorenz supports.\r\n\r\n- Fields are now stored using their signature as a key, not their obfuscated name.\r\n- FieldTypeProviders no longer guarantee the availability of field type information.\r\n- MappingSet makes use of a CascadingFieldTypeProvider allowing multiple providers to be used.\r\n- Method Parameter Mappings are now supported, using the index of the parameter as the\r\n  obfuscated name and key.\r\n  - To make this change, `MemberMapping` was altered to become generic - allowing for any\r\n    parent mapping of type `Mapping`.\r\n- The dependency on Guava has been dropped.\r\n  \r\n## Modularisation\r\n\r\nAs previously mentioned, Lorenz 0.5.0 will have *complete* modularisation. This will go\r\nfurther than the \"primitive\" modularisation present in 0.4.0. There will exist individual\r\nmodules for each format supported in Lorenz, as opposed to being included in the base\r\nmodule.\r\n\r\nComplete modularisation was deferred until 0.5.0 to not hold back any further on a 0.4.0\r\nrelease, and allow for adequate time to consider a few technical points that would be nice\r\nto have solved.\r\n    \r\n### Lorenz-ASM\r\n\r\nThe first module has appeared! Lorenz-ASM provides a number of utilities that may be useful\r\nwhen using Lorenz with ASM.\r\n\r\n- An implementation of ASM's `Remapper` class, backed by a `MappingSet` and an\r\n  `InheritanceProvider` (from Bombe).\r\n  - This class was previously available through\r\n    [Survey](https://github.com/jamiemansfield/Survey) and notably the Lorenz version\r\n    lacks the `SignatureAdapter` that can handle broken signatures produced by obfuscators.\r\n    This omission was made simply as fixing issues with obfuscators does not fall within\r\n    Lorenz's remit.\r\n  - Bombe-ASM (which Lorenz-ASM depends on) has 2 implementations of `InheritanceProvider`.\r\n- An implementation of Lorenz's `FieldTypeProvider`, backed by a `SourceSet` (from\r\n  Bombe-ASM)."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11945362", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11945362/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/11945362/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.3.2", "id": 11945362, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExOTQ1MzYy", "tag_name": "0.3.2", "target_commitish": "develop", "name": "0.3.2", "draft": false, "prerelease": true, "created_at": "2018-07-16T12:43:46Z", "published_at": "2018-07-16T12:48:20Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.3.2", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.3.2", "body": "This version of Lorenz addresses a critical bug in the TSRG writer, that causes invalid output (missing class names).\r\n\r\n*Lorenz is available through Maven Central*."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11905041", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11905041/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/11905041/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.3.1", "id": 11905041, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExOTA1MDQx", "tag_name": "0.3.1", "target_commitish": "develop", "name": "0.3.1", "draft": false, "prerelease": true, "created_at": "2018-07-12T21:24:36Z", "published_at": "2018-07-12T21:26:29Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.3.1", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.3.1", "body": "The revision of Lorenz brings about no new features or bug-fixes, rather completes the effort begun in 0.3.0 to better document Lorenz.\r\n\r\n*Lorenz is available through Maven Central*."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11729385", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/11729385/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/11729385/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.3.0", "id": 11729385, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTExNzI5Mzg1", "tag_name": "0.3.0", "target_commitish": "develop", "name": "0.3.0", "draft": false, "prerelease": true, "created_at": "2018-07-01T17:34:21Z", "published_at": "2018-07-01T18:16:02Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.3.0", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.3.0", "body": "This version of Lorenz largely builds on the efforts of the previous release, in addition to some preparation for supporting the Enigma and JAM mapping formats.\r\n\r\n## Changes\r\n\r\n- In accordance with the Java specification, I have corrected the naming of MethodDescriptor / MethodSignature (I had them the reverse way round).\r\n- Model construction is now handled through a `MappingSetModelFactory` - allowing models to be used together\r\n- Introduced an (unused) FieldSignature and FieldTypeProvider\r\n\r\n## Migrating from 0.2.0\r\n\r\nMigration should be a fairly easy task, unless MethodDescriptor/MethodSignature was used. There have been no other breaking changes.\r\n\r\n*Lorenz is available through Maven Central*."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/10248271", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/10248271/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/10248271/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.2.0", "id": 10248271, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwMjQ4Mjcx", "tag_name": "0.2.0", "target_commitish": "develop", "name": "0.2.0", "draft": false, "prerelease": true, "created_at": "2018-03-25T13:42:51Z", "published_at": "2018-03-25T13:50:08Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.2.0", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.2.0", "body": "This version of Lorenz begins to address some of the issues that present using it within Nocturne - which is largely driving the functionality I desire for 1.0.0.\r\n\r\n## Changes\r\n\r\n- The API has been split from the implementation\r\n- The parser classes have been renamed: `*Parser -> *Processor`, `.parser. -> .reader.`\r\n- The two variants of SRG are now supported: CSRG and TSRG\r\n\r\n## Migrating from 0.1.0\r\n\r\nDespite the far-reaching internal changes, migrating from 0.1.0 is a rather simple procedure.\r\n\r\n- Model classes can no longer be constructed manually, instead the `createMapping` methods should be used. To create a MappingSet, `MappingSet.create()` should be used\r\n- The reader class imports will need to be changes, to use the new package name and class names mentioned above\r\n\r\n*Lorenz is available through Maven Central*."}
{"url": "https://api.github.com/repos/CadixDev/Lorenz/releases/10248078", "assets_url": "https://api.github.com/repos/CadixDev/Lorenz/releases/10248078/assets", "upload_url": "https://uploads.github.com/repos/CadixDev/Lorenz/releases/10248078/assets{?name,label}", "html_url": "https://github.com/CadixDev/Lorenz/releases/tag/0.1.0", "id": 10248078, "author": {"login": "jamierocks", "id": 5103549, "node_id": "MDQ6VXNlcjUxMDM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5103549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamierocks", "html_url": "https://github.com/jamierocks", "followers_url": "https://api.github.com/users/jamierocks/followers", "following_url": "https://api.github.com/users/jamierocks/following{/other_user}", "gists_url": "https://api.github.com/users/jamierocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamierocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamierocks/subscriptions", "organizations_url": "https://api.github.com/users/jamierocks/orgs", "repos_url": "https://api.github.com/users/jamierocks/repos", "events_url": "https://api.github.com/users/jamierocks/events{/privacy}", "received_events_url": "https://api.github.com/users/jamierocks/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEwMjQ4MDc4", "tag_name": "0.1.0", "target_commitish": "develop", "name": "0.1.0", "draft": false, "prerelease": true, "created_at": "2018-03-25T12:59:10Z", "published_at": "2018-03-25T13:01:37Z", "assets": [], "tarball_url": "https://api.github.com/repos/CadixDev/Lorenz/tarball/0.1.0", "zipball_url": "https://api.github.com/repos/CadixDev/Lorenz/zipball/0.1.0", "body": "This is the first production-ready release of Lorenz, despite it being a 'pre-release'. The API is not stable, and will be subject to lots of changes between now and 1.0.0.\r\n\r\n*Lorenz releases are available through Maven Central*."}

{"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/68068383", "assets_url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/68068383/assets", "upload_url": "https://uploads.github.com/repos/mastodon-sc/mastodon/releases/68068383/assets{?name,label}", "html_url": "https://github.com/mastodon-sc/mastodon/releases/tag/mastodon-1.0.0-beta-26", "id": 68068383, "author": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOASmO1M4EDqQf", "tag_name": "mastodon-1.0.0-beta-26", "target_commitish": "master", "name": "Mastodon beta-26.", "draft": false, "prerelease": false, "created_at": "2022-11-04T15:03:35Z", "published_at": "2022-10-26T15:27:21Z", "assets": [], "tarball_url": "https://api.github.com/repos/mastodon-sc/mastodon/tarball/mastodon-1.0.0-beta-26", "zipball_url": "https://api.github.com/repos/mastodon-sc/mastodon/zipball/mastodon-1.0.0-beta-26", "body": "# Mastodon beta-26: plays nice with Fiji, the branch-graph, and the grapher views.\r\n\r\nThis release ships a large number of new features, focused on ease-of-life for the user, new data structures, interoperability with Fiji, scripting and handling of images stored remotely. It was built with new contributors that joined the governance. We put some highlights below. But in short:\r\n\r\n- **Mastodon integration with Fiji is better** now. You can create a Mastodon project directly on a 'normal' image opened in Fiji; you can open a Mastodon project file by drag and drop; and Mastodon can be scripted using the Fiji script editor.\r\n\r\n- There is a new view called **the Grapher**. It allows plotting and exploring numerical feature values in a XY graph, and can be synchronized with other view types.\r\n\r\n- The data model has a new component: **the branch-graph**. The branch graph is built on the lineage graph and represent each branch (for instance, the trajectory of a cell between two divisions) as a single object: a branch. This allows views that are based on the branch graph to be more synthetic (and more responsive; fewer objects to render). This allows also computing numerical features on the branch themselves, for instance the duration of a cell cycle. The TrackScheme and BDV views can display and interact with the branch-graph. And it is used in a new TrackScheme mode: the hierarchy view.\r\n\r\nThe features described below:\r\n- Create a Mastodon project directly from an image opened in Fiji.\r\n- A new data structure and the associated views: the branch graph.\r\n- Support for OME-NGFF and remotely hosted datasets.\r\n- The launcher has a list of recent projects.\r\n- Open Mastodon projects by drag & drop on the Fiji toolbar.\r\n- A grapher for feature values.\r\n- Scripting Mastodon in the Fiji script editor.\r\n- Mastodon can open a project even if the image data is missing.\r\n- Movies can be recorded from the BDV views.\r\n- Auto-linking mode in BDV views.\r\n- Ask to save before closing Mastodon.\r\n- Extract a Fiji time-lapse following a track.\r\n- Other changes.\r\n\r\n\r\n\r\n\r\n## Create a Mastodon project directly from an image opened in Fiji.\r\n\r\nIt is now possible to create a new Mastodon project directly from an image opened in Fiji. The core code to wrap a `SpimData` around an `ImagePlus` is based on existing code by Tobias in the BDV Fiji plugins. The proper handling of this feature in Mastodon mainly requires  dealing with warning the user and ultimately offering exporting the image to a BDV file.\r\n\r\nIt works like this:\r\n\r\nThe launcher \"New Mastodon project\" as a new option, listing the images opened in Fiji as possible source.\r\n\r\n![Screenshot 2022-07-06 at 14 02 22](https://user-images.githubusercontent.com/3583203/177545586-ea296a32-0637-4935-b2e0-a812720f9445.png)\r\n\r\n\r\nProject created this way looks like classic Mastodon project, as if the image source had only 1 resolution level. \r\nThe LUT and display scale are imported from the ImagePlus as well.\r\n![Screenshot 2022-07-06 at 14 05 36](https://user-images.githubusercontent.com/3583203/177546136-3456647c-8224-4dc2-b05a-2d194857a943.png)\r\n\r\n\r\nThe image data in Mastodon **wraps** the ImagePlus data. If the user modify the image in the ImagePlus window, the modifications will be shown, and used, in Mastodon:\r\n![Screenshot 2022-07-06 at 14 06 57](https://user-images.githubusercontent.com/3583203/177546359-7a8b1b99-dba0-412d-a5a7-460e4d9807c9.png)\r\n\r\n\r\nBecause of this we have to be extra careful when the user closes the ImagePlus. So the ImagePlus window is modified to listen to the user closing the image, and shows this message:\r\n![Screenshot 2022-07-06 at 14 11 45](https://user-images.githubusercontent.com/3583203/177547163-703ab93c-f134-4183-9c5b-b9ec95657c6f.png)\r\nIf the user clicks 'Yes', both the image and all Mastodon windows are closed. \r\n\r\n\r\nWhen the user wants to save such a Mastodon project, they are offered to export the image to a BDV file:\r\n![Screenshot 2022-07-06 at 14 17 40](https://user-images.githubusercontent.com/3583203/177548285-bb59da39-757b-4b2f-b4c1-1e594f206b91.png)\r\n\r\nIt then shows the familiar dialog of the BDV export (the code is copied from the BDV Fiji plugin):\r\n![Screenshot 2022-07-06 at 14 25 26](https://user-images.githubusercontent.com/3583203/177549621-1498c63e-2e26-49f9-b940-6ce62c03e7ec.png)\r\n\r\nAfter the export, the user is prompted to save the Mastodon project in a standard way. The Mastodon session will now run using the new BDV file as source for the image data, not on the ImagePlus anymore. The warning that appeared when trying to close the image is removed.\r\n\r\nIf the user chooses **not** to export to a BDV file, a standard project file will be created, but with a dataset field pointing to where the image file is saved (as inferred from the `FileInfo` of the ImagePlus). Such a project can now be reloaded by Mastodon normally, without warning. \r\n\r\n## A new data structure and the associated views: the branch graph.\r\n\r\n### What is a branch-graph?\r\n\r\nA branch graph is a simplified view of a source graph, called here the linked graph, that offers a coarser level of details by representing branches of the linked graph as a single vertex in the branch graph.\r\n\r\nA branch in the linked graph is defined as sequence of connected vertices, where all except the last vertex have exactly one outgoing edge, and all except the first vertex have exactly one incoming edge.\r\n\r\nIf the linked graph has a branch like this:\r\n\r\n`v0 \u2192 v1 \u2192 v2 \u2192 v3`\r\n\r\nIt's represented in the branch graph as a single vertex: `bv0`\r\nWhere `bv0` links to all the nodes, and edges: `v0 \u2192 v1 \u2192 v2 \u2192 v3`.\r\n\r\nA small graph like this:\r\n\r\n```\r\n                 v3 \u2192 v4 \u2192 v5\r\n              /\r\n v0 \u2192 v1 \u2192 v2\r\n              \\\r\n                 v6 \u2192 v7 \u2192 v8\r\n```\r\n\r\nwill be represented by the following branch graph:\r\n\r\n```\r\n       bv1\r\n     /\r\n bv0\r\n     \\\r\n       bv2\r\n```\r\n\r\nThe vertices and edge of the branch graph are linked to the vertices and edges of the original graph as follows:\r\n\r\n- `bv0` is linked to `v0 \u2192 v1 \u2192 v2`\r\n- `bv1` is linked to `v3 \u2192 v4 \u2192 v5`\r\n- `bv2` is linked to `v6 \u2192 v7 \u2192 v8`\r\n- The edge `bv0 \u2192 bv1` is linked to the edge `v2 \u2192 v3`\r\n- The edge `bv0 \u2192 bv2` is linked to the edge `v2 \u2192 v6`\r\n\r\nIn the context of Mastodon, the branch-graph is important for two main reasons:\r\n\r\n- Views that are based on the branch-graph have a good performance, because the branch-graph is sparse compared to the core-graph it is based on.\r\n- Biology applications need the branch-graph. There are many important features that are defined on the branch-graph, such as cell-cycle length, cell excursion, cell hierarchy, etc. The branch-graph offers a convenient and sensible basis to compute and reason on them.\r\n\r\n### The branch-graph in Mastodon.\r\n\r\nWith this new version, Mastodon offers support for the branch-graph, and several views to interact with it. Also, numerical features can be computed and interrogated on the branch-graph. We list here the new views related to the branch graph, and the new coloring modes and features associated to it.\r\n\r\n#### The new TrackScheme view for branch graph.\r\n\r\nTo create a TrackScheme view of the branch graph, either `shift-click` on the `track scheme` button on the main window, or use the _Window > New TrackScheme Branch_ menu item\r\n\r\nFor instance, here is a dense lineage viewed in TrackScheme:\r\n![Mastodon_BranchGraph_TrackScheme_01](https://user-images.githubusercontent.com/3583203/197783716-c1fd8a82-d3b7-4392-ab52-733174e23a5c.png)\r\n\r\nand here is its equivalent visualization with the branch-graph:\r\n![Mastodon_BranchGraph_TrackScheme_02](https://user-images.githubusercontent.com/3583203/197783795-1d95abb5-49bb-4e75-8fd6-8806c5c65904.png)\r\n\r\nBy zooming in, we can see that the branches are represented by only one vertex in the branch graph. Again comparing with the normal graph we have:\r\n![Mastodon_BranchGraph_TrackScheme_03](https://user-images.githubusercontent.com/3583203/197783979-4832f88d-f529-4a51-9a10-fd06e56ed97d.png)\r\n![Mastodon_BranchGraph_TrackScheme_04](https://user-images.githubusercontent.com/3583203/197783976-7d2434be-ca6b-4de8-af00-5c40b15aff12.png)\r\n\r\n![Mastodon_BranchGraph_TrackScheme_05](https://user-images.githubusercontent.com/3583203/197783975-58a11c9b-2016-42ac-9ea6-69254f950a3d.png)\r\n![Mastodon_BranchGraph_TrackScheme_06](https://user-images.githubusercontent.com/3583203/197783972-36027702-868f-4f92-a19e-96e69fc8489e.png)\r\n\r\nNotice that the TrackScheme window has a button `Regen branch graph`. The modifications made to the linked graph are not automatically synchronized to the branch graph, for performance reasons. This button forces the branch-graph getting in sync.\r\n\r\n#### The new Hierarchy view.\r\n\r\nWe made a new view, derived directly from the branch TrackScheme: the TrackScheme Hierarchy. It is a view of a lineage like TrackScheme, except that the Y displays the level of the branch. That is: how many times the cell divided since the first mother cell. By default it is painted with curved lines:\r\n\r\n![Mastodon_BranchGraph_Hierarchy_01](https://user-images.githubusercontent.com/3583203/198555223-a39902a1-7930-465c-95e0-d5041d9afe84.png)\r\n\r\n#### The new table view.\r\n\r\nThe branch graph called for a new table view, that could display items and features also from the branch graph. The table window has now 4 tables, 2 for the linked graph and 2 for the branch graph:\r\n\r\n![Mastodon_branch-graph_04](https://user-images.githubusercontent.com/3583203/168847526-81ed7164-3389-41cb-9c64-b2d75d0cd0c1.png)\r\n\r\n\r\n#### Navigation and selection events with the branch graph.\r\n\r\nThe branch graph views still share selection and events with the normal views: \r\n\r\n##### Selection \r\n\r\n- Selecting a branch spot selects all the spots and links that are linked to it.\r\n- Selecting a branch link selects the link it is linked to. And conversely.\r\n- Conversely, a branch spot will be shown as selected if and only if all the spots and links that are linked to it are selected.\r\n\r\n##### Highlight.\r\n\r\n- Highlighting a branch spot will highlight the last spot it is linked to. And conversely.\r\n- Highlighting a branch link will highlight the link it is linked to. And conversely.\r\n\r\n##### Focus.\r\n\r\n- Focusing on a branch spot will focus the last spot it is linked to. And conversely.\r\n\r\n##### Group-handle and navigation.\r\n\r\n- Navigating to a branch spot will navigate to the last spot it is linked to. And conversely.\r\n- Navigating to a branch link will navigate to the link it is linked to. And conversely.\r\n\r\n\r\n\r\n### Branch features and tag-sets.\r\n\r\n#### Tag-set for branch items.\r\n\r\nAgain, the branch-graph does not have a separate model for tag-sets, but adapts the tag-set model of the core graph. This is done in a similar manner than for the selection:\r\n\r\n- Tagging a branch spot tags all the spots and links that are linked to it.\r\n- Tagging a branch link tags the link it is linked to. And conversely.\r\n- Conversely, a branch spot will be shown as tagged with a certain tag if and only if all the spots and links that are linked to it are tagged with the same tag. \r\n\r\nThis gives this kind of view:\r\n\r\n![Mastodon_branch-graph_05](https://user-images.githubusercontent.com/3583203/168847597-e5e45510-bb34-4ba9-8895-256a08cbbfa3.png)\r\n\r\n![Mastodon_branch-graph_06](https://user-images.githubusercontent.com/3583203/168847615-b8c94ef4-6d4d-40d4-884c-241fe43ec760.png)\r\n\r\nBut observe below for instance that the branch tagged in blue in the core-graph does not appear as blue in the branch graph becomes some links are not tagged:\r\n\r\n![Mastodon_branch-graph_07](https://user-images.githubusercontent.com/3583203/168847661-6cd2ce49-30ae-4dfc-aaf7-4ee06a5880ae.png)\r\n\r\n![Mastodon_branch-graph_08](https://user-images.githubusercontent.com/3583203/168847678-86d95727-5ce0-45f1-b93a-ec0189e73c6f.png)\r\n\r\n\r\n#### Branch-graph features.\r\n\r\nThe Mamut feature computation framework is augmented so that it can deal with feature computers for branch items, and provide the parameters they need for computation. A branch-graph feature can depend on a core-graph feature and conversely. Their computation is configured in the same UI:\r\n\r\n![Mastodon_BranchGraph_FeatureComputation_01](https://user-images.githubusercontent.com/3583203/200004599-e937626c-e08d-4bcf-8254-a7752651a0d0.png)\r\n\r\nNotice that most of the branch features are defined for the branch spots. A branch (a cell between two divisions) is really meant to be represented by a branch spot.\r\n\r\n#### Coloring core-graph and branch graph with branch features.\r\n\r\n##### The Feature color mode collection.\r\n\r\nNow that we have numerical features defined over branches, we can use them to color the views. In Mastodon you can create feature color modes, built on the spot and link features. Normally we should manage a second collection of coloring modes for the branch-graph views. But we wanted to avoid multiplying the number items to configure. \r\n\r\nSo there is still only one collection of feature color modes, common to the linked graph and the branch graph. The coloring menu simply filters them based on whether a mode is suitable for a certain view. For instance, it is possible to use a color mode defined for a branch on a normal TrackScheme, because it will apply the branch color to all the spots and links of the branch. However, color modes that are defined over spots will not be active for the branch graph views. For instance:\r\n\r\n<img width=\"587\" alt=\"Mastodon_branch-graph_11\" src=\"https://user-images.githubusercontent.com/3583203/168847972-d91abccd-a95e-4b46-8ec4-c14e471a0c17.png\">\r\n\r\n<img width=\"638\" alt=\"Mastodon_branch-graph_10\" src=\"https://user-images.githubusercontent.com/3583203/168848026-1b1b74c2-31f2-451b-9af9-ed7663a7260e.png\">\r\n\r\n\r\n\r\nThe data table view is special, as it displays both the core-graph and the branch-graph. So there are two coloring menus:\r\n\r\n<img width=\"549\" alt=\"Mastodon_branch-graph_12\" src=\"https://user-images.githubusercontent.com/3583203/168848103-9f9f16ba-e06f-4fc0-a692-40632a9f3782.png\">\r\n\r\n\r\n##### The Feature color mode creation UI.\r\n\r\nBut now, how to create these color modes?\r\n\r\nSince the feature-model is happy to welcome within in features that apply to different object types, we reuse the UI we have to specify feature color modes. Again, the goal was to avoid multiplying the number of UI windows we show to the user. The vertex and edge mode selectors are now in a scroll pane to show all the modes, and the non selected ones are greyed for clarity. We also tried to improve the labels, so that we show 'Spot' and 'Link' in the Mamut app, instead of 'Vertex' and 'Edge', again to make it simpler and clearer to the user:\r\n\r\n![Mastodon_BranchGraph_FeatureColorModes_01](https://user-images.githubusercontent.com/3583203/198555326-15954bac-a3af-44be-b54f-3c6247290fea.png)\r\n\r\n\r\n## Support for OME-NGFF and remotely hosted datasets.\r\n\r\nMastodon can now be opened on images that are hosted on a server (such as ZARR files hosted on a S3 server). \r\nThis feature extends the support of the images hosted on a BDV server and supports login/password authentification. \r\n\r\nTo do so we use the  [OMEZarrS3Opener](https://github.com/mobie/mobie-io/blob/30d05a777cd5d9bf66d855f5106eb153ad0ebbbf/src/main/java/org/embl/mobie/io/ome/zarr/openers/OMEZarrS3Opener.java) of the [MoBIE project](https://mobie.github.io/).\r\nThe Mastodon update-site in Fiji ships the `mobie-io` artifact required for this feature. This artifact is normally accessible in the `MoBIE ` update-site, but because it also ships its own version of the `mastodon` artifact, **these two update sites are incompatible in Fiji**. You need to active one or the other, or none, but not the two sites in the same Fiji.\r\n\r\nIt works as follow. There is a new tab in the Mastodon launched called **new project from URL**. \r\n\r\n![Mastodon_OpenRemote_04](https://user-images.githubusercontent.com/3583203/198892234-ec6a9d87-111b-4bc7-95fe-05ed3e44f415.png)\r\n\r\nIt requires a URL that points to a ZARR file stored on a S3 storage server. For instance, the IDR hosts [examples of such datasets](https://www.openmicroscopy.org/2020/11/04/zarr-data.html) on the embassy cloud of the EBI.\r\nThis path needs to be entered in the `Image URL` field.\r\n\r\nWhen you click the `open` button, Mastodon tries to retrieve basic image information from the URL and gives an error message when it does not succeed. Depending on the access rights in effect, you might be prompted for a password.\r\n\r\nMastodon will then create a lightweight BDV file, that simply points to the data stored remotely. This file needs to be saved on your computer, and the path to the target file must be entered in the second field. \r\n\r\nThis BDV file will simply point to the remote image data, and contains basic information about it. The image data will not be stored on your computer:\r\n\r\n```xml\r\ntinevez@METALLICA MINGW64 ~/Desktop\r\n$ cat ImageFromIDR.xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<SpimData version=\"0.2\">\r\n  <BasePath type=\"relative\">.</BasePath>\r\n  <SequenceDescription>\r\n    <ImageLoader format=\"bdv.ome.zarr.s3\" version=\"0.2\">\r\n      <ServiceEndpoint>https://uk1s3.embassy.ebi.ac.uk</ServiceEndpoint>\r\n      <SigningRegion>us-west-2</SigningRegion>\r\n      <BucketName>idr</BucketName>\r\n      <Key>zarr/v0.1/4495402.zarr</Key>\r\n    </ImageLoader>\r\n```\r\n\r\nOnce done, click the `create` button, wait for a bit, and voila: a new Mastodon project that points to a possibly very large image, stored remotely:\r\n\r\n![Mastodon_OpenRemote_05](https://user-images.githubusercontent.com/3583203/198891910-18832185-51d1-48e6-9965-d0c541a6216e.png)\r\n\r\nWhen you will save this project to a Mastodon file, it Mastodon will point to the BDV file you created, which in turns point to the remote storage.  \r\n\r\n\r\n\r\n\r\n## The launcher has a list of recent projects.\r\n\r\nThe `open Mastodon project` tab shows a list of the recently opened Mastodon projects. \r\nClicking on the red button removes an entry from the list. \r\nDouble-clicking on the path opens the location of the file. \r\n\r\n![Mastodon_LauncherGUI_RecentProjects_01](https://user-images.githubusercontent.com/3583203/197764280-343cab3e-a503-4c19-8f36-efde035ac7d5.png)\r\n\r\nThe list of recent projects is saved in a YAML file inside the `~/.mastodon/` folder:\r\n\r\n```sh\r\ntinevez@METALLICA MINGW64 ~/.mastodon\r\n$ ls\r\ncolormodes.yaml          debug.yaml  **recentprojects.yaml**               trackschemestyles.yaml\r\ncolormodes-post-pr.yaml  keymaps/    rendersettings.yaml\r\ndatagraphstyles.yaml     Plugins/    selectioncreatorexpressions.yaml\r\n```\r\n\r\n```yaml\r\n$ cat recentprojects.yaml\r\nC:\\Users\\tinevez\\Development\\Mastodon\\mastodon\\samples\\Celegans.mastodon\r\n--- C:\\Users\\tinevez\\Google Drive\\Mastodon\\FromVlado\\mette_e1.mastodon\r\n--- C:\\Users\\tinevez\\Google Drive\\Cours\\MastodonI2K\\CTC_TRIF_trainingVideo02_jy-tracked.mastodon\r\n--- C:\\Users\\tinevez\\Development\\Mastodon\\mastodon\\samples\\drosophila_crop.mastodon\r\n```\r\n\r\n\r\n## Open Mastodon projects by drag & drop on the Fiji toolbar.\r\n\r\nDrag and drop a Mastodon project file on the Fiji toolbar to open it directly. \r\n\r\n\r\n## A grapher for feature values. \r\n\r\nThere is now a new view in Mastodon, fully fledged. \r\nIt lets the user plot a feature as a function of another one in a XY plot.\r\nThis view is great to do a first analysis of your tracking data, for instance to plot intensity over time over a large number of cells.\r\n\r\n![image](https://user-images.githubusercontent.com/3583203/154686865-cea50a99-ae26-447f-bbf3-27edcc8612a1.png) ![image](https://user-images.githubusercontent.com/3583203/154686880-f624bb00-0dc9-4864-b23f-21dc70f5c2c2.png) ![image](https://user-images.githubusercontent.com/3583203/154686905-e8643d0f-18e7-4979-bd85-e18d226f662e.png)\r\n\r\nIt works with the same facilities that any other views (shared focus, shared selection, shared highlight, views synchronization, etc). \r\nThis makes it easy to navigate from a dot in the XY plot to a cell in the BDV view, or in a lineage view. And the other way around as well. \r\nThe grapher view uses similar keybindings that of the TrackScheme views.\r\n\r\nhttps://user-images.githubusercontent.com/3583203/154713360-88f9a107-799e-4041-a00c-a3057a54a5a8.mov\r\n\r\nIt also works with `context`. You can set the grapher to generate a plot on the selection, the tracks of the selected items, or to take the content from a BDV context:\r\n\r\nhttps://user-images.githubusercontent.com/3583203/154713425-75704999-c54f-4213-bf8d-c236ea2a0034.mov\r\n\r\nFeature-based coloring and tag-based coloring work like for any other views. \r\nThe plot itself can also be configured in a new panel in the preferences:\r\n\r\nhttps://user-images.githubusercontent.com/3583203/154713462-49724aa7-fc98-4ea5-9a0b-be8004e8600a.mov\r\n\r\nThe view is a standard Mastodon view, strongly inspired by TrackScheme. So it:\r\n\r\n- shares selection, highlight and focus with other views. \r\n- shares object coloring.\r\n- has styles.\r\n- has roughly the same navigation shortcuts (mouse navigation, zoom, etc. are made ike TrackScheme).\r\n- has Context support (though it is hacky compared to what TrackScheme has).\r\n- has some LOD (spot size changes depending on the proximity with other spots, like for TrackScheme).\r\n\r\nRight now this must be considered a first version, to be perfected. Ideally we want:\r\n\r\n- a better renderer with better LOD, that exploits a KD-tree to avoid painting all the spots if the user requests. \r\n- to review the Context support.\r\n- make exporters to pdf and co.\r\n- add histograms.\r\n\r\n\r\n\r\n## Scripting Mastodon in the Fiji script editor.\r\n\r\nMastodon can now be scripted, for instance in Jython, in the Fiji script editor. For instance:\r\n\r\n``` python\r\n#@ Context context\r\n\r\nfrom org.mastodon.mamut import Mamut\r\nimport os\r\n\r\n# Creating a new project from a BDV image data.\r\nmamut = Mamut.newProject( bdvFile, context )\r\nlogger = mamut.getLogger()\r\n# Detect with the DoG detector, a radius of 6 and a threshold on quality of 200.\r\nmamut.detect( 6., 200. )\r\n# Link spots with the simple LAP tracker, with a max linking distance of 10.\r\nmamut.link( 10., 0 )\r\n```\r\n\r\nAn example script describes the implemented commands: \r\nhttps://github.com/mastodon-sc/mastodon-app/blob/master/scripts/MastodonExampleScript.py \r\n\r\n\r\n## Mastodon can open a project even if the image data is missing.\r\n\r\nSometimes the path to a BDV file is faulty and prevents opening the project. Now, Mastodon will simply warn you and open the project with a blank image. When in a rush, this helps sharing tracking data with colleagues without having to send the image.\r\n\r\n![Mastodon_OpenMissingData_01](https://user-images.githubusercontent.com/3583203/198555395-9a559be9-35fa-4d66-83df-af35005861d9.png)\r\n\r\n![Mastodon_OpenMissingData_02](https://user-images.githubusercontent.com/3583203/198555410-d68d0af7-b4c9-4c46-aac1-e92bb7af3460.png)\r\n\r\n\r\n\r\n\r\n## Movies can be recorded from the BDV views.\r\n\r\nThere is now two new commands to the BDV views. They toggle two new dialogs that let the user configure and record movies from a BDV view. Default shortcuts: `ctrl R` & `ctrl shift R`\r\n\r\n![Screenshot 2022-06-01 at 14 31 22](https://user-images.githubusercontent.com/3583203/171404961-181bbbc5-47af-4a91-bc8c-3489f7501801.png)\r\n\r\nThe first one is used to record movies from the display, as it is currently shown in the BDV. The movie will record the BDV window, keeping the coordinates constant and iterating over time, abiding to any display settings currently selected.\r\n\r\nThe second one does the same, but can build a MIP image over a sandwich of images above and below the displayed plane. \r\n\r\nThe two dialogs look like this:\r\n\r\n![Screenshot 2022-06-01 at 14 39 35](https://user-images.githubusercontent.com/3583203/171406459-4e5e744b-9620-4e21-9295-8dd0db814dbe.png)\r\n\r\n![Screenshot 2022-06-01 at 14 39 24](https://user-images.githubusercontent.com/3583203/171406411-43f3b30e-b351-4630-b942-c1d691933d7f.png)\r\n\r\nThe code is of course derived from the classes with the same name in the BDV core by Tobias. We adapted it so that:\r\n\r\n- The track overlay is also recorded. And possibly projected in the second case.\r\n- The colorbar overlay is also recorded.\r\n- When building the MIP, it includes planes above and below the one currently displayed, not just below.\r\n- It can export the results as a collection of PNG files, like in the original BDV version.\r\n- If required, generate a MP4, MOV or AVI movie on the fly, using the io.humble library (https://github.com/artclarke/humble-video). **This requires the Humble-Video update site to be activated in Fiji.**\r\n\r\n\r\n## Auto-linking mode in BDV views.\r\n\r\nWhen on (toggle with `control+L`), the next spot added will be automatically linked to the one in the selection, if there is exactly one in the selection.\r\n\r\nMaMuT users seem to be overly attached to this feature.\r\n\r\n\r\n\r\n## Ask to save before closing Mastodon.\r\n\r\nWhen closing the main window, this dialog is shown. But only if there have been changes since the last save.\r\n\r\n![Mastodon_SaveBeforeClose](https://user-images.githubusercontent.com/3583203/198555471-e4d2c9e2-f154-4c0b-82e1-9662f32057d9.png)\r\n\r\n\r\n## Extract a Fiji time-lapse following a track.\r\n\r\nA new plugin (_Plugins > Track image_) allows extracting the image data that follows a cell in a track. \r\nSelect 2 spots or 1 spot, run the plugin, and a new Fiji image will open (after some time) showing the image data that follows the cell tracked over time.\r\n\r\n![Screenshot 2022-11-16 at 11 24 44](https://user-images.githubusercontent.com/3583203/202155870-1ddc1443-e8b7-4a7e-9742-bb88380b27ac.png)\r\n\r\n\r\nhttps://user-images.githubusercontent.com/3583203/202156405-ac6a0361-ebf7-4100-8818-220e75c6faef.mp4\r\n\r\n\r\n\r\n\r\n## Other changes.\r\n\r\n* Tiny fix, NullPointerException in FeatureComputationPanel/Model by @maarzt in https://github.com/mastodon-sc/mastodon/pull/147\r\n* CI: switch from Travis CI to GitHub Actions by @imagejan in https://github.com/mastodon-sc/mastodon/pull/149\r\n* Fix FeatureComputationModel:getFeatureSpec(...) if no features are installed by @tinevez in https://github.com/mastodon-sc/mastodon/pull/148\r\n* Improve min radius when editing spot. by @tinevez in https://github.com/mastodon-sc/mastodon/pull/163\r\n* Menu and title fixes by @xulman in https://github.com/mastodon-sc/mastodon/pull/185\r\n* Fix LineageTreeLayout to work for graphs containing merging spots by @maarzt in https://github.com/mastodon-sc/mastodon/pull/188\r\n* ADD: MastodonDndLauncher to accept DnD .mastodon events by @xulman in https://github.com/mastodon-sc/mastodon/pull/195\r\n* FIX: catches (warns and continues operation!) when restoring of BDV windows from gui.xml by @xulman in https://github.com/mastodon-sc/mastodon/pull/194\r\n* Change the \"edit label action\" to rename all spots of a branch at once (Branch&Hierarchy TrackScheme) by @maarzt in https://github.com/mastodon-sc/mastodon/pull/186\r\n\r\n## New members of the Mastodon governance.\r\n\r\nKo Sugawara, Mathias Arzt and Vladimir UIman joined the Mastodon governance. ", "mentions_count": 4}
{"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/46717418", "assets_url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/46717418/assets", "upload_url": "https://uploads.github.com/repos/mastodon-sc/mastodon/releases/46717418/assets{?name,label}", "html_url": "https://github.com/mastodon-sc/mastodon/releases/tag/mastodon-1.0.0-beta-20", "id": 46717418, "author": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ2NzE3NDE4", "tag_name": "mastodon-1.0.0-beta-20", "target_commitish": "master", "name": "Mastodon beta-20.", "draft": false, "prerelease": false, "created_at": "2021-07-24T17:33:12Z", "published_at": "2021-07-24T17:37:29Z", "assets": [{"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/assets/40947644", "id": 40947644, "node_id": "MDEyOlJlbGVhc2VBc3NldDQwOTQ3NjQ0", "name": "mastodon-1.0.0-beta-20-javadoc.jar", "label": null, "uploader": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "content_type": "application/java-archive", "state": "uploaded", "size": 3236863, "download_count": 27, "created_at": "2021-07-24T17:36:58Z", "updated_at": "2021-07-24T17:37:10Z", "browser_download_url": "https://github.com/mastodon-sc/mastodon/releases/download/mastodon-1.0.0-beta-20/mastodon-1.0.0-beta-20-javadoc.jar"}, {"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/assets/40947656", "id": 40947656, "node_id": "MDEyOlJlbGVhc2VBc3NldDQwOTQ3NjU2", "name": "mastodon-1.0.0-beta-20-sources.jar", "label": null, "uploader": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "content_type": "application/java-archive", "state": "uploaded", "size": 2166739, "download_count": 9, "created_at": "2021-07-24T17:37:10Z", "updated_at": "2021-07-24T17:37:15Z", "browser_download_url": "https://github.com/mastodon-sc/mastodon/releases/download/mastodon-1.0.0-beta-20/mastodon-1.0.0-beta-20-sources.jar"}, {"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/assets/40947659", "id": 40947659, "node_id": "MDEyOlJlbGVhc2VBc3NldDQwOTQ3NjU5", "name": "mastodon-1.0.0-beta-20-tests.jar", "label": null, "uploader": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "content_type": "application/java-archive", "state": "uploaded", "size": 255092, "download_count": 8, "created_at": "2021-07-24T17:37:15Z", "updated_at": "2021-07-24T17:37:17Z", "browser_download_url": "https://github.com/mastodon-sc/mastodon/releases/download/mastodon-1.0.0-beta-20/mastodon-1.0.0-beta-20-tests.jar"}, {"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/assets/40947660", "id": 40947660, "node_id": "MDEyOlJlbGVhc2VBc3NldDQwOTQ3NjYw", "name": "mastodon-1.0.0-beta-20.jar", "label": null, "uploader": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "content_type": "application/java-archive", "state": "uploaded", "size": 2617011, "download_count": 28, "created_at": "2021-07-24T17:37:17Z", "updated_at": "2021-07-24T17:37:22Z", "browser_download_url": "https://github.com/mastodon-sc/mastodon/releases/download/mastodon-1.0.0-beta-20/mastodon-1.0.0-beta-20.jar"}], "tarball_url": "https://api.github.com/repos/mastodon-sc/mastodon/tarball/mastodon-1.0.0-beta-20", "zipball_url": "https://api.github.com/repos/mastodon-sc/mastodon/zipball/mastodon-1.0.0-beta-20", "body": "This new beta version contains several additions initiated by Ko Sugawara @ksugar to facilitate the deployment of the Elephant project https://github.com/elephant-track.\r\n\r\nThe latest changes can be summarised as follow:\r\n- Listeners can be registered to the WindowManager to be notified when a new BDV view is created by the user.\r\n- Fix a deadlock in TrackScheme occurring when TrackScheme was launched while spots or links were created.\r\n- New settings for the BDV view:\r\n    - stroke of spots\r\n    - stroke of links\r\n    - paint ellipses filled.\r\n- Settings page are in a scroll pane, when they become very long.\r\n"}
{"url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/42835773", "assets_url": "https://api.github.com/repos/mastodon-sc/mastodon/releases/42835773/assets", "upload_url": "https://uploads.github.com/repos/mastodon-sc/mastodon/releases/42835773/assets{?name,label}", "html_url": "https://github.com/mastodon-sc/mastodon/releases/tag/mastodon-1.0.0-beta-18", "id": 42835773, "author": {"login": "tinevez", "id": 3583203, "node_id": "MDQ6VXNlcjM1ODMyMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3583203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinevez", "html_url": "https://github.com/tinevez", "followers_url": "https://api.github.com/users/tinevez/followers", "following_url": "https://api.github.com/users/tinevez/following{/other_user}", "gists_url": "https://api.github.com/users/tinevez/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinevez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinevez/subscriptions", "organizations_url": "https://api.github.com/users/tinevez/orgs", "repos_url": "https://api.github.com/users/tinevez/repos", "events_url": "https://api.github.com/users/tinevez/events{/privacy}", "received_events_url": "https://api.github.com/users/tinevez/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQyODM1Nzcz", "tag_name": "mastodon-1.0.0-beta-18", "target_commitish": "master", "name": "Mastodon beta-18.", "draft": false, "prerelease": false, "created_at": "2021-05-12T11:47:20Z", "published_at": "2021-05-12T12:36:22Z", "assets": [], "tarball_url": "https://api.github.com/repos/mastodon-sc/mastodon/tarball/mastodon-1.0.0-beta-18", "zipball_url": "https://api.github.com/repos/mastodon-sc/mastodon/zipball/mastodon-1.0.0-beta-18", "body": "# Mastodon beta-18.\r\n\r\nThis new beta of Mastodon focuses mainly on bringing some clarity in the development process and a rework of the intensity-based feature computation. If you are interested in the development of Mastodon, read at the end of this changelog for the changes in development guidelines that come with this release.\r\n\r\n___\r\n\r\n## Changelog.\r\n\r\n### New intensity features and removed ones.\r\n\r\nTobias made a new and convenient iterator that can iterate through all the pixels of an ellipsoid exactly once, regardless of the transform or shape of the ellipsoid (https://github.com/mastodon-sc/mastodon/blob/master/src/main/java/org/mastodon/mamut/feature/EllipsoidIterable.java). It is used in this release to rewrite and change all the intensity-based features:\r\n\r\n- The **Spot intensity** feature computes the mean, min, max, sum, median and std of the pixel values in a spot for each channel.\r\n- The sum intensity and median intensity feature in the `mastodon-pasteur` artifact were removed (replaced by above feature).\r\n- The **Spot gaussian-filtered intensity** feature is now renamed in **Spot center intensity** (it does that). It now only returns the mean value, not the std anymore.\r\n- There is now a **Spot quick mean** feature, that computes the mean intensity on the highest resolution level available, in a multi-threaded fashion. It brings faster computation speed at the cost of accuracy. Because so far we tested computation on HDF5 images, for which in Java there is no multithreaded access, its benefit are yet limited.\r\n\r\n### Better look of the window and dialog icons when minimized.\r\n\r\n![Screenshot 2021-05-12 at 14 20 16](https://user-images.githubusercontent.com/3583203/117975824-612b6200-b32f-11eb-82f4-7807518dc894.png)\r\n\r\n\r\n### No more warnings about plugin commands without a description.\r\n\r\nAll the plugin commands that are were mapped by default and that were are regifted in the `bdv`, `ts` or `table` contexts generated an error message everytime preferences were edited. \r\n\r\nThis also allows these commands to be edited in the Mastodon Keymap editor.\r\n\r\nFinally, the `ts` context is now renamed to `trackscheme`.\r\n\r\n### [Bugfix - core] Don't complaint when pressing 'Save' with a newly created project.\r\n\r\nThis happened because just after creating a project on a `H5/xml` file, there is not yet a Mastodon project to save to. With this fix, pressing the `Save` button asks the user for a `.mastodon` file to save to.\r\n\r\n### [Bugfix - mastodon-tracking] Mastodon blocks during semi-automatic tracking.\r\n\r\nSometimes when a TrackScheme window was opened and when semi-automatic tracking was done in a BDV window, Mastodon could become blocked. This was caused by conflicting graph update sent by the semi-automatic tracker and TrackScheme trying to repaint the whole model every-time. \r\n\r\nThis release contains a tentative fix that does update notification in a more timely manner. \r\n\r\nNoticed by Jang-Mi Kim (Institut Pasteur) & Arianne Bercowsky (EPFL). \r\n\r\n### [Bugfix - core] Feature update mechanism does not work properly.\r\n\r\nMastodon can do feature value updates. The values for some features are not recomputed for an object if this object and its neighbor objects did not change between computations. This help greatly in the case of large models for the intensity features, that take ages to compute.\r\n\r\nNormally when the user modifies a spot, its feature values that need recomputing should be deleted (*e.g.* as they appear from the tables) to avoid misleading the user with faulty feature values after modification. A bug prevented the features to be deleted when a spot was edited. This is fixed now.\r\n\r\nNoticed by Ko Sugawara (ENS-Lyon).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n____\r\n\r\n## Changes in the development practices.\r\n\r\nPrior to this beta, there were two Mastodon versions uploaded to Fiji. The first one - `Mastodonpreview` - was in sync with the master but did not have many features. It brought really the core of Mastodon but did not have for instance the table views.\r\n\r\nThe second one - `Mastodon-jungle` - had a lot of features, including the table views, the visibility modes, etc.... These features were not (still are not) reviewed by Tobias, which violates somehow our development guidelines. However we (Tobias and JY) reasoned that in the beta phase they should be brought to the community in an early manner. So a branch named `jungle3` was made that merged all the PRs with the new features, and uploaded to Fiji. This is the version the users have had playing with since a couple of months. \r\n\r\nAs noted by others, this deployed version was not in sync with the master, which started to cause some confusions. So:\r\n\r\n- We forked the original master branch to another one to save its state (`master-before-switch`) and rebased the feature PRs against this one. This way we can analyze them _a posteriori_ when we have time. \r\n- We merged the `jungle3` on the `master` branch.\r\n\r\nFrom now on, we will test the following **development guidelines**:\r\n\r\n- The `master` branch will remains in sync with the version uploaded to Fiji. Except for minor things such as the version specified in the `pom.xml`.\r\n- In between releases, all development will be made on the `dev` branch. So if you make a PR, please make it against the `dev` branch.\r\n- For a release, the `dev` branch will be merged on the `master`, tested then uploaded to Fiji. The next development cycle will happen again on the `dev` branch."}

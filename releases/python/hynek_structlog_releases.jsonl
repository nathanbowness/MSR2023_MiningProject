{"url": "https://api.github.com/repos/hynek/structlog/releases/84068194", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/84068194/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/84068194/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/22.3.0", "id": 84068194, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4FAsdi", "tag_name": "22.3.0", "target_commitish": "main", "name": "22.3.0", "draft": false, "prerelease": false, "created_at": "2022-11-24T07:35:43Z", "published_at": "2022-11-24T07:49:29Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/22.3.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/22.3.0", "body": "## Highlights\r\n\r\nThis is bug-fix release due to overly-zealous string interpolation in the native bound logger. You can now pass anything as event again (but it really should be a string) and log `%` signs as long as you don't pass positional arguments.\r\n\r\n\r\n## Special Thanks\r\n\r\nThis release would not be possible without my generous sponsors! Thank you to all of you making sustainable maintenance possible! If *you* would like to join them, go to <https://github.com/sponsors/hynek> and check out the sweet perks!\r\n\r\n### Above and Beyond\r\n\r\n[Variomedia AG](https://www.variomedia.de/) (@variomedia), [Tidelift](https://www.tidelift.com/) (@tidelift), [Sentry](https://sentry.io) (@getsentry), [HiredScore](https://hiredscore.com) (@HiredScore), [FilePreviews](http://filepreviews.io/) (@filepreviews), and Daniel Fortunov (@asqui).\r\n\r\n\r\n### Maintenance Sustainers\r\n\r\n@rzijp, [Adam Hill](https://adamghill.com) (@adamghill), Dan Groshev (@si14), Tamir Bahar (@tmr232), [Adi Roiban](http://adi.roiban.ro) (@adiroiban), Magnus Watn (@magnuswatn), [David Cramer](http://cra.mr) (@dcramer), Moving Content AG (@moving-content), [Stein Magnus Jodal](https://jod.al) (@jodal), [Iwan Aucamp](https://orcid.org/0000-0002-7325-3231) (@aucampia), [ProteinQure](https://proteinqure.com/) (@ProteinQure), Jesse Snyder (@jessesnyder), [Rivo Laks](https://rivolaks.com) (@rivol), [Thomas Ballinger](http://ballingt.com/) (@thomasballinger), @medecau, [Ionel Cristian M\u0103rie\u0219](https://blog.ionelmc.ro) (@ionelmc), [The Westervelt Company](https://westervelt.com) (@westerveltco), Philippe Galvan (@PhilippeGalvan), Birk Jernstr\u00f6m (@birkjernstrom), [Jannis Leidel](https://publicidentity.net/@jezdez) (@jezdez), [Tim Schilling](www.better-simple.com) (@tim-schilling), Chris Withers (@cjw296), and [Christopher Dignam](https://christopher.xyz) (@chdsbd).\r\n\r\nNot to forget 2 more amazing humans who chose to be generous but anonymous!\r\n\r\n## Full Changlog\r\n\r\n### Changed\r\n\r\n- String interpolation in `FilteringBoundLogger` (used by default) is now only attempted if positional arguments are passed. This prevents crashes if something different than a string is passed for the *event* argument. [\\#475](https://github.com/hynek/structlog/pull/475)\r\n\r\n### Fixed\r\n\r\n- String interpolation doesn't cause crashes in filtered log call anymore. [\\#478](https://github.com/hynek/structlog/pull/478)\r\n", "mentions_count": 29}
{"url": "https://api.github.com/repos/hynek/structlog/releases/83641927", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/83641927/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/83641927/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/22.2.0", "id": 83641927, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4E_EZH", "tag_name": "22.2.0", "target_commitish": "main", "name": "22.2.0", "draft": false, "prerelease": false, "created_at": "2022-11-19T11:47:17Z", "published_at": "2022-11-19T12:18:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/22.2.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/22.2.0", "body": "## Highlights\r\n\r\nThis is another (too) big release, but before I go into new features, allow me to **beg** you to check out [*structlog*'s documentation](https://www.structlog.org/). I've spent easily half of the time on bringing is up to date, restructuring, and adding usage recipes. Not new in this release, but did you know that the [standard library chapter](https://www.structlog.org/en/stable/standard-library.html) has flowcharts that give you as visual explanations of how the various methods work? This is usually the biggest sticking point when starting to use *structlog*.\r\n\r\nFeature-wise the big thing is that *structlog*'s internal (and extremely fast) loggers (the one created using `structlog.make_filtering_bound_logger()` got two new features that people have asked for forever:\r\n\r\n1. String interpolation: `log.info(\"hello %s!\", \"world\")` works now!\r\n2. Async! Each logging method has an async version: `await log.ainfo(\"hello %s!\", \"world\")` is the same thing as above, but async.\r\n\r\n\r\n## Special Thanks\r\n\r\nThis release would not be possible without my generous sponsors! Thank you to all of you making sustainable maintenance possible! If *you* would like to join them, go to <https://github.com/sponsors/hynek> and check out the sweet perks!\r\n\r\n### Above and Beyond\r\n\r\n[Variomedia AG](https://www.variomedia.de/) (@variomedia), [Tidelift](https://www.tidelift.com/) (@tidelift), [Sentry](https://sentry.io) (@getsentry), [HiredScore](https://hiredscore.com) (@HiredScore), [FilePreviews](http://filepreviews.io/) (@filepreviews), and Daniel Fortunov (@asqui).\r\n\r\n\r\n### Maintenance Sustainers\r\n\r\n@rzijp, [Adam Hill](https://adamghill.com) (@adamghill), Dan Groshev (@si14), Tamir Bahar (@tmr232), [Adi Roiban](http://adi.roiban.ro) (@adiroiban), Magnus Watn (@magnuswatn), [David Cramer](http://cra.mr) (@dcramer), Moving Content AG (@moving-content), [Stein Magnus Jodal](https://jod.al) (@jodal), [Iwan Aucamp](https://orcid.org/0000-0002-7325-3231) (@aucampia), [ProteinQure](https://proteinqure.com/) (@ProteinQure), Jesse Snyder (@jessesnyder), [Rivo Laks](https://rivolaks.com) (@rivol), [Thomas Ballinger](http://ballingt.com/) (@thomasballinger), @medecau, [Ionel Cristian M\u0103rie\u0219](https://blog.ionelmc.ro) (@ionelmc), [The Westervelt Company](https://westervelt.com) (@westerveltco), Philippe Galvan (@PhilippeGalvan), Birk Jernstr\u00f6m (@birkjernstrom), [Jannis Leidel](https://publicidentity.net/@jezdez) (@jezdez), [Tim Schilling](www.better-simple.com) (@tim-schilling), Chris Withers (@cjw296), and [Christopher Dignam](https://christopher.xyz) (@chdsbd).\r\n\r\nNot to forget 2 more amazing humans who chose to be generous but anonymous!\r\n\r\n\r\n## Full Changelog\r\n\r\n### Deprecated\r\n\r\n- Accessing package metadata as attributes on the *structlog* module is deprecated (e.g. `structlog.__version__`). Please use [`importlib.metadata`](https://docs.python.org/3.10/library/importlib.metadata.html) instead (for Python 3.7: the [*importlib-metadata*](https://pypi.org/project/importlib-metadata/) PyPI package).\r\n- The `structlog.types` module is now deprecated in favor of the `structlog.typing` module. It seems like the Python typing community is settling on this name.\r\n\r\n### Added\r\n\r\n- `FilteringBoundLogger` (used by default) now allows for string interpolation using positional arguments:\r\n\r\n  ``` pycon\r\n  >>> log.info(\"Hello %s! The answer is %d.\", \"World\", 42, x=1)\r\n  2022-10-07 10:04.31 [info     ] Hello World! The answer is 42. x=1\r\n  ```\r\n\r\n  [\\#454](https://github.com/hynek/structlog/pull/454)\r\n\r\n- `FilteringBoundLogger` now also has support for *asyncio*-based logging. Instead of a wrapper class like `structlog.stdlib.AsyncBoundLogger`, async equivalents have been added for all logging methods. So instead of `log.info(\"hello\")` you can also write `await log.ainfo(\"hello\")` in async functions and methods.\r\n\r\n  This seems like the better approach and if it's liked by the community, `structlog.stdlib.BoundLogger` will get those methods too. [\\#457](https://github.com/hynek/structlog/pull/457)\r\n\r\n### Changed\r\n\r\n- The documentation has been **heavily** overhauled. Have a look if you haven't lately! Especially the graphs in the [standard library chapter](https://www.structlog.org/en/latest/standard-library.html) have proven valuable to many.\r\n- The build backend has been switched to [*Hatch*](https://hatch.pypa.io/).\r\n\r\n### Fixed\r\n\r\n- The timestamps in the default configuration now use the correct separator (`:`) for seconds.\r\n", "reactions": {"url": "https://api.github.com/repos/hynek/structlog/releases/83641927/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 4, "rocket": 0, "eyes": 0}, "mentions_count": 29}
{"url": "https://api.github.com/repos/hynek/structlog/releases/72418282", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/72418282/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/72418282/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/22.1.0", "id": 72418282, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4EUQPq", "tag_name": "22.1.0", "target_commitish": "main", "name": "22.1.0", "draft": false, "prerelease": false, "created_at": "2022-07-20T11:06:05Z", "published_at": "2022-07-20T11:47:25Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/22.1.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/22.1.0", "body": "## Highlights\r\n\r\nThis is a (too) big release, so it has _many_ highlights!\r\n\r\nFirstly, rendering exceptions in machine-readable logs (usually JSON) got a big upgrade: thanks to [`structlog.processors.dict_tracebacks`](https://www.structlog.org/en/stable/api.html#structlog.processors.dict_tracebacks) you can now have fully structured exceptions in your logs!\r\n\r\nTo ease getting started with `structlog`, we're now shipping `structlog.stdlib.recreate_defaults()` that recreates `structlog`'s default behavior, but on top of standard library's `logging`. The output looks the same, but it runs through `logging`'s machinery and integrates itself easier. The default configuration now also merges your [`contextvars`-based context](https://www.structlog.org/en/stable/contextvars.html), so enjoy `structlog.contextvars.bind_contextvars()` without configuring anything!\r\n\r\nAnother request wish that kept coming up is naming the message key differently than `event`. We're aware that nowadays keys like `msg` are more common, but `structlog` pre-dates the software that introduced and popularized it. To allow for more consistency across your platforms,  `structlog` now ships [`structlog.processors.EventRenamer`](https://www.structlog.org/en/stable/api.html#structlog.processors.EventRenamer) that allows you to rename the default `event` key to something else and additionally also allows you to rename another key to `event`.\r\n\r\n\u2764\ufe0f **Huge** thanks to my [GitHub sponsors](https://github.com/sponsors/hynek), [Tidelift subscribers](https://tidelift.com/subscription/pkg/pypi-structlog), and [Ko-fi buyers](https://ko-fi.com/the_hynek)! \u2764\ufe0f\r\n\r\nNone of my projects would exist in their current form without you!\r\n\r\n## Full Changelog\r\n\r\n### Removed\r\n\r\n-   Python 3.6 is not supported anymore.\r\n-   Pickling is now only possible with protocol version 3 and newer.\r\n\r\n### Deprecated\r\n\r\n-   The entire `structlog.threadlocal` module is deprecated. Please use the primitives from `structlog.contextvars` instead.\r\n\r\n    If you're using the modern APIs (`bind_threadlocal()` / `merge_threadlocal()`) it's enough to replace them 1:1 with their `contextvars` counterparts. The old approach around `wrap_dict()` has been discouraged for a while.\r\n\r\n    Currently there are no concrete plans to remove the module, but no patches against it will be accepted from now on. [\\#409](https://github.com/hynek/structlog/pull/409)\r\n\r\n### Added\r\n\r\n-   `structlog.processors.StackInfoRenderer` now has an *additional_ignores* parameter that allows you to filter out your own logging layer. [\\#396](https://github.com/hynek/structlog/issues/396)\r\n-   Added `structlog.WriteLogger`, a faster \u2013 but more low-level \u2013 alternative to `structlog.PrintLogger`. It works the way `PrintLogger` used to work in previous versions. [\\#403](https://github.com/hynek/structlog/pull/403) [\\#404](https://github.com/hynek/structlog/pull/404)\r\n-   `structlog.make_filtering_bound_logger()`-returned loggers now also have a `log()` method to match the `structlog.stdlib.BoundLogger` signature closer. [\\#413](https://github.com/hynek/structlog/pull/413)\r\n-   Added structured logging of tracebacks via the `structlog.tracebacks` module, and most notably the `structlog.tracebacks.ExceptionDictTransformer` which can be used with the new `structlog.processors.ExceptionRenderer` to render JSON tracebacks. [\\#407](https://github.com/hynek/structlog/pull/407)\r\n-   `structlog.stdlib.recreate_defaults(log_level=logging.NOTSET)` that recreates `structlog`'s defaults on top of standard library's `logging`. It optionally also configures `logging` to log to standard out at the passed log level. [\\#428](https://github.com/hynek/structlog/pull/428)\r\n-   `structlog.processors.EventRenamer` allows you to rename the hitherto hard-coded event dict key `event` to something else. Optionally, you can rename another key to `event` at the same time, too. So adding `EventRenamer(to=\"msg\", replace_by=\"_event\")` to your processor pipeline will rename the standard `event` key to `msg` and then rename the `_event` key to `event`. This allows you to use the `event` key in your own log files and to have consistent log message keys across languages.\r\n-   `structlog.dev.ConsoleRenderer(event_key=\"event\")` now allows to customize the name of the key that is used for the log message.\r\n\r\n### Changed\r\n\r\n-   `structlog.make_filtering_bound_logger()` now returns a method with the same signature for all log levels, whether they are active or not. This ensures that invalid calls to inactive log levels are caught immediately and don't explode once the log level changes. [\\#401](https://github.com/hynek/structlog/pull/401)\r\n-   `structlog.PrintLogger` \u2013 that is used by default \u2013 now uses `print()` for printing, making it a better citizen for interactive terminal applications. [\\#399](https://github.com/hynek/structlog/pull/399)\r\n-   `structlog.testing.capture_logs` now works for already initialized bound loggers. [\\#408](https://github.com/hynek/structlog/pull/412)\r\n-   `structlog.processors.format_exc_info()` is no longer a function, but an instance of `structlog.processors.ExceptionRenderer`. Its behavior has not changed. [\\#407](https://github.com/hynek/structlog/pull/407)\r\n-   The default configuration now includes the `structlog.contextvars.merge_contextvars` processor. That means you can use [`structlog.contextvars`](https://www.structlog.org/en/stable/contextvars.html) features without configuring `structlog`.\r\n\r\n### Fixed\r\n\r\n-   Overloaded the `bind`, `unbind`, `try_unbind` and `new` methods in the `FilteringBoundLogger` [Protocol](https://docs.python.org/3/library/typing.html#typing.Protocol). This makes it easier to use objects of type `FilteringBoundLogger` in a typed context. [\\#392](https://github.com/hynek/structlog/pull/392)\r\n-   Monkeypatched `sys.stdout`s are now handled more gracefully by `ConsoleRenderer` (that's used by default). [\\#404](https://github.com/hynek/structlog/pull/404)\r\n-   `structlog.stdlib.render_to_log_kwargs()` now correctly handles the presence of `exc_info`, `stack_info`, and `stackLevel` in the event dictionary. They are transformed into proper keyword arguments instead of putting them into the `extra` dictionary. [\\#424](https://github.com/hynek/structlog/issues/424), [\\#427](https://github.com/hynek/structlog/issues/427)\r\n", "reactions": {"url": "https://api.github.com/repos/hynek/structlog/releases/72418282/reactions", "total_count": 12, "+1": 0, "-1": 0, "laugh": 0, "hooray": 7, "confused": 0, "heart": 1, "rocket": 4, "eyes": 0}}
{"url": "https://api.github.com/repos/hynek/structlog/releases/55449999", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/55449999/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/55449999/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/21.5.0", "id": 55449999, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4DThmP", "tag_name": "21.5.0", "target_commitish": "main", "name": "21.5.0", "draft": false, "prerelease": false, "created_at": "2021-12-16T12:43:39Z", "published_at": "2021-12-16T12:54:47Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/21.5.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/21.5.0", "body": "I didn't expect to make this release but @aucampia and @airwoodix contributed features that I'm sure will excite many users, so here's Santa Hynek \ud83c\udf85 with a surprise release.\r\n\r\n# Changes:\r\n\r\n-   Added the `structlog.processors.LogfmtRenderer` processor to render log lines using the [logfmt](https://brandur.org/logfmt) format. [#376](https://github.com/hynek/structlog/pull/376)\r\n-   Added the `structlog.stdlib.ExtraAdder` processor that adds extra attributes of `logging.LogRecord` objects to the event dictionary. This processor can be used for adding data passed in the `extra` parameter of the `logging` module's log methods to the event dictionary. [#209](https://github.com/hynek/structlog/pull/209) [#377](https://github.com/hynek/structlog/pull/377)\r\n-   Added the `structlog.processor.CallsiteParameterAdder` processor that adds parameters of the callsite that an event dictionary orginated from to the event dictionary. This processor can be used to enrich events dictionaries with information such as the function name, line number and filename that an event dictionary orignated from. [#380](https://github.com/hynek/structlog/pull/380)\r\n", "reactions": {"url": "https://api.github.com/repos/hynek/structlog/releases/55449999/reactions", "total_count": 5, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 5, "rocket": 0, "eyes": 0}, "mentions_count": 2}
{"url": "https://api.github.com/repos/hynek/structlog/releases/54084425", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/54084425/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/54084425/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/21.4.0", "id": 54084425, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4DOUNJ", "tag_name": "21.4.0", "target_commitish": "main", "name": "21.4.0", "draft": false, "prerelease": false, "created_at": "2021-11-25T15:32:50Z", "published_at": "2021-11-25T15:42:38Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/21.4.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/21.4.0", "body": "This release is mostly about a regression when importing using a Python interpreter running with the `PYTHONOPTIMIZE=2` environment variable set, or as `python -OO`. The one new feature is kinda neat too, though!\r\n\r\n# Changes:\r\n\r\n-   Fixed import when running in optimized mode (`PYTHONOPTIMIZE=2` or `python -OO`). [#373](https://github.com/hynek/structlog/pull/373)\r\n-   Added the `structlog.threadlocal.bound_threadlocal` and `structlog.contextvars.bound_contextvars` decorator/context managers to temporarily bind key/value pairs to a thread-local and context-local context. [#371](https://github.com/hynek/structlog/pull/371)\r\n"}
{"url": "https://api.github.com/repos/hynek/structlog/releases/53773261", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/53773261/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/53773261/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/21.3.0", "id": 53773261, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4DNIPN", "tag_name": "21.3.0", "target_commitish": "main", "name": "21.3.0", "draft": false, "prerelease": false, "created_at": "2021-11-20T14:43:01Z", "published_at": "2021-11-20T15:08:09Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/21.3.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/21.3.0", "body": "The main reason for this comparatively timely release is that aiohttp 3.8's new behavior of starting new loops within `aiohttp.web.run_app()` led to breakage in apps that use `structlog.stdlib.AsyncBoundLogger`.\r\n\r\nThe one big new feature though is the support for much more powerful processor chains within `structlog.stdlib.ProcessorFormatter`. This took me way too long to get right, but I'm excited to share it with you.\r\n\r\nThis is also the first release without a `setup.py`. Invoking it was never tested and never supported, so now it's gone. Please use standard packaging tools like [PyPA's _build_](https://pypi.org/project/build/) or [_flit_](https://flit.readthedocs.io/) directly if you want to package `structlog` yourself.\r\n\r\n\r\n# Backward-incompatible changes:\r\n\r\n-   `structlog` switched its packaging to [_flit_](https://flit.readthedocs.io/). Users shouldn't notice a difference, but (re-)packagers might.\r\n\r\n# Deprecations:\r\n\r\n*none*\r\n\r\n# Changes:\r\n\r\n-   `structlog.dev.ConsoleRenderer` now has `sort_keys` boolean parameter that allows to disable the sorting of keys on output. [#358](https://github.com/hynek/structlog/pull/358)\r\n\r\n-   `structlog.processors.TimeStamper` now works well with FreezeGun even when it gets applied before the loggers are configured. [#364](https://github.com/hynek/structlog/pull/364)\r\n\r\n-   `structlog.stdlib.AsyncBoundLogger` now determines the running loop when logging, not on instantiation. That has a minor performance impact, but makes it more robust when loops change (e.g. `aiohttp.web.run_app()`), or you want to use `sync_bl` *before* a loop has started.\r\n\r\n-   `structlog.stdlib.ProcessorFormatter` now has a *processors* argument that allows to define a processor chain to run over *all* log entries.\r\n\r\n    Before running the chain, two additional keys are added to the event dictionary: `_record` and `_from_structlog`. With them it's possible to extract information from `logging.LogRecord`s and differentiate between `structlog` and `logging` log entries while processing them.\r\n\r\n    The old *processor* (singular) parameter is now deprecated, but no plans exist to remove it. [#365](https://github.com/hynek/structlog/pull/365)\r\n"}
{"url": "https://api.github.com/repos/hynek/structlog/releases/51211306", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/51211306/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/51211306/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/21.2.0", "id": 51211306, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOALhqyM4DDWwq", "tag_name": "21.2.0", "target_commitish": "main", "name": "21.2.0", "draft": false, "prerelease": false, "created_at": "2021-10-12T13:20:49Z", "published_at": "2021-10-12T13:33:16Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/21.2.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/21.2.0", "body": "# Highlights\r\n\r\n- Support for for beautiful (and helpful!) exceptions by integrating ConsoleRenderer with rich or better-exceptions.\r\n- Helpers to access thread-local and context-local context.\r\n- Deeper contextvars support.\r\n\r\n---\r\n\r\n# Backward-incompatible changes:\r\n\r\n-   To implement pretty exceptions (see Changes below), `structlog.dev.ConsoleRenderer` now formats exceptions itself.\r\n\r\n    Make sure to remove `format_exc_info` from your processor chain if you configure `structlog` manually. This change is not really breaking, because the old use-case will keep working as before. However if you pass `pretty_exceptions=True` (which is the default if either `rich` or `better-exceptions` is installed), a warning will be raised and the exception will be renderered without prettyfication.\r\n\r\n# Deprecations:\r\n\r\n*none*\r\n\r\n# Changes:\r\n\r\n-   `structlog` is now importable if `sys.stdout` is `None` (e.g. when running using `pythonw`). [#313](https://github.com/hynek/structlog/issues/313)\r\n\r\n-   `structlog.threadlocal.get_threadlocal()` and `structlog.contextvars.get_contextvars()` can now be used to get a copy of the current thread-local/context-local context that has been bound using `structlog.threadlocal.bind_threadlocal()` and `structlog.contextvars.bind_contextvars()`. [#331](https://github.com/hynek/structlog/pull/331) [#337](https://github.com/hynek/structlog/pull/337)\r\n\r\n-   `structlog.threadlocal.get_merged_threadlocal(bl)` and `structlog.contextvars.get_merged_contextvars(bl)` do the same, but also merge the context from a bound logger *bl*. Same pull requests as previous change.\r\n\r\n-   `structlog.contextvars.bind_contextvars()` now returns a mapping of keys to `contextvars.Token`s, allowing you to reset values using the new `structlog.contextvars.reset_contextvars()`. [#339](https://github.com/hynek/structlog/pull/339)\r\n\r\n-   Exception rendering in `structlog.dev.ConsoleLogger` is now configurable using the `exception_formatter` setting. If either the [rich](https://github.com/willmcgugan/rich) or the [better-exceptions](https://github.com/qix-/better-exceptions) package is present, `structlog` will use them for pretty-printing tracebacks. `rich` takes precedence over `better-exceptions` if both are present.\r\n\r\n    This only works if `format_exc_info` is **absent** in the processor chain. [#330](https://github.com/hynek/structlog/pull/330) [#349](https://github.com/hynek/structlog/pull/349)\r\n\r\n-   All use of `colorama` on non-Windows systems has been excised. Thus, colors are now enabled by default in `structlog.dev.ConsoleRenderer` on non-Windows systems. You can keep using `colorama` to customize colors, of course. [#345](https://github.com/hynek/structlog/pull/345)\r\n\r\n-   The final processor can now return a `bytearray` (additionally to `str` and `bytes`). [#344](https://github.com/hynek/structlog/issues/344)\r\n"}
{"url": "https://api.github.com/repos/hynek/structlog/releases/38239887", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/38239887/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/38239887/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/21.1.0", "id": 38239887, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM4MjM5ODg3", "tag_name": "21.1.0", "target_commitish": "main", "name": "", "draft": false, "prerelease": false, "created_at": "2021-02-18T16:02:10Z", "published_at": "2021-02-18T16:17:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/21.1.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/21.1.0", "body": "## Backward-incompatible changes:\r\n\r\n*none*\r\n\r\n## Deprecations:\r\n\r\n*none*\r\n\r\n## Changes:\r\n\r\n-   `structlog.threadlocal.wrap_dict()` now has a correct type annotation. [\\#290](https://github.com/hynek/structlog/pull/290)\r\n-   Fix isolation in `structlog.contextvars`. [\\#302](https://github.com/hynek/structlog/pull/302)\r\n-   The default configuration and loggers are pickleable again. [\\#301](https://github.com/hynek/structlog/pull/301)\r\n-   `structlog.dev.ConsoleRenderer` will now look for a `logger_name` key if no `logger` key is set. [\\#295](https://github.com/hynek/structlog/pull/295)\r\n"}
{"url": "https://api.github.com/repos/hynek/structlog/releases/35869722", "assets_url": "https://api.github.com/repos/hynek/structlog/releases/35869722/assets", "upload_url": "https://uploads.github.com/repos/hynek/structlog/releases/35869722/assets{?name,label}", "html_url": "https://github.com/hynek/structlog/releases/tag/20.2.0", "id": 35869722, "author": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTM1ODY5NzIy", "tag_name": "20.2.0", "target_commitish": "master", "name": "20.2.0", "draft": false, "prerelease": false, "created_at": "2020-12-31T11:22:47Z", "published_at": "2020-12-31T11:39:01Z", "assets": [], "tarball_url": "https://api.github.com/repos/hynek/structlog/tarball/20.2.0", "zipball_url": "https://api.github.com/repos/hynek/structlog/zipball/20.2.0", "body": "# Backward-incompatible changes:\r\n\r\n-   Python 2.7 and 3.5 aren't supported anymore. The package meta data should ensure that you keep getting 20.1.0 on those versions. [\\#244](https://github.com/hynek/structlog/pull/244)\r\n\r\n-   `structlog` is now fully type-annotated. This won't break your applications, but if you use Mypy, it will most likely break your CI.\r\n\r\n    Check out the new chapter on typing for details.\r\n\r\n# Deprecations:\r\n\r\n-   Accessing the `_context` attribute of a bound logger is now deprecated. Please use the new `structlog.get_context()`.\r\n\r\n# Changes:\r\n\r\n-   `structlog` has now type hints for all of its APIs! Since `structlog` is highly dynamic and configurable, this led to a few concessions like a specialized `structlog.stdlib.get_logger()` whose only difference to `structlog.get_logger()` is that it has the correct type hints.\r\n\r\n    We consider them provisional for the time being \u2013 i.e. the backward compatibility does not apply to them in its full strength until we feel we got it right. Please feel free to provide feedback! [\\#223](https://github.com/hynek/structlog/issues/223), [\\#282](https://github.com/hynek/structlog/issues/282)\r\n\r\n-   Added `structlog.make_filtering_logger` that can be used like `configure(wrapper_class=make_filtering_bound_logger(logging.INFO))`. It creates a highly optimized bound logger whose inactive methods only consist of a `return None`. This is now also the default logger.\r\n\r\n-   As a complement, `structlog.stdlib.add_log_level()` can now additionally be imported as `structlog.processors.add_log_level` since it just adds the method name to the event dict.\r\n\r\n-   `structlog.processors.add_log_level()` is now part of the default configuration.\r\n\r\n-   `structlog.stdlib.ProcessorFormatter` no longer uses exceptions for control flow, allowing `foreign_pre_chain` processors to use `sys.exc_info()` to access the real exception.\r\n\r\n-   Added `structlog.BytesLogger` to avoid unnecessary encoding round trips. Concretely this is useful with *orjson* which returns bytes. [\\#271](https://github.com/hynek/structlog/issues/271)\r\n\r\n-   The final processor now also may return bytes that are passed untouched to the wrapped logger.\r\n\r\n-   `structlog.get_context()` allows you to retrieve the original context of a bound logger. [\\#266](https://github.com/hynek/structlog/issues/266),\r\n\r\n-   `structlog.PrintLogger` now supports `copy.deepcopy()`. [\\#268](https://github.com/hynek/structlog/issues/268)\r\n\r\n-   Added `structlog.testing.CapturingLogger` for more unit testing goodness.\r\n\r\n-   Added `structlog.stdlib.AsyncBoundLogger` that executes logging calls in a thread executor and therefore doesn't block. [\\#245](https://github.com/hynek/structlog/pull/245)"}

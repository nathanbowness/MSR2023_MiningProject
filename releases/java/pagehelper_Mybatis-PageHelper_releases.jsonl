{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/77484985", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/77484985/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/77484985/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.3.2", "id": 77484985, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOATsemM4EnlO5", "tag_name": "v5.3.2", "target_commitish": "master", "name": "5.3.2 - 2022-09-18", "draft": false, "prerelease": false, "created_at": "2022-09-18T15:53:06Z", "published_at": "2022-09-18T16:07:18Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.3.2", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.3.2", "body": "### 5.3.2 - 2022-09-18\r\n\r\n- \u4f7f\u7528\u6587\u6863\u66f4\u65b0\uff0c\u6240\u6709\u53c2\u6570\u90fd\u5305\u542b\u5728\u5185\uff0c\u9996\u9875\u9ed8\u8ba4\u6587\u6863\u6539\u4e3a\u4e2d\u6587\u3002\r\n- Add support for kingbase. by **HanHuimin001**\r\n- \u589e\u52a0 `debug` \u53c2\u6570\uff0c\u9ed8\u8ba4 `false`\uff0c\u4e3a`true`\u65f6\u5f00\u542f`debug`\u6a21\u5f0f\uff0c\u5f00\u59cb `debug` \u6a21\u5f0f\u540e\u5c06\u8bb0\u5f55\u8c03\u7528\u5806\u6808 by **huyingqian**\r\n- Add \u652f\u6301count\u7684sql\u652f\u6301hint\u8bed\u6cd5 by **zhanliquan**\r\n- \u589e\u52a0 `PageProperties` \u63a5\u53e3\uff0c\u6846\u67b6\u5185\u90e8\u5b9e\u4f8b\u5316\u7684\u6269\u5c55\u7c7b\u5982\u679c\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u7684\u65b9\u6cd5\u83b7\u53d6\u5206\u9875\u63d2\u4ef6\u914d\u7f6e\u3002\r\n- \u589e\u52a0 `CountMsIdGen` \u63a5\u53e3\uff0c\u53ef\u4ee5\u901a\u8fc7 `countMsIdGen` \u914d\u7f6e\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7c7b\uff0c\u8be5\u7c7b\u7528\u4e8e\u751f\u6210\u67e5\u8be2\u5bf9\u5e94COUNT\u67e5\u8be2\u7684msId\u3002\u9ed8\u8ba4\u5b9e\u73b0\u8fd8\u662f\u4f7f\u7528`countSuffix`\r\n  \uff0c\u901a\u8fc7\u6269\u5c55\u53ef\u4ee5\u5b9e\u73b0\u5982 `selectByExample` \u6620\u5c04\u5230\u5bf9\u5e94\u7684 `selectCountByExample` \u65b9\u6cd5\u3002\r\n- \u589e\u52a0 `keepOrderBy` \u548c `keepSubSelectOrderBy` \u914d\u7f6e\u3002\r\n- \u589e\u52a0 `sqlParser` \u914d\u7f6e\uff0c\u589e\u52a0 `JSqlParser` \u63a5\u53e3\uff0c\u89e3\u51b3 jsqlparser \u548c jdk \u517c\u5bb9\u6027\u5bfc\u81f4\u65e0\u6cd5\u989d\u5916\u914d\u7f6e\u7684\u95ee\u9898\u3002\r\n- \u6d4b\u8bd5\u4f7f\u7528 logback \u65e5\u5fd7\u6846\u67b6\uff0c\u53bb\u6389log4j\u3002\r\n- \u89e3\u51b3 `dialectKey` \u4e3a\u7a7a\u5bfc\u81f4NPE\uff0cfixed #656 \r\n\r\n----------------\r\n\r\n### 5.3.2 - 2022-09-18\r\n\r\n- Use document update, all parameters are included, the default home page document changed to Chinese.\r\n- Add support for kingbase. by **HanHuimin001**\r\n- Add 'debug' parameter, default 'false', turn on 'debug' mode when 'true', call stack will be recorded after 'debug'\r\n  mode starts. by **huyingqian**\r\n- add supports for count sql hint syntax. by **zhanliquan**\r\n- Add a `PageProperties` interface, which can be used by the instantiated extension class inside the framework to obtain\r\n  the paging plug-in configuration.\r\n- To add the `CountMsIdGen` interface, you can configure a custom implementation class by `CountMsIdGen`, which is used\r\n  to generate the msId for the query corresponding to the COUNT query. The default implementation is still `countSuffix`\r\n  , with extensions like 'selectByExample' mapped to the corresponding 'selectCountByExample' method.\r\n- Added `keepOrderBy` and `keepSubSelectOrderBy` configurations.\r\n- Add the `sqlParser` configuration and add the `JSqlParser` interface to solve the problem that JSqlParser and JDK\r\n  compatibility cause no additional configuration.\r\n- The test uses the Logback logging framework and removes log4j.\r\n- Resolve that 'dialectKey' is empty resulting in NPE\uff0cfixed #656", "reactions": {"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/77484985/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/69414612", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/69414612/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/69414612/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.3.1", "id": 69414612, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOATsemM4EIy7U", "tag_name": "v5.3.1", "target_commitish": "master", "name": "5.3.1 - 2022-06-14", "draft": false, "prerelease": false, "created_at": "2022-06-14T15:01:41Z", "published_at": "2022-06-14T15:08:22Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.3.1", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.3.1", "body": "### 5.3.1 - 2022-06-14\r\n\r\n- \u5904\u7406 CVE-2022-28111 \u6f0f\u6d1e\uff0c\u9650\u5236 order by \u53c2\u6570\uff0c\u907f\u514d SQL \u6ce8\u5165\r\n- Add support for as400. **by bluezealot**\r\n- \u4f18\u5316\u5206\u9875\u7ed3\u679c\u5305\u88c5\u7c7b\u7684\u6cdb\u578b\u53c2\u6570 **by \u7ae0\u798f\u6765**\r\n- \u89c4\u8303PostgreSQL\u5206\u9875\u53c2\u6570\u7684\u987a\u5e8f **by outian**\r\n\r\n\r\n-------------------------\r\n\r\n\r\n### 5.3.1\r\n\r\n- Resolve CVE-2022-28111 vulnerability, limit the order by parameter, avoid SQL injection\r\n- Add support for as400. **by bluezealot**\r\n- Optimize generic parameters of `Page` class **by Zhang Fulai * *\r\n- Standardize the order of PostgreSQL paging parameters **by outian**", "reactions": {"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/69414612/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/51007044", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/51007044/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/51007044/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.3.0", "id": 51007044, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "RE_kwDOATsemM4DCk5E", "tag_name": "v5.3.0", "target_commitish": "master", "name": "5.3.0 - 2021-10-07", "draft": false, "prerelease": false, "created_at": "2021-10-08T01:28:47Z", "published_at": "2021-10-08T03:12:05Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.3.0", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.3.0", "body": "- \u589e\u52a0 `AutoDialect` \u63a5\u53e3\u7528\u4e8e\u81ea\u52a8\u83b7\u53d6\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7 `autoDialectClass` \u914d\u7f6e\u4e3a\u81ea\u5df1\u7684\u5b9e\u73b0\u7c7b\uff0c\u9ed8\u8ba4\u4f7f\u7528 `DataSourceNegotiationAutoDialect`\uff0c\u4f18\u5148\u6839\u636e\u8fde\u63a5\u6c60\u83b7\u53d6\u3002\r\n  \u9ed8\u8ba4\u5b9e\u73b0\u4e2d\uff0c\u589e\u52a0\u9488\u5bf9 `hikari,druid,tomcat-jdbc,c3p0,dbcp` \u7c7b\u578b\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u7279\u6b8a\u5904\u7406\uff0c\u76f4\u63a5\u4ece\u914d\u7f6e\u83b7\u53d6jdbcUrl\uff0c\u5f53\u4f7f\u7528\u5176\u4ed6\u7c7b\u578b\u6570\u636e\u6e90\u65f6\uff0c\u4ecd\u7136\u4f7f\u7528\u65e7\u7684\u65b9\u5f0f\u83b7\u53d6\u8fde\u63a5\u5728\u8bfb\u53d6jdbcUrl\u3002\r\n  \u60f3\u8981\u4f7f\u7528\u548c\u65e7\u7248\u672c\u5b8c\u5168\u76f8\u540c\u65b9\u5f0f\u65f6\uff0c\u53ef\u4ee5\u914d\u7f6e `autoDialectClass=old`\u3002\u5f53\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7c7b\u578b\u975e\u5e38\u660e\u786e\u65f6\uff0c\u5efa\u8bae\u914d\u7f6e\u4e3a\u5177\u4f53\u503c\uff0c\u4f8b\u5982\u4f7f\u7528 hikari \u65f6\uff0c\u914d\u7f6e `autoDialectClass=hikari`\r\n  \uff0c\u4f7f\u7528\u5176\u4ed6\u8fde\u63a5\u6c60\u65f6\uff0c\u914d\u7f6e\u4e3a\u81ea\u5df1\u7684\u5b9e\u73b0\u7c7b\u3002\r\n- \u652f\u6301\u8fd0\u884c\u65f6\u52a8\u6001\u6307\u5b9a\u4f7f\u7528\u7684 dialect \u5b9e\u73b0\uff0c\u4f8b\u5982 `PageHelper.startPage(1, 10).using(\"oracle\");`\r\n  \u6216\u8005 `PageHelper.startPage(2, 10).using(\"org.exmaple.CustomDialect\");`\r\n- `PageInfo` \u589e\u52a0\u7a7a\u5b9e\u4f8b\u5e38\u91cf\u5c5e\u6027 `PageInfo.EMPTY` \u4ee5\u53ca\u5185\u5bb9\u5224\u65ad `boolean hasContent()`\u3002\r\n- \u542f\u52a8\u4e2d\u589e\u52a0 banner, \u9700\u8981\u65e5\u5fd7\u7ea7\u522b debug\uff0c\u53ef\u4ee5\u901a\u8fc7 `-Dpagehelper.banner=false` \u6216\u8005\u73af\u5883\u53d8\u91cf `PAGEHELPER_BANNER=false` \u5173\u95ed\r\n  ```\r\n   DEBUG [main] -\r\n   \r\n   ,------.                           ,--.  ,--.         ,--.                         \r\n   |  .--. '  ,--,--.  ,---.   ,---.  |  '--'  |  ,---.  |  |  ,---.   ,---.  ,--.--.\r\n   |  '--' | ' ,-.  | | .-. | | .-. : |  .--.  | | .-. : |  | | .-. | | .-. : |  .--'\r\n   |  | --'  \\ '-'  | ' '-' ' \\   --. |  |  |  | \\   --. |  | | '-' ' \\   --. |  |    \r\n   `--'       `--`--' .`-  /   `----' `--'  `--'  `----' `--' |  |-'   `----' `--'    \r\n   `---'                                   `--'                        is intercepting.\r\n   ```\r\n  \u589e\u52a0 banner \u7684\u76ee\u7684\u5728\u4e8e\uff0c\u5982\u679c\u4f60\u914d\u7f6e\u4e86\u591a\u6b21\u5206\u9875\u63d2\u4ef6\uff0c\u4f60\u4f1a\u770b\u5230 banner \u8f93\u51fa\u591a\u6b21\uff0c\u4f60\u53ef\u4ee5\u5728 `PageInterceptor` \u6784\u9020\u65b9\u6cd5\u65ad\u70b9\u770b\u770b\u90a3\u4e9b\u5730\u65b9\u8fdb\u884c\u4e86\u5b9e\u4f8b\u5316\u3002\r\n- \u5b8c\u5584 Count \u67e5\u8be2\uff0c\u5f53\u5b58\u5728 having \u65f6\uff0c\u4e0d\u5728\u4f18\u5316\u67e5\u8be2\u5217\u3002\u67e5\u8be2\u5217\u5b58\u5728\u6709\u522b\u540d\u7684\u51fd\u6570\u6216\u8005\u8fd0\u7b97\u65f6\u4e5f\u4e0d\u4f18\u5316\u67e5\u8be2\u5217\uff0c\u907f\u514d order by \u6216 having \u4e2d\u4f7f\u7528\u7684\u522b\u540d\u4e0d\u5b58\u5728\u3002\r\n- \u589e\u52a0\u5224\u65ad\u5904\u7406\u67d0\u4e9b\u6570\u636e\uff08\u5982 TDEngine\uff09\u67e5\u8be2 count \u65e0\u7ed3\u679c\u65f6\u8fd4\u56de null\r\n- \u6dfb\u52a0 Firebird \u6570\u636e\u5e93\u652f\u6301\u548c SqlServer2012 \u5206\u9875\u8bed\u6cd5\u76f8\u540c\u3002\r\n- \u6dfb\u52a0 impala \u6570\u636e\u5e93\u81ea\u52a8\u8bc6\u522b\u3002\r\n- JSqlParser \u5347\u7ea7\u4e3a 4.2 \u7248\u672c\u3002\r\n\r\n> \u8ddd\u79bb\u4e0a\u6b21\u66f4\u65b03\u4e2a\u6708\u5de6\u53f3\uff0c\u8fd9\u6b21\u66f4\u65b0\u76f4\u63a5\u8ba9\u5047\u671f\u5c11\u4e863\u5929 :running: \uff0c\u5173\u4e86 GitHub \u548c Gitee \u4e0a\u7684 200 \u591a\u4e2aissue\uff0c\u4e0d\u4e00\u5b9a\u6240\u6709\u95ee\u9898\u90fd\u5f97\u5230\u4e86\u5904\u7406\uff0c\u5982\u679c\u4f60\u8fd8\u6709\u7591\u95ee\uff0c\u53ef\u4ee5\u7ee7\u7eed\u63d0 issue\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u4f1a\u8003\u8651\u76f4\u63a5 6.0\uff0c\u8ba1\u5212\u5168\u90e8\u5347\u7ea7\u5230 java 8\uff0c\u529f\u80fd\u4fdd\u6301\u4e0d\u53d8\u3002\r\n\r\n----------------\r\n\r\n- Add `AutoDialect` interface to automatically obtain the database type, which can be configured as its own\r\n  implementation class through `autoDialectClass`. By default, `DataSourceNegotiationAutoDialect` is used, which is\r\n  obtained according to the connection pool first. In the default implementation, special processing is added\r\n  for `hikari,druid,tomcat-jdbc,c3p0,dbcp` type database connection pools, and jdbcUrl are obtained directly from the\r\n  configuration. When other types of data sources are used, the connection is still obtained in the old way. You can\r\n  configure `autoDialectClass=old` when you want to use exactly the same way as the old version. When the database\r\n  connection pool type is very clear, it is recommended to configure it as a specific value. For example, when using\r\n  hikari, configure `autoDialectClass=hikari`, and when using other connection pools, configure it as its own\r\n  implementation class.\r\n- Enable dynamic designation of dialect implementation at runtime, such\r\n  as `PageHelper.startPage(1, 10).using(\"oracle\");` Or `PageHelper.startPage(2, 10).using(\"org.exmaple.CustomDialect\");`\r\n- `PageInfo` adds the empty instance constant attribute `PageInfo.EMPTY` and the content judgment `boolean hasContent()`\r\n  .\r\n- Adding banner to startup requires log level debug, which can be closed by `-Dpagehelper.banner=false` or environment\r\n  variable `PAGEHELPER_BANNER=false`.\r\n  ```\r\n   DEBUG [main] -\r\n   \r\n   ,------.                           ,--.  ,--.         ,--.                         \r\n   |  .--. '  ,--,--.  ,---.   ,---.  |  '--'  |  ,---.  |  |  ,---.   ,---.  ,--.--.\r\n   |  '--' | ' ,-.  | | .-. | | .-. : |  .--.  | | .-. : |  | | .-. | | .-. : |  .--'\r\n   |  | --'  \\ '-'  | ' '-' ' \\   --. |  |  |  | \\   --. |  | | '-' ' \\   --. |  |    \r\n   `--'       `--`--' .`-  /   `----' `--'  `--'  `----' `--' |  |-'   `----' `--'    \r\n   `---'                                   `--'                        is intercepting.\r\n   ```\r\n  The purpose of adding banner is that if you configure paging plug-ins multiple times, you will see banner output\r\n  multiple times, and you can see where it has been instantiated at the breakpoint of the `PageInterceptor` constructor.\r\n- Improve the Count query. When having exists, the query column is not optimized. The query column is not optimized when\r\n  there are functions or operations with aliases in the column, so as to avoid that aliases used in order by or having\r\n  do not exist.\r\n- It is judged that processing some data (such as TDEngine) returns null when there is no result in querying count.\r\n- Adding Firebird database support is the same as SqlServer2012 paging syntax.\r\n- Add impala database automatic recognition.\r\n- Upgrade JSqlParser to version 4.2.", "reactions": {"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/51007044/reactions", "total_count": 13, "+1": 4, "-1": 0, "laugh": 2, "hooray": 2, "confused": 0, "heart": 3, "rocket": 2, "eyes": 0}}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/44923468", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/44923468/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/44923468/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.2.1", "id": 44923468, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTQ0OTIzNDY4", "tag_name": "v5.2.1", "target_commitish": "master", "name": "5.2.1 - 2021-06-20", "draft": false, "prerelease": false, "created_at": "2021-06-20T09:01:08Z", "published_at": "2021-06-20T14:42:33Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.2.1", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.2.1", "body": "### 5.2.1 - 2021-06-20\r\n\r\n- Upgrade dependency jsqlparser 4.0, mybatis 3.5.7\r\n- Automatically recognize the following databases\uff1a\r\n    - \u865a\u8c37\u6570\u636e\u5e93 xugu #599\r\n    - \u795e\u901a\u6570\u636e\u5e93 oscar  by **ranqing**\r\n    - \u701a\u9ad8\u6570\u636e\u5e93 highgo by **ashaiqing**\r\n- BoundSqlInterceptorChain interceptor index parameter bug, fixed #587\r\n- fixed #558\r\n- Add PostgreSQL dialect by **liym@home**\r\n- fixed #604, Solve the problem of total loss\r\n- Add code comments, fixed #547\r\n\r\n-------\r\n\r\n- \u5347\u7ea7\u4f9d\u8d56 jsqlparser 4.0, mybatis 3.5.7\r\n- \u81ea\u52a8\u8bc6\u522b\u4ee5\u4e0b\u6570\u636e\u5e93\uff1a\r\n  - \u865a\u8c37\u6570\u636e\u5e93 xugu #599\r\n  - \u795e\u901a\u6570\u636e\u5e93 oscar  by **ranqing**\r\n  - \u701a\u9ad8\u6570\u636e\u5e93 highgo by **ashaiqing**\r\n- BoundSqlInterceptorChain\u62e6\u622a\u5668index\u53c2\u6570bug, fixed #587\r\n- fixed #558\r\n- \u6dfb\u52a0 PostgreSQL \u65b9\u8a00 by **liym@home**\r\n- fixed #604, \u89e3\u51b3total\u4e22\u5931\u7684\u95ee\u9898\r\n- \u89c4\u8303\u6ce8\u91ca, fixed #547"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/28988201", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/28988201/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/28988201/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.2.0", "id": 28988201, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTI4OTg4MjAx", "tag_name": "v5.2.0", "target_commitish": "master", "name": "5.2.0 - 2020-07-26", "draft": false, "prerelease": false, "created_at": "2020-07-26T14:00:26Z", "published_at": "2020-07-27T13:45:00Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.2.0", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.2.0", "body": "- jsqlparser\u5347\u7ea7\u52303.2\u7248\u672c\uff0csql\u89e3\u6790\u66f4\u597d\uff0c\u5bf9sqlserver\u652f\u6301\u66f4\u597d\u3002\r\n- \u4fee\u6539 sqlserver \u65b9\u5f0f\u4e2d\u7684\u66ff\u6362\u6b63\u5219\uff0c\u73b0\u5728\u5141\u8bb8 with( nolock ) \u62ec\u53f7\u4e2d\u5b58\u5728\u7a7a\u683c\u3002\r\n- \u89e3\u51b3 reasonable \u548c pageSizeZero,\u4ee5\u53ca offset \u7528\u6cd5\u4e2d\u7684bug\uff0c\u73b0\u5728\u7684\u542b\u4e49\u548c\u7ed3\u679c\u66f4\u4e00\u81f4\u3002\r\n- \u5206\u9875 SQL \u62fc\u63a5\u8fc7\u7a0b\u4e2d\u589e\u52a0\u6362\u884c\u7b26\uff0c\u907f\u514d\u539f\u59cb SQL \u4e2d\u5b58\u5728\u6ce8\u91ca\u5bfc\u81f4\u5206\u9875\u90e8\u5206\u65e0\u6548\u3002\r\n- Oracle \u548c Db2 \u4e2d\u7684\u884c\u53f7 ROW_ID \u522b\u540d\u6539\u4e3a PAGEHELPER_ROW_ID\uff0c\u907f\u514d\u548c\u5e38\u7528\u540d\u79f0\u51b2\u7a81\u3002\r\n- \u89e3\u51b3\u5355\u4e2a\u53c2\u6570ProviderSql\u4f7f\u7528\u5176\u4ed6\u62e6\u622a\u5668\u65f6\u7684\u7279\u6b8a\u95ee\u9898\uff08\u652f\u6301 mybatis 3.4.0+\uff09[by \u7f57\u9707\u5b87](https://github.com/luozhenyu)\r\n- \u652f\u6301\u81ea\u52a8\u8bc6\u522b clickhouse\uff0c\u4f7f\u7528 MySQL \u65b9\u5f0f\u8fdb\u884c\u5206\u9875\u3002\r\n- \u5c06 startRow, endRow \u7c7b\u578b\u4ece int \u6539\u4e3a long\u3002\r\n- Page \u589e\u52a0 `public <T> PageInfo<T> toPageInfo(Function<E, T> function)` \u65b9\u6cd5\uff0c\u7528\u4e8e\u8f6c\u6362\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684\u6570\u636e\u3002\r\n- \u53c2\u8003 pr#476 \u63d0\u4f9b `\u00b7`Oracle9iDialect`\uff0c\u8fd9\u4e5f\u662f\u66fe\u7ecf\u7528\u8fc7\u7684\u4e00\u79cd\u5206\u9875\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u5df1\u6d4b\u8bd5\u9009\u62e9\u5408\u9002\u7684\u5206\u9875\u65b9\u5f0f\u3002\r\n\r\n   \u76ee\u524d\u63d0\u4f9b\u7684\u4e24\u79cd Oracle \u5206\u9875\u5982\u4e0b\uff1a\r\n   ```sql\r\n   -- OracleDialect \u5916\u5c42\u63a7\u5236\u8303\u56f4\r\n   WHERE ROW_ID <= ? AND ROW_ID > ?\r\n   -- Oracle9iDialect \u5185\u5916\u5206\u522b\u63a7\u5236\u8303\u56f4\r\n   TMP_PAGE WHERE ROWNUM <= ? ) WHERE ROW_ID > ?\r\n   ```\r\n- \u589e\u52a0\u5206\u9875\u63d2\u4ef6\u7684 `BoundSqlInterceptor` \u62e6\u622a\u5668\uff0c\u53ef\u4ee5\u57283\u4e2a\u9636\u6bb5\u5bf9 SQL \u8fdb\u884c\u5904\u7406\u6216\u8005\u7b80\u5355\u8bfb\u53d6\uff0c\r\n   \u589e\u52a0\u53c2\u6570 `boundSqlInterceptors`\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u5b9e\u73b0 `BoundSqlInterceptor` \u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u540d\uff0c\r\n   \u4f7f\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\u3002PageHelper\u8c03\u7528\u65f6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\r\n   `PageHelper.startPage(x,x).boundSqlInterceptor(BoundSqlInterceptor boundSqlInterceptor)`\u9488\u5bf9\u672c\u6b21\u5206\u9875\u8fdb\u884c\u8bbe\u7f6e\u3002\r\n\r\n\r\n\u672c\u6b21\u66f4\u65b0\u6700\u5927\u7684\u53d8\u5316\u662f\u589e\u52a0\u4e86 `BoundSqlInterceptor`\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u62e6\u622a\u5206\u9875\u5904\u7406\u7684 SQL\uff08BoundSQL\u5bf9\u8c61\uff09\uff1a\r\n```java\r\n/**\r\n * BoundSql \u5904\u7406\u5668\r\n */\r\npublic interface BoundSqlInterceptor {\r\n    /**\r\n     * boundsql \u5904\u7406\r\n     *\r\n     * @param type     \u7c7b\u578b\r\n     * @param boundSql \u5f53\u524d\u7c7b\u578b\u7684 boundSql\r\n     * @param cacheKey \u7f13\u5b58 key\r\n     * @param chain    \u5904\u7406\u5668\u94fe\uff0c\u901a\u8fc7 chain.doBoundSql \u65b9\u6cd5\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de boundSql \u7ec8\u6b62\u540e\u7eed\u65b9\u6cd5\u7684\u6267\u884c\r\n     * @return \u5141\u8bb8\u4fee\u6539 boundSql \u5e76\u8fd4\u56de\u4fee\u6539\u540e\u7684\r\n     */\r\n    BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain);\r\n\r\n    enum Type {\r\n        /**\r\n         * \u539f\u59cbSQL\uff0c\u5206\u9875\u63d2\u4ef6\u6267\u884c\u524d\uff0c\u5148\u6267\u884c\u8fd9\u4e2a\u7c7b\u578b\r\n         */\r\n        ORIGINAL,\r\n        /**\r\n         * count SQL\uff0c\u7b2c\u4e8c\u4e2a\u6267\u884c\u8fd9\u91cc\r\n         */\r\n        COUNT_SQL,\r\n        /**\r\n         * \u5206\u9875 SQL\uff0c\u6700\u540e\u6267\u884c\u8fd9\u91cc\r\n         */\r\n        PAGE_SQL\r\n    }\r\n\r\n    /**\r\n     * \u5904\u7406\u5668\u94fe\uff0c\u53ef\u4ee5\u63a7\u5236\u662f\u5426\u7ee7\u7eed\u6267\u884c\r\n     */\r\n    interface Chain {\r\n        Chain DO_NOTHING = new Chain() {\r\n            @Override\r\n            public BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey) {\r\n                return boundSql;\r\n            }\r\n        };\r\n\r\n        BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey);\r\n    }\r\n}\r\n```\r\n\r\n\u63a5\u53e3\u4e2d\u5305\u542b\u4e86 boundSql \u63a5\u53e3\u65b9\u6cd5\uff0c\u8fd8\u6709 Type \u679a\u4e3e\uff0c\u548c Chain \u63a5\u53e3\u7684\u5b9a\u4e49\uff0c\u81ea\u5df1\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u9700\u8981\u8003\u8651 Chain\u3002\r\n\r\n\u901a\u8fc7 `boundSqlInterceptors` \u53c2\u6570\u914d\u7f6e\u62e6\u622a\u5668\uff0c\u6267\u884c\u65f6\u5b58\u5728\u4e0b\u9762\u4e09\u79cd\u60c5\u51b5\uff1a\r\n\r\n1. \u4e0d\u7ba1\u5f53\u524d\u6267\u884c\u7684 SQL \u662f\u5426\u4f1a\u5206\u9875\uff0c\u90fd\u4f1a\u6267\u884c `Type.ORIGINAL` \u7c7b\u578b\u7684\u62e6\u622a\u5668\u65b9\u6cd5\uff0c\u914d\u7f6e\u540e\u4e00\u5b9a\u4f1a\u6267\u884c\u3002\r\n\r\n2. \u8c03\u7528\u5206\u9875\u65b9\u6cd5\u65f6\uff0c\u62e6\u622a\u5668\u4f1a\u7ee7\u7eed\u6267\u884c `Type.COUNT_SQL` \u7c7b\u578b\u7684\u62e6\u622a\u5668\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u6709\u6267\u884c\u5206\u9875\u5e76\u4e14\u6307\u5b9a\u8981\u8fdb\u884c count \u67e5\u8be2\u65f6\u624d\u4f1a\u6267\u884c\u3002\r\n\r\n3. \u8c03\u7528\u5206\u9875\u65b9\u6cd5\u65f6\uff0c\u5982\u679c count > 0\uff0c\u5c31\u4f1a\u6267\u884c `Type.PAGE_SQL` \u7c7b\u578b\u7684\u62e6\u622a\u5668\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u6709\u6267\u884c\u5206\u9875\u65f6\u624d\u4f1a\u6267\u884c\u3002\r\n\r\n>\u901a\u8fc7 `PageHelper.startPage(1, Integer.MAX_VALUE, false).boundSqlInterceptor(BoundSqlInterceptor boundSqlInterceptor)` \r\n>\u8fd9\u79cd\u6307\u5b9a\u7684\u53c2\u6570\u65f6\uff0c\u4e5f\u80fd\u8d77\u5230\u4e0d\u8fdb\u884c\u5206\u9875\u548ccount\u67e5\u8be2\uff0c\u4f46\u662f\u53ef\u4ee5\u6267\u884c `Type.ORIGINAL` \u7c7b\u578b\u7684\u62e6\u622a\u5668\u65b9\u6cd5\u3002\r\n\r\n\u5f53\u524d\u62e6\u622a\u5668\u5728\u6574\u4e2a\u5206\u9875\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6267\u884c3\u6b21\uff0c\u5bf9\u5e94 Type \u679a\u4e3e\u7684 3 \u4e2a\u7c7b\u578b\uff0c\u6267\u884c\u987a\u5e8f\u4e5f\u4e00\u81f4\u3002\r\n\r\n\u5982\u679c\u60f3\u83b7\u53d6\u5206\u9875 SQL \u6267\u884c\u524d\u7684\uff0c\u53ea\u9700\u8981\u5173\u6ce8 Type.ORIGINAL\uff0c\u53e6\u5916\u4e24\u79cd\u5c31\u662f count \u6267\u884c\u524d\u548c\u5206\u9875\u6267\u884c\u524d\uff08count=0\u65f6\u5206\u9875\u65b9\u6cd5\u4e0d\u6267\u884c\uff0c\u8fd9\u91cc\u4e5f\u4e0d\u4f1a\u6267\u884c\uff09\u3002\r\n\r\n\u4ee5\u6d4b\u8bd5\u4ee3\u7801\u4e3a\u4f8b\uff1a\r\n\r\n```java\r\npublic class TestBoundSqlInterceptor implements BoundSqlInterceptor {\r\n    public static final String COMMENT = \"\\n /* TestBoundSqlInterceptor */\\n\";\r\n\r\n    @Override\r\n    public BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain) {\r\n        if (type == Type.ORIGINAL) {\r\n            String sql = boundSql.getSql();\r\n            MetaObject metaObject = MetaObjectUtil.forObject(boundSql);\r\n            metaObject.setValue(\"sql\", sql + COMMENT);\r\n        }\r\n        return chain.doBoundSql(type, boundSql, cacheKey);\r\n    }\r\n\r\n}\r\n```\r\n\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u5728 sql \u6267\u884c\u524d\u5148\u4fee\u6539\u539f\u59cb SQL\uff0c\u53ea\u662f\u5728\u6700\u540e\u589e\u52a0\u4e86\u4e00\u6bb5\u6ce8\u91ca\uff0c\u4e0d\u5f71\u54cd SQL \u6267\u884c\uff0c\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u914d\u7f6e\uff1a\r\n\r\n```xml\r\n<plugin interceptor=\"com.github.pagehelper.PageInterceptor\">\r\n    <!-- \u652f\u6301\u901a\u8fc7Mapper\u63a5\u53e3\u53c2\u6570\u6765\u4f20\u9012\u5206\u9875\u53c2\u6570 -->\r\n    <property name=\"helperDialect\" value=\"mysql\"/>\r\n    <property name=\"boundSqlInterceptors\"\r\n              value=\"com.github.pagehelper.test.basic.provider.TestBoundSqlInterceptor,com.github.pagehelper.test.basic.provider.TestBoundSqlInterceptor\"/>\r\n</plugin>\r\n```\r\n\u8fd9\u91cc\u4e3a\u4e86\u8bf4\u660e\u8be5\u53c2\u6570\u503c\u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u56e0\u6b64\u91cd\u590d\u914d\u7f6e\u4e86\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7684\u62e6\u622a\u5668\u4f1a\u6267\u884c\u4e24\u6b21\u3002\r\n\r\n\u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u4e0a\u9762\u7684 SQL \u5728\u5206\u9875\u6267\u884c\u7684\u65f6\u5019\u5c31\u4f1a\u4fee\u6539 SQL\u3002\r\n\r\n\u9664\u4e86\u8fd9\u79cd\u914d\u7f6e\u65b9\u5f0f\u5916\uff0c\u8fd8\u652f\u6301 PageHelper.startPage \u65f6\u4e34\u65f6\u6307\u5b9a\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u628a\u62e6\u622a\u5668\u653e\u5230\u94fe\u5934\u5148\u6267\u884c\uff0c\u56e0\u6b64\u53ef\u4ee5\u63a7\u5236\u540e\u7eed\u7684\u662f\u5426\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u540e\u7eed\u6240\u6709\u6267\u884c\u5916\uff0c\u505a\u6700\u540e\u5904\u7406\u518d\u8fd4\u56de\u3002\r\n\r\n\u793a\u4f8b\uff1a\r\n\r\n```java\r\nPageHelper.startPage(1, 10).boundSqlInterceptor(new BoundSqlInterceptor() {\r\n    @Override\r\n    public BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain) {\r\n        System.out.println(\"before: \" + boundSql.getSql());\r\n        BoundSql doBoundSql = chain.doBoundSql(type, boundSql, cacheKey);\r\n        System.out.println(\"after: \" + doBoundSql.getSql());\r\n        if (type == Type.ORIGINAL) {\r\n            Assert.assertTrue(doBoundSql.getSql().contains(TestBoundSqlInterceptor.COMMENT));\r\n        }\r\n        return doBoundSql;\r\n    }\r\n});\r\n```\r\n\r\n\r\n\r\n\r\n-------------------------------\r\n\r\n- Upgrading jsqlparser to version 3.2 makes sql parsing better and supports sqlserver better.\r\n\r\n- Modify the substitution regularity in sqlserver mode, and now allow spaces in `with( nolock)` brackets.\r\n\r\n- Solving the bugs in reasonable, pageSizeZero and offset usage, the meaning and result are more consistent now.\r\n\r\n- In the process of splicing paging SQL, a new line character is added to avoid invalid paging part caused by comments in the original SQL.\r\n\r\n- ROW_ID alias in Oracle and Db2 is changed to PAGEHELPER_ROW_ID to avoid conflict with common names.\r\n\r\n- Solve the special problem when using other interceptors with a single parameter ProviderSql (support mybatis 3.4.0+) [by Luo Zhenyu](https://github.com/luozhenyu)\r\n\r\n- Automatic identification of clickhouse is supported, and paging is performed by MySQL.\r\n\r\n- Change startRow, endRow type from int to long.\r\n\r\n- Page adds a `public <T> PageInfo<T> toPageInfo(Function<E, T> function)` method to convert the data in the query results.\r\n\r\n- Refer to `Oracle9iDialect` provided by pr#476, which is also a paging method used before. You can test and select the appropriate paging method by yourself.\r\n\r\n   At present, there are two kinds of Oracle pagination as follows:\r\n   ```sql\r\n   -- OracleDialect outer control range\r\n   WHERE ROW_ID <= ? AND ROW_ID > ?\r\n   -- Oracle9iDialect's internal and external control scope respectively\r\n   TMP_PAGE WHERE ROWNUM <= ? ) WHERE ROW_ID > ?\r\n  ```\r\n- Adding `BoundSqlInterceptor` of PageHelper plug-in can process or simply read SQL in three stages, adding `boundSqlInterceptors`, and configuring multiple implementation class names that implement `BoundSqlInterceptor` interface, separated by English commas. PageHelper can also be set for this paging through a `PageHelper.startPage(x,x).boundSqlInterceptor(BoundSqlInterceptor boundSqlInterceptor)`.\r\n\r\nThe biggest change of this update is the addition of `BoundSqlInterceptor`, which can intercept the SQL(BoundSQL object) of paging processing at runtime:\r\n\r\n```java\r\n/**\r\n * BoundSql \u5904\u7406\u5668\r\n */\r\npublic interface BoundSqlInterceptor {\r\n    /**\r\n     * boundsql \u5904\u7406\r\n     *\r\n     * @param type     \u7c7b\u578b\r\n     * @param boundSql \u5f53\u524d\u7c7b\u578b\u7684 boundSql\r\n     * @param cacheKey \u7f13\u5b58 key\r\n     * @param chain    \u5904\u7406\u5668\u94fe\uff0c\u901a\u8fc7 chain.doBoundSql \u65b9\u6cd5\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de boundSql \u7ec8\u6b62\u540e\u7eed\u65b9\u6cd5\u7684\u6267\u884c\r\n     * @return \u5141\u8bb8\u4fee\u6539 boundSql \u5e76\u8fd4\u56de\u4fee\u6539\u540e\u7684\r\n     */\r\n    BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain);\r\n\r\n    enum Type {\r\n        /**\r\n         * \u539f\u59cbSQL\uff0c\u5206\u9875\u63d2\u4ef6\u6267\u884c\u524d\uff0c\u5148\u6267\u884c\u8fd9\u4e2a\u7c7b\u578b\r\n         */\r\n        ORIGINAL,\r\n        /**\r\n         * count SQL\uff0c\u7b2c\u4e8c\u4e2a\u6267\u884c\u8fd9\u91cc\r\n         */\r\n        COUNT_SQL,\r\n        /**\r\n         * \u5206\u9875 SQL\uff0c\u6700\u540e\u6267\u884c\u8fd9\u91cc\r\n         */\r\n        PAGE_SQL\r\n    }\r\n\r\n    /**\r\n     * \u5904\u7406\u5668\u94fe\uff0c\u53ef\u4ee5\u63a7\u5236\u662f\u5426\u7ee7\u7eed\u6267\u884c\r\n     */\r\n    interface Chain {\r\n        Chain DO_NOTHING = new Chain() {\r\n            @Override\r\n            public BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey) {\r\n                return boundSql;\r\n            }\r\n        };\r\n\r\n        BoundSql doBoundSql(Type type, BoundSql boundSql, CacheKey cacheKey);\r\n    }\r\n}\r\n```\r\n\r\nThe interface includes boundSql interface method, Type enumeration, and the definition of Chain interface, and you don't need to consider Chain when you implement it yourself.\r\n\r\nThe interceptor is configured by `boundSqlInterceptors` parameter, and there are three situations when executing:\r\n\r\n1. Regardless of whether the currently executed SQL will be paged or not, interceptor methods of `Type.ORIGINAL` will be executed.\r\n\r\n2. When the paging method is called, the interceptor will continue to execute the interceptor method of `Type.COUNT_SQL`, which will only be executed when paging is executed and count query is specified.\r\n\r\n3. When paging method is called, if count > 0, interceptor method of `Type.PAGE_SQL` will be executed, which will only be executed when paging is executed.\r\n\r\n>With the specified parameter `PageHelper.startPage(1, Integer.MAX_VALUE, false).boundSqlInterceptor(BoundSqlInterceptor boundSqlInterceptor)`, it can also play the role of not paging and count query, but can execute interceptor method of `Type.ORIGINAL`.\r\n\r\nIf you want to get the page before SQL execution, you only need to pay attention to `Type.ORIGINAL`, and the other two are before count execution and before page execution (when count=0, the page method will not be executed and will not be executed here).\r\n\r\nTake the test code as an example:\r\n\r\n```java\r\npublic class TestBoundSqlInterceptor implements BoundSqlInterceptor {\r\n    public static final String COMMENT = \"\\n /* TestBoundSqlInterceptor */\\n\";\r\n\r\n    @Override\r\n    public BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain) {\r\n        if (type == Type.ORIGINAL) {\r\n            String sql = boundSql.getSql();\r\n            MetaObject metaObject = MetaObjectUtil.forObject(boundSql);\r\n            metaObject.setValue(\"sql\", sql + COMMENT);\r\n        }\r\n        return chain.doBoundSql(type, boundSql, cacheKey);\r\n    }\r\n\r\n}\r\n```\r\nThe above code modifies the original sql before SQL execution, but only adds a comment at the end, which does not affect SQL execution. It is configured in the following way:\r\n\r\n```xml\r\n<plugin interceptor=\"com.github.pagehelper.PageInterceptor\">\r\n    <!-- \u652f\u6301\u901a\u8fc7Mapper\u63a5\u53e3\u53c2\u6570\u6765\u4f20\u9012\u5206\u9875\u53c2\u6570 -->\r\n    <property name=\"helperDialect\" value=\"mysql\"/>\r\n    <property name=\"boundSqlInterceptors\"\r\n              value=\"com.github.pagehelper.test.basic.provider.TestBoundSqlInterceptor,com.github.pagehelper.test.basic.provider.TestBoundSqlInterceptor\"/>\r\n</plugin>\r\n```\r\n\r\nHere, in order to explain that the parameter value can be multiple, it is repeatedly configured once, that is, the above interceptor will execute it twice.\r\n\r\nWith this configuration, the above SQL will modify the SQL when the page is executed.\r\n\r\nIn addition to this configuration mode, temporary designation when PageHelper.startPage is also supported. This mode will put the interceptor at the chain head and execute it first, so you can control whether to execute it later or not, or you can do the final processing before returning after all subsequent executions.\r\n\r\nExample:\r\n\r\n```java\r\nPageHelper.startPage(1, 10).boundSqlInterceptor(new BoundSqlInterceptor() {\r\n    @Override\r\n    public BoundSql boundSql(Type type, BoundSql boundSql, CacheKey cacheKey, Chain chain) {\r\n        System.out.println(\"before: \" + boundSql.getSql());\r\n        BoundSql doBoundSql = chain.doBoundSql(type, boundSql, cacheKey);\r\n        System.out.println(\"after: \" + doBoundSql.getSql());\r\n        if (type == Type.ORIGINAL) {\r\n            Assert.assertTrue(doBoundSql.getSql().contains(TestBoundSqlInterceptor.COMMENT));\r\n        }\r\n        return doBoundSql;\r\n    }\r\n});\r\n```\r\n"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786973", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786973/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786973/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.1.11", "id": 21786973, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxNzg2OTcz", "tag_name": "v5.1.11", "target_commitish": "master", "name": "5.1.11 - 2019-11-26", "draft": false, "prerelease": false, "created_at": "2019-11-27T01:58:03Z", "published_at": "2019-11-27T02:01:23Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.1.11", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.1.11", "body": "- Added support for Shentong database **wangss**\r\n- Add support for HerdDB - support HerdDB, mostly like MySQL - auto detect HerdDB **Enrico Olivelli**\r\n- fix some typos and grammar issues **LHearen**\r\n\r\n---------------\r\n\r\n- \u589e\u52a0\u795e\u901a\u6570\u636e\u5e93\u7684\u652f\u6301 **wangss**\r\n- Add support for HerdDB - support HerdDB, mostly like MySQL - auto detect HerdDB **Enrico Olivelli**\r\n- fix some typos and grammar issues **LHearen**"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786999", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786999/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/21786999/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.1.10", "id": 21786999, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTIxNzg2OTk5", "tag_name": "v5.1.10", "target_commitish": "master", "name": "5.1.10 - 2019-06-05", "draft": false, "prerelease": false, "created_at": "2019-06-05T13:29:34Z", "published_at": "2019-11-27T02:03:03Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.1.10", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.1.10", "body": "In version *5.1.0 - 2017-08-28*. Added `ReplaceSql` interface for handling sqlServer with (nolock) problem,\r\nadd the replaceSql parameters, the optional value is `simple` and `regex`, or to achieve the `ReplaceSql` interface\r\nfully qualified class name. The default value is `simple`, still using the original way to deal with,\r\nthe new regex will be convert `with (nolock)` to `table_PAGEWITHNOLOCK`.\r\n\r\nThis update only changes the default value from `simple` to `regex`, which can almost 100% solve the paging problem of sqlServer.\r\n\r\nThe following are examples from two issue.\r\n\r\n#### issue [#76](https://github.com/pagehelper/pagehelper-spring-boot/issues/76)\r\n\r\nOriginal SQL\uff1a\r\n```sql\r\nSELECT *\r\nFROM\r\nforum_post_info a with(nolock)\r\nLEFT JOIN forum_carcase_tags as b with(nolock) on a.id = b.carcase_id where b.tag_id = 127\r\n```\r\nConverted Count SQL\uff1a\r\n```sql\r\nSELECT COUNT(0)\r\nFROM forum_post_info a WITH (NOLOCK)\r\n\tLEFT JOIN forum_carcase_tags b WITH (NOLOCK) ON a.id = b.carcase_id\r\nWHERE b.tag_id = 127\r\n```\r\nConverted paging SQL\uff1a\r\n```sql\r\nSELECT TOP 10 *\r\nFROM (\r\n\tSELECT ROW_NUMBER() OVER (ORDER BY RAND()) AS PAGE_ROW_NUMBER, *\r\n\tFROM (\r\n\t\tSELECT *\r\n\t\tFROM forum_post_info a WITH (NOLOCK)\r\n\t\t\tLEFT JOIN forum_carcase_tags b WITH (NOLOCK) ON a.id = b.carcase_id\r\n\t\tWHERE b.tag_id = 127\r\n\t) PAGE_TABLE_ALIAS\r\n) PAGE_TABLE_ALIAS\r\nWHERE PAGE_ROW_NUMBER > 1\r\nORDER BY PAGE_ROW_NUMBER\r\n```\r\n\r\n#### issue [#398](https://github.com/pagehelper/Mybatis-PageHelper/issues/398)\r\n\r\nOriginal SQL\uff1a\r\n```sql\r\nSelect AUS.ScheduleID, AUS.SystemID, AUS.ClinicID, AUS.DoctorID, AUS.ScheduleDate,\r\n\tAUS.StartTime, AUS.EndTime, AUS.Status, AUS.BookBy, AUS.Note, AUS.Remark, AUS.SourceType, CM.CompanyName,\r\n\tAU.UserName As DoctorName, AU.UserNumber As DoctorNumber, CC.CodeDesc As ClinicName, CD.Lat, CD.Lng,\r\n\tCD.ContactTel, CD.Address, CR.ConsultationStatusID, CR.RegisterStatus,A1.CodeDesc as AreaLevel1, A2.CodeDesc as AreaLevel2\r\n\tFrom ACM_User_Schedule AUS with(nolock)\r\n\tLeft Join Client_Register CR with(nolock) On AUS.BookBy=CR.ClientID And CR.SourceType='F' And AUS.ClientRegisterNum=CR.ClientRegisterNum\r\n\tInner Join ACM_User AU with(nolock) On AU.UserID = AUS.DoctorID\r\n\tInner Join Code_Clinic CC with(nolock) On AUS.ClinicID=CC.CodeID\r\n\tInner Join Clinic_Detail CD with(nolock) On CC.CodeID = CD.ClinicID\r\n\tInner Join Code_Area A1 with(nolock) On CD.AreaLevel1ID=A1.CodeID\r\n\tInner Join Code_Area A2 with(nolock) On CD.AreaLevel2ID=A2.CodeID\r\n\tInner Join Company_Master CM with(nolock) On CC.SystemID = CM.SystemID\r\n\tWhere BookBy=1\r\n```\r\nConverted Count SQL\uff1a\r\n```sql\r\nSELECT COUNT(0)\r\nFROM ACM_User_Schedule AUS WITH (NOLOCK)\r\n\tLEFT JOIN Client_Register CR WITH (NOLOCK)\r\n\tON AUS.BookBy = CR.ClientID\r\n\t\tAND CR.SourceType = 'F'\r\n\t\tAND AUS.ClientRegisterNum = CR.ClientRegisterNum\r\n\tINNER JOIN ACM_User AU WITH (NOLOCK) ON AU.UserID = AUS.DoctorID\r\n\tINNER JOIN Code_Clinic CC WITH (NOLOCK) ON AUS.ClinicID = CC.CodeID\r\n\tINNER JOIN Clinic_Detail CD WITH (NOLOCK) ON CC.CodeID = CD.ClinicID\r\n\tINNER JOIN Code_Area A1 WITH (NOLOCK) ON CD.AreaLevel1ID = A1.CodeID\r\n\tINNER JOIN Code_Area A2 WITH (NOLOCK) ON CD.AreaLevel2ID = A2.CodeID\r\n\tINNER JOIN Company_Master CM WITH (NOLOCK) ON CC.SystemID = CM.SystemID\r\nWHERE BookBy = 1\r\n```\r\nConverted paging SQL\uff1a\r\n```sql\r\nSELECT TOP 10 ScheduleID, SystemID, ClinicID, DoctorID, ScheduleDate\r\n\t, StartTime, EndTime, Status, BookBy, Note\r\n\t, Remark, SourceType, CompanyName, DoctorName, DoctorNumber\r\n\t, ClinicName, Lat, Lng, ContactTel, Address\r\n\t, ConsultationStatusID, RegisterStatus, AreaLevel1, AreaLevel2\r\nFROM (\r\n\tSELECT ROW_NUMBER() OVER (ORDER BY RAND()) AS PAGE_ROW_NUMBER, ScheduleID, SystemID, ClinicID, DoctorID\r\n\t\t, ScheduleDate, StartTime, EndTime, Status, BookBy\r\n\t\t, Note, Remark, SourceType, CompanyName, DoctorName\r\n\t\t, DoctorNumber, ClinicName, Lat, Lng, ContactTel\r\n\t\t, Address, ConsultationStatusID, RegisterStatus, AreaLevel1, AreaLevel2\r\n\tFROM (\r\n\t\tSELECT AUS.ScheduleID, AUS.SystemID, AUS.ClinicID, AUS.DoctorID, AUS.ScheduleDate\r\n\t\t\t, AUS.StartTime, AUS.EndTime, AUS.Status, AUS.BookBy, AUS.Note\r\n\t\t\t, AUS.Remark, AUS.SourceType, CM.CompanyName, AU.UserName AS DoctorName, AU.UserNumber AS DoctorNumber\r\n\t\t\t, CC.CodeDesc AS ClinicName, CD.Lat, CD.Lng, CD.ContactTel, CD.Address\r\n\t\t\t, CR.ConsultationStatusID, CR.RegisterStatus, A1.CodeDesc AS AreaLevel1, A2.CodeDesc AS AreaLevel2\r\n\t\tFROM ACM_User_Schedule AUS WITH (NOLOCK)\r\n\t\t\tLEFT JOIN Client_Register CR WITH (NOLOCK)\r\n\t\t\tON AUS.BookBy = CR.ClientID\r\n\t\t\t\tAND CR.SourceType = 'F'\r\n\t\t\t\tAND AUS.ClientRegisterNum = CR.ClientRegisterNum\r\n\t\t\tINNER JOIN ACM_User AU WITH (NOLOCK) ON AU.UserID = AUS.DoctorID\r\n\t\t\tINNER JOIN Code_Clinic CC WITH (NOLOCK) ON AUS.ClinicID = CC.CodeID\r\n\t\t\tINNER JOIN Clinic_Detail CD WITH (NOLOCK) ON CC.CodeID = CD.ClinicID\r\n\t\t\tINNER JOIN Code_Area A1 WITH (NOLOCK) ON CD.AreaLevel1ID = A1.CodeID\r\n\t\t\tINNER JOIN Code_Area A2 WITH (NOLOCK) ON CD.AreaLevel2ID = A2.CodeID\r\n\t\t\tINNER JOIN Company_Master CM WITH (NOLOCK) ON CC.SystemID = CM.SystemID\r\n\t\tWHERE BookBy = 1\r\n\t) PAGE_TABLE_ALIAS\r\n) PAGE_TABLE_ALIAS\r\nWHERE PAGE_ROW_NUMBER > 1\r\nORDER BY PAGE_ROW_NUMBER\r\n```\r\n\r\nSQL is formatted by https://tool.oschina.net/codeformat/sql\r\n\r\n-------------------------------\r\n\r\n\u5728 *5.1.0 - 2017-08-28* \u7248\u672c\u4e2d\uff0c\u589e\u52a0 `ReplaceSql` \u63a5\u53e3\u7528\u4e8e\u5904\u7406 sqlServer \u7684 `with(nolock)` \u95ee\u9898\uff0c\u589e\u52a0\u4e86\u9488\u5bf9\u6027\u7684 `replaceSql` \u53c2\u6570\uff0c\r\n\u53ef\u9009\u503c\u4e3a `simple` \u548c `regex`\uff0c\u6216\u8005\u662f\u5b9e\u73b0\u4e86ReplaceSql\u63a5\u53e3\u7684\u5168\u9650\u5b9a\u7c7b\u540d\u3002\u9ed8\u8ba4\u503c\u4e3a `simple`\uff0c\u4ecd\u7136\u4f7f\u7528\u539f\u6765\u7684\u65b9\u5f0f\u5904\u7406\uff0c\r\n\u65b0\u7684 `regex` \u4f1a\u5c06\u5982 `table with(nolock)` \u5904\u7406\u4e3a `table_PAGEWITHNOLOCK`\u3002\r\n\r\n\u672c\u6b21\u66f4\u65b0\u4ec5\u4ec5\u662f\u628a\u9ed8\u8ba4\u503c\u4ece `simple` \u6539\u4e3a\u4e86 `regex`\uff0c\u4f7f\u7528 `regex` \u65b9\u5f0f\u51e0\u4e4e\u80fd 100% \u89e3\u51b3 sqlServer \u7684\u5206\u9875\u95ee\u9898\u3002\r\n\r\n\u4e0b\u9762\u662f\u4e24\u4e2a issue \u4e2d\u7684\u793a\u4f8b\u3002\r\n\r\n#### \u793a\u4f8b SQL [#76](https://github.com/pagehelper/pagehelper-spring-boot/issues/76)\r\n\r\n\u539f\u59cb SQL\uff1a\r\n```sql\r\nSELECT *\r\nFROM\r\nforum_post_info a with(nolock)\r\nLEFT JOIN forum_carcase_tags as b with(nolock) on a.id = b.carcase_id where b.tag_id = 127\r\n```\r\n\u8f6c\u6362\u7684 Count SQL\uff1a\r\n```sql\r\nSELECT COUNT(0)\r\nFROM forum_post_info a WITH (NOLOCK)\r\n\tLEFT JOIN forum_carcase_tags b WITH (NOLOCK) ON a.id = b.carcase_id\r\nWHERE b.tag_id = 127\r\n```\r\n\u8f6c\u6362\u7684\u5206\u9875 SQL\uff1a\r\n```sql\r\nSELECT TOP 10 *\r\nFROM (\r\n\tSELECT ROW_NUMBER() OVER (ORDER BY RAND()) AS PAGE_ROW_NUMBER, *\r\n\tFROM (\r\n\t\tSELECT *\r\n\t\tFROM forum_post_info a WITH (NOLOCK)\r\n\t\t\tLEFT JOIN forum_carcase_tags b WITH (NOLOCK) ON a.id = b.carcase_id\r\n\t\tWHERE b.tag_id = 127\r\n\t) PAGE_TABLE_ALIAS\r\n) PAGE_TABLE_ALIAS\r\nWHERE PAGE_ROW_NUMBER > 1\r\nORDER BY PAGE_ROW_NUMBER\r\n```\r\n\r\n#### \u793a\u4f8b SQL [#398](https://github.com/pagehelper/Mybatis-PageHelper/issues/398)\r\n\r\n\u539f\u59cb SQL\uff1a\r\n```sql\r\nSelect AUS.ScheduleID, AUS.SystemID, AUS.ClinicID, AUS.DoctorID, AUS.ScheduleDate,\r\n\tAUS.StartTime, AUS.EndTime, AUS.Status, AUS.BookBy, AUS.Note, AUS.Remark, AUS.SourceType, CM.CompanyName,\r\n\tAU.UserName As DoctorName, AU.UserNumber As DoctorNumber, CC.CodeDesc As ClinicName, CD.Lat, CD.Lng,\r\n\tCD.ContactTel, CD.Address, CR.ConsultationStatusID, CR.RegisterStatus,A1.CodeDesc as AreaLevel1, A2.CodeDesc as AreaLevel2\r\n\tFrom ACM_User_Schedule AUS with(nolock)\r\n\tLeft Join Client_Register CR with(nolock) On AUS.BookBy=CR.ClientID And CR.SourceType='F' And AUS.ClientRegisterNum=CR.ClientRegisterNum\r\n\tInner Join ACM_User AU with(nolock) On AU.UserID = AUS.DoctorID\r\n\tInner Join Code_Clinic CC with(nolock) On AUS.ClinicID=CC.CodeID\r\n\tInner Join Clinic_Detail CD with(nolock) On CC.CodeID = CD.ClinicID\r\n\tInner Join Code_Area A1 with(nolock) On CD.AreaLevel1ID=A1.CodeID\r\n\tInner Join Code_Area A2 with(nolock) On CD.AreaLevel2ID=A2.CodeID\r\n\tInner Join Company_Master CM with(nolock) On CC.SystemID = CM.SystemID\r\n\tWhere BookBy=1\r\n```\r\n\u8f6c\u6362\u7684 Count SQL\uff1a\r\n```sql\r\nSELECT COUNT(0)\r\nFROM ACM_User_Schedule AUS WITH (NOLOCK)\r\n\tLEFT JOIN Client_Register CR WITH (NOLOCK)\r\n\tON AUS.BookBy = CR.ClientID\r\n\t\tAND CR.SourceType = 'F'\r\n\t\tAND AUS.ClientRegisterNum = CR.ClientRegisterNum\r\n\tINNER JOIN ACM_User AU WITH (NOLOCK) ON AU.UserID = AUS.DoctorID\r\n\tINNER JOIN Code_Clinic CC WITH (NOLOCK) ON AUS.ClinicID = CC.CodeID\r\n\tINNER JOIN Clinic_Detail CD WITH (NOLOCK) ON CC.CodeID = CD.ClinicID\r\n\tINNER JOIN Code_Area A1 WITH (NOLOCK) ON CD.AreaLevel1ID = A1.CodeID\r\n\tINNER JOIN Code_Area A2 WITH (NOLOCK) ON CD.AreaLevel2ID = A2.CodeID\r\n\tINNER JOIN Company_Master CM WITH (NOLOCK) ON CC.SystemID = CM.SystemID\r\nWHERE BookBy = 1\r\n```\r\n\u8f6c\u6362\u7684\u5206\u9875 SQL\uff1a\r\n```sql\r\nSELECT TOP 10 ScheduleID, SystemID, ClinicID, DoctorID, ScheduleDate\r\n\t, StartTime, EndTime, Status, BookBy, Note\r\n\t, Remark, SourceType, CompanyName, DoctorName, DoctorNumber\r\n\t, ClinicName, Lat, Lng, ContactTel, Address\r\n\t, ConsultationStatusID, RegisterStatus, AreaLevel1, AreaLevel2\r\nFROM (\r\n\tSELECT ROW_NUMBER() OVER (ORDER BY RAND()) AS PAGE_ROW_NUMBER, ScheduleID, SystemID, ClinicID, DoctorID\r\n\t\t, ScheduleDate, StartTime, EndTime, Status, BookBy\r\n\t\t, Note, Remark, SourceType, CompanyName, DoctorName\r\n\t\t, DoctorNumber, ClinicName, Lat, Lng, ContactTel\r\n\t\t, Address, ConsultationStatusID, RegisterStatus, AreaLevel1, AreaLevel2\r\n\tFROM (\r\n\t\tSELECT AUS.ScheduleID, AUS.SystemID, AUS.ClinicID, AUS.DoctorID, AUS.ScheduleDate\r\n\t\t\t, AUS.StartTime, AUS.EndTime, AUS.Status, AUS.BookBy, AUS.Note\r\n\t\t\t, AUS.Remark, AUS.SourceType, CM.CompanyName, AU.UserName AS DoctorName, AU.UserNumber AS DoctorNumber\r\n\t\t\t, CC.CodeDesc AS ClinicName, CD.Lat, CD.Lng, CD.ContactTel, CD.Address\r\n\t\t\t, CR.ConsultationStatusID, CR.RegisterStatus, A1.CodeDesc AS AreaLevel1, A2.CodeDesc AS AreaLevel2\r\n\t\tFROM ACM_User_Schedule AUS WITH (NOLOCK)\r\n\t\t\tLEFT JOIN Client_Register CR WITH (NOLOCK)\r\n\t\t\tON AUS.BookBy = CR.ClientID\r\n\t\t\t\tAND CR.SourceType = 'F'\r\n\t\t\t\tAND AUS.ClientRegisterNum = CR.ClientRegisterNum\r\n\t\t\tINNER JOIN ACM_User AU WITH (NOLOCK) ON AU.UserID = AUS.DoctorID\r\n\t\t\tINNER JOIN Code_Clinic CC WITH (NOLOCK) ON AUS.ClinicID = CC.CodeID\r\n\t\t\tINNER JOIN Clinic_Detail CD WITH (NOLOCK) ON CC.CodeID = CD.ClinicID\r\n\t\t\tINNER JOIN Code_Area A1 WITH (NOLOCK) ON CD.AreaLevel1ID = A1.CodeID\r\n\t\t\tINNER JOIN Code_Area A2 WITH (NOLOCK) ON CD.AreaLevel2ID = A2.CodeID\r\n\t\t\tINNER JOIN Company_Master CM WITH (NOLOCK) ON CC.SystemID = CM.SystemID\r\n\t\tWHERE BookBy = 1\r\n\t) PAGE_TABLE_ALIAS\r\n) PAGE_TABLE_ALIAS\r\nWHERE PAGE_ROW_NUMBER > 1\r\nORDER BY PAGE_ROW_NUMBER\r\n```\r\n\r\nSQL \u7ecf\u8fc7 https://tool.oschina.net/codeformat/sql \u683c\u5f0f\u5316\u3002\r\n"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720325", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720325/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720325/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.1.6", "id": 12720325, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNzIwMzI1", "tag_name": "v5.1.6", "target_commitish": "master", "name": "5.1.6 - 2018-09-05", "draft": false, "prerelease": false, "created_at": "2018-09-04T13:54:57Z", "published_at": "2018-09-04T14:02:54Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.1.6", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.1.6", "body": "### 5.1.6 - 2018-09-05\r\n\r\n- \u589e\u52a0\u53c2\u6570 useSqlserver2012\uff0c\u8bbe\u7f6e\u4e3a true \u540e\uff0c\u4f7f\u7528 sqlserver2012(Dialect) \u4f5c\u4e3a SqlServer \u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u5206\u9875\u65b9\u5f0f\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u52a8\u6001\u6570\u636e\u6e90\u65f6\u65b9\u4fbf\u4f7f\u7528\u3002\u9ed8\u8ba4\u4f7f\u7528\u7684\u4f4e\u7248\u672c(05,08)\u5206\u9875\u65b9\u5f0f\u3002\r\n- \u589e\u52a0 IPage \u63a5\u53e3\uff0c\u76ee\u524d\u652f\u6301 mybatis \u67e5\u8be2\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u53c2\u6570\u5b9e\u73b0 IPage \u63a5\u53e3\u65f6\uff0c\u5982\u679c\u5b58\u5728\u5206\u9875\u53c2\u6570\uff0c\u5c31\u4f1a\u81ea\u52a8\u8fdb\u884c\u5206\u9875\u67e5\u8be2\u3002\u611f\u8c22 [moonfruit](https://github.com/moonfruit) \u4e24\u5e74\u524d\u7684 issue\u3002\r\n- \u89e3\u51b3 HashSet \u5e76\u53d1\u95ee\u9898 fixed #276\r\n- \u4f18\u5316\u4ee3\u7801\u7ed3\u6784\uff0c\u7cbe\u7b80\u62e6\u622a\u5668\u4ee3\u7801\r\n\r\n------------\r\n\r\n### 5.1.6 - 2018-09-05\r\n\r\n- Add the parameter useSqlserver2012, set to true, and use sqlserver2012(Dialect) as the default paging method for SQL Server databases, which is useful in dynamic data sources.\r\n- Add an IPage interface. Currently, there is only one parameter to support the MyBatis query method, and when the parameter implements the IPage interface, paging query will be automatically performed if paging parameters exist. Thanks to [moonfruit](https://github.com/moonfruit) Issue two years ago.\r\n- fixed # 276 to resolve hashset concurrency issue\r\n- Optimize code structure and streamline interceptor code"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720279", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720279/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/12720279/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.1.5", "id": 12720279, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTEyNzIwMjc5", "tag_name": "v5.1.5", "target_commitish": "f4df55cc6bded85a3585a3056a965aae74acdcd1", "name": "5.1.5 - 2018-09-02", "draft": false, "prerelease": false, "created_at": "2018-09-04T13:54:39Z", "published_at": "2018-09-04T14:01:12Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.1.5", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.1.5", "body": "### 5.1.5 - 2018-09-02\r\n\r\n- \u4f18\u5316\u4ee3\u7801\uff0c\u53bb\u6389\u6ca1\u5fc5\u8981\u7684\u6821\u9a8c(**by lenosp**)\r\n- \u89e3\u51b3 pageKey \u591a\u5904\u7406\u4e00\u6b21\u7684\u5c0f\u95ee\u9898 #268\r\n- \u65b0\u589e gitee \u63d0\u4f9b\u7684 javadoc \u6587\u6863(https://apidoc.gitee.com/free/Mybatis_PageHelper)\r\n- \u89e3\u51b3\u9ed8\u8ba4\u53cd\u5c04\u4e0d\u5e26\u7f13\u5b58\u7684\u95ee\u9898 fixed #275\r\n- \u4f18\u5316mysql ifnull\u51fd\u6570\u5bfc\u81f4\u5206\u9875\u6027\u80fd\u95ee\u9898 (**by miaogr**)\uff08\u8fd9\u4e2a\u4fee\u6539\u6700\u7ec8\u6539\u6210\u4e86\u4e0b\u9762\u7684 `aggregateFunctions`\uff09\r\n- jsqlparser \u5347\u7ea7\u4e3a 1.2 \u7248\u672c\uff0c\u548c 1.0 \u6709\u4e0d\u517c\u5bb9\u7684\u60c5\u51b5\uff0c\u5df2\u7ecf\u89e3\u51b3\u3002 fixed 273\r\n- \u53bb\u6389 PageInfo \u4e2d\u5b58\u5728\u6b67\u4e49\u7684 g(s)etFirstPage \u548c g(s)etLastPage \u4e24\u4e2a\u65b9\u6cd5\r\n- \u629b\u51fa\u6392\u5e8f\u65f6\u89e3\u6790\u5931\u8d25\u7684\u5f02\u5e38 fixed #257\r\n- \u89e3\u51b3 Spring `<bean>` \u65b9\u5f0f\u914d\u7f6e\u65f6\uff0c\u6ca1\u6709 `properties` \u5c5e\u6027\u65f6\u7684\u521d\u59cb\u5316\u95ee\u9898 fixed #26\r\n- \u4fee\u590dOracle\u5206\u9875\u4f1a\u6f0f\u67e5\u6570\u636e\u7684\u95ee\u9898 (**by muyun12**)\r\n- \u65b0\u589e `aggregateFunctions` \u53c2\u6570(`CountSqlParser`), \u5141\u8bb8\u624b\u52a8\u6dfb\u52a0\u805a\u5408\u51fd\u6570\uff08\u5f71\u54cd\u884c\u6570\uff09\uff0c\u6240\u4ee5\u4ee5\u805a\u5408\u51fd\u6570\u5f00\u5934\u7684\u51fd\u6570\uff0c\u5728\u8fdb\u884c count \u8f6c\u6362\u65f6\uff0c\u4f1a\u5957\u4e00\u5c42\u3002\u5176\u4ed6\u51fd\u6570\u548c\u5217\u4f1a\u88ab\u66ff\u6362\u4e3a count(0),\u5176\u4e2dcount\u5217\u53ef\u4ee5\u81ea\u5df1\u914d\u7f6e\u3002\r\n\r\n\u589e\u52a0 `aggregateFunctions` \u53c2\u6570\u540e\uff0c\u548c\u539f\u5148\u6700\u5927\u7684\u533a\u522b\u662f\uff0c\u5982\u679c\u5b58\u5728 `select ifnull(xxx, yy) from table ...`\uff0c\u539f\u5148\u7684 count \u67e5\u8be2\u662f\r\n`select count(0) from (select ifnull(xxx, yy) from table ...) temp_count`\uff0c\u73b0\u5728\u4f1a\u533a\u522b\u805a\u5408\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u662f\u805a\u5408\u51fd\u6570\uff0c\u5c31\u4f1a\u53d8\u6210\r\n`select count(0) from table ...`\u3002\r\n\r\n\u9ed8\u8ba4\u5305\u542b\u7684\u805a\u5408\u51fd\u6570\u524d\u7f00\u5982\u4e0b\uff1a\r\n\r\n```java\r\n/**\r\n * \u805a\u5408\u51fd\u6570\uff0c\u4ee5\u4e0b\u5217\u51fd\u6570\u5f00\u5934\u7684\u90fd\u8ba4\u4e3a\u662f\u805a\u5408\u51fd\u6570\r\n */\r\nprivate static final Set<String> AGGREGATE_FUNCTIONS = new HashSet<String>(Arrays.asList(\r\n        (\"APPROX_COUNT_DISTINCT,\" +\r\n        \"ARRAY_AGG,\" +\r\n        \"AVG,\" +\r\n        \"BIT_\" +\r\n        //\"BIT_AND,\" +\r\n        //\"BIT_OR,\" +\r\n        //\"BIT_XOR,\" +\r\n        \"BOOL_,\" +\r\n        //\"BOOL_AND,\" +\r\n        //\"BOOL_OR,\" +\r\n        \"CHECKSUM_AGG,\" +\r\n        \"COLLECT,\" +\r\n        \"CORR,\" +\r\n        //\"CORR_,\" +\r\n        //\"CORRELATION,\" +\r\n        \"COUNT,\" +\r\n        //\"COUNT_BIG,\" +\r\n        \"COVAR,\" +\r\n        //\"COVAR_POP,\" +\r\n        //\"COVAR_SAMP,\" +\r\n        //\"COVARIANCE,\" +\r\n        //\"COVARIANCE_SAMP,\" +\r\n        \"CUME_DIST,\" +\r\n        \"DENSE_RANK,\" +\r\n        \"EVERY,\" +\r\n        \"FIRST,\" +\r\n        \"GROUP,\" +\r\n        //\"GROUP_CONCAT,\" +\r\n        //\"GROUP_ID,\" +\r\n        //\"GROUPING,\" +\r\n        //\"GROUPING,\" +\r\n        //\"GROUPING_ID,\" +\r\n        \"JSON_,\" +\r\n        //\"JSON_AGG,\" +\r\n        //\"JSON_ARRAYAGG,\" +\r\n        //\"JSON_OBJECT_AGG,\" +\r\n        //\"JSON_OBJECTAGG,\" +\r\n        //\"JSONB_AGG,\" +\r\n        //\"JSONB_OBJECT_AGG,\" +\r\n        \"LAST,\" +\r\n        \"LISTAGG,\" +\r\n        \"MAX,\" +\r\n        \"MEDIAN,\" +\r\n        \"MIN,\" +\r\n        \"PERCENT_,\" +\r\n        //\"PERCENT_RANK,\" +\r\n        //\"PERCENTILE_CONT,\" +\r\n        //\"PERCENTILE_DISC,\" +\r\n        \"RANK,\" +\r\n        \"REGR_,\" +\r\n        \"SELECTIVITY,\" +\r\n        \"STATS_,\" +\r\n        //\"STATS_BINOMIAL_TEST,\" +\r\n        //\"STATS_CROSSTAB,\" +\r\n        //\"STATS_F_TEST,\" +\r\n        //\"STATS_KS_TEST,\" +\r\n        //\"STATS_MODE,\" +\r\n        //\"STATS_MW_TEST,\" +\r\n        //\"STATS_ONE_WAY_ANOVA,\" +\r\n        //\"STATS_T_TEST_*,\" +\r\n        //\"STATS_WSR_TEST,\" +\r\n        \"STD,\" +\r\n        //\"STDDEV,\" +\r\n        //\"STDDEV_POP,\" +\r\n        //\"STDDEV_SAMP,\" +\r\n        //\"STDDEV_SAMP,\" +\r\n        //\"STDEV,\" +\r\n        //\"STDEVP,\" +\r\n        \"STRING_AGG,\" +\r\n        \"SUM,\" +\r\n        \"SYS_OP_ZONE_ID,\" +\r\n        \"SYS_XMLAGG,\" +\r\n        \"VAR,\" +\r\n        //\"VAR_POP,\" +\r\n        //\"VAR_SAMP,\" +\r\n        //\"VARIANCE,\" +\r\n        //\"VARIANCE_SAMP,\" +\r\n        //\"VARP,\" +\r\n        \"XMLAGG\").split(\",\")));\r\n```\r\n\r\n-----------\r\n\r\n### 5.1.5 - 2018-09-02\r\n\r\n- Optimize the code and remove unnecessary checks(**by lenosp**)\r\n- Solve the small problem of pageKey multi-processing once #268\r\n- Added javadoc documentation on gitee(https://apidoc.gitee.com/free/Mybatis_PageHelper)\r\n- Solve the problem of default reflection without cache fixed #275\r\n- Optimizing mysql ifnull function causes paging performance problems (**by miaogr**)\uff08This change was eventually changed to the following `aggregateFunctions`\uff09\r\n- Jsqlparser has been upgraded to version 1.2, which is incompatible with 1.0 and has been resolved. fixed 273\r\n- Remove the g(s)etFirstPage and g(s)etLastPage methods that are ambiguous in PageInfo\r\n- Throws an exception that failed to parse when sorting fixed #257\r\n- Resolve the initialization problem when there is no properties property when configuring the spring use `<bean>`. fixed #26\r\n- Fix the problem that Oracle paging will leak data (**by muyun12**)\r\n- `aggregateFunctions`: The default is the aggregate function of all common databases,\r\n  allowing you to manually add aggregate functions ( affecting the number of rows ).\r\n  All functions that start with aggregate functions will be wrap as subquery.\r\n  Other functions and columns will be replaced with count(0).\r\n\r\nAfter adding the `aggregateFunctions` parameter, the biggest difference from the original is that if there is `select ifnull(XXX,YY) from table ...`, the original count query is\r\n `select count(0) from (select ifnull(xxx,yy) from table ... ) temp_count` now distinguishes aggregate functions, if not aggregate functions, it will become\r\n `select count(0) from table ...`.\r\n\r\nThe aggregate function prefixes included by default are as the above code."}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/7228185", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/7228185/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/7228185/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.0.4", "id": 7228185, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTcyMjgxODU=", "tag_name": "v5.0.4", "target_commitish": "master", "name": "5.0.4 - 2017-08-01", "draft": false, "prerelease": false, "created_at": "2017-07-31T13:22:11Z", "published_at": "2017-07-31T13:24:59Z", "assets": [], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.0.4", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.0.4", "body": "## \u4e2d\u6587\r\n\r\n- \u589e\u52a0\u5bf9 `Phoenix` \u6570\u636e\u5e93\u7684\u7b80\u5355\u914d\u7f6e\u652f\u6301\uff0c\u914d\u7f6e `helperDialect=phoenix` \u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b `Phoenix` \u6570\u636e\u5e93\u7684 jdbc url\u3002\r\n- count \u67e5\u8be2\u7684\u7f13\u5b58 `msCountMap` key \u6539\u4e3a `String` \u7c7b\u578b\uff0ckey \u4e3a count \u67e5\u8be2\u7684 `MappedStatement` \u7684 id\u3002\r\n- \u589e\u52a0 `countSuffix` count \u67e5\u8be2\u540e\u7f00\u914d\u7f6e\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u662f\u9488\u5bf9 `PageInterceptor` \u914d\u7f6e\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3a `_COUNT`\u3002\r\n- \u589e\u52a0\u624b\u5199 count \u67e5\u8be2\u652f\u6301\uff0c\u8be6\u60c5\u770b\u4e0b\u9762\u4ecb\u7ecd\u3002\r\n\r\n## \u589e\u52a0\u624b\u5199 count \u67e5\u8be2\u652f\u6301\r\n\r\n\u589e\u52a0 `countSuffix` count \u67e5\u8be2\u540e\u7f00\u914d\u7f6e\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u662f\u9488\u5bf9 `PageInterceptor` \u914d\u7f6e\u7684\uff0c\u9ed8\u8ba4\u503c\u4e3a `_COUNT`\u3002\r\n\r\n\u5206\u9875\u63d2\u4ef6\u4f1a\u4f18\u5148\u901a\u8fc7\u5f53\u524d\u67e5\u8be2\u7684 msId + `countSuffix` \u67e5\u627e\u624b\u5199\u7684\u5206\u9875\u67e5\u8be2\u3002\r\n\r\n\u5982\u679c\u5b58\u5728\u5c31\u4f7f\u7528\u624b\u5199\u7684 count \u67e5\u8be2\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4ecd\u7136\u4f7f\u7528\u4e4b\u524d\u7684\u65b9\u5f0f\u81ea\u52a8\u521b\u5efa count \u67e5\u8be2\u3002\r\n\r\n\u4f8b\u5982\uff0c\u5982\u679c\u5b58\u5728\u4e0b\u9762\u4e24\u4e2a\u67e5\u8be2\uff1a\r\n```xml\r\n<select id=\"selectLeftjoin\" resultType=\"com.github.pagehelper.model.Country\">\r\n    select a.id,b.countryname,a.countrycode from country a\r\n    left join country b on a.id = b.id\r\n    order by a.id\r\n</select>\r\n<select id=\"selectLeftjoin_COUNT\" resultType=\"Long\">\r\n    select count(distinct a.id) from country a\r\n    left join country b on a.id = b.id\r\n</select>\r\n```\r\n\u4e0a\u9762\u7684 `countSuffix` \u4f7f\u7528\u7684\u9ed8\u8ba4\u503c `_COUNT`\uff0c\u5206\u9875\u63d2\u4ef6\u4f1a\u81ea\u52a8\u83b7\u53d6\u5230 `selectLeftjoin_COUNT` \u67e5\u8be2\uff0c\u8fd9\u4e2a\u67e5\u8be2\u9700\u8981\u81ea\u5df1\u4fdd\u8bc1\u7ed3\u679c\u6570\u6b63\u786e\u3002\r\n\r\n\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5fc5\u987b\u662f`resultType=\"Long\"`\uff0c\u5165\u53c2\u4f7f\u7528\u7684\u548c `selectLeftjoin` \u67e5\u8be2\u76f8\u540c\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728 SQL \u4e2d\u8981\u6309\u7167 `selectLeftjoin` \u7684\u5165\u53c2\u6765\u4f7f\u7528\u3002\r\n\r\n\u56e0\u4e3a `selectLeftjoin_COUNT` \u65b9\u6cd5\u662f\u81ea\u52a8\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u63a5\u53e3\u63d0\u4f9b\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u9700\u8981\u5355\u72ec\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u3002\r\n\r\n\u4e0a\u9762\u65b9\u6cd5\u6267\u884c\u8f93\u51fa\u7684\u90e8\u5206\u65e5\u5fd7\u5982\u4e0b\uff1a\r\n```\r\nDEBUG [main] - ==>  Preparing: select count(distinct a.id) from country a left join country b on a.id = b.id \r\nDEBUG [main] - ==> Parameters: \r\nTRACE [main] - <==    Columns: C1\r\nTRACE [main] - <==        Row: 183\r\nDEBUG [main] - <==      Total: 1\r\nDEBUG [main] - Cache Hit Ratio [com.github.pagehelper.mapper.CountryMapper]: 0.0\r\nDEBUG [main] - ==>  Preparing: select a.id,b.countryname,a.countrycode from country a left join country b on a.id = b.id order by a.id LIMIT 10 \r\nDEBUG [main] - ==> Parameters: \r\nTRACE [main] - <==    Columns: ID, COUNTRYNAME, COUNTRYCODE\r\nTRACE [main] - <==        Row: 1, Angola, AO\r\nTRACE [main] - <==        Row: 2, Afghanistan, AF\r\nTRACE [main] - <==        Row: 3, Albania, AL\r\n```\r\n\r\n## English\r\n\r\n- Add a simple configuration support for the Phoenix database, You can configure `helperDialect=phoenix`. Can also automatically identify the Phoenix database jdbc url.\r\n- Simplified cache of `msCountMap`\r\n- Add `countSuffix` count query suffix configuration parameters, this parameter is configured for `PageInterceptor`, the default value is `_COUNT`.\r\n- Add custom count query support, see below for details.\r\n\r\n## Add custom count query support\r\n\r\nAdd `countSuffix` count query suffix configuration parameters, this parameter is configured for `PageInterceptor`, the default value is `_COUNT`.\r\n\r\nThe paging plugin will preferentially find the handwritten paging query by the current query `msId + countSuffix`.\r\n\r\nIf there is no custom query, the query is still automatically created using the previous way.\r\n\r\nFor example, if there are two queries:\r\n```xml\r\n<select id=\"selectLeftjoin\" resultType=\"com.github.pagehelper.model.Country\">\r\n    select a.id,b.countryname,a.countrycode from country a\r\n    left join country b on a.id = b.id\r\n    order by a.id\r\n</select>\r\n<select id=\"selectLeftjoin_COUNT\" resultType=\"Long\">\r\n    select count(distinct a.id) from country a\r\n    left join country b on a.id = b.id\r\n</select>\r\n```\r\nThe above `countSuffix` uses the default value of` _COUNT`, and the paging plugin will automatically get the query to `selectLeftjoin_COUNT`. This query needs to ensure that the result is correct.\r\n\r\nThe value of the return value must be `resultType =\" Long \"`, and the same parameter used by `selectLeftjoin` 'is used, so it is used in SQL to follow the selection of` selectLeftjoin`'.\r\n\r\nBecause the `selectLeftjoin_COUNT` method is invoked automatically, there is no need to provide the appropriate method on the interface, or if it is required to be invoked separately.\r\n\r\nThe above method to perform the portion of the output log is as follows\uff1a\r\n```\r\nDEBUG [main] - ==>  Preparing: select count(distinct a.id) from country a left join country b on a.id = b.id \r\nDEBUG [main] - ==> Parameters: \r\nTRACE [main] - <==    Columns: C1\r\nTRACE [main] - <==        Row: 183\r\nDEBUG [main] - <==      Total: 1\r\nDEBUG [main] - Cache Hit Ratio [com.github.pagehelper.mapper.CountryMapper]: 0.0\r\nDEBUG [main] - ==>  Preparing: select a.id,b.countryname,a.countrycode from country a left join country b on a.id = b.id order by a.id LIMIT 10 \r\nDEBUG [main] - ==> Parameters: \r\nTRACE [main] - <==    Columns: ID, COUNTRYNAME, COUNTRYCODE\r\nTRACE [main] - <==        Row: 1, Angola, AO\r\nTRACE [main] - <==        Row: 2, Afghanistan, AF\r\nTRACE [main] - <==        Row: 3, Albania, AL\r\n```"}
{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/5047795", "assets_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/5047795/assets", "upload_url": "https://uploads.github.com/repos/pagehelper/Mybatis-PageHelper/releases/5047795/assets{?name,label}", "html_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/tag/v5.0.0", "id": 5047795, "author": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "node_id": "MDc6UmVsZWFzZTUwNDc3OTU=", "tag_name": "v5.0.0", "target_commitish": "master", "name": "PageHelper v5.0.0", "draft": false, "prerelease": false, "created_at": "2017-01-02T06:49:57Z", "published_at": "2017-01-02T06:54:04Z", "assets": [{"url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/releases/assets/2913353", "id": 2913353, "node_id": "MDEyOlJlbGVhc2VBc3NldDI5MTMzNTM=", "name": "pagehelper-5.0.0.zip", "label": null, "uploader": {"login": "abel533", "id": 1787798, "node_id": "MDQ6VXNlcjE3ODc3OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1787798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abel533", "html_url": "https://github.com/abel533", "followers_url": "https://api.github.com/users/abel533/followers", "following_url": "https://api.github.com/users/abel533/following{/other_user}", "gists_url": "https://api.github.com/users/abel533/gists{/gist_id}", "starred_url": "https://api.github.com/users/abel533/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abel533/subscriptions", "organizations_url": "https://api.github.com/users/abel533/orgs", "repos_url": "https://api.github.com/users/abel533/repos", "events_url": "https://api.github.com/users/abel533/events{/privacy}", "received_events_url": "https://api.github.com/users/abel533/received_events", "type": "User", "site_admin": false}, "content_type": "application/x-zip-compressed", "state": "uploaded", "size": 389267, "download_count": 870, "created_at": "2017-01-02T06:53:42Z", "updated_at": "2017-01-02T06:54:01Z", "browser_download_url": "https://github.com/pagehelper/Mybatis-PageHelper/releases/download/v5.0.0/pagehelper-5.0.0.zip"}], "tarball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/tarball/v5.0.0", "zipball_url": "https://api.github.com/repos/pagehelper/Mybatis-PageHelper/zipball/v5.0.0", "body": "- Use [QueryInterceptor spec](https://github.com/pagehelper/Mybatis-PageHelper/blob/master/src/main/java/com/github/pagehelper/QueryInterceptor.java) to handle paging logic\n- New pagination plugin interceptor `com.github.pagehelper.PageInterceptor`\n- New `Dialect` `PageHelper` is a special implementation class, the previous function is implemented in more user-friendly ways\n- New pagination plugin only a `dialect` parameter, the default `dialect` is `PageHelper`\n- `PageHelper` continue to support previously provided parameters, Among the latest to use the document has been fully updated\n- `PageHelper` has a `helperDialect` parameter which is the same functional as the previous `dialect`\n- Added paging implementation based on pure `RowBounds` and `PageRowBounds`, \n  in `com.github. pagehelper. dialect. rowbounds` package, it is used as `dialect` Parameter sample implementation, more detailed documentation will be added later\n- Removed inappropriate orderby functions that appear in pagination plugin. It will provide a separate sort plug-ins in the future\n- Remove `PageHelper` are less commonly used methods\n- A new document, an important part of the update has been mentioned in the changelog, provides the English version of this document\n- fix bug [#149](http://git.oschina.net/free/Mybatis_PageHelper/issues/149)\n- renamed Db2RowDialect to Db2RowBoundsDialect\n- All thrown exceptions being replaced by PageException\n\n\u4e2d\u6587\uff1a\n- \u4f7f\u7528 [QueryInterceptor \u89c4\u8303](https://github.com/pagehelper/Mybatis-PageHelper/blob/master/src/main/java/com/github/pagehelper/QueryInterceptor.java) \u5904\u7406\u5206\u9875\u903b\u8f91\n- \u65b0\u7684\u5206\u9875\u63d2\u4ef6\u62e6\u622a\u5668\u4e3a `com.github.pagehelper.PageInterceptor`\n- \u65b0\u7684 `PageHelper` \u662f\u4e00\u4e2a\u7279\u6b8a\u7684 `Dialect` \u5b9e\u73b0\u7c7b\uff0c\u4ee5\u66f4\u53cb\u597d\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u4ee5\u524d\u7684\u529f\u80fd\n- \u65b0\u7684\u5206\u9875\u63d2\u4ef6\u4ec5\u6709 `dialect` \u4e00\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u7684 `dialect` \u5b9e\u73b0\u7c7b\u4e3a `PageHelper` \n- `PageHelper` \u4ecd\u7136\u652f\u6301\u4ee5\u524d\u63d0\u4f9b\u7684\u53c2\u6570\uff0c\u5728\u6700\u65b0\u7684\u4f7f\u7528\u6587\u6863\u4e2d\u5df2\u7ecf\u5168\u90e8\u66f4\u65b0\n- `PageHelper` \u7684 `helperDialect` \u53c2\u6570\u548c\u4ee5\u524d\u7684 `dialect` \u529f\u80fd\u4e00\u6837\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u6587\u6863\u7684\u53c2\u6570\u8bf4\u660e\n- \u589e\u52a0\u4e86\u57fa\u4e8e\u7eaf `RowBounds` \u548c `PageRowBounds` \u7684\u5206\u9875\u5b9e\u73b0\uff0c\u5728 `com.github.pagehelper.dialect.rowbounds` \u5305\u4e2d\uff0c\u8fd9\u662f\u7528\u4e8e\u4f5c\u4e3a `dialect` \u53c2\u6570\u793a\u4f8b\u7684\u5b9e\u73b0\uff0c\u540e\u9762\u4f1a\u8865\u5145\u66f4\u8be6\u7ec6\u7684\u6587\u6863\n- \u53bb\u6389\u4e86\u4e0d\u9002\u5408\u51fa\u73b0\u5728\u5206\u9875\u63d2\u4ef6\u4e2d\u7684 orderby \u529f\u80fd\uff0c\u4ee5\u540e\u4f1a\u63d0\u4f9b\u5355\u72ec\u7684\u6392\u5e8f\u63d2\u4ef6\n- \u53bb\u6389\u4e86 `PageHelper` \u4e2d\u4e0d\u5e38\u7528\u7684\u65b9\u6cd5\n- \u65b0\u7684\u6587\u6863\uff0c\u66f4\u65b0\u5386\u6765\u66f4\u65b0\u65e5\u5fd7\u4e2d\u63d0\u5230\u7684\u91cd\u8981\u5185\u5bb9\uff0c\u63d0\u4f9b\u82f1\u6587\u7248\u672c\u6587\u6863\n- \u89e3\u51b3 bug [#149](http://git.oschina.net/free/Mybatis_PageHelper/issues/149)\n- \u5c06 Db2RowDialect \u6539\u4e3a Db2RowBoundsDialect\n- \u6240\u6709\u5206\u9875\u63d2\u4ef6\u629b\u51fa\u7684\u5f02\u5e38\u6539\u4e3a PageException\n\nSupport Spring Boot\uff1a\nhttps://github.com/pagehelper/pagehelper-spring-boot\n"}
